@header@
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
<tr bgcolor="#7799ee">
<td valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong><a href="matplotlib.html"><font color="#ffffff">matplotlib</font></a>.pylab</strong></big></big> (version 1.1.0.dev5176)</font></td
><td align=right valign=bottom
><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/home/jdhunter/dev/lib64/python2.5/site-packages/matplotlib/pylab.py">/home/jdhunter/dev/lib64/python2.5/site-packages/matplotlib/pylab.py</a></font></td></tr></table>
    <p><tt>This&nbsp;is&nbsp;a&nbsp;procedural&nbsp;interface&nbsp;to&nbsp;the&nbsp;matplotlib&nbsp;object-oriented<br>
plotting&nbsp;library.<br>
&nbsp;<br>
The&nbsp;following&nbsp;plotting&nbsp;commands&nbsp;are&nbsp;provided;&nbsp;the&nbsp;majority&nbsp;have<br>
Matlab(TM)&nbsp;analogs&nbsp;and&nbsp;similar&nbsp;argument.<br>
&nbsp;<br>
_Plotting&nbsp;commands<br>
&nbsp;&nbsp;acorr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;plot&nbsp;the&nbsp;autocorrelation&nbsp;function<br>
&nbsp;&nbsp;annotate&nbsp;&nbsp;-&nbsp;annotate&nbsp;something&nbsp;in&nbsp;the&nbsp;figure<br>
&nbsp;&nbsp;arrow&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;add&nbsp;an&nbsp;arrow&nbsp;to&nbsp;the&nbsp;axes<br>
&nbsp;&nbsp;axes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;Create&nbsp;a&nbsp;new&nbsp;axes<br>
&nbsp;&nbsp;axhline&nbsp;&nbsp;&nbsp;-&nbsp;draw&nbsp;a&nbsp;horizontal&nbsp;line&nbsp;across&nbsp;axes<br>
&nbsp;&nbsp;axvline&nbsp;&nbsp;&nbsp;-&nbsp;draw&nbsp;a&nbsp;vertical&nbsp;line&nbsp;across&nbsp;axes<br>
&nbsp;&nbsp;axhspan&nbsp;&nbsp;&nbsp;-&nbsp;draw&nbsp;a&nbsp;horizontal&nbsp;bar&nbsp;across&nbsp;axes<br>
&nbsp;&nbsp;axvspan&nbsp;&nbsp;&nbsp;-&nbsp;draw&nbsp;a&nbsp;vertical&nbsp;bar&nbsp;across&nbsp;axes<br>
&nbsp;&nbsp;axis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;Set&nbsp;or&nbsp;return&nbsp;the&nbsp;current&nbsp;axis&nbsp;limits<br>
&nbsp;&nbsp;bar&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;make&nbsp;a&nbsp;bar&nbsp;chart<br>
&nbsp;&nbsp;barh&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;horizontal&nbsp;bar&nbsp;chart<br>
&nbsp;&nbsp;broken_barh&nbsp;-&nbsp;a&nbsp;set&nbsp;of&nbsp;horizontal&nbsp;bars&nbsp;with&nbsp;gaps<br>
&nbsp;&nbsp;box&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;set&nbsp;the&nbsp;axes&nbsp;frame&nbsp;on/off&nbsp;state<br>
&nbsp;&nbsp;boxplot&nbsp;&nbsp;&nbsp;-&nbsp;make&nbsp;a&nbsp;box&nbsp;and&nbsp;whisker&nbsp;plot<br>
&nbsp;&nbsp;cla&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;clear&nbsp;current&nbsp;axes<br>
&nbsp;&nbsp;clabel&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;label&nbsp;a&nbsp;contour&nbsp;plot<br>
&nbsp;&nbsp;clf&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;clear&nbsp;a&nbsp;figure&nbsp;window<br>
&nbsp;&nbsp;clim&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;adjust&nbsp;the&nbsp;color&nbsp;limits&nbsp;of&nbsp;the&nbsp;current&nbsp;image<br>
&nbsp;&nbsp;close&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;close&nbsp;a&nbsp;figure&nbsp;window<br>
&nbsp;&nbsp;colorbar&nbsp;&nbsp;-&nbsp;add&nbsp;a&nbsp;colorbar&nbsp;to&nbsp;the&nbsp;current&nbsp;figure<br>
&nbsp;&nbsp;cohere&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;make&nbsp;a&nbsp;plot&nbsp;of&nbsp;coherence<br>
&nbsp;&nbsp;contour&nbsp;&nbsp;&nbsp;-&nbsp;make&nbsp;a&nbsp;contour&nbsp;plot<br>
&nbsp;&nbsp;contourf&nbsp;&nbsp;-&nbsp;make&nbsp;a&nbsp;filled&nbsp;contour&nbsp;plot<br>
&nbsp;&nbsp;csd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;make&nbsp;a&nbsp;plot&nbsp;of&nbsp;cross&nbsp;spectral&nbsp;density<br>
&nbsp;&nbsp;delaxes&nbsp;&nbsp;&nbsp;-&nbsp;delete&nbsp;an&nbsp;axes&nbsp;from&nbsp;the&nbsp;current&nbsp;figure<br>
&nbsp;&nbsp;draw&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;Force&nbsp;a&nbsp;redraw&nbsp;of&nbsp;the&nbsp;current&nbsp;figure<br>
&nbsp;&nbsp;errorbar&nbsp;&nbsp;-&nbsp;make&nbsp;an&nbsp;errorbar&nbsp;graph<br>
&nbsp;&nbsp;figlegend&nbsp;-&nbsp;make&nbsp;legend&nbsp;on&nbsp;the&nbsp;figure&nbsp;rather&nbsp;than&nbsp;the&nbsp;axes<br>
&nbsp;&nbsp;figimage&nbsp;&nbsp;-&nbsp;make&nbsp;a&nbsp;figure&nbsp;image<br>
&nbsp;&nbsp;figtext&nbsp;&nbsp;&nbsp;-&nbsp;add&nbsp;text&nbsp;in&nbsp;figure&nbsp;coords<br>
&nbsp;&nbsp;figure&nbsp;&nbsp;&nbsp;-&nbsp;create&nbsp;or&nbsp;change&nbsp;active&nbsp;figure<br>
&nbsp;&nbsp;fill&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;make&nbsp;filled&nbsp;polygons<br>
&nbsp;&nbsp;gca&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;return&nbsp;the&nbsp;current&nbsp;axes<br>
&nbsp;&nbsp;gcf&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;return&nbsp;the&nbsp;current&nbsp;figure<br>
&nbsp;&nbsp;gci&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;get&nbsp;the&nbsp;current&nbsp;image,&nbsp;or&nbsp;None<br>
&nbsp;&nbsp;getp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;get&nbsp;a&nbsp;handle&nbsp;graphics&nbsp;property<br>
&nbsp;&nbsp;grid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;set&nbsp;whether&nbsp;gridding&nbsp;is&nbsp;on<br>
&nbsp;&nbsp;hist&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;make&nbsp;a&nbsp;histogram<br>
&nbsp;&nbsp;hold&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;set&nbsp;the&nbsp;axes&nbsp;hold&nbsp;state<br>
&nbsp;&nbsp;ioff&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;turn&nbsp;interaction&nbsp;mode&nbsp;off<br>
&nbsp;&nbsp;ion&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;turn&nbsp;interaction&nbsp;mode&nbsp;on<br>
&nbsp;&nbsp;isinteractive&nbsp;-&nbsp;return&nbsp;True&nbsp;if&nbsp;interaction&nbsp;mode&nbsp;is&nbsp;on<br>
&nbsp;&nbsp;imread&nbsp;&nbsp;&nbsp;-&nbsp;load&nbsp;image&nbsp;file&nbsp;into&nbsp;array<br>
&nbsp;&nbsp;imshow&nbsp;&nbsp;&nbsp;-&nbsp;plot&nbsp;image&nbsp;data<br>
&nbsp;&nbsp;ishold&nbsp;&nbsp;&nbsp;-&nbsp;return&nbsp;the&nbsp;hold&nbsp;state&nbsp;of&nbsp;the&nbsp;current&nbsp;axes<br>
&nbsp;&nbsp;legend&nbsp;&nbsp;&nbsp;-&nbsp;make&nbsp;an&nbsp;axes&nbsp;legend<br>
&nbsp;&nbsp;loglog&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;log&nbsp;log&nbsp;plot<br>
&nbsp;&nbsp;matshow&nbsp;&nbsp;-&nbsp;display&nbsp;a&nbsp;matrix&nbsp;in&nbsp;a&nbsp;new&nbsp;figure&nbsp;preserving&nbsp;aspect<br>
&nbsp;&nbsp;pcolor&nbsp;&nbsp;&nbsp;-&nbsp;make&nbsp;a&nbsp;pseudocolor&nbsp;plot<br>
&nbsp;&nbsp;pcolormesh&nbsp;-&nbsp;make&nbsp;a&nbsp;pseudocolor&nbsp;plot&nbsp;using&nbsp;a&nbsp;quadrilateral&nbsp;mesh<br>
&nbsp;&nbsp;pie&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;make&nbsp;a&nbsp;pie&nbsp;chart<br>
&nbsp;&nbsp;plot&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;make&nbsp;a&nbsp;line&nbsp;plot<br>
&nbsp;&nbsp;plot_date&nbsp;-&nbsp;plot&nbsp;dates<br>
&nbsp;&nbsp;plotfile&nbsp;&nbsp;-&nbsp;plot&nbsp;column&nbsp;data&nbsp;from&nbsp;an&nbsp;ASCII&nbsp;tab/space/comma&nbsp;delimited&nbsp;file<br>
&nbsp;&nbsp;pie&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;pie&nbsp;charts<br>
&nbsp;&nbsp;polar&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;make&nbsp;a&nbsp;polar&nbsp;plot&nbsp;on&nbsp;a&nbsp;PolarAxes<br>
&nbsp;&nbsp;psd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;make&nbsp;a&nbsp;plot&nbsp;of&nbsp;power&nbsp;spectral&nbsp;density<br>
&nbsp;&nbsp;quiver&nbsp;&nbsp;&nbsp;-&nbsp;make&nbsp;a&nbsp;direction&nbsp;field&nbsp;(arrows)&nbsp;plot<br>
&nbsp;&nbsp;rc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;control&nbsp;the&nbsp;default&nbsp;params<br>
&nbsp;&nbsp;rgrids&nbsp;&nbsp;&nbsp;-&nbsp;customize&nbsp;the&nbsp;radial&nbsp;grids&nbsp;and&nbsp;labels&nbsp;for&nbsp;polar<br>
&nbsp;&nbsp;savefig&nbsp;&nbsp;-&nbsp;save&nbsp;the&nbsp;current&nbsp;figure<br>
&nbsp;&nbsp;scatter&nbsp;&nbsp;-&nbsp;make&nbsp;a&nbsp;scatter&nbsp;plot<br>
&nbsp;&nbsp;setp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;set&nbsp;a&nbsp;handle&nbsp;graphics&nbsp;property<br>
&nbsp;&nbsp;semilogx&nbsp;-&nbsp;log&nbsp;x&nbsp;axis<br>
&nbsp;&nbsp;semilogy&nbsp;-&nbsp;log&nbsp;y&nbsp;axis<br>
&nbsp;&nbsp;show&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;show&nbsp;the&nbsp;figures<br>
&nbsp;&nbsp;specgram&nbsp;-&nbsp;a&nbsp;spectrogram&nbsp;plot<br>
&nbsp;&nbsp;spy&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;plot&nbsp;sparsity&nbsp;pattern&nbsp;using&nbsp;markers&nbsp;or&nbsp;image<br>
&nbsp;&nbsp;stem&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;make&nbsp;a&nbsp;stem&nbsp;plot<br>
&nbsp;&nbsp;subplot&nbsp;&nbsp;-&nbsp;make&nbsp;a&nbsp;subplot&nbsp;(numrows,&nbsp;numcols,&nbsp;axesnum)<br>
&nbsp;&nbsp;subplots_adjust&nbsp;-&nbsp;change&nbsp;the&nbsp;params&nbsp;controlling&nbsp;the&nbsp;subplot&nbsp;positions&nbsp;of&nbsp;current&nbsp;figure<br>
&nbsp;&nbsp;subplot_tool&nbsp;-&nbsp;launch&nbsp;the&nbsp;subplot&nbsp;configuration&nbsp;tool<br>
&nbsp;&nbsp;table&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;add&nbsp;a&nbsp;table&nbsp;to&nbsp;the&nbsp;plot<br>
&nbsp;&nbsp;text&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;add&nbsp;some&nbsp;text&nbsp;at&nbsp;location&nbsp;x,y&nbsp;to&nbsp;the&nbsp;current&nbsp;axes<br>
&nbsp;&nbsp;thetagrids&nbsp;-&nbsp;customize&nbsp;the&nbsp;radial&nbsp;theta&nbsp;grids&nbsp;and&nbsp;labels&nbsp;for&nbsp;polar<br>
&nbsp;&nbsp;title&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;add&nbsp;a&nbsp;title&nbsp;to&nbsp;the&nbsp;current&nbsp;axes<br>
&nbsp;&nbsp;xcorr&nbsp;&nbsp;&nbsp;-&nbsp;plot&nbsp;the&nbsp;autocorrelation&nbsp;function&nbsp;of&nbsp;x&nbsp;and&nbsp;y<br>
&nbsp;&nbsp;xlim&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;set/get&nbsp;the&nbsp;xlimits<br>
&nbsp;&nbsp;ylim&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;set/get&nbsp;the&nbsp;ylimits<br>
&nbsp;&nbsp;xticks&nbsp;&nbsp;&nbsp;-&nbsp;set/get&nbsp;the&nbsp;xticks<br>
&nbsp;&nbsp;yticks&nbsp;&nbsp;&nbsp;-&nbsp;set/get&nbsp;the&nbsp;yticks<br>
&nbsp;&nbsp;xlabel&nbsp;&nbsp;&nbsp;-&nbsp;add&nbsp;an&nbsp;xlabel&nbsp;to&nbsp;the&nbsp;current&nbsp;axes<br>
&nbsp;&nbsp;ylabel&nbsp;&nbsp;&nbsp;-&nbsp;add&nbsp;a&nbsp;ylabel&nbsp;to&nbsp;the&nbsp;current&nbsp;axes<br>
&nbsp;<br>
&nbsp;&nbsp;autumn&nbsp;-&nbsp;set&nbsp;the&nbsp;default&nbsp;colormap&nbsp;to&nbsp;autumn<br>
&nbsp;&nbsp;bone&nbsp;&nbsp;&nbsp;-&nbsp;set&nbsp;the&nbsp;default&nbsp;colormap&nbsp;to&nbsp;bone<br>
&nbsp;&nbsp;cool&nbsp;&nbsp;&nbsp;-&nbsp;set&nbsp;the&nbsp;default&nbsp;colormap&nbsp;to&nbsp;cool<br>
&nbsp;&nbsp;copper&nbsp;-&nbsp;set&nbsp;the&nbsp;default&nbsp;colormap&nbsp;to&nbsp;copper<br>
&nbsp;&nbsp;flag&nbsp;&nbsp;&nbsp;-&nbsp;set&nbsp;the&nbsp;default&nbsp;colormap&nbsp;to&nbsp;flag<br>
&nbsp;&nbsp;gray&nbsp;&nbsp;&nbsp;-&nbsp;set&nbsp;the&nbsp;default&nbsp;colormap&nbsp;to&nbsp;gray<br>
&nbsp;&nbsp;hot&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;set&nbsp;the&nbsp;default&nbsp;colormap&nbsp;to&nbsp;hot<br>
&nbsp;&nbsp;hsv&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;set&nbsp;the&nbsp;default&nbsp;colormap&nbsp;to&nbsp;hsv<br>
&nbsp;&nbsp;jet&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;set&nbsp;the&nbsp;default&nbsp;colormap&nbsp;to&nbsp;jet<br>
&nbsp;&nbsp;pink&nbsp;&nbsp;&nbsp;-&nbsp;set&nbsp;the&nbsp;default&nbsp;colormap&nbsp;to&nbsp;pink<br>
&nbsp;&nbsp;prism&nbsp;&nbsp;-&nbsp;set&nbsp;the&nbsp;default&nbsp;colormap&nbsp;to&nbsp;prism<br>
&nbsp;&nbsp;spring&nbsp;-&nbsp;set&nbsp;the&nbsp;default&nbsp;colormap&nbsp;to&nbsp;spring<br>
&nbsp;&nbsp;summer&nbsp;-&nbsp;set&nbsp;the&nbsp;default&nbsp;colormap&nbsp;to&nbsp;summer<br>
&nbsp;&nbsp;winter&nbsp;-&nbsp;set&nbsp;the&nbsp;default&nbsp;colormap&nbsp;to&nbsp;winter<br>
&nbsp;&nbsp;spectral&nbsp;-&nbsp;set&nbsp;the&nbsp;default&nbsp;colormap&nbsp;to&nbsp;spectral<br>
&nbsp;<br>
_Event&nbsp;handling<br>
&nbsp;<br>
&nbsp;&nbsp;connect&nbsp;-&nbsp;register&nbsp;an&nbsp;event&nbsp;handler<br>
&nbsp;&nbsp;disconnect&nbsp;-&nbsp;remove&nbsp;a&nbsp;connected&nbsp;event&nbsp;handler<br>
&nbsp;<br>
_Matrix&nbsp;commands<br>
&nbsp;<br>
&nbsp;&nbsp;cumprod&nbsp;&nbsp;&nbsp;-&nbsp;the&nbsp;cumulative&nbsp;product&nbsp;along&nbsp;a&nbsp;dimension<br>
&nbsp;&nbsp;cumsum&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;the&nbsp;cumulative&nbsp;sum&nbsp;along&nbsp;a&nbsp;dimension<br>
&nbsp;&nbsp;detrend&nbsp;&nbsp;&nbsp;-&nbsp;remove&nbsp;the&nbsp;mean&nbsp;or&nbsp;besdt&nbsp;fit&nbsp;line&nbsp;from&nbsp;an&nbsp;array<br>
&nbsp;&nbsp;diag&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;the&nbsp;k-th&nbsp;diagonal&nbsp;of&nbsp;matrix<br>
&nbsp;&nbsp;diff&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;the&nbsp;n-th&nbsp;differnce&nbsp;of&nbsp;an&nbsp;array<br>
&nbsp;&nbsp;eig&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;the&nbsp;eigenvalues&nbsp;and&nbsp;eigen&nbsp;vectors&nbsp;of&nbsp;v<br>
&nbsp;&nbsp;eye&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;matrix&nbsp;where&nbsp;the&nbsp;k-th&nbsp;diagonal&nbsp;is&nbsp;ones,&nbsp;else&nbsp;zero<br>
&nbsp;&nbsp;find&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;return&nbsp;the&nbsp;indices&nbsp;where&nbsp;a&nbsp;condition&nbsp;is&nbsp;nonzero<br>
&nbsp;&nbsp;fliplr&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;flip&nbsp;the&nbsp;rows&nbsp;of&nbsp;a&nbsp;matrix&nbsp;up/down<br>
&nbsp;&nbsp;flipud&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;flip&nbsp;the&nbsp;columns&nbsp;of&nbsp;a&nbsp;matrix&nbsp;left/right<br>
&nbsp;&nbsp;linspace&nbsp;&nbsp;-&nbsp;a&nbsp;linear&nbsp;spaced&nbsp;vector&nbsp;of&nbsp;N&nbsp;values&nbsp;from&nbsp;min&nbsp;to&nbsp;max&nbsp;inclusive<br>
&nbsp;&nbsp;logspace&nbsp;&nbsp;-&nbsp;a&nbsp;log&nbsp;spaced&nbsp;vector&nbsp;of&nbsp;N&nbsp;values&nbsp;from&nbsp;min&nbsp;to&nbsp;max&nbsp;inclusive<br>
&nbsp;&nbsp;meshgrid&nbsp;&nbsp;-&nbsp;repeat&nbsp;x&nbsp;and&nbsp;y&nbsp;to&nbsp;make&nbsp;regular&nbsp;matrices<br>
&nbsp;&nbsp;ones&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;an&nbsp;array&nbsp;of&nbsp;ones<br>
&nbsp;&nbsp;rand&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;an&nbsp;array&nbsp;from&nbsp;the&nbsp;uniform&nbsp;distribution&nbsp;[0,1]<br>
&nbsp;&nbsp;randn&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;an&nbsp;array&nbsp;from&nbsp;the&nbsp;normal&nbsp;distribution<br>
&nbsp;&nbsp;rot90&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;rotate&nbsp;matrix&nbsp;k*90&nbsp;degress&nbsp;counterclockwise<br>
&nbsp;&nbsp;squeeze&nbsp;&nbsp;&nbsp;-&nbsp;squeeze&nbsp;an&nbsp;array&nbsp;removing&nbsp;any&nbsp;dimensions&nbsp;of&nbsp;length&nbsp;1<br>
&nbsp;&nbsp;tri&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;triangular&nbsp;matrix<br>
&nbsp;&nbsp;tril&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;lower&nbsp;triangular&nbsp;matrix<br>
&nbsp;&nbsp;triu&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;an&nbsp;upper&nbsp;triangular&nbsp;matrix<br>
&nbsp;&nbsp;vander&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;the&nbsp;Vandermonde&nbsp;matrix&nbsp;of&nbsp;vector&nbsp;x<br>
&nbsp;&nbsp;svd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;singular&nbsp;value&nbsp;decomposition<br>
&nbsp;&nbsp;zeros&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;matrix&nbsp;of&nbsp;zeros<br>
&nbsp;<br>
_Probability<br>
&nbsp;<br>
&nbsp;&nbsp;levypdf&nbsp;&nbsp;&nbsp;-&nbsp;The&nbsp;levy&nbsp;probability&nbsp;density&nbsp;function&nbsp;from&nbsp;the&nbsp;char.&nbsp;func.<br>
&nbsp;&nbsp;normpdf&nbsp;&nbsp;&nbsp;-&nbsp;The&nbsp;Gaussian&nbsp;probability&nbsp;density&nbsp;function<br>
&nbsp;&nbsp;rand&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;random&nbsp;numbers&nbsp;from&nbsp;the&nbsp;uniform&nbsp;distribution<br>
&nbsp;&nbsp;randn&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;random&nbsp;numbers&nbsp;from&nbsp;the&nbsp;normal&nbsp;distribution<br>
&nbsp;<br>
_Statistics<br>
&nbsp;<br>
&nbsp;&nbsp;corrcoef&nbsp;&nbsp;-&nbsp;correlation&nbsp;coefficient<br>
&nbsp;&nbsp;cov&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;covariance&nbsp;matrix<br>
&nbsp;&nbsp;amax&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;the&nbsp;maximum&nbsp;along&nbsp;dimension&nbsp;m<br>
&nbsp;&nbsp;mean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;the&nbsp;mean&nbsp;along&nbsp;dimension&nbsp;m<br>
&nbsp;&nbsp;median&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;the&nbsp;median&nbsp;along&nbsp;dimension&nbsp;m<br>
&nbsp;&nbsp;amin&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;the&nbsp;minimum&nbsp;along&nbsp;dimension&nbsp;m<br>
&nbsp;&nbsp;norm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;the&nbsp;norm&nbsp;of&nbsp;vector&nbsp;x<br>
&nbsp;&nbsp;prod&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;the&nbsp;product&nbsp;along&nbsp;dimension&nbsp;m<br>
&nbsp;&nbsp;ptp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;the&nbsp;max-min&nbsp;along&nbsp;dimension&nbsp;m<br>
&nbsp;&nbsp;std&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;the&nbsp;standard&nbsp;deviation&nbsp;along&nbsp;dimension&nbsp;m<br>
&nbsp;&nbsp;asum&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;the&nbsp;sum&nbsp;along&nbsp;dimension&nbsp;m<br>
&nbsp;<br>
_Time&nbsp;series&nbsp;analysis<br>
&nbsp;<br>
&nbsp;&nbsp;bartlett&nbsp;&nbsp;-&nbsp;M-point&nbsp;Bartlett&nbsp;window<br>
&nbsp;&nbsp;blackman&nbsp;&nbsp;-&nbsp;M-point&nbsp;Blackman&nbsp;window<br>
&nbsp;&nbsp;cohere&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;the&nbsp;coherence&nbsp;using&nbsp;average&nbsp;periodiogram<br>
&nbsp;&nbsp;csd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;the&nbsp;cross&nbsp;spectral&nbsp;density&nbsp;using&nbsp;average&nbsp;periodiogram<br>
&nbsp;&nbsp;fft&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;the&nbsp;fast&nbsp;Fourier&nbsp;transform&nbsp;of&nbsp;vector&nbsp;x<br>
&nbsp;&nbsp;hamming&nbsp;&nbsp;&nbsp;-&nbsp;M-point&nbsp;Hamming&nbsp;window<br>
&nbsp;&nbsp;hanning&nbsp;&nbsp;&nbsp;-&nbsp;M-point&nbsp;Hanning&nbsp;window<br>
&nbsp;&nbsp;hist&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;compute&nbsp;the&nbsp;histogram&nbsp;of&nbsp;x<br>
&nbsp;&nbsp;kaiser&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;M&nbsp;length&nbsp;Kaiser&nbsp;window<br>
&nbsp;&nbsp;psd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;the&nbsp;power&nbsp;spectral&nbsp;density&nbsp;using&nbsp;average&nbsp;periodiogram<br>
&nbsp;&nbsp;sinc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;the&nbsp;sinc&nbsp;function&nbsp;of&nbsp;array&nbsp;x<br>
&nbsp;<br>
_Dates<br>
&nbsp;<br>
&nbsp;&nbsp;date2num&nbsp;&nbsp;-&nbsp;convert&nbsp;python&nbsp;datetimes&nbsp;to&nbsp;numeric&nbsp;representation<br>
&nbsp;&nbsp;drange&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;create&nbsp;an&nbsp;array&nbsp;of&nbsp;numbers&nbsp;for&nbsp;date&nbsp;plots<br>
&nbsp;&nbsp;num2date&nbsp;&nbsp;-&nbsp;convert&nbsp;numeric&nbsp;type&nbsp;(float&nbsp;days&nbsp;since&nbsp;0001)&nbsp;to&nbsp;datetime<br>
&nbsp;<br>
_Other<br>
&nbsp;<br>
&nbsp;&nbsp;angle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;the&nbsp;angle&nbsp;of&nbsp;a&nbsp;complex&nbsp;array<br>
&nbsp;&nbsp;load&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;load&nbsp;ASCII&nbsp;data&nbsp;into&nbsp;array<br>
&nbsp;&nbsp;polyfit&nbsp;&nbsp;&nbsp;-&nbsp;fit&nbsp;x,&nbsp;y&nbsp;to&nbsp;an&nbsp;n-th&nbsp;order&nbsp;polynomial<br>
&nbsp;&nbsp;polyval&nbsp;&nbsp;&nbsp;-&nbsp;evaluate&nbsp;an&nbsp;n-th&nbsp;order&nbsp;polynomial<br>
&nbsp;&nbsp;roots&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;the&nbsp;roots&nbsp;of&nbsp;the&nbsp;polynomial&nbsp;coefficients&nbsp;in&nbsp;p<br>
&nbsp;&nbsp;save&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;save&nbsp;an&nbsp;array&nbsp;to&nbsp;an&nbsp;ASCII&nbsp;file<br>
&nbsp;&nbsp;trapz&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;trapezoidal&nbsp;integration<br>
&nbsp;<br>
__end</tt></p>
<p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#aa55cc">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
    
<tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="numpy.add_newdocs.html">numpy.add_newdocs</a><br>
<a href="numpy.core.defchararray.html">numpy.core.defchararray</a><br>
<a href="matplotlib.cm.html">matplotlib.cm</a><br>
<a href="numpy.ctypeslib.html">numpy.ctypeslib</a><br>
<a href="numpy.lib.scimath.html">numpy.lib.scimath</a><br>
<a href="numpy.fft.fftpack.html">numpy.fft.fftpack</a><br>
</td><td width="25%" valign=top><a href="numpy.fft.fftpack_lite.html">numpy.fft.fftpack_lite</a><br>
<a href="numpy.fft.helper.html">numpy.fft.helper</a><br>
<a href="numpy.linalg.info.html">numpy.linalg.info</a><br>
<a href="numpy.linalg.lapack_lite.html">numpy.linalg.lapack_lite</a><br>
<a href="numpy.linalg.linalg.html">numpy.linalg.linalg</a><br>
<a href="numpy.ma.html">numpy.ma</a><br>
</td><td width="25%" valign=top><a href="math.html">math</a><br>
<a href="matplotlib.html">matplotlib</a><br>
<a href="matplotlib.mlab.html">matplotlib.mlab</a><br>
<a href="matplotlib.mpl.html">matplotlib.mpl</a><br>
<a href="numpy.html">numpy</a><br>
<a href="matplotlib.pyplot.html">matplotlib.pyplot</a><br>
</td><td width="25%" valign=top><a href="numpy.core.records.html">numpy.core.records</a><br>
<a href="sys.html">sys</a><br>
<a href="warnings.html">warnings</a><br>
</td></tr></table></td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#eeaa77">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Functions</strong></big></font></td></tr>
    
<tr><td bgcolor="#eeaa77"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl><dt><a name="-add_docstring"><strong>add_docstring</strong></a>(...)</dt><dd><tt>docstring(obj,&nbsp;docstring)<br>
&nbsp;<br>
Add&nbsp;a&nbsp;docstring&nbsp;to&nbsp;a&nbsp;built-in&nbsp;obj&nbsp;if&nbsp;possible.<br>
If&nbsp;the&nbsp;obj&nbsp;already&nbsp;has&nbsp;a&nbsp;docstring&nbsp;raise&nbsp;a&nbsp;RuntimeError<br>
If&nbsp;this&nbsp;routine&nbsp;does&nbsp;not&nbsp;know&nbsp;how&nbsp;to&nbsp;add&nbsp;a&nbsp;docstring&nbsp;to&nbsp;the&nbsp;object<br>
raise&nbsp;a&nbsp;TypeError</tt></dd></dl>
 <dl><dt><a name="-arange"><strong>arange</strong></a>(...)</dt><dd><tt><a href="#-arange">arange</a>([start,]&nbsp;stop[,&nbsp;step,],&nbsp;dtype=None)<br>
&nbsp;<br>
For&nbsp;integer&nbsp;arguments,&nbsp;just&nbsp;like&nbsp;range()&nbsp;except&nbsp;it&nbsp;returns&nbsp;an&nbsp;array<br>
whose&nbsp;type&nbsp;can&nbsp;be&nbsp;specified&nbsp;by&nbsp;the&nbsp;keyword&nbsp;argument&nbsp;dtype.&nbsp;&nbsp;If&nbsp;dtype<br>
is&nbsp;not&nbsp;specified,&nbsp;the&nbsp;type&nbsp;of&nbsp;the&nbsp;result&nbsp;is&nbsp;deduced&nbsp;from&nbsp;the&nbsp;type&nbsp;of<br>
the&nbsp;arguments.<br>
&nbsp;<br>
For&nbsp;floating&nbsp;point&nbsp;arguments,&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;result&nbsp;is&nbsp;ceil((stop&nbsp;-<br>
start)/step).&nbsp;&nbsp;This&nbsp;rule&nbsp;may&nbsp;result&nbsp;in&nbsp;the&nbsp;last&nbsp;element&nbsp;of&nbsp;the&nbsp;result<br>
being&nbsp;greater&nbsp;than&nbsp;stop.</tt></dd></dl>
 <dl><dt><a name="-array"><strong>array</strong></a>(...)</dt><dd><tt><a href="#-array">array</a>(object,&nbsp;dtype=None,&nbsp;copy=1,order=None,&nbsp;subok=0,ndmin=0)<br>
&nbsp;<br>
Return&nbsp;an&nbsp;array&nbsp;from&nbsp;object&nbsp;with&nbsp;the&nbsp;specified&nbsp;data-type.<br>
&nbsp;<br>
Parameters<br>
----------<br>
object&nbsp;:&nbsp;array-like<br>
&nbsp;&nbsp;&nbsp;&nbsp;an&nbsp;array,&nbsp;any&nbsp;object&nbsp;exposing&nbsp;the&nbsp;array&nbsp;interface,&nbsp;any<br>
&nbsp;&nbsp;&nbsp;&nbsp;object&nbsp;whose&nbsp;__array__&nbsp;method&nbsp;returns&nbsp;an&nbsp;array,&nbsp;or&nbsp;any<br>
&nbsp;&nbsp;&nbsp;&nbsp;(nested)&nbsp;sequence.<br>
dtype&nbsp;:&nbsp;data-type<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;desired&nbsp;data-type&nbsp;for&nbsp;the&nbsp;array.&nbsp;&nbsp;If&nbsp;not&nbsp;given,&nbsp;then<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;type&nbsp;will&nbsp;be&nbsp;determined&nbsp;as&nbsp;the&nbsp;minimum&nbsp;type&nbsp;required<br>
&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;hold&nbsp;the&nbsp;objects&nbsp;in&nbsp;the&nbsp;sequence.&nbsp;&nbsp;This&nbsp;argument&nbsp;can&nbsp;only<br>
&nbsp;&nbsp;&nbsp;&nbsp;be&nbsp;used&nbsp;to&nbsp;'upcast'&nbsp;the&nbsp;array.&nbsp;&nbsp;For&nbsp;downcasting,&nbsp;use&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;.astype(t)&nbsp;method.<br>
copy&nbsp;:&nbsp;bool<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;true,&nbsp;then&nbsp;force&nbsp;a&nbsp;copy.&nbsp;&nbsp;Otherwise&nbsp;a&nbsp;copy&nbsp;will&nbsp;only&nbsp;occur<br>
&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;__array__&nbsp;returns&nbsp;a&nbsp;copy,&nbsp;obj&nbsp;is&nbsp;a&nbsp;nested&nbsp;sequence,&nbsp;or<br>
&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;copy&nbsp;is&nbsp;needed&nbsp;to&nbsp;satisfy&nbsp;any&nbsp;of&nbsp;the&nbsp;other&nbsp;requirements<br>
order&nbsp;:&nbsp;{'C',&nbsp;'F',&nbsp;'A'&nbsp;(None)}<br>
&nbsp;&nbsp;&nbsp;&nbsp;Specify&nbsp;the&nbsp;order&nbsp;of&nbsp;the&nbsp;array.&nbsp;&nbsp;If&nbsp;order&nbsp;is&nbsp;'C',&nbsp;then&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;array&nbsp;will&nbsp;be&nbsp;in&nbsp;C-contiguous&nbsp;order&nbsp;(last-index&nbsp;varies&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;fastest).&nbsp;&nbsp;If&nbsp;order&nbsp;is&nbsp;'FORTRAN',&nbsp;then&nbsp;the&nbsp;returned&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;be&nbsp;in&nbsp;Fortran-contiguous&nbsp;order&nbsp;(first-index&nbsp;varies&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;fastest).&nbsp;&nbsp;If&nbsp;order&nbsp;is&nbsp;None,&nbsp;then&nbsp;the&nbsp;returned&nbsp;array&nbsp;may<br>
&nbsp;&nbsp;&nbsp;&nbsp;be&nbsp;in&nbsp;either&nbsp;C-,&nbsp;or&nbsp;Fortran-contiguous&nbsp;order&nbsp;or&nbsp;even<br>
&nbsp;&nbsp;&nbsp;&nbsp;discontiguous.<br>
subok&nbsp;:&nbsp;bool<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;True,&nbsp;then&nbsp;sub-classes&nbsp;will&nbsp;be&nbsp;passed-through,&nbsp;otherwise<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;returned&nbsp;array&nbsp;will&nbsp;be&nbsp;forced&nbsp;to&nbsp;be&nbsp;a&nbsp;base-class&nbsp;array<br>
ndmin&nbsp;:&nbsp;int<br>
&nbsp;&nbsp;&nbsp;&nbsp;Specifies&nbsp;the&nbsp;minimum&nbsp;number&nbsp;of&nbsp;dimensions&nbsp;that&nbsp;the&nbsp;resulting<br>
&nbsp;&nbsp;&nbsp;&nbsp;array&nbsp;should&nbsp;have.&nbsp;&nbsp;1's&nbsp;will&nbsp;be&nbsp;pre-pended&nbsp;to&nbsp;the&nbsp;shape&nbsp;as<br>
&nbsp;&nbsp;&nbsp;&nbsp;needed&nbsp;to&nbsp;meet&nbsp;this&nbsp;requirement.</tt></dd></dl>
 <dl><dt><a name="-beta"><strong>beta</strong></a>(...)</dt><dd><tt>Beta&nbsp;distribution&nbsp;over&nbsp;[0,&nbsp;1].<br>
&nbsp;<br>
<a href="#-beta">beta</a>(a,&nbsp;b,&nbsp;size=None)&nbsp;-&gt;&nbsp;random&nbsp;values</tt></dd></dl>
 <dl><dt><a name="-bincount"><strong>bincount</strong></a>(...)</dt><dd><tt><a href="#-bincount">bincount</a>(x,weights=None)<br>
&nbsp;<br>
Return&nbsp;the&nbsp;number&nbsp;of&nbsp;occurrences&nbsp;of&nbsp;each&nbsp;value&nbsp;in&nbsp;x.<br>
&nbsp;<br>
x&nbsp;must&nbsp;be&nbsp;a&nbsp;list&nbsp;of&nbsp;non-negative&nbsp;integers.&nbsp;&nbsp;The&nbsp;output,&nbsp;b[i],<br>
represents&nbsp;the&nbsp;number&nbsp;of&nbsp;times&nbsp;that&nbsp;i&nbsp;is&nbsp;found&nbsp;in&nbsp;x.&nbsp;&nbsp;If&nbsp;weights<br>
is&nbsp;specified,&nbsp;every&nbsp;occurrence&nbsp;of&nbsp;i&nbsp;at&nbsp;a&nbsp;position&nbsp;p&nbsp;contributes<br>
weights[p]&nbsp;instead&nbsp;of&nbsp;1.<br>
&nbsp;<br>
See&nbsp;also:&nbsp;histogram,&nbsp;digitize,&nbsp;unique.</tt></dd></dl>
 <dl><dt><a name="-binomial"><strong>binomial</strong></a>(...)</dt><dd><tt>Binomial&nbsp;distribution&nbsp;of&nbsp;n&nbsp;trials&nbsp;and&nbsp;p&nbsp;probability&nbsp;of&nbsp;success.<br>
&nbsp;<br>
<a href="#-binomial">binomial</a>(n,&nbsp;p,&nbsp;size=None)&nbsp;-&gt;&nbsp;random&nbsp;values</tt></dd></dl>
 <dl><dt><a name="-bytes"><strong>bytes</strong></a>(...)</dt><dd><tt>Return&nbsp;random&nbsp;bytes.<br>
&nbsp;<br>
<a href="#-bytes">bytes</a>(length)&nbsp;-&gt;&nbsp;str</tt></dd></dl>
 <dl><dt><a name="-can_cast"><strong>can_cast</strong></a>(...)</dt><dd><tt><a href="#-can_cast">can_cast</a>(from=d1,&nbsp;to=d2)<br>
&nbsp;<br>
Returns&nbsp;True&nbsp;if&nbsp;data&nbsp;type&nbsp;d1&nbsp;can&nbsp;be&nbsp;cast&nbsp;to&nbsp;data&nbsp;type&nbsp;d2&nbsp;without<br>
losing&nbsp;precision.</tt></dd></dl>
 <dl><dt><a name="-chisquare"><strong>chisquare</strong></a>(...)</dt><dd><tt>Chi^2&nbsp;distribution.<br>
&nbsp;<br>
<a href="#-chisquare">chisquare</a>(df,&nbsp;size=None)&nbsp;-&gt;&nbsp;random&nbsp;values</tt></dd></dl>
 <dl><dt><a name="-compare_chararrays"><strong>compare_chararrays</strong></a>(...)</dt></dl>
 <dl><dt><a name="-concatenate"><strong>concatenate</strong></a>(...)</dt><dd><tt><a href="#-concatenate">concatenate</a>((a1,&nbsp;a2,&nbsp;...),&nbsp;axis=0)<br>
&nbsp;<br>
Join&nbsp;arrays&nbsp;together.<br>
&nbsp;<br>
The&nbsp;tuple&nbsp;of&nbsp;sequences&nbsp;(a1,&nbsp;a2,&nbsp;...)&nbsp;are&nbsp;joined&nbsp;along&nbsp;the&nbsp;given&nbsp;axis<br>
(default&nbsp;is&nbsp;the&nbsp;first&nbsp;one)&nbsp;into&nbsp;a&nbsp;single&nbsp;numpy&nbsp;array.<br>
&nbsp;<br>
Examples<br>
--------<br>
&gt;&gt;&gt;&nbsp;<a href="#-concatenate">concatenate</a>(&nbsp;([0,1,2],&nbsp;[5,6,7])&nbsp;)<br>
<a href="#-array">array</a>([0,&nbsp;1,&nbsp;2,&nbsp;5,&nbsp;6,&nbsp;7])</tt></dd></dl>
 <dl><dt><a name="-digitize"><strong>digitize</strong></a>(...)</dt><dd><tt><a href="#-digitize">digitize</a>(x,bins)<br>
&nbsp;<br>
Return&nbsp;the&nbsp;index&nbsp;of&nbsp;the&nbsp;bin&nbsp;to&nbsp;which&nbsp;each&nbsp;value&nbsp;of&nbsp;x&nbsp;belongs.<br>
&nbsp;<br>
Each&nbsp;index&nbsp;i&nbsp;returned&nbsp;is&nbsp;such&nbsp;that&nbsp;bins[i-1]&nbsp;&lt;=&nbsp;x&nbsp;&lt;&nbsp;bins[i]&nbsp;if<br>
bins&nbsp;is&nbsp;monotonically&nbsp;increasing,&nbsp;or&nbsp;bins&nbsp;[i-1]&nbsp;&gt;&nbsp;x&nbsp;&gt;=&nbsp;bins[i]&nbsp;if<br>
bins&nbsp;is&nbsp;monotonically&nbsp;decreasing.<br>
&nbsp;<br>
Beyond&nbsp;the&nbsp;bounds&nbsp;of&nbsp;the&nbsp;bins&nbsp;0&nbsp;or&nbsp;len(bins)&nbsp;is&nbsp;returned&nbsp;as&nbsp;appropriate.</tt></dd></dl>
 <dl><dt><a name="-dot"><strong>dot</strong></a>(...)</dt></dl>
 <dl><dt><a name="-empty"><strong>empty</strong></a>(...)</dt><dd><tt><a href="#-empty">empty</a>(shape,&nbsp;dtype=float,&nbsp;order='C')<br>
&nbsp;<br>
Return&nbsp;a&nbsp;new&nbsp;array&nbsp;of&nbsp;given&nbsp;shape&nbsp;and&nbsp;type&nbsp;with&nbsp;all&nbsp;entries&nbsp;uninitialized.<br>
This&nbsp;can&nbsp;be&nbsp;faster&nbsp;than&nbsp;zeros.<br>
&nbsp;<br>
Parameters<br>
----------<br>
shape&nbsp;:&nbsp;tuple&nbsp;of&nbsp;integers<br>
&nbsp;&nbsp;&nbsp;&nbsp;Shape&nbsp;of&nbsp;the&nbsp;new&nbsp;array<br>
dtype&nbsp;:&nbsp;data-type<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;desired&nbsp;data-type&nbsp;for&nbsp;the&nbsp;array.<br>
order&nbsp;:&nbsp;{'C',&nbsp;'F'}<br>
&nbsp;&nbsp;&nbsp;&nbsp;Whether&nbsp;to&nbsp;store&nbsp;multidimensional&nbsp;data&nbsp;in&nbsp;C&nbsp;or&nbsp;Fortran&nbsp;order.</tt></dd></dl>
 <dl><dt><a name="-exponential"><strong>exponential</strong></a>(...)</dt><dd><tt>Exponential&nbsp;distribution.<br>
&nbsp;<br>
<a href="#-exponential">exponential</a>(scale=1.0,&nbsp;size=None)&nbsp;-&gt;&nbsp;random&nbsp;values</tt></dd></dl>
 <dl><dt><a name="-f"><strong>f</strong></a>(...)</dt><dd><tt>F&nbsp;distribution.<br>
&nbsp;<br>
<a href="#-f">f</a>(dfnum,&nbsp;dfden,&nbsp;size=None)&nbsp;-&gt;&nbsp;random&nbsp;values</tt></dd></dl>
 <dl><dt><a name="-fastCopyAndTranspose"><strong>fastCopyAndTranspose</strong></a> = _fastCopyAndTranspose(...)</dt><dd><tt>_fastCopyAndTranspose(a)</tt></dd></dl>
 <dl><dt><a name="-frombuffer"><strong>frombuffer</strong></a>(...)</dt><dd><tt><a href="#-frombuffer">frombuffer</a>(buffer=,&nbsp;dtype=float,&nbsp;count=-1,&nbsp;offset=0)<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;1-d&nbsp;array&nbsp;of&nbsp;data&nbsp;type&nbsp;dtype&nbsp;from&nbsp;buffer.<br>
&nbsp;<br>
Parameters<br>
----------<br>
buffer<br>
&nbsp;&nbsp;&nbsp;&nbsp;An&nbsp;object&nbsp;that&nbsp;exposes&nbsp;the&nbsp;buffer&nbsp;interface<br>
dtype&nbsp;:&nbsp;data-type<br>
&nbsp;&nbsp;&nbsp;&nbsp;Data&nbsp;type&nbsp;of&nbsp;the&nbsp;returned&nbsp;array.<br>
count&nbsp;:&nbsp;int<br>
&nbsp;&nbsp;&nbsp;&nbsp;Number&nbsp;of&nbsp;items&nbsp;to&nbsp;read.&nbsp;-1&nbsp;means&nbsp;all&nbsp;data&nbsp;in&nbsp;the&nbsp;buffer.<br>
offset&nbsp;:&nbsp;int<br>
&nbsp;&nbsp;&nbsp;&nbsp;Number&nbsp;of&nbsp;bytes&nbsp;to&nbsp;jump&nbsp;from&nbsp;the&nbsp;start&nbsp;of&nbsp;the&nbsp;buffer&nbsp;before&nbsp;reading<br>
&nbsp;<br>
Notes<br>
-----<br>
If&nbsp;the&nbsp;buffer&nbsp;has&nbsp;data&nbsp;that&nbsp;is&nbsp;not&nbsp;in&nbsp;machine&nbsp;byte-order,&nbsp;then<br>
use&nbsp;a&nbsp;proper&nbsp;data&nbsp;type&nbsp;descriptor.&nbsp;The&nbsp;data&nbsp;will&nbsp;not&nbsp;be<br>
byteswapped,&nbsp;but&nbsp;the&nbsp;array&nbsp;will&nbsp;manage&nbsp;it&nbsp;in&nbsp;future&nbsp;operations.</tt></dd></dl>
 <dl><dt><a name="-fromfile"><strong>fromfile</strong></a>(...)</dt><dd><tt><a href="#-fromfile">fromfile</a>(file=,&nbsp;dtype=float,&nbsp;count=-1,&nbsp;sep='')<br>
&nbsp;<br>
Return&nbsp;an&nbsp;array&nbsp;of&nbsp;the&nbsp;given&nbsp;data&nbsp;type&nbsp;from&nbsp;a&nbsp;text&nbsp;or&nbsp;binary&nbsp;file.<br>
&nbsp;<br>
Data&nbsp;written&nbsp;using&nbsp;the&nbsp;tofile()&nbsp;method&nbsp;can&nbsp;be&nbsp;conveniently&nbsp;recovered&nbsp;using<br>
this&nbsp;function.<br>
&nbsp;<br>
Parameters<br>
----------<br>
file&nbsp;:&nbsp;file&nbsp;or&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;Open&nbsp;file&nbsp;object&nbsp;or&nbsp;string&nbsp;containing&nbsp;a&nbsp;file&nbsp;name.<br>
dtype&nbsp;:&nbsp;data-type<br>
&nbsp;&nbsp;&nbsp;&nbsp;Data&nbsp;type&nbsp;of&nbsp;the&nbsp;returned&nbsp;array.<br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;binary&nbsp;files,&nbsp;it&nbsp;is&nbsp;also&nbsp;used&nbsp;to&nbsp;determine&nbsp;the&nbsp;size&nbsp;and&nbsp;order&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;items&nbsp;in&nbsp;the&nbsp;file.<br>
count&nbsp;:&nbsp;int<br>
&nbsp;&nbsp;&nbsp;&nbsp;Number&nbsp;of&nbsp;items&nbsp;to&nbsp;read.&nbsp;-1&nbsp;means&nbsp;all&nbsp;data&nbsp;in&nbsp;the&nbsp;whole&nbsp;file.<br>
sep&nbsp;:&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;Separator&nbsp;between&nbsp;items&nbsp;if&nbsp;file&nbsp;is&nbsp;a&nbsp;text&nbsp;file.<br>
&nbsp;&nbsp;&nbsp;&nbsp;Empty&nbsp;("")&nbsp;separator&nbsp;means&nbsp;the&nbsp;file&nbsp;should&nbsp;be&nbsp;treated&nbsp;as&nbsp;binary.<br>
&nbsp;<br>
See&nbsp;also<br>
--------<br>
loadtxt&nbsp;:&nbsp;load&nbsp;data&nbsp;from&nbsp;text&nbsp;files<br>
&nbsp;<br>
Notes<br>
-----<br>
WARNING:&nbsp;This&nbsp;function&nbsp;should&nbsp;be&nbsp;used&nbsp;sparingly&nbsp;as&nbsp;the&nbsp;binary&nbsp;files&nbsp;are&nbsp;not<br>
platform&nbsp;independent.&nbsp;In&nbsp;particular,&nbsp;they&nbsp;contain&nbsp;no&nbsp;endianess&nbsp;or&nbsp;datatype<br>
information.&nbsp;Nevertheless&nbsp;it&nbsp;can&nbsp;be&nbsp;useful&nbsp;for&nbsp;reading&nbsp;in&nbsp;simply&nbsp;formatted<br>
or&nbsp;binary&nbsp;data&nbsp;quickly.</tt></dd></dl>
 <dl><dt><a name="-fromiter"><strong>fromiter</strong></a>(...)</dt><dd><tt><a href="#-fromiter">fromiter</a>(iterable,&nbsp;dtype,&nbsp;count=-1)<br>
&nbsp;<br>
Return&nbsp;a&nbsp;new&nbsp;1d&nbsp;array&nbsp;initialized&nbsp;from&nbsp;iterable.<br>
&nbsp;<br>
Parameters<br>
----------<br>
iterable<br>
&nbsp;&nbsp;&nbsp;&nbsp;Iterable&nbsp;object&nbsp;from&nbsp;which&nbsp;to&nbsp;obtain&nbsp;data<br>
dtype&nbsp;:&nbsp;data-type<br>
&nbsp;&nbsp;&nbsp;&nbsp;Data&nbsp;type&nbsp;of&nbsp;the&nbsp;returned&nbsp;array.<br>
count&nbsp;:&nbsp;int<br>
&nbsp;&nbsp;&nbsp;&nbsp;Number&nbsp;of&nbsp;items&nbsp;to&nbsp;read.&nbsp;-1&nbsp;means&nbsp;all&nbsp;data&nbsp;in&nbsp;the&nbsp;iterable.<br>
&nbsp;<br>
Returns<br>
-------<br>
new_array&nbsp;:&nbsp;ndarray</tt></dd></dl>
 <dl><dt><a name="-frompyfunc"><strong>frompyfunc</strong></a>(...)</dt><dd><tt><a href="#-frompyfunc">frompyfunc</a>(func,&nbsp;nin,&nbsp;nout)&nbsp;take&nbsp;an&nbsp;arbitrary&nbsp;python&nbsp;function&nbsp;that&nbsp;takes&nbsp;nin&nbsp;objects&nbsp;as&nbsp;input&nbsp;and&nbsp;returns&nbsp;nout&nbsp;objects&nbsp;and&nbsp;return&nbsp;a&nbsp;universal&nbsp;function&nbsp;(ufunc).&nbsp;&nbsp;This&nbsp;ufunc&nbsp;always&nbsp;returns&nbsp;PyObject&nbsp;arrays</tt></dd></dl>
 <dl><dt><a name="-fromstring"><strong>fromstring</strong></a>(...)</dt><dd><tt><a href="#-fromstring">fromstring</a>(string,&nbsp;dtype=float,&nbsp;count=-1,&nbsp;sep='')<br>
&nbsp;<br>
Return&nbsp;a&nbsp;new&nbsp;1d&nbsp;array&nbsp;initialized&nbsp;from&nbsp;the&nbsp;raw&nbsp;binary&nbsp;data&nbsp;in&nbsp;string.<br>
&nbsp;<br>
If&nbsp;count&nbsp;is&nbsp;positive,&nbsp;the&nbsp;new&nbsp;array&nbsp;will&nbsp;have&nbsp;count&nbsp;elements,&nbsp;otherwise&nbsp;its<br>
size&nbsp;is&nbsp;determined&nbsp;by&nbsp;the&nbsp;size&nbsp;of&nbsp;string.&nbsp;&nbsp;If&nbsp;sep&nbsp;is&nbsp;not&nbsp;empty&nbsp;then&nbsp;the<br>
string&nbsp;is&nbsp;interpreted&nbsp;in&nbsp;ASCII&nbsp;mode&nbsp;and&nbsp;converted&nbsp;to&nbsp;the&nbsp;desired&nbsp;number&nbsp;type<br>
using&nbsp;sep&nbsp;as&nbsp;the&nbsp;separator&nbsp;between&nbsp;elements&nbsp;(extra&nbsp;whitespace&nbsp;is&nbsp;ignored).<br>
ASCII&nbsp;integer&nbsp;conversions&nbsp;are&nbsp;base-10;&nbsp;octal&nbsp;and&nbsp;hex&nbsp;are&nbsp;not&nbsp;supported.</tt></dd></dl>
 <dl><dt><a name="-gamma"><strong>gamma</strong></a>(...)</dt><dd><tt>Gamma&nbsp;distribution.<br>
&nbsp;<br>
<a href="#-gamma">gamma</a>(shape,&nbsp;scale=1.0,&nbsp;size=None)&nbsp;-&gt;&nbsp;random&nbsp;values</tt></dd></dl>
 <dl><dt><a name="-geometric"><strong>geometric</strong></a>(...)</dt><dd><tt>Geometric&nbsp;distribution&nbsp;with&nbsp;p&nbsp;being&nbsp;the&nbsp;probability&nbsp;of&nbsp;"success"&nbsp;on<br>
an&nbsp;individual&nbsp;trial.<br>
&nbsp;<br>
<a href="#-geometric">geometric</a>(p,&nbsp;size=None)</tt></dd></dl>
 <dl><dt><a name="-get_state"><strong>get_state</strong></a>(...)</dt><dd><tt>Return&nbsp;a&nbsp;tuple&nbsp;representing&nbsp;the&nbsp;internal&nbsp;state&nbsp;of&nbsp;the&nbsp;generator.<br>
&nbsp;<br>
<a href="#-get_state">get_state</a>()&nbsp;-&gt;&nbsp;('MT19937',&nbsp;int&nbsp;key[624],&nbsp;int&nbsp;pos,&nbsp;int&nbsp;has_gauss,&nbsp;float&nbsp;cached_gaussian)</tt></dd></dl>
 <dl><dt><a name="-getbuffer"><strong>getbuffer</strong></a>(...)</dt><dd><tt><a href="#-getbuffer">getbuffer</a>(obj&nbsp;[,offset[,&nbsp;size]])<br>
&nbsp;<br>
Create&nbsp;a&nbsp;buffer&nbsp;object&nbsp;from&nbsp;the&nbsp;given&nbsp;object&nbsp;referencing&nbsp;a&nbsp;slice&nbsp;of<br>
length&nbsp;size&nbsp;starting&nbsp;at&nbsp;offset.&nbsp;&nbsp;Default&nbsp;is&nbsp;the&nbsp;entire&nbsp;buffer.&nbsp;A<br>
read-write&nbsp;buffer&nbsp;is&nbsp;attempted&nbsp;followed&nbsp;by&nbsp;a&nbsp;read-only&nbsp;buffer.</tt></dd></dl>
 <dl><dt><a name="-geterrobj"><strong>geterrobj</strong></a>(...)</dt><dd><tt><a href="#-geterrobj">geterrobj</a>()<br>
&nbsp;<br>
Used&nbsp;internally&nbsp;by&nbsp;`geterr`.<br>
&nbsp;<br>
Returns<br>
-------<br>
errobj&nbsp;:&nbsp;list<br>
&nbsp;&nbsp;&nbsp;&nbsp;Internal&nbsp;numpy&nbsp;buffer&nbsp;size,&nbsp;error&nbsp;mask,&nbsp;error&nbsp;callback&nbsp;function.</tt></dd></dl>
 <dl><dt><a name="-gumbel"><strong>gumbel</strong></a>(...)</dt><dd><tt>Gumbel&nbsp;distribution.<br>
&nbsp;<br>
<a href="#-gumbel">gumbel</a>(loc=0.0,&nbsp;scale=1.0,&nbsp;size=None)</tt></dd></dl>
 <dl><dt><a name="-hypergeometric"><strong>hypergeometric</strong></a>(...)</dt><dd><tt>Hypergeometric&nbsp;distribution.<br>
&nbsp;<br>
Consider&nbsp;an&nbsp;urn&nbsp;with&nbsp;ngood&nbsp;"good"&nbsp;balls&nbsp;and&nbsp;nbad&nbsp;"bad"&nbsp;balls.&nbsp;If&nbsp;one&nbsp;<br>
were&nbsp;to&nbsp;draw&nbsp;nsample&nbsp;balls&nbsp;from&nbsp;the&nbsp;urn&nbsp;without&nbsp;replacement,&nbsp;then&nbsp;<br>
the&nbsp;hypergeometric&nbsp;distribution&nbsp;describes&nbsp;the&nbsp;distribution&nbsp;of&nbsp;"good"&nbsp;<br>
balls&nbsp;in&nbsp;the&nbsp;sample.<br>
&nbsp;<br>
<a href="#-hypergeometric">hypergeometric</a>(ngood,&nbsp;nbad,&nbsp;nsample,&nbsp;size=None)</tt></dd></dl>
 <dl><dt><a name="-inner"><strong>inner</strong></a>(...)</dt><dd><tt><a href="#-inner">inner</a>(a,b)<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;dot&nbsp;product&nbsp;of&nbsp;two&nbsp;arrays,&nbsp;which&nbsp;has&nbsp;shape&nbsp;a.shape[:-1]&nbsp;+<br>
b.shape[:-1]&nbsp;with&nbsp;elements&nbsp;computed&nbsp;by&nbsp;the&nbsp;product&nbsp;of&nbsp;the&nbsp;elements<br>
from&nbsp;the&nbsp;last&nbsp;dimensions&nbsp;of&nbsp;a&nbsp;and&nbsp;b.</tt></dd></dl>
 <dl><dt><a name="-int_asbuffer"><strong>int_asbuffer</strong></a>(...)</dt></dl>
 <dl><dt><a name="-laplace"><strong>laplace</strong></a>(...)</dt><dd><tt>Laplace&nbsp;distribution.<br>
&nbsp;<br>
<a href="#-laplace">laplace</a>(loc=0.0,&nbsp;scale=1.0,&nbsp;size=None)</tt></dd></dl>
 <dl><dt><a name="-lexsort"><strong>lexsort</strong></a>(...)</dt><dd><tt><a href="#-lexsort">lexsort</a>(keys=,&nbsp;axis=-1)&nbsp;-&gt;&nbsp;array&nbsp;of&nbsp;indices.&nbsp;Argsort&nbsp;with&nbsp;list&nbsp;of&nbsp;keys.<br>
&nbsp;<br>
Perform&nbsp;an&nbsp;indirect&nbsp;sort&nbsp;using&nbsp;a&nbsp;list&nbsp;of&nbsp;keys.&nbsp;The&nbsp;first&nbsp;key&nbsp;is&nbsp;sorted,<br>
then&nbsp;the&nbsp;second,&nbsp;and&nbsp;so&nbsp;on&nbsp;through&nbsp;the&nbsp;list&nbsp;of&nbsp;keys.&nbsp;At&nbsp;each&nbsp;step&nbsp;the<br>
previous&nbsp;order&nbsp;is&nbsp;preserved&nbsp;when&nbsp;equal&nbsp;keys&nbsp;are&nbsp;encountered.&nbsp;The&nbsp;result&nbsp;is<br>
a&nbsp;sort&nbsp;on&nbsp;multiple&nbsp;keys.&nbsp;&nbsp;If&nbsp;the&nbsp;keys&nbsp;represented&nbsp;columns&nbsp;of&nbsp;a&nbsp;spreadsheet,<br>
for&nbsp;example,&nbsp;this&nbsp;would&nbsp;sort&nbsp;using&nbsp;multiple&nbsp;columns&nbsp;(the&nbsp;last&nbsp;key&nbsp;being<br>
used&nbsp;for&nbsp;the&nbsp;primary&nbsp;sort&nbsp;order,&nbsp;the&nbsp;second-to-last&nbsp;key&nbsp;for&nbsp;the&nbsp;secondary<br>
sort&nbsp;order,&nbsp;and&nbsp;so&nbsp;on).<br>
&nbsp;<br>
Parameters<br>
----------<br>
keys&nbsp;:&nbsp;(k,N)&nbsp;array&nbsp;or&nbsp;tuple&nbsp;of&nbsp;(N,)&nbsp;sequences<br>
&nbsp;&nbsp;&nbsp;&nbsp;Array&nbsp;containing&nbsp;values&nbsp;that&nbsp;the&nbsp;returned&nbsp;indices&nbsp;should&nbsp;sort,&nbsp;or<br>
&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;sequence&nbsp;of&nbsp;things&nbsp;that&nbsp;can&nbsp;be&nbsp;converted&nbsp;to&nbsp;arrays&nbsp;of&nbsp;the&nbsp;same&nbsp;shape.<br>
&nbsp;<br>
axis&nbsp;:&nbsp;integer<br>
&nbsp;&nbsp;&nbsp;&nbsp;Axis&nbsp;to&nbsp;be&nbsp;indirectly&nbsp;sorted.&nbsp;&nbsp;Default&nbsp;is&nbsp;-1&nbsp;(i.e.&nbsp;last&nbsp;axis).<br>
&nbsp;<br>
Returns<br>
-------<br>
indices&nbsp;:&nbsp;(N,)&nbsp;integer&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;Array&nbsp;of&nbsp;indices&nbsp;that&nbsp;sort&nbsp;the&nbsp;keys&nbsp;along&nbsp;the&nbsp;specified&nbsp;axis.<br>
&nbsp;<br>
See&nbsp;Also<br>
--------<br>
argsort&nbsp;:&nbsp;indirect&nbsp;sort<br>
sort&nbsp;:&nbsp;inplace&nbsp;sort<br>
&nbsp;<br>
Examples<br>
--------<br>
&gt;&gt;&gt;&nbsp;a&nbsp;=&nbsp;[1,5,1,4,3,6,7]<br>
&gt;&gt;&gt;&nbsp;b&nbsp;=&nbsp;[9,4,0,4,0,4,3]<br>
&gt;&gt;&gt;&nbsp;ind&nbsp;=&nbsp;<a href="#-lexsort">lexsort</a>((b,a))<br>
&gt;&gt;&gt;&nbsp;print&nbsp;ind<br>
[2&nbsp;0&nbsp;4&nbsp;3&nbsp;1&nbsp;5&nbsp;6]<br>
&gt;&gt;&gt;&nbsp;print&nbsp;take(a,ind)<br>
[1&nbsp;1&nbsp;3&nbsp;4&nbsp;5&nbsp;6&nbsp;7]<br>
&gt;&gt;&gt;&nbsp;print&nbsp;take(b,ind)<br>
[0&nbsp;9&nbsp;0&nbsp;4&nbsp;4&nbsp;4&nbsp;3]</tt></dd></dl>
 <dl><dt><a name="-loads"><strong>loads</strong></a>(...)</dt><dd><tt><a href="#-loads">loads</a>(string)&nbsp;--&nbsp;Load&nbsp;a&nbsp;pickle&nbsp;from&nbsp;the&nbsp;given&nbsp;string</tt></dd></dl>
 <dl><dt><a name="-logistic"><strong>logistic</strong></a>(...)</dt><dd><tt>Logistic&nbsp;distribution.<br>
&nbsp;<br>
<a href="#-logistic">logistic</a>(loc=0.0,&nbsp;scale=1.0,&nbsp;size=None)</tt></dd></dl>
 <dl><dt><a name="-lognormal"><strong>lognormal</strong></a>(...)</dt><dd><tt>Log-normal&nbsp;distribution.<br>
&nbsp;<br>
Note&nbsp;that&nbsp;the&nbsp;mean&nbsp;parameter&nbsp;is&nbsp;not&nbsp;the&nbsp;mean&nbsp;of&nbsp;this&nbsp;distribution,&nbsp;but&nbsp;<br>
the&nbsp;underlying&nbsp;normal&nbsp;distribution.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#-lognormal">lognormal</a>(mean,&nbsp;sigma)&nbsp;&lt;=&gt;&nbsp;exp(<a href="#-normal">normal</a>(mean,&nbsp;sigma))<br>
&nbsp;<br>
<a href="#-lognormal">lognormal</a>(mean=0.0,&nbsp;sigma=1.0,&nbsp;size=None)</tt></dd></dl>
 <dl><dt><a name="-logseries"><strong>logseries</strong></a>(...)</dt><dd><tt>Logarithmic&nbsp;series&nbsp;distribution.<br>
&nbsp;<br>
<a href="#-logseries">logseries</a>(p,&nbsp;size=None)</tt></dd></dl>
 <dl><dt><a name="-multinomial"><strong>multinomial</strong></a>(...)</dt><dd><tt>Multinomial&nbsp;distribution.<br>
&nbsp;<br>
<a href="#-multinomial">multinomial</a>(n,&nbsp;pvals,&nbsp;size=None)&nbsp;-&gt;&nbsp;random&nbsp;values<br>
&nbsp;<br>
pvals&nbsp;is&nbsp;a&nbsp;sequence&nbsp;of&nbsp;probabilities&nbsp;that&nbsp;should&nbsp;sum&nbsp;to&nbsp;1&nbsp;(however,&nbsp;the<br>
last&nbsp;element&nbsp;is&nbsp;always&nbsp;assumed&nbsp;to&nbsp;account&nbsp;for&nbsp;the&nbsp;remaining&nbsp;probability<br>
as&nbsp;long&nbsp;as&nbsp;sum(pvals[:-1])&nbsp;&lt;=&nbsp;1).</tt></dd></dl>
 <dl><dt><a name="-multivariate_normal"><strong>multivariate_normal</strong></a>(...)</dt><dd><tt>Return&nbsp;an&nbsp;array&nbsp;containing&nbsp;multivariate&nbsp;normally&nbsp;distributed&nbsp;random&nbsp;numbers<br>
with&nbsp;specified&nbsp;mean&nbsp;and&nbsp;covariance.<br>
&nbsp;<br>
<a href="#-multivariate_normal">multivariate_normal</a>(mean,&nbsp;cov)&nbsp;-&gt;&nbsp;random&nbsp;values<br>
<a href="#-multivariate_normal">multivariate_normal</a>(mean,&nbsp;cov,&nbsp;[m,&nbsp;n,&nbsp;...])&nbsp;-&gt;&nbsp;random&nbsp;values<br>
&nbsp;<br>
mean&nbsp;must&nbsp;be&nbsp;a&nbsp;1&nbsp;dimensional&nbsp;array.&nbsp;cov&nbsp;must&nbsp;be&nbsp;a&nbsp;square&nbsp;two&nbsp;dimensional<br>
array&nbsp;with&nbsp;the&nbsp;same&nbsp;number&nbsp;of&nbsp;rows&nbsp;and&nbsp;columns&nbsp;as&nbsp;mean&nbsp;has&nbsp;elements.<br>
&nbsp;<br>
The&nbsp;first&nbsp;form&nbsp;returns&nbsp;a&nbsp;single&nbsp;1-D&nbsp;array&nbsp;containing&nbsp;a&nbsp;multivariate<br>
normal.<br>
&nbsp;<br>
The&nbsp;second&nbsp;form&nbsp;returns&nbsp;an&nbsp;array&nbsp;of&nbsp;shape&nbsp;(m,&nbsp;n,&nbsp;...,&nbsp;cov.shape[0]).<br>
In&nbsp;this&nbsp;case,&nbsp;output[i,j,...,:]&nbsp;is&nbsp;a&nbsp;1-D&nbsp;array&nbsp;containing&nbsp;a&nbsp;multivariate<br>
normal.</tt></dd></dl>
 <dl><dt><a name="-negative_binomial"><strong>negative_binomial</strong></a>(...)</dt><dd><tt>Negative&nbsp;Binomial&nbsp;distribution.<br>
&nbsp;<br>
<a href="#-negative_binomial">negative_binomial</a>(n,&nbsp;p,&nbsp;size=None)&nbsp;-&gt;&nbsp;random&nbsp;values</tt></dd></dl>
 <dl><dt><a name="-newbuffer"><strong>newbuffer</strong></a>(...)</dt><dd><tt><a href="#-newbuffer">newbuffer</a>(size)<br>
&nbsp;<br>
Return&nbsp;a&nbsp;new&nbsp;uninitialized&nbsp;buffer&nbsp;object&nbsp;of&nbsp;size&nbsp;bytes</tt></dd></dl>
 <dl><dt><a name="-noncentral_chisquare"><strong>noncentral_chisquare</strong></a>(...)</dt><dd><tt>Noncentral&nbsp;Chi^2&nbsp;distribution.<br>
&nbsp;<br>
<a href="#-noncentral_chisquare">noncentral_chisquare</a>(df,&nbsp;nonc,&nbsp;size=None)&nbsp;-&gt;&nbsp;random&nbsp;values</tt></dd></dl>
 <dl><dt><a name="-noncentral_f"><strong>noncentral_f</strong></a>(...)</dt><dd><tt>Noncentral&nbsp;F&nbsp;distribution.<br>
&nbsp;<br>
<a href="#-noncentral_f">noncentral_f</a>(dfnum,&nbsp;dfden,&nbsp;nonc,&nbsp;size=None)&nbsp;-&gt;&nbsp;random&nbsp;values</tt></dd></dl>
 <dl><dt><a name="-normal"><strong>normal</strong></a>(...)</dt><dd><tt>Normal&nbsp;distribution&nbsp;(mean=loc,&nbsp;stdev=scale).<br>
&nbsp;<br>
<a href="#-normal">normal</a>(loc=0.0,&nbsp;scale=1.0,&nbsp;size=None)&nbsp;-&gt;&nbsp;random&nbsp;values</tt></dd></dl>
 <dl><dt><a name="-packbits"><strong>packbits</strong></a>(...)</dt><dd><tt>out&nbsp;=&nbsp;numpy.<a href="#-packbits">packbits</a>(myarray,&nbsp;axis=None)<br>
&nbsp;<br>
myarray&nbsp;:&nbsp;an&nbsp;integer&nbsp;type&nbsp;array&nbsp;whose&nbsp;elements&nbsp;should&nbsp;be&nbsp;packed&nbsp;to&nbsp;bits<br>
&nbsp;<br>
&nbsp;This&nbsp;routine&nbsp;packs&nbsp;the&nbsp;elements&nbsp;of&nbsp;a&nbsp;binary-valued&nbsp;dataset&nbsp;into&nbsp;a<br>
&nbsp;NumPy&nbsp;array&nbsp;of&nbsp;type&nbsp;uint8&nbsp;('B')&nbsp;whose&nbsp;bits&nbsp;correspond&nbsp;to<br>
&nbsp;the&nbsp;logical&nbsp;(0&nbsp;or&nbsp;nonzero)&nbsp;value&nbsp;of&nbsp;the&nbsp;input&nbsp;elements.<br>
&nbsp;The&nbsp;dimension&nbsp;over-which&nbsp;bit-packing&nbsp;is&nbsp;done&nbsp;is&nbsp;given&nbsp;by&nbsp;axis.<br>
&nbsp;The&nbsp;shape&nbsp;of&nbsp;the&nbsp;output&nbsp;has&nbsp;the&nbsp;same&nbsp;number&nbsp;of&nbsp;dimensions&nbsp;as&nbsp;the&nbsp;input<br>
&nbsp;(unless&nbsp;axis&nbsp;is&nbsp;None,&nbsp;in&nbsp;which&nbsp;case&nbsp;the&nbsp;output&nbsp;is&nbsp;1-d).<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;Example:<br>
&nbsp;&nbsp;&nbsp;&gt;&gt;&gt;&nbsp;a&nbsp;=&nbsp;<a href="#-array">array</a>([[[1,0,1],<br>
&nbsp;&nbsp;&nbsp;...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,1,0]],<br>
&nbsp;&nbsp;&nbsp;...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[1,1,0],<br>
&nbsp;&nbsp;&nbsp;...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,0,1]]])<br>
&nbsp;&nbsp;&nbsp;&gt;&gt;&gt;&nbsp;b&nbsp;=&nbsp;numpy.<a href="#-packbits">packbits</a>(a,axis=-1)<br>
&nbsp;&nbsp;&nbsp;&gt;&gt;&gt;&nbsp;b<br>
&nbsp;&nbsp;&nbsp;<a href="#-array">array</a>([[[160],[64]],[[192],[32]]],&nbsp;dtype=uint8)<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;Note&nbsp;that&nbsp;160&nbsp;=&nbsp;128&nbsp;+&nbsp;32<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;192&nbsp;=&nbsp;128&nbsp;+&nbsp;64</tt></dd></dl>
 <dl><dt><a name="-pareto"><strong>pareto</strong></a>(...)</dt><dd><tt>Pareto&nbsp;distribution.<br>
&nbsp;<br>
<a href="#-pareto">pareto</a>(a,&nbsp;size=None)</tt></dd></dl>
 <dl><dt><a name="-permutation"><strong>permutation</strong></a>(...)</dt><dd><tt>Given&nbsp;an&nbsp;integer,&nbsp;return&nbsp;a&nbsp;shuffled&nbsp;sequence&nbsp;of&nbsp;integers&nbsp;&gt;=&nbsp;0&nbsp;and&nbsp;<br>
&lt;&nbsp;x;&nbsp;given&nbsp;a&nbsp;sequence,&nbsp;return&nbsp;a&nbsp;shuffled&nbsp;array&nbsp;copy.<br>
&nbsp;<br>
<a href="#-permutation">permutation</a>(x)</tt></dd></dl>
 <dl><dt><a name="-poisson"><strong>poisson</strong></a>(...)</dt><dd><tt>Poisson&nbsp;distribution.<br>
&nbsp;<br>
<a href="#-poisson">poisson</a>(lam=1.0,&nbsp;size=None)&nbsp;-&gt;&nbsp;random&nbsp;values</tt></dd></dl>
 <dl><dt><a name="-power"><strong>power</strong></a>(...)</dt><dd><tt>Power&nbsp;distribution.<br>
&nbsp;<br>
<a href="#-power">power</a>(a,&nbsp;size=None)</tt></dd></dl>
 <dl><dt><a name="-putmask"><strong>putmask</strong></a>(...)</dt><dd><tt><a href="#-putmask">putmask</a>(a,&nbsp;mask,&nbsp;values)<br>
&nbsp;<br>
Sets&nbsp;a.flat[n]&nbsp;=&nbsp;values[n]&nbsp;for&nbsp;each&nbsp;n&nbsp;where&nbsp;mask.flat[n]&nbsp;is&nbsp;true.<br>
&nbsp;<br>
If&nbsp;values&nbsp;is&nbsp;not&nbsp;the&nbsp;same&nbsp;size&nbsp;as&nbsp;`a`&nbsp;and&nbsp;`mask`&nbsp;then&nbsp;it&nbsp;will&nbsp;repeat.<br>
This&nbsp;gives&nbsp;behavior&nbsp;different&nbsp;from&nbsp;a[mask]&nbsp;=&nbsp;values.<br>
&nbsp;<br>
Parameters<br>
----------<br>
a&nbsp;:&nbsp;{array_like}<br>
&nbsp;&nbsp;&nbsp;&nbsp;Array&nbsp;to&nbsp;put&nbsp;data&nbsp;into<br>
mask&nbsp;:&nbsp;{array_like}<br>
&nbsp;&nbsp;&nbsp;&nbsp;Boolean&nbsp;mask&nbsp;array<br>
values&nbsp;:&nbsp;{array_like}<br>
&nbsp;&nbsp;&nbsp;&nbsp;Values&nbsp;to&nbsp;put</tt></dd></dl>
 <dl><dt><a name="-rand"><strong>rand</strong></a>(...)</dt><dd><tt>Return&nbsp;an&nbsp;array&nbsp;of&nbsp;the&nbsp;given&nbsp;dimensions&nbsp;which&nbsp;is&nbsp;initialized&nbsp;to&nbsp;<br>
random&nbsp;numbers&nbsp;from&nbsp;a&nbsp;uniform&nbsp;distribution&nbsp;in&nbsp;the&nbsp;range&nbsp;[0,1).<br>
&nbsp;<br>
<a href="#-rand">rand</a>(d0,&nbsp;d1,&nbsp;...,&nbsp;dn)&nbsp;-&gt;&nbsp;random&nbsp;values<br>
&nbsp;<br>
Note:&nbsp;&nbsp;This&nbsp;is&nbsp;a&nbsp;convenience&nbsp;function.&nbsp;If&nbsp;you&nbsp;want&nbsp;an<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interface&nbsp;that&nbsp;takes&nbsp;a&nbsp;tuple&nbsp;as&nbsp;the&nbsp;first&nbsp;argument<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;use&nbsp;numpy.random.<a href="#-random_sample">random_sample</a>(shape_tuple).</tt></dd></dl>
 <dl><dt><a name="-randint"><strong>randint</strong></a>(...)</dt><dd><tt>Return&nbsp;random&nbsp;integers&nbsp;x&nbsp;such&nbsp;that&nbsp;low&nbsp;&lt;=&nbsp;x&nbsp;&lt;&nbsp;high.<br>
&nbsp;<br>
<a href="#-randint">randint</a>(low,&nbsp;high=None,&nbsp;size=None)&nbsp;-&gt;&nbsp;random&nbsp;values<br>
&nbsp;<br>
If&nbsp;high&nbsp;is&nbsp;None,&nbsp;then&nbsp;0&nbsp;&lt;=&nbsp;x&nbsp;&lt;&nbsp;low.</tt></dd></dl>
 <dl><dt><a name="-randn"><strong>randn</strong></a>(...)</dt><dd><tt>Returns&nbsp;zero-mean,&nbsp;unit-variance&nbsp;Gaussian&nbsp;random&nbsp;numbers&nbsp;in&nbsp;an&nbsp;<br>
array&nbsp;of&nbsp;shape&nbsp;(d0,&nbsp;d1,&nbsp;...,&nbsp;dn).<br>
&nbsp;<br>
<a href="#-randn">randn</a>(d0,&nbsp;d1,&nbsp;...,&nbsp;dn)&nbsp;-&gt;&nbsp;random&nbsp;values<br>
&nbsp;<br>
Note:&nbsp;&nbsp;This&nbsp;is&nbsp;a&nbsp;convenience&nbsp;function.&nbsp;If&nbsp;you&nbsp;want&nbsp;an<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interface&nbsp;that&nbsp;takes&nbsp;a&nbsp;tuple&nbsp;as&nbsp;the&nbsp;first&nbsp;argument<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;use&nbsp;numpy.random.<a href="#-standard_normal">standard_normal</a>(shape_tuple).</tt></dd></dl>
 <dl><dt><a name="-random"><strong>random</strong></a> = random_sample(...)</dt><dd><tt>Return&nbsp;random&nbsp;floats&nbsp;in&nbsp;the&nbsp;half-open&nbsp;interval&nbsp;[0.0,&nbsp;1.0).<br>
&nbsp;<br>
<a href="#-random_sample">random_sample</a>(size=None)&nbsp;-&gt;&nbsp;random&nbsp;values</tt></dd></dl>
 <dl><dt><a name="-random_integers"><strong>random_integers</strong></a>(...)</dt><dd><tt>Return&nbsp;random&nbsp;integers&nbsp;x&nbsp;such&nbsp;that&nbsp;low&nbsp;&lt;=&nbsp;x&nbsp;&lt;=&nbsp;high.<br>
&nbsp;<br>
<a href="#-random_integers">random_integers</a>(low,&nbsp;high=None,&nbsp;size=None)&nbsp;-&gt;&nbsp;random&nbsp;values.<br>
&nbsp;<br>
If&nbsp;high&nbsp;is&nbsp;None,&nbsp;then&nbsp;1&nbsp;&lt;=&nbsp;x&nbsp;&lt;=&nbsp;low.</tt></dd></dl>
 <dl><dt><a name="-random_sample"><strong>random_sample</strong></a>(...)</dt><dd><tt>Return&nbsp;random&nbsp;floats&nbsp;in&nbsp;the&nbsp;half-open&nbsp;interval&nbsp;[0.0,&nbsp;1.0).<br>
&nbsp;<br>
<a href="#-random_sample">random_sample</a>(size=None)&nbsp;-&gt;&nbsp;random&nbsp;values</tt></dd></dl>
 <dl><dt><a name="-ranf"><strong>ranf</strong></a> = random_sample(...)</dt><dd><tt>Return&nbsp;random&nbsp;floats&nbsp;in&nbsp;the&nbsp;half-open&nbsp;interval&nbsp;[0.0,&nbsp;1.0).<br>
&nbsp;<br>
<a href="#-random_sample">random_sample</a>(size=None)&nbsp;-&gt;&nbsp;random&nbsp;values</tt></dd></dl>
 <dl><dt><a name="-rayleigh"><strong>rayleigh</strong></a>(...)</dt><dd><tt>Rayleigh&nbsp;distribution.<br>
&nbsp;<br>
<a href="#-rayleigh">rayleigh</a>(scale=1.0,&nbsp;size=None)</tt></dd></dl>
 <dl><dt><a name="-sample"><strong>sample</strong></a> = random_sample(...)</dt><dd><tt>Return&nbsp;random&nbsp;floats&nbsp;in&nbsp;the&nbsp;half-open&nbsp;interval&nbsp;[0.0,&nbsp;1.0).<br>
&nbsp;<br>
<a href="#-random_sample">random_sample</a>(size=None)&nbsp;-&gt;&nbsp;random&nbsp;values</tt></dd></dl>
 <dl><dt><a name="-seed"><strong>seed</strong></a>(...)</dt><dd><tt>Seed&nbsp;the&nbsp;generator.<br>
&nbsp;<br>
<a href="#-seed">seed</a>(seed=None)<br>
&nbsp;<br>
seed&nbsp;can&nbsp;be&nbsp;an&nbsp;integer,&nbsp;an&nbsp;array&nbsp;(or&nbsp;other&nbsp;sequence)&nbsp;of&nbsp;integers&nbsp;of&nbsp;any<br>
length,&nbsp;or&nbsp;None.&nbsp;If&nbsp;seed&nbsp;is&nbsp;None,&nbsp;then&nbsp;RandomState&nbsp;will&nbsp;try&nbsp;to&nbsp;read&nbsp;data<br>
from&nbsp;/dev/urandom&nbsp;(or&nbsp;the&nbsp;Windows&nbsp;analogue)&nbsp;if&nbsp;available&nbsp;or&nbsp;seed&nbsp;from<br>
the&nbsp;clock&nbsp;otherwise.</tt></dd></dl>
 <dl><dt><a name="-set_numeric_ops"><strong>set_numeric_ops</strong></a>(...)</dt><dd><tt><a href="#-set_numeric_ops">set_numeric_ops</a>(op=func,&nbsp;...)<br>
&nbsp;<br>
Set&nbsp;some&nbsp;or&nbsp;all&nbsp;of&nbsp;the&nbsp;number&nbsp;methods&nbsp;for&nbsp;all&nbsp;array&nbsp;objects.&nbsp;&nbsp;Do&nbsp;not<br>
forget&nbsp;**dict&nbsp;can&nbsp;be&nbsp;used&nbsp;as&nbsp;the&nbsp;argument&nbsp;list.&nbsp;&nbsp;Return&nbsp;the&nbsp;functions<br>
that&nbsp;were&nbsp;replaced,&nbsp;which&nbsp;can&nbsp;be&nbsp;stored&nbsp;and&nbsp;set&nbsp;later.</tt></dd></dl>
 <dl><dt><a name="-set_state"><strong>set_state</strong></a>(...)</dt><dd><tt>Set&nbsp;the&nbsp;state&nbsp;from&nbsp;a&nbsp;tuple.<br>
&nbsp;<br>
state&nbsp;=&nbsp;('MT19937',&nbsp;int&nbsp;key[624],&nbsp;int&nbsp;pos,&nbsp;int&nbsp;has_gauss,&nbsp;float&nbsp;cached_gaussian)<br>
&nbsp;<br>
For&nbsp;backwards&nbsp;compatibility,&nbsp;the&nbsp;following&nbsp;form&nbsp;is&nbsp;also&nbsp;accepted<br>
although&nbsp;it&nbsp;is&nbsp;missing&nbsp;some&nbsp;information&nbsp;about&nbsp;the&nbsp;cached&nbsp;Gaussian&nbsp;value.<br>
&nbsp;<br>
state&nbsp;=&nbsp;('MT19937',&nbsp;int&nbsp;key[624],&nbsp;int&nbsp;pos)<br>
&nbsp;<br>
<a href="#-set_state">set_state</a>(state)</tt></dd></dl>
 <dl><dt><a name="-set_string_function"><strong>set_string_function</strong></a>(...)</dt><dd><tt><a href="#-set_string_function">set_string_function</a>(f,&nbsp;repr=1)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;python&nbsp;function&nbsp;f&nbsp;to&nbsp;be&nbsp;the&nbsp;function&nbsp;used&nbsp;to&nbsp;obtain&nbsp;a&nbsp;pretty<br>
printable&nbsp;string&nbsp;version&nbsp;of&nbsp;an&nbsp;array&nbsp;whenever&nbsp;an&nbsp;array&nbsp;is&nbsp;printed.<br>
<a href="#-f">f</a>(M)&nbsp;should&nbsp;expect&nbsp;an&nbsp;array&nbsp;argument&nbsp;M,&nbsp;and&nbsp;should&nbsp;return&nbsp;a&nbsp;string<br>
consisting&nbsp;of&nbsp;the&nbsp;desired&nbsp;representation&nbsp;of&nbsp;M&nbsp;for&nbsp;printing.</tt></dd></dl>
 <dl><dt><a name="-seterrobj"><strong>seterrobj</strong></a>(...)</dt><dd><tt><a href="#-seterrobj">seterrobj</a>()<br>
&nbsp;<br>
Used&nbsp;internally&nbsp;by&nbsp;`seterr`.<br>
&nbsp;<br>
Parameters<br>
----------<br>
errobj&nbsp;:&nbsp;list<br>
&nbsp;&nbsp;&nbsp;&nbsp;[buffer_size,&nbsp;error_mask,&nbsp;callback_func]<br>
&nbsp;<br>
See&nbsp;Also<br>
--------<br>
seterrcall</tt></dd></dl>
 <dl><dt><a name="-shuffle"><strong>shuffle</strong></a>(...)</dt><dd><tt>Modify&nbsp;a&nbsp;sequence&nbsp;in-place&nbsp;by&nbsp;shuffling&nbsp;its&nbsp;contents.<br>
&nbsp;<br>
<a href="#-shuffle">shuffle</a>(x)</tt></dd></dl>
 <dl><dt><a name="-standard_cauchy"><strong>standard_cauchy</strong></a>(...)</dt><dd><tt>Standard&nbsp;Cauchy&nbsp;with&nbsp;mode=0.<br>
&nbsp;<br>
<a href="#-standard_cauchy">standard_cauchy</a>(size=None)</tt></dd></dl>
 <dl><dt><a name="-standard_exponential"><strong>standard_exponential</strong></a>(...)</dt><dd><tt>Standard&nbsp;exponential&nbsp;distribution&nbsp;(scale=1).<br>
&nbsp;<br>
<a href="#-standard_exponential">standard_exponential</a>(size=None)&nbsp;-&gt;&nbsp;random&nbsp;values</tt></dd></dl>
 <dl><dt><a name="-standard_gamma"><strong>standard_gamma</strong></a>(...)</dt><dd><tt>Standard&nbsp;Gamma&nbsp;distribution.<br>
&nbsp;<br>
<a href="#-standard_gamma">standard_gamma</a>(shape,&nbsp;size=None)&nbsp;-&gt;&nbsp;random&nbsp;values</tt></dd></dl>
 <dl><dt><a name="-standard_normal"><strong>standard_normal</strong></a>(...)</dt><dd><tt>Standard&nbsp;Normal&nbsp;distribution&nbsp;(mean=0,&nbsp;stdev=1).<br>
&nbsp;<br>
<a href="#-standard_normal">standard_normal</a>(size=None)&nbsp;-&gt;&nbsp;random&nbsp;values</tt></dd></dl>
 <dl><dt><a name="-standard_t"><strong>standard_t</strong></a>(...)</dt><dd><tt>Standard&nbsp;Student's&nbsp;t&nbsp;distribution&nbsp;with&nbsp;df&nbsp;degrees&nbsp;of&nbsp;freedom.<br>
&nbsp;<br>
<a href="#-standard_t">standard_t</a>(df,&nbsp;size=None)</tt></dd></dl>
 <dl><dt><a name="-triangular"><strong>triangular</strong></a>(...)</dt><dd><tt>Triangular&nbsp;distribution&nbsp;starting&nbsp;at&nbsp;left,&nbsp;peaking&nbsp;at&nbsp;mode,&nbsp;and&nbsp;<br>
ending&nbsp;at&nbsp;right&nbsp;(left&nbsp;&lt;=&nbsp;mode&nbsp;&lt;=&nbsp;right).<br>
&nbsp;<br>
<a href="#-triangular">triangular</a>(left,&nbsp;mode,&nbsp;right,&nbsp;size=None)</tt></dd></dl>
 <dl><dt><a name="-uniform"><strong>uniform</strong></a>(...)</dt><dd><tt>Uniform&nbsp;distribution&nbsp;over&nbsp;[low,&nbsp;high).<br>
&nbsp;<br>
<a href="#-uniform">uniform</a>(low=0.0,&nbsp;high=1.0,&nbsp;size=None)&nbsp;-&gt;&nbsp;random&nbsp;values</tt></dd></dl>
 <dl><dt><a name="-unpackbits"><strong>unpackbits</strong></a>(...)</dt><dd><tt>out&nbsp;=&nbsp;numpy.<a href="#-unpackbits">unpackbits</a>(myarray,&nbsp;axis=None)<br>
&nbsp;<br>
myarray&nbsp;-&nbsp;array&nbsp;of&nbsp;uint8&nbsp;type&nbsp;where&nbsp;each&nbsp;element&nbsp;represents&nbsp;a&nbsp;bit-field<br>
&nbsp;&nbsp;&nbsp;that&nbsp;should&nbsp;be&nbsp;unpacked&nbsp;into&nbsp;a&nbsp;boolean&nbsp;output&nbsp;array<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;The&nbsp;shape&nbsp;of&nbsp;the&nbsp;output&nbsp;array&nbsp;is&nbsp;either&nbsp;1-d&nbsp;(if&nbsp;axis&nbsp;is&nbsp;None)&nbsp;or<br>
&nbsp;&nbsp;&nbsp;the&nbsp;same&nbsp;shape&nbsp;as&nbsp;the&nbsp;input&nbsp;array&nbsp;with&nbsp;unpacking&nbsp;done&nbsp;along&nbsp;the<br>
&nbsp;&nbsp;&nbsp;axis&nbsp;specified.</tt></dd></dl>
 <dl><dt><a name="-vonmises"><strong>vonmises</strong></a>(...)</dt><dd><tt>von&nbsp;Mises&nbsp;circular&nbsp;distribution&nbsp;with&nbsp;mode&nbsp;mu&nbsp;and&nbsp;dispersion&nbsp;parameter<br>
kappa&nbsp;on&nbsp;[-pi,&nbsp;pi].<br>
&nbsp;<br>
<a href="#-vonmises">vonmises</a>(mu,&nbsp;kappa,&nbsp;size=None)</tt></dd></dl>
 <dl><dt><a name="-wald"><strong>wald</strong></a>(...)</dt><dd><tt>Wald&nbsp;(inverse&nbsp;Gaussian)&nbsp;distribution.<br>
&nbsp;<br>
<a href="#-wald">wald</a>(mean,&nbsp;scale,&nbsp;size=None)</tt></dd></dl>
 <dl><dt><a name="-weibull"><strong>weibull</strong></a>(...)</dt><dd><tt>Weibull&nbsp;distribution.<br>
&nbsp;<br>
<a href="#-weibull">weibull</a>(a,&nbsp;size=None)</tt></dd></dl>
 <dl><dt><a name="-where"><strong>where</strong></a>(...)</dt><dd><tt><a href="#-where">where</a>(condition,&nbsp;x,&nbsp;y)&nbsp;or&nbsp;<a href="#-where">where</a>(condition)<br>
&nbsp;<br>
Return&nbsp;elements&nbsp;from&nbsp;`x`&nbsp;or&nbsp;`y`,&nbsp;depending&nbsp;on&nbsp;`condition`.<br>
&nbsp;<br>
Parameters<br>
----------<br>
condition&nbsp;:&nbsp;array&nbsp;of&nbsp;bool<br>
&nbsp;&nbsp;&nbsp;&nbsp;When&nbsp;True,&nbsp;yield&nbsp;x,&nbsp;otherwise&nbsp;yield&nbsp;y.<br>
x,y&nbsp;:&nbsp;1-dimensional&nbsp;arrays<br>
&nbsp;&nbsp;&nbsp;&nbsp;Values&nbsp;from&nbsp;which&nbsp;to&nbsp;choose.<br>
&nbsp;<br>
Notes<br>
-----<br>
This&nbsp;is&nbsp;equivalent&nbsp;to<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;[xv&nbsp;if&nbsp;c&nbsp;else&nbsp;yv&nbsp;for&nbsp;(c,xv,yv)&nbsp;in&nbsp;zip(condition,x,y)]<br>
&nbsp;<br>
The&nbsp;result&nbsp;is&nbsp;shaped&nbsp;like&nbsp;`condition`&nbsp;and&nbsp;has&nbsp;elements&nbsp;of&nbsp;`x`<br>
or&nbsp;`y`&nbsp;where&nbsp;`condition`&nbsp;is&nbsp;respectively&nbsp;True&nbsp;or&nbsp;False.<br>
&nbsp;<br>
In&nbsp;the&nbsp;special&nbsp;case,&nbsp;where&nbsp;only&nbsp;`condition`&nbsp;is&nbsp;given,&nbsp;the<br>
tuple&nbsp;condition.nonzero()&nbsp;is&nbsp;returned,&nbsp;instead.<br>
&nbsp;<br>
Examples<br>
--------<br>
&gt;&gt;&gt;&nbsp;<a href="#-where">where</a>([True,False,True],[1,2,3],[4,5,6])<br>
<a href="#-array">array</a>([1,&nbsp;5,&nbsp;3])</tt></dd></dl>
 <dl><dt><a name="-zeros"><strong>zeros</strong></a>(...)</dt><dd><tt><a href="#-zeros">zeros</a>(shape,&nbsp;dtype=float,&nbsp;order='C')<br>
&nbsp;<br>
Return&nbsp;a&nbsp;new&nbsp;array&nbsp;of&nbsp;given&nbsp;shape&nbsp;and&nbsp;type,&nbsp;filled&nbsp;zeros.<br>
&nbsp;<br>
Parameters<br>
----------<br>
shape&nbsp;:&nbsp;tuple&nbsp;of&nbsp;integers<br>
&nbsp;&nbsp;&nbsp;&nbsp;Shape&nbsp;of&nbsp;the&nbsp;new&nbsp;array<br>
dtype&nbsp;:&nbsp;data-type<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;desired&nbsp;data-type&nbsp;for&nbsp;the&nbsp;array.<br>
order&nbsp;:&nbsp;{'C',&nbsp;'F'}<br>
&nbsp;&nbsp;&nbsp;&nbsp;Whether&nbsp;to&nbsp;store&nbsp;multidimensional&nbsp;data&nbsp;in&nbsp;C&nbsp;or&nbsp;Fortran&nbsp;order.</tt></dd></dl>
 <dl><dt><a name="-zipf"><strong>zipf</strong></a>(...)</dt><dd><tt>Zipf&nbsp;distribution.<br>
&nbsp;<br>
<a href="#-zipf">zipf</a>(a,&nbsp;size=None)</tt></dd></dl>
</td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#55aa55">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Data</strong></big></font></td></tr>
    
<tr><td bgcolor="#55aa55"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><strong>ALLOW_THREADS</strong> = 1<br>
<strong>BUFSIZE</strong> = 10000<br>
<strong>CLIP</strong> = 0<br>
<strong>DAILY</strong> = 3<br>
<strong>ERR_CALL</strong> = 3<br>
<strong>ERR_DEFAULT</strong> = 0<br>
<strong>ERR_DEFAULT2</strong> = 2084<br>
<strong>ERR_IGNORE</strong> = 0<br>
<strong>ERR_LOG</strong> = 5<br>
<strong>ERR_PRINT</strong> = 4<br>
<strong>ERR_RAISE</strong> = 2<br>
<strong>ERR_WARN</strong> = 1<br>
<strong>FLOATING_POINT_SUPPORT</strong> = 1<br>
<strong>FPE_DIVIDEBYZERO</strong> = 1<br>
<strong>FPE_INVALID</strong> = 8<br>
<strong>FPE_OVERFLOW</strong> = 2<br>
<strong>FPE_UNDERFLOW</strong> = 4<br>
<strong>FR</strong> = FR<br>
<strong>False_</strong> = False<br>
<strong>HOURLY</strong> = 4<br>
<strong>Inf</strong> = inf<br>
<strong>Infinity</strong> = inf<br>
<strong>MAXDIMS</strong> = 32<br>
<strong>MINUTELY</strong> = 5<br>
<strong>MO</strong> = MO<br>
<strong>MONTHLY</strong> = 1<br>
<strong>NAN</strong> = nan<br>
<strong>NINF</strong> = -inf<br>
<strong>NZERO</strong> = -0.0<br>
<strong>NaN</strong> = nan<br>
<strong>PINF</strong> = inf<br>
<strong>PZERO</strong> = 0.0<br>
<strong>RAISE</strong> = 2<br>
<strong>SA</strong> = SA<br>
<strong>SECONDLY</strong> = 6<br>
<strong>SHIFT_DIVIDEBYZERO</strong> = 0<br>
<strong>SHIFT_INVALID</strong> = 9<br>
<strong>SHIFT_OVERFLOW</strong> = 3<br>
<strong>SHIFT_UNDERFLOW</strong> = 6<br>
<strong>SU</strong> = SU<br>
<strong>ScalarType</strong> = (&lt;type 'int'&gt;, &lt;type 'float'&gt;, &lt;type 'complex'&gt;, &lt;type 'long'&gt;, &lt;type 'bool'&gt;, &lt;type 'str'&gt;, &lt;type 'unicode'&gt;, &lt;type 'buffer'&gt;, &lt;type 'numpy.int64'&gt;, &lt;type 'numpy.int16'&gt;, &lt;type 'numpy.uint64'&gt;, &lt;type 'numpy.float32'&gt;, &lt;type 'numpy.void'&gt;, &lt;type 'numpy.int8'&gt;, &lt;type 'numpy.int32'&gt;, &lt;type 'numpy.string_'&gt;, &lt;type 'numpy.object_'&gt;, &lt;type 'numpy.uint64'&gt;, &lt;type 'numpy.uint16'&gt;, &lt;type 'numpy.complex256'&gt;, ...)<br>
<strong>TH</strong> = TH<br>
<strong>TU</strong> = TU<br>
<strong>True_</strong> = True<br>
<strong>UFUNC_BUFSIZE_DEFAULT</strong> = 10000<br>
<strong>UFUNC_PYVALS_NAME</strong> = 'UFUNC_PYVALS'<br>
<strong>WE</strong> = WE<br>
<strong>WEEKLY</strong> = 2<br>
<strong>WRAP</strong> = 1<br>
<strong>YEARLY</strong> = 0<br>
<strong>__version__</strong> = '1.1.0.dev5176'<br>
<strong>absolute</strong> = &lt;ufunc 'absolute'&gt;<br>
<strong>add</strong> = &lt;ufunc 'add'&gt;<br>
<strong>arccos</strong> = &lt;ufunc 'arccos'&gt;<br>
<strong>arccosh</strong> = &lt;ufunc 'arccosh'&gt;<br>
<strong>arcsin</strong> = &lt;ufunc 'arcsin'&gt;<br>
<strong>arcsinh</strong> = &lt;ufunc 'arcsinh'&gt;<br>
<strong>arctan</strong> = &lt;ufunc 'arctan'&gt;<br>
<strong>arctan2</strong> = &lt;ufunc 'arctan2'&gt;<br>
<strong>arctanh</strong> = &lt;ufunc 'arctanh'&gt;<br>
<strong>bitwise_and</strong> = &lt;ufunc 'bitwise_and'&gt;<br>
<strong>bitwise_not</strong> = &lt;ufunc 'invert'&gt;<br>
<strong>bitwise_or</strong> = &lt;ufunc 'bitwise_or'&gt;<br>
<strong>bitwise_xor</strong> = &lt;ufunc 'bitwise_xor'&gt;<br>
<strong>c_</strong> = &lt;numpy.lib.index_tricks.CClass object at 0xc47410&gt;<br>
<strong>cast</strong> = {&lt;type 'numpy.int64'&gt;: &lt;function &lt;lambda&gt; at 0xa... 'numpy.uint8'&gt;: &lt;function &lt;lambda&gt; at 0xa9cc08&gt;}<br>
<strong>ceil</strong> = &lt;ufunc 'ceil'&gt;<br>
<strong>colorbar_doc</strong> = '<font color="#c040c0">\n</font>Add a colorbar to a plot.<font color="#c040c0">\n\n</font>Function signatures ...e, do not use any of the<font color="#c040c0">\n</font>axes properties kwargs.<font color="#c040c0">\n</font>'<br>
<strong>conj</strong> = &lt;ufunc 'conjugate'&gt;<br>
<strong>conjugate</strong> = &lt;ufunc 'conjugate'&gt;<br>
<strong>cos</strong> = &lt;ufunc 'cos'&gt;<br>
<strong>cosh</strong> = &lt;ufunc 'cosh'&gt;<br>
<strong>degrees</strong> = &lt;ufunc 'degrees'&gt;<br>
<strong>divide</strong> = &lt;ufunc 'divide'&gt;<br>
<strong>e</strong> = 2.7182818284590451<br>
<strong>equal</strong> = &lt;ufunc 'equal'&gt;<br>
<strong>exp</strong> = &lt;ufunc 'exp'&gt;<br>
<strong>expm1</strong> = &lt;ufunc 'expm1'&gt;<br>
<strong>fabs</strong> = &lt;ufunc 'fabs'&gt;<br>
<strong>floor</strong> = &lt;ufunc 'floor'&gt;<br>
<strong>floor_divide</strong> = &lt;ufunc 'floor_divide'&gt;<br>
<strong>fmod</strong> = &lt;ufunc 'fmod'&gt;<br>
<strong>frexp</strong> = &lt;ufunc 'frexp'&gt;<br>
<strong>greater</strong> = &lt;ufunc 'greater'&gt;<br>
<strong>greater_equal</strong> = &lt;ufunc 'greater_equal'&gt;<br>
<strong>hypot</strong> = &lt;ufunc 'hypot'&gt;<br>
<strong>index_exp</strong> = &lt;numpy.lib.index_tricks.IndexExpression object at 0xc47510&gt;<br>
<strong>inf</strong> = inf<br>
<strong>infty</strong> = inf<br>
<strong>invert</strong> = &lt;ufunc 'invert'&gt;<br>
<strong>isfinite</strong> = &lt;ufunc 'isfinite'&gt;<br>
<strong>isinf</strong> = &lt;ufunc 'isinf'&gt;<br>
<strong>isnan</strong> = &lt;ufunc 'isnan'&gt;<br>
<strong>ldexp</strong> = &lt;ufunc 'ldexp'&gt;<br>
<strong>left_shift</strong> = &lt;ufunc 'left_shift'&gt;<br>
<strong>less</strong> = &lt;ufunc 'less'&gt;<br>
<strong>less_equal</strong> = &lt;ufunc 'less_equal'&gt;<br>
<strong>little_endian</strong> = True<br>
<strong>log</strong> = &lt;ufunc 'log'&gt;<br>
<strong>log10</strong> = &lt;ufunc 'log10'&gt;<br>
<strong>log1p</strong> = &lt;ufunc 'log1p'&gt;<br>
<strong>logical_and</strong> = &lt;ufunc 'logical_and'&gt;<br>
<strong>logical_not</strong> = &lt;ufunc 'logical_not'&gt;<br>
<strong>logical_or</strong> = &lt;ufunc 'logical_or'&gt;<br>
<strong>logical_xor</strong> = &lt;ufunc 'logical_xor'&gt;<br>
<strong>maximum</strong> = &lt;ufunc 'maximum'&gt;<br>
<strong>mgrid</strong> = &lt;numpy.lib.index_tricks.nd_grid object at 0xc47290&gt;<br>
<strong>minimum</strong> = &lt;ufunc 'minimum'&gt;<br>
<strong>mod</strong> = &lt;ufunc 'remainder'&gt;<br>
<strong>modf</strong> = &lt;ufunc 'modf'&gt;<br>
<strong>multiply</strong> = &lt;ufunc 'multiply'&gt;<br>
<strong>nan</strong> = nan<br>
<strong>nbytes</strong> = {&lt;type 'numpy.int64'&gt;: 8, &lt;type 'numpy.int16'&gt;: ...&lt;type 'numpy.int64'&gt;: 8, &lt;type 'numpy.uint8'&gt;: 1}<br>
<strong>negative</strong> = &lt;ufunc 'negative'&gt;<br>
<strong>newaxis</strong> = None<br>
<strong>not_equal</strong> = &lt;ufunc 'not_equal'&gt;<br>
<strong>ogrid</strong> = &lt;numpy.lib.index_tricks.nd_grid object at 0xc472d0&gt;<br>
<strong>ones_like</strong> = &lt;ufunc 'ones_like'&gt;<br>
<strong>pi</strong> = 3.1415926535897931<br>
<strong>r_</strong> = &lt;numpy.lib.index_tricks.RClass object at 0xc47390&gt;<br>
<strong>radians</strong> = &lt;ufunc 'radians'&gt;<br>
<strong>rcParams</strong> = {'figure.subplot.right': 0.90000000000000002, 'm...persize': 'letter', 'svg.embed_char_paths': True}<br>
<strong>rcParamsDefault</strong> = {'figure.subplot.right': 0.90000000000000002, 'm...persize': 'letter', 'svg.embed_char_paths': True}<br>
<strong>reciprocal</strong> = &lt;ufunc 'reciprocal'&gt;<br>
<strong>remainder</strong> = &lt;ufunc 'remainder'&gt;<br>
<strong>right_shift</strong> = &lt;ufunc 'right_shift'&gt;<br>
<strong>rint</strong> = &lt;ufunc 'rint'&gt;<br>
<strong>s_</strong> = &lt;numpy.lib.index_tricks.IndexExpression object at 0xc47590&gt;<br>
<strong>sctypeDict</strong> = {0: &lt;type 'numpy.bool_'&gt;, 1: &lt;type 'numpy.int8'&gt;, 2: &lt;type 'numpy.uint8'&gt;, 3: &lt;type 'numpy.int16'&gt;, 4: &lt;type 'numpy.uint16'&gt;, 5: &lt;type 'numpy.int32'&gt;, 6: &lt;type 'numpy.uint32'&gt;, 7: &lt;type 'numpy.int64'&gt;, 8: &lt;type 'numpy.uint64'&gt;, 9: &lt;type 'numpy.int64'&gt;, ...}<br>
<strong>sctypeNA</strong> = {'?': 'Bool', 'B': 'UInt8', 'Bool': &lt;type 'numpy.bool_'&gt;, 'Complex128': &lt;type 'numpy.complex256'&gt;, 'Complex32': &lt;type 'numpy.complex64'&gt;, 'Complex64': &lt;type 'numpy.complex128'&gt;, 'D': 'Complex64', 'F': 'Complex32', 'Float128': &lt;type 'numpy.float128'&gt;, 'Float32': &lt;type 'numpy.float32'&gt;, ...}<br>
<strong>sctypes</strong> = {'complex': [&lt;type 'numpy.complex64'&gt;, &lt;type 'numpy.complex128'&gt;, &lt;type 'numpy.complex256'&gt;], 'float': [&lt;type 'numpy.float32'&gt;, &lt;type 'numpy.float64'&gt;, &lt;type 'numpy.float128'&gt;], 'int': [&lt;type 'numpy.int8'&gt;, &lt;type 'numpy.int16'&gt;, &lt;type 'numpy.int32'&gt;, &lt;type 'numpy.int64'&gt;], 'others': [&lt;type 'bool'&gt;, &lt;type 'object'&gt;, &lt;type 'str'&gt;, &lt;type 'unicode'&gt;, &lt;type 'numpy.void'&gt;], 'uint': [&lt;type 'numpy.uint8'&gt;, &lt;type 'numpy.uint16'&gt;, &lt;type 'numpy.uint32'&gt;, &lt;type 'numpy.uint64'&gt;]}<br>
<strong>sign</strong> = &lt;ufunc 'sign'&gt;<br>
<strong>signbit</strong> = &lt;ufunc 'signbit'&gt;<br>
<strong>sin</strong> = &lt;ufunc 'sin'&gt;<br>
<strong>sinh</strong> = &lt;ufunc 'sinh'&gt;<br>
<strong>sqrt</strong> = &lt;ufunc 'sqrt'&gt;<br>
<strong>square</strong> = &lt;ufunc 'square'&gt;<br>
<strong>subtract</strong> = &lt;ufunc 'subtract'&gt;<br>
<strong>tan</strong> = &lt;ufunc 'tan'&gt;<br>
<strong>tanh</strong> = &lt;ufunc 'tanh'&gt;<br>
<strong>true_divide</strong> = &lt;ufunc 'true_divide'&gt;<br>
<strong>typeDict</strong> = {0: &lt;type 'numpy.bool_'&gt;, 1: &lt;type 'numpy.int8'&gt;, 2: &lt;type 'numpy.uint8'&gt;, 3: &lt;type 'numpy.int16'&gt;, 4: &lt;type 'numpy.uint16'&gt;, 5: &lt;type 'numpy.int32'&gt;, 6: &lt;type 'numpy.uint32'&gt;, 7: &lt;type 'numpy.int64'&gt;, 8: &lt;type 'numpy.uint64'&gt;, 9: &lt;type 'numpy.int64'&gt;, ...}<br>
<strong>typeNA</strong> = {'?': 'Bool', 'B': 'UInt8', 'Bool': &lt;type 'numpy.bool_'&gt;, 'Complex128': &lt;type 'numpy.complex256'&gt;, 'Complex32': &lt;type 'numpy.complex64'&gt;, 'Complex64': &lt;type 'numpy.complex128'&gt;, 'D': 'Complex64', 'F': 'Complex32', 'Float128': &lt;type 'numpy.float128'&gt;, 'Float32': &lt;type 'numpy.float32'&gt;, ...}<br>
<strong>typecodes</strong> = {'All': '?bhilqpBHILQPfdgFDGSUVO', 'AllFloat': 'fdgFDG', 'AllInteger': 'bBhHiIlLqQpP', 'Character': 'c', 'Complex': 'FDG', 'Float': 'fdg', 'Integer': 'bhilqp', 'UnsignedInteger': 'BHILQP'}</td></tr></table>
@footer@