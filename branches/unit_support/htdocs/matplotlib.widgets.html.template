@header@
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
<tr bgcolor="#7799ee">
<td valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong><a href="matplotlib.html"><font color="#ffffff">matplotlib</font></a>.widgets</strong></big></big></font></td
><td align=right valign=bottom
><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/usr/lib/python2.4/site-packages/matplotlib/widgets.py">/usr/lib/python2.4/site-packages/matplotlib/widgets.py</a></font></td></tr></table>
    <p><tt>GUI&nbsp;Neutral&nbsp;widgets<br>
&nbsp;<br>
All&nbsp;of&nbsp;these&nbsp;widgets&nbsp;require&nbsp;you&nbsp;to&nbsp;predefine&nbsp;an&nbsp;Axes&nbsp;instance&nbsp;and<br>
pass&nbsp;that&nbsp;as&nbsp;the&nbsp;first&nbsp;arg.&nbsp;&nbsp;matplotlib&nbsp;doesn't&nbsp;try&nbsp;to&nbsp;be&nbsp;too&nbsp;smart&nbsp;in<br>
layout&nbsp;--&nbsp;you&nbsp;have&nbsp;to&nbsp;figure&nbsp;out&nbsp;how&nbsp;wide&nbsp;and&nbsp;tall&nbsp;you&nbsp;want&nbsp;your&nbsp;Axes<br>
to&nbsp;be&nbsp;to&nbsp;accommodate&nbsp;your&nbsp;widget.</tt></p>
<p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#aa55cc">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
    
<tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="thread.html">thread</a><br>
</td><td width="25%" valign=top></td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ee77aa">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
    
<tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl>
<dt><font face="helvetica, arial"><a href="matplotlib.widgets.html#Cursor">Cursor</a>
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.widgets.html#HorizontalSpanSelector">HorizontalSpanSelector</a>
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.widgets.html#Widget">Widget</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.widgets.html#Button">Button</a>
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.widgets.html#CheckButtons">CheckButtons</a>
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.widgets.html#RadioButtons">RadioButtons</a>
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.widgets.html#Slider">Slider</a>
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.widgets.html#SubplotTool">SubplotTool</a>
</font></dt></dl>
</dd>
</dl>
 <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="Button">class <strong>Button</strong></a>(<a href="matplotlib.widgets.html#Widget">Widget</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>A&nbsp;GUI&nbsp;neutral&nbsp;button<br>
&nbsp;<br>
The&nbsp;following&nbsp;attributes&nbsp;are&nbsp;accesible<br>
&nbsp;<br>
&nbsp;&nbsp;ax&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;the&nbsp;Axes&nbsp;the&nbsp;button&nbsp;renders&nbsp;into<br>
&nbsp;&nbsp;label&nbsp;-&nbsp;a&nbsp;text.Text&nbsp;instance<br>
&nbsp;&nbsp;color&nbsp;-&nbsp;the&nbsp;color&nbsp;of&nbsp;the&nbsp;button&nbsp;when&nbsp;not&nbsp;hovering<br>
&nbsp;&nbsp;hovercolor&nbsp;-&nbsp;the&nbsp;color&nbsp;of&nbsp;the&nbsp;button&nbsp;when&nbsp;hovering<br>
&nbsp;<br>
Call&nbsp;"on_clicked"&nbsp;to&nbsp;connect&nbsp;to&nbsp;the&nbsp;button<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="Button-__init__"><strong>__init__</strong></a>(self, ax, label, image<font color="#909090">=None</font>, color<font color="#909090">=0.84999999999999998</font>, hovercolor<font color="#909090">=0.94999999999999996</font>)</dt><dd><tt>ax&nbsp;is&nbsp;the&nbsp;Axes&nbsp;instance&nbsp;the&nbsp;button&nbsp;will&nbsp;be&nbsp;placed&nbsp;into<br>
&nbsp;<br>
label&nbsp;is&nbsp;a&nbsp;string&nbsp;which&nbsp;is&nbsp;the&nbsp;button&nbsp;text<br>
&nbsp;<br>
image&nbsp;if&nbsp;not&nbsp;None,&nbsp;is&nbsp;an&nbsp;image&nbsp;to&nbsp;place&nbsp;in&nbsp;the&nbsp;button&nbsp;--&nbsp;can<br>
&nbsp;&nbsp;be&nbsp;any&nbsp;legal&nbsp;arg&nbsp;to&nbsp;imshow&nbsp;(array,&nbsp;matplotlib&nbsp;Image<br>
&nbsp;&nbsp;instance,&nbsp;or&nbsp;PIL&nbsp;image)<br>
&nbsp;<br>
color&nbsp;is&nbsp;the&nbsp;color&nbsp;of&nbsp;the&nbsp;button&nbsp;when&nbsp;not&nbsp;activated<br>
&nbsp;<br>
hovercolor&nbsp;is&nbsp;the&nbsp;color&nbsp;of&nbsp;the&nbsp;button&nbsp;when&nbsp;the&nbsp;mouse&nbsp;is&nbsp;over<br>
&nbsp;&nbsp;it</tt></dd></dl>

<dl><dt><a name="Button-disconnect"><strong>disconnect</strong></a>(self, cid)</dt><dd><tt>remove&nbsp;the&nbsp;observer&nbsp;with&nbsp;connection&nbsp;id&nbsp;cid</tt></dd></dl>

<dl><dt><a name="Button-on_clicked"><strong>on_clicked</strong></a>(self, func)</dt><dd><tt>When&nbsp;the&nbsp;button&nbsp;is&nbsp;clicked,&nbsp;call&nbsp;this&nbsp;func&nbsp;with&nbsp;event<br>
&nbsp;<br>
A&nbsp;connection&nbsp;id&nbsp;is&nbsp;returned&nbsp;which&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;disconnect</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.widgets.html#Widget">Widget</a>:<br>
<dl><dt><strong>drawon</strong> = True</dl>

<dl><dt><strong>eventson</strong> = True</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="CheckButtons">class <strong>CheckButtons</strong></a>(<a href="matplotlib.widgets.html#Widget">Widget</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>A&nbsp;GUI&nbsp;neutral&nbsp;radio&nbsp;button<br>
&nbsp;<br>
The&nbsp;following&nbsp;attributes&nbsp;are&nbsp;exposed<br>
&nbsp;<br>
&nbsp;ax&nbsp;-&nbsp;the&nbsp;Axes&nbsp;instance&nbsp;the&nbsp;buttons&nbsp;are&nbsp;in<br>
&nbsp;labels&nbsp;-&nbsp;a&nbsp;list&nbsp;of&nbsp;text.Text&nbsp;instances<br>
&nbsp;lines&nbsp;-&nbsp;a&nbsp;list&nbsp;of&nbsp;(line1,&nbsp;line2)&nbsp;tuples&nbsp;for&nbsp;the&nbsp;x's&nbsp;in&nbsp;the&nbsp;check&nbsp;boxes.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;These&nbsp;lines&nbsp;exist&nbsp;for&nbsp;each&nbsp;box,&nbsp;but&nbsp;have&nbsp;set_visible(False)&nbsp;when<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;box&nbsp;is&nbsp;not&nbsp;checked<br>
&nbsp;rectangles&nbsp;-&nbsp;a&nbsp;list&nbsp;of&nbsp;patch.Rectangle&nbsp;instances<br>
&nbsp;<br>
Connect&nbsp;to&nbsp;the&nbsp;<a href="#CheckButtons">CheckButtons</a>&nbsp;with&nbsp;the&nbsp;on_clicked&nbsp;method<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="CheckButtons-__init__"><strong>__init__</strong></a>(self, ax, labels, actives)</dt><dd><tt>Add&nbsp;check&nbsp;buttons&nbsp;to&nbsp;axes.Axes&nbsp;instance&nbsp;ax<br>
&nbsp;<br>
labels&nbsp;is&nbsp;a&nbsp;len(buttons)&nbsp;list&nbsp;of&nbsp;labels&nbsp;as&nbsp;strings<br>
&nbsp;<br>
actives&nbsp;is&nbsp;a&nbsp;len(buttons)&nbsp;list&nbsp;of&nbsp;booleans&nbsp;indicating&nbsp;whether<br>
&nbsp;the&nbsp;button&nbsp;is&nbsp;active</tt></dd></dl>

<dl><dt><a name="CheckButtons-disconnect"><strong>disconnect</strong></a>(self, cid)</dt><dd><tt>remove&nbsp;the&nbsp;observer&nbsp;with&nbsp;connection&nbsp;id&nbsp;cid</tt></dd></dl>

<dl><dt><a name="CheckButtons-on_clicked"><strong>on_clicked</strong></a>(self, func)</dt><dd><tt>When&nbsp;the&nbsp;button&nbsp;is&nbsp;clicked,&nbsp;call&nbsp;this&nbsp;func&nbsp;with&nbsp;button&nbsp;label<br>
&nbsp;<br>
A&nbsp;connection&nbsp;id&nbsp;is&nbsp;returned&nbsp;which&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;disconnect</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.widgets.html#Widget">Widget</a>:<br>
<dl><dt><strong>drawon</strong> = True</dl>

<dl><dt><strong>eventson</strong> = True</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="Cursor">class <strong>Cursor</strong></a></font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>A&nbsp;horizontal&nbsp;and&nbsp;vertical&nbsp;line&nbsp;span&nbsp;the&nbsp;axes&nbsp;that&nbsp;and&nbsp;move&nbsp;with<br>
the&nbsp;pointer.&nbsp;&nbsp;You&nbsp;can&nbsp;turn&nbsp;off&nbsp;the&nbsp;hline&nbsp;or&nbsp;vline&nbsp;spectively&nbsp;with<br>
the&nbsp;attributes<br>
&nbsp;<br>
&nbsp;&nbsp;horizOn&nbsp;=True|False:&nbsp;controls&nbsp;visibility&nbsp;of&nbsp;the&nbsp;horizontal&nbsp;line<br>
&nbsp;&nbsp;vertOn&nbsp;=True|False:&nbsp;controls&nbsp;visibility&nbsp;of&nbsp;the&nbsp;horizontal&nbsp;line&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;<br>
And&nbsp;the&nbsp;visibility&nbsp;of&nbsp;the&nbsp;cursor&nbsp;itself&nbsp;with&nbsp;visible&nbsp;attribute<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="Cursor-__init__"><strong>__init__</strong></a>(self, ax, useblit<font color="#909090">=False</font>, **lineprops)</dt><dd><tt>Add&nbsp;a&nbsp;cursor&nbsp;to&nbsp;ax.&nbsp;&nbsp;If&nbsp;useblit=True,&nbsp;use&nbsp;the&nbsp;backend<br>
dependent&nbsp;blitting&nbsp;features&nbsp;for&nbsp;faster&nbsp;updates&nbsp;(GTKAgg&nbsp;only<br>
now).&nbsp;&nbsp;lineprops&nbsp;is&nbsp;a&nbsp;dictionary&nbsp;of&nbsp;line&nbsp;properties.&nbsp;&nbsp;See<br>
examples/widgets/cursor.py.</tt></dd></dl>

<dl><dt><a name="Cursor-clear"><strong>clear</strong></a>(self, event)</dt><dd><tt>clear&nbsp;the&nbsp;cursor</tt></dd></dl>

<dl><dt><a name="Cursor-onmove"><strong>onmove</strong></a>(self, event)</dt><dd><tt>on&nbsp;mouse&nbsp;motion&nbsp;draw&nbsp;the&nbsp;cursor&nbsp;if&nbsp;visible</tt></dd></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="HorizontalSpanSelector">class <strong>HorizontalSpanSelector</strong></a></font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Select&nbsp;a&nbsp;min/max&nbsp;range&nbsp;of&nbsp;the&nbsp;x&nbsp;axes&nbsp;for&nbsp;a&nbsp;matplotlib&nbsp;Axes<br>
&nbsp;<br>
Example&nbsp;usage:<br>
&nbsp;<br>
&nbsp;&nbsp;ax&nbsp;=&nbsp;subplot(111)<br>
&nbsp;&nbsp;ax.plot(x,y)<br>
&nbsp;<br>
&nbsp;&nbsp;def&nbsp;onselect(xmin,&nbsp;xmax):<br>
&nbsp;&nbsp;print&nbsp;xmin,&nbsp;xmax<br>
&nbsp;&nbsp;span&nbsp;=&nbsp;<a href="#HorizontalSpanSelector">HorizontalSpanSelector</a>(ax,&nbsp;onselect)<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="HorizontalSpanSelector-__init__"><strong>__init__</strong></a>(self, ax, onselect, minspan<font color="#909090">=None</font>, useblit<font color="#909090">=False</font>, rectprops<font color="#909090">=None</font>)</dt><dd><tt>Create&nbsp;a&nbsp;span&nbsp;selector&nbsp;in&nbsp;ax.&nbsp;&nbsp;When&nbsp;a&nbsp;selection&nbsp;is&nbsp;made,&nbsp;clear<br>
the&nbsp;span&nbsp;and&nbsp;call&nbsp;onselect&nbsp;with<br>
&nbsp;<br>
&nbsp;&nbsp;onselect(xmin,&nbsp;xmax)<br>
&nbsp;<br>
and&nbsp;clear&nbsp;the&nbsp;span.<br>
&nbsp;<br>
If&nbsp;minspan&nbsp;is&nbsp;not&nbsp;None,&nbsp;ignore&nbsp;events&nbsp;smaller&nbsp;than&nbsp;minspan<br>
&nbsp;<br>
The&nbsp;span&nbsp;rect&nbsp;is&nbsp;drawn&nbsp;with&nbsp;rectprops;&nbsp;default<br>
&nbsp;&nbsp;rectprops&nbsp;=&nbsp;dict(facecolor='red',&nbsp;alpha=0.5)<br>
&nbsp;<br>
set&nbsp;the&nbsp;visible&nbsp;attribute&nbsp;to&nbsp;False&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;turn&nbsp;off<br>
the&nbsp;functionality&nbsp;of&nbsp;the&nbsp;span&nbsp;selector</tt></dd></dl>

<dl><dt><a name="HorizontalSpanSelector-ignore"><strong>ignore</strong></a>(self, event)</dt><dd><tt>return&nbsp;True&nbsp;if&nbsp;event&nbsp;should&nbsp;be&nbsp;ignored</tt></dd></dl>

<dl><dt><a name="HorizontalSpanSelector-onmove"><strong>onmove</strong></a>(self, event)</dt><dd><tt>on&nbsp;motion&nbsp;notify&nbsp;event</tt></dd></dl>

<dl><dt><a name="HorizontalSpanSelector-press"><strong>press</strong></a>(self, event)</dt><dd><tt>on&nbsp;button&nbsp;press&nbsp;event</tt></dd></dl>

<dl><dt><a name="HorizontalSpanSelector-release"><strong>release</strong></a>(self, event)</dt><dd><tt>on&nbsp;button&nbsp;release&nbsp;event</tt></dd></dl>

<dl><dt><a name="HorizontalSpanSelector-update"><strong>update</strong></a>(self)</dt><dd><tt>draw&nbsp;using&nbsp;newfangled&nbsp;blit&nbsp;or&nbsp;oldfangled&nbsp;draw&nbsp;depending&nbsp;on&nbsp;useblit</tt></dd></dl>

<dl><dt><a name="HorizontalSpanSelector-update_background"><strong>update_background</strong></a>(self, event)</dt><dd><tt>force&nbsp;an&nbsp;update&nbsp;of&nbsp;the&nbsp;background</tt></dd></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="RadioButtons">class <strong>RadioButtons</strong></a>(<a href="matplotlib.widgets.html#Widget">Widget</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>A&nbsp;GUI&nbsp;neutral&nbsp;radio&nbsp;button<br>
&nbsp;<br>
The&nbsp;following&nbsp;attributes&nbsp;are&nbsp;exposed<br>
&nbsp;<br>
&nbsp;ax&nbsp;-&nbsp;the&nbsp;Axes&nbsp;instance&nbsp;the&nbsp;buttons&nbsp;are&nbsp;in<br>
&nbsp;activecolor&nbsp;-&nbsp;the&nbsp;color&nbsp;of&nbsp;the&nbsp;button&nbsp;when&nbsp;clicked<br>
&nbsp;labels&nbsp;-&nbsp;a&nbsp;list&nbsp;of&nbsp;text.Text&nbsp;instances<br>
&nbsp;circles&nbsp;-&nbsp;a&nbsp;list&nbsp;of&nbsp;patch.Circle&nbsp;instances<br>
&nbsp;<br>
Connect&nbsp;to&nbsp;the&nbsp;<a href="#RadioButtons">RadioButtons</a>&nbsp;with&nbsp;the&nbsp;on_clicked&nbsp;method<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="RadioButtons-__init__"><strong>__init__</strong></a>(self, ax, labels, active<font color="#909090">=0</font>, activecolor<font color="#909090">='blue'</font>)</dt><dd><tt>Add&nbsp;radio&nbsp;buttons&nbsp;to&nbsp;axes.Axes&nbsp;instance&nbsp;ax<br>
&nbsp;<br>
labels&nbsp;is&nbsp;a&nbsp;len(buttons)&nbsp;list&nbsp;of&nbsp;labels&nbsp;as&nbsp;strings<br>
&nbsp;<br>
active&nbsp;is&nbsp;the&nbsp;index&nbsp;into&nbsp;labels&nbsp;for&nbsp;the&nbsp;button&nbsp;that&nbsp;is&nbsp;active<br>
&nbsp;<br>
activecolor&nbsp;is&nbsp;the&nbsp;color&nbsp;of&nbsp;the&nbsp;button&nbsp;when&nbsp;clicked</tt></dd></dl>

<dl><dt><a name="RadioButtons-disconnect"><strong>disconnect</strong></a>(self, cid)</dt><dd><tt>remove&nbsp;the&nbsp;observer&nbsp;with&nbsp;connection&nbsp;id&nbsp;cid</tt></dd></dl>

<dl><dt><a name="RadioButtons-on_clicked"><strong>on_clicked</strong></a>(self, func)</dt><dd><tt>When&nbsp;the&nbsp;button&nbsp;is&nbsp;clicked,&nbsp;call&nbsp;this&nbsp;func&nbsp;with&nbsp;button&nbsp;label<br>
&nbsp;<br>
A&nbsp;connection&nbsp;id&nbsp;is&nbsp;returned&nbsp;which&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;disconnect</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.widgets.html#Widget">Widget</a>:<br>
<dl><dt><strong>drawon</strong> = True</dl>

<dl><dt><strong>eventson</strong> = True</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="Slider">class <strong>Slider</strong></a>(<a href="matplotlib.widgets.html#Widget">Widget</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>A&nbsp;slider&nbsp;representing&nbsp;a&nbsp;floating&nbsp;point&nbsp;range<br>
&nbsp;<br>
The&nbsp;following&nbsp;attributes&nbsp;are&nbsp;defined&nbsp;<br>
&nbsp;&nbsp;ax&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;the&nbsp;slider&nbsp;axes.Axes&nbsp;instance<br>
&nbsp;&nbsp;val&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;the&nbsp;current&nbsp;slider&nbsp;value<br>
&nbsp;&nbsp;vline&nbsp;&nbsp;:&nbsp;a&nbsp;Line2D&nbsp;instance&nbsp;representing&nbsp;the&nbsp;initial&nbsp;value<br>
&nbsp;&nbsp;poly&nbsp;&nbsp;&nbsp;:&nbsp;A&nbsp;patch.Polygon&nbsp;instance&nbsp;which&nbsp;is&nbsp;the&nbsp;slider<br>
&nbsp;&nbsp;valfmt&nbsp;:&nbsp;the&nbsp;format&nbsp;string&nbsp;for&nbsp;formatting&nbsp;the&nbsp;slider&nbsp;text<br>
&nbsp;&nbsp;label&nbsp;&nbsp;:&nbsp;a&nbsp;text.Text&nbsp;instance,&nbsp;the&nbsp;slider&nbsp;label<br>
&nbsp;&nbsp;closedmin&nbsp;:&nbsp;whether&nbsp;the&nbsp;slider&nbsp;is&nbsp;closed&nbsp;on&nbsp;the&nbsp;minimum&nbsp;<br>
&nbsp;&nbsp;closedmax&nbsp;:&nbsp;whether&nbsp;the&nbsp;slider&nbsp;is&nbsp;closed&nbsp;on&nbsp;the&nbsp;maximum<br>
&nbsp;&nbsp;slidermin&nbsp;:&nbsp;another&nbsp;slider&nbsp;-&nbsp;if&nbsp;not&nbsp;None,&nbsp;this&nbsp;slider&nbsp;must&nbsp;be&nbsp;&gt;&nbsp;slidermin<br>
&nbsp;&nbsp;slidermax&nbsp;:&nbsp;another&nbsp;slider&nbsp;-&nbsp;if&nbsp;not&nbsp;None,&nbsp;this&nbsp;slider&nbsp;must&nbsp;be&nbsp;&lt;&nbsp;slidermax<br>
&nbsp;&nbsp;dragging&nbsp;:&nbsp;allow&nbsp;for&nbsp;mouse&nbsp;dragging&nbsp;on&nbsp;slider<br>
&nbsp;&nbsp;<br>
Call&nbsp;on_changed&nbsp;to&nbsp;connect&nbsp;to&nbsp;the&nbsp;slider&nbsp;event<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="Slider-__init__"><strong>__init__</strong></a>(self, ax, label, valmin, valmax, valinit<font color="#909090">=0.5</font>, valfmt<font color="#909090">='%1.2f'</font>, closedmin<font color="#909090">=True</font>, closedmax<font color="#909090">=True</font>, slidermin<font color="#909090">=None</font>, slidermax<font color="#909090">=None</font>, dragging<font color="#909090">=True</font>)</dt><dd><tt>Create&nbsp;a&nbsp;slider&nbsp;from&nbsp;valmin&nbsp;to&nbsp;valmax&nbsp;in&nbsp;axes&nbsp;ax;<br>
&nbsp;<br>
valinit&nbsp;-&nbsp;&nbsp;the&nbsp;slider&nbsp;initial&nbsp;position<br>
&nbsp;<br>
label&nbsp;-&nbsp;the&nbsp;slider&nbsp;label&nbsp;<br>
&nbsp;<br>
valfmt&nbsp;-&nbsp;used&nbsp;to&nbsp;format&nbsp;the&nbsp;slider&nbsp;value<br>
&nbsp;<br>
closedmin&nbsp;and&nbsp;closedmax&nbsp;-&nbsp;indicate&nbsp;whether&nbsp;the&nbsp;slider&nbsp;interval&nbsp;is&nbsp;closed<br>
&nbsp;<br>
slidermin&nbsp;and&nbsp;slidermax&nbsp;-&nbsp;be&nbsp;used&nbsp;to&nbsp;contrain&nbsp;the&nbsp;value&nbsp;of<br>
&nbsp;&nbsp;this&nbsp;slider&nbsp;to&nbsp;the&nbsp;values&nbsp;of&nbsp;other&nbsp;sliders.</tt></dd></dl>

<dl><dt><a name="Slider-disconnect"><strong>disconnect</strong></a>(self, cid)</dt><dd><tt>remove&nbsp;the&nbsp;observer&nbsp;with&nbsp;connection&nbsp;id&nbsp;cid</tt></dd></dl>

<dl><dt><a name="Slider-on_changed"><strong>on_changed</strong></a>(self, func)</dt><dd><tt>When&nbsp;the&nbsp;slider&nbsp;valud&nbsp;is&nbsp;changed,&nbsp;call&nbsp;this&nbsp;func&nbsp;with&nbsp;the&nbsp;new<br>
slider&nbsp;position<br>
&nbsp;<br>
A&nbsp;connection&nbsp;id&nbsp;is&nbsp;returned&nbsp;which&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;disconnect</tt></dd></dl>

<dl><dt><a name="Slider-reset"><strong>reset</strong></a>(self)</dt><dd><tt>reset&nbsp;the&nbsp;slider&nbsp;to&nbsp;the&nbsp;initial&nbsp;value&nbsp;if&nbsp;needed</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.widgets.html#Widget">Widget</a>:<br>
<dl><dt><strong>drawon</strong> = True</dl>

<dl><dt><strong>eventson</strong> = True</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="SubplotTool">class <strong>SubplotTool</strong></a>(<a href="matplotlib.widgets.html#Widget">Widget</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>A&nbsp;tool&nbsp;to&nbsp;adjust&nbsp;to&nbsp;subplot&nbsp;params&nbsp;of&nbsp;fig<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="SubplotTool-__init__"><strong>__init__</strong></a>(self, targetfig, toolfig)</dt><dd><tt>targetfig&nbsp;is&nbsp;the&nbsp;figure&nbsp;to&nbsp;adjust<br>
&nbsp;<br>
toolfig&nbsp;is&nbsp;the&nbsp;figure&nbsp;to&nbsp;embed&nbsp;the&nbsp;the&nbsp;subplot&nbsp;tool&nbsp;into.&nbsp;&nbsp;If<br>
None,&nbsp;a&nbsp;default&nbsp;pylab&nbsp;figure&nbsp;will&nbsp;be&nbsp;created.&nbsp;&nbsp;If&nbsp;you&nbsp;are<br>
using&nbsp;this&nbsp;from&nbsp;the&nbsp;GUI</tt></dd></dl>

<dl><dt><a name="SubplotTool-funcbottom"><strong>funcbottom</strong></a>(self, val)</dt></dl>

<dl><dt><a name="SubplotTool-funchspace"><strong>funchspace</strong></a>(self, val)</dt></dl>

<dl><dt><a name="SubplotTool-funcleft"><strong>funcleft</strong></a>(self, val)</dt></dl>

<dl><dt><a name="SubplotTool-funcright"><strong>funcright</strong></a>(self, val)</dt></dl>

<dl><dt><a name="SubplotTool-functop"><strong>functop</strong></a>(self, val)</dt></dl>

<dl><dt><a name="SubplotTool-funcwspace"><strong>funcwspace</strong></a>(self, val)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.widgets.html#Widget">Widget</a>:<br>
<dl><dt><strong>drawon</strong> = True</dl>

<dl><dt><strong>eventson</strong> = True</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="Widget">class <strong>Widget</strong></a></font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>OK,&nbsp;I&nbsp;couldn't&nbsp;resist;&nbsp;abstract&nbsp;base&nbsp;class&nbsp;for&nbsp;mpl&nbsp;GUI&nbsp;neutral<br>
widgets<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Data and other attributes defined here:<br>
<dl><dt><strong>drawon</strong> = True</dl>

<dl><dt><strong>eventson</strong> = True</dl>

</td></tr></table></td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#eeaa77">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Functions</strong></big></font></td></tr>
    
<tr><td bgcolor="#eeaa77"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl><dt><a name="-array"><strong>array</strong></a>(...)</dt><dd><tt><a href="#-array">array</a>(sequence,&nbsp;typecode=None,&nbsp;copy=1,&nbsp;savespace=0)&nbsp;will&nbsp;return&nbsp;a&nbsp;new&nbsp;array&nbsp;formed&nbsp;from&nbsp;the&nbsp;given&nbsp;(potentially&nbsp;nested)&nbsp;sequence&nbsp;with&nbsp;type&nbsp;given&nbsp;by&nbsp;typecode.&nbsp;&nbsp;If&nbsp;no&nbsp;typecode&nbsp;is&nbsp;given,&nbsp;then&nbsp;the&nbsp;type&nbsp;will&nbsp;be&nbsp;determined&nbsp;as&nbsp;the&nbsp;minimum&nbsp;type&nbsp;required&nbsp;to&nbsp;hold&nbsp;the&nbsp;objects&nbsp;in&nbsp;sequence.&nbsp;&nbsp;If&nbsp;copy&nbsp;is&nbsp;zero&nbsp;and&nbsp;sequence&nbsp;is&nbsp;already&nbsp;an&nbsp;array,&nbsp;a&nbsp;reference&nbsp;will&nbsp;be&nbsp;returned.&nbsp;&nbsp;If&nbsp;savespace&nbsp;is&nbsp;nonzero,&nbsp;the&nbsp;new&nbsp;array&nbsp;will&nbsp;maintain&nbsp;its&nbsp;precision&nbsp;in&nbsp;operations.</tt></dd></dl>
</td></tr></table>
@footer@