@header@
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
<tr bgcolor="#7799ee">
<td valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong><a href="matplotlib.html"><font color="#ffffff">matplotlib</font></a>.<a href="matplotlib.backends.html"><font color="#ffffff">backends</font></a>.backend_template</strong></big></big></font></td
><td align=right valign=bottom
><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/home/jdhunter/dev/lib64/python2.5/site-packages/matplotlib/backends/backend_template.py">/home/jdhunter/dev/lib64/python2.5/site-packages/matplotlib/backends/backend_template.py</a></font></td></tr></table>
    <p><tt>This&nbsp;is&nbsp;a&nbsp;fully&nbsp;functional&nbsp;do&nbsp;nothing&nbsp;backend&nbsp;to&nbsp;provide&nbsp;a&nbsp;template&nbsp;to<br>
backend&nbsp;writers.&nbsp;&nbsp;It&nbsp;is&nbsp;fully&nbsp;functional&nbsp;in&nbsp;that&nbsp;you&nbsp;can&nbsp;select&nbsp;it&nbsp;as<br>
a&nbsp;backend&nbsp;with<br>
&nbsp;<br>
&nbsp;&nbsp;import&nbsp;matplotlib<br>
&nbsp;&nbsp;matplotlib.use('Template')<br>
&nbsp;<br>
and&nbsp;your&nbsp;matplotlib&nbsp;scripts&nbsp;will&nbsp;(should!)&nbsp;run&nbsp;without&nbsp;error,&nbsp;though<br>
no&nbsp;output&nbsp;is&nbsp;produced.&nbsp;&nbsp;This&nbsp;provides&nbsp;a&nbsp;nice&nbsp;starting&nbsp;point&nbsp;for<br>
backend&nbsp;writers&nbsp;because&nbsp;you&nbsp;can&nbsp;selectively&nbsp;implement&nbsp;methods<br>
(draw_rectangle,&nbsp;draw_lines,&nbsp;etc...)&nbsp;and&nbsp;slowly&nbsp;see&nbsp;your&nbsp;figure&nbsp;come<br>
to&nbsp;life&nbsp;w/o&nbsp;having&nbsp;to&nbsp;have&nbsp;a&nbsp;full&nbsp;blown&nbsp;implementation&nbsp;before&nbsp;getting<br>
any&nbsp;results.<br>
&nbsp;<br>
Copy&nbsp;this&nbsp;to&nbsp;backend_xxx.py&nbsp;and&nbsp;replace&nbsp;all&nbsp;instances&nbsp;of&nbsp;'template'<br>
with&nbsp;'xxx'.&nbsp;&nbsp;Then&nbsp;implement&nbsp;the&nbsp;class&nbsp;methods&nbsp;and&nbsp;functions&nbsp;below,&nbsp;and<br>
add&nbsp;'xxx'&nbsp;to&nbsp;the&nbsp;switchyard&nbsp;in&nbsp;matplotlib/backends/__init__.py&nbsp;and<br>
'xxx'&nbsp;to&nbsp;the&nbsp;backends&nbsp;list&nbsp;in&nbsp;the&nbsp;validate_backend&nbsp;methon&nbsp;in<br>
matplotlib/__init__.py&nbsp;and&nbsp;you're&nbsp;off.&nbsp;&nbsp;You&nbsp;can&nbsp;use&nbsp;your&nbsp;backend&nbsp;with<br>
&nbsp;<br>
&nbsp;&nbsp;import&nbsp;matplotlib<br>
&nbsp;&nbsp;matplotlib.use('xxx')<br>
&nbsp;&nbsp;from&nbsp;pylab&nbsp;import&nbsp;*<br>
&nbsp;&nbsp;plot([1,2,3])<br>
&nbsp;&nbsp;<a href="#-show">show</a>()<br>
&nbsp;<br>
The&nbsp;files&nbsp;that&nbsp;are&nbsp;most&nbsp;relevant&nbsp;to&nbsp;backend_writers&nbsp;are<br>
&nbsp;<br>
&nbsp;&nbsp;matplotlib/backends/backend_your_backend.py<br>
&nbsp;&nbsp;matplotlib/backend_bases.py<br>
&nbsp;&nbsp;matplotlib/backends/__init__.py<br>
&nbsp;&nbsp;matplotlib/__init__.py<br>
&nbsp;&nbsp;matplotlib/_pylab_helpers.py<br>
&nbsp;<br>
Naming&nbsp;Conventions<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;classes&nbsp;Upper&nbsp;or&nbsp;MixedUpperCase<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;varables&nbsp;lower&nbsp;or&nbsp;lowerUpper<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;functions&nbsp;lower&nbsp;or&nbsp;underscore_separated</tt></p>
<p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#aa55cc">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
    
<tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="matplotlib.html">matplotlib</a><br>
</td><td width="25%" valign=top></td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ee77aa">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
    
<tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backend_bases.html#FigureCanvasBase">matplotlib.backend_bases.FigureCanvasBase</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_template.html#FigureCanvasTemplate">FigureCanvasTemplate</a>
</font></dt></dl>
</dd>
<dt><font face="helvetica, arial"><a href="matplotlib.backend_bases.html#FigureManagerBase">matplotlib.backend_bases.FigureManagerBase</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_template.html#FigureManagerTemplate">FigureManagerTemplate</a>
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_template.html#FigureManagerTemplate">FigureManagerTemplate</a>
</font></dt></dl>
</dd>
<dt><font face="helvetica, arial"><a href="matplotlib.backend_bases.html#GraphicsContextBase">matplotlib.backend_bases.GraphicsContextBase</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_template.html#GraphicsContextTemplate">GraphicsContextTemplate</a>
</font></dt></dl>
</dd>
<dt><font face="helvetica, arial"><a href="matplotlib.backend_bases.html#RendererBase">matplotlib.backend_bases.RendererBase</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_template.html#RendererTemplate">RendererTemplate</a>
</font></dt></dl>
</dd>
</dl>
 <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="FigureCanvasTemplate">class <strong>FigureCanvasTemplate</strong></a>(<a href="matplotlib.backend_bases.html#FigureCanvasBase">matplotlib.backend_bases.FigureCanvasBase</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>The&nbsp;canvas&nbsp;the&nbsp;figure&nbsp;renders&nbsp;into.&nbsp;&nbsp;Calls&nbsp;the&nbsp;draw&nbsp;and&nbsp;print&nbsp;fig<br>
methods,&nbsp;creates&nbsp;the&nbsp;renderers,&nbsp;etc...<br>
&nbsp;<br>
Public&nbsp;attribute<br>
&nbsp;<br>
&nbsp;&nbsp;figure&nbsp;-&nbsp;A&nbsp;Figure&nbsp;instance<br>
&nbsp;<br>
Note&nbsp;GUI&nbsp;templates&nbsp;will&nbsp;want&nbsp;to&nbsp;connect&nbsp;events&nbsp;for&nbsp;button&nbsp;presses,<br>
mouse&nbsp;movements&nbsp;and&nbsp;key&nbsp;presses&nbsp;to&nbsp;functions&nbsp;that&nbsp;call&nbsp;the&nbsp;base<br>
class&nbsp;methods&nbsp;button_press_event,&nbsp;button_release_event,<br>
motion_notify_event,&nbsp;key_press_event,&nbsp;and&nbsp;key_release_event.&nbsp;&nbsp;See,<br>
eg&nbsp;backend_gtk.py,&nbsp;backend_wx.py&nbsp;and&nbsp;backend_tkagg.py<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="FigureCanvasTemplate-draw"><strong>draw</strong></a>(self)</dt><dd><tt>Draw&nbsp;the&nbsp;figure&nbsp;using&nbsp;the&nbsp;renderer</tt></dd></dl>

<dl><dt><a name="FigureCanvasTemplate-get_default_filetype"><strong>get_default_filetype</strong></a>(self)</dt></dl>

<dl><dt><a name="FigureCanvasTemplate-print_foo"><strong>print_foo</strong></a>(self, filename, *args, **kwargs)</dt><dd><tt>Write&nbsp;out&nbsp;format&nbsp;foo.&nbsp;&nbsp;The&nbsp;dpi,&nbsp;facecolor&nbsp;and&nbsp;edgecolor&nbsp;are&nbsp;restored<br>
to&nbsp;their&nbsp;original&nbsp;values&nbsp;after&nbsp;this&nbsp;call,&nbsp;so&nbsp;you&nbsp;don't&nbsp;need&nbsp;to<br>
save&nbsp;and&nbsp;restore&nbsp;them.</tt></dd></dl>

<hr>
Data and other attributes defined here:<br>
<dl><dt><strong>filetypes</strong> = {'emf': 'Enhanced Metafile', 'eps': 'Encapsulated Postscript', 'foo': 'My magic Foo format', 'pdf': 'Portable Document Format', 'png': 'Portable Network Graphics', 'ps': 'Postscript', 'raw': 'Raw RGBA bitmap', 'rgba': 'Raw RGBA bitmap', 'svg': 'Scalable Vector Graphics', 'svgz': 'Scalable Vector Graphics'}</dl>

<hr>
Methods inherited from <a href="matplotlib.backend_bases.html#FigureCanvasBase">matplotlib.backend_bases.FigureCanvasBase</a>:<br>
<dl><dt><a name="FigureCanvasTemplate-__init__"><strong>__init__</strong></a>(self, figure)</dt></dl>

<dl><dt><a name="FigureCanvasTemplate-blit"><strong>blit</strong></a>(self, bbox<font color="#909090">=None</font>)</dt><dd><tt>blit&nbsp;the&nbsp;canvas&nbsp;in&nbsp;bbox&nbsp;(default&nbsp;entire&nbsp;canvas)</tt></dd></dl>

<dl><dt><a name="FigureCanvasTemplate-button_press_event"><strong>button_press_event</strong></a>(self, x, y, button, guiEvent<font color="#909090">=None</font>)</dt><dd><tt>Backend&nbsp;derived&nbsp;classes&nbsp;should&nbsp;call&nbsp;this&nbsp;function&nbsp;on&nbsp;any&nbsp;mouse<br>
button&nbsp;press.&nbsp;&nbsp;x,y&nbsp;are&nbsp;the&nbsp;canvas&nbsp;coords:&nbsp;0,0&nbsp;is&nbsp;lower,&nbsp;left.<br>
button&nbsp;and&nbsp;key&nbsp;are&nbsp;as&nbsp;defined&nbsp;in&nbsp;MouseEvent</tt></dd></dl>

<dl><dt><a name="FigureCanvasTemplate-button_release_event"><strong>button_release_event</strong></a>(self, x, y, button, guiEvent<font color="#909090">=None</font>)</dt><dd><tt>Backend&nbsp;derived&nbsp;classes&nbsp;should&nbsp;call&nbsp;this&nbsp;function&nbsp;on&nbsp;any&nbsp;mouse<br>
button&nbsp;release.&nbsp;&nbsp;x,y&nbsp;are&nbsp;the&nbsp;canvas&nbsp;coords:&nbsp;0,0&nbsp;is&nbsp;lower,&nbsp;left.<br>
button&nbsp;and&nbsp;key&nbsp;are&nbsp;as&nbsp;defined&nbsp;in&nbsp;MouseEvent</tt></dd></dl>

<dl><dt><a name="FigureCanvasTemplate-draw_cursor"><strong>draw_cursor</strong></a>(self, event)</dt><dd><tt>Draw&nbsp;a&nbsp;cursor&nbsp;in&nbsp;the&nbsp;event.axes&nbsp;if&nbsp;inaxes&nbsp;is&nbsp;not&nbsp;None.&nbsp;&nbsp;Use<br>
native&nbsp;GUI&nbsp;drawing&nbsp;for&nbsp;efficiency&nbsp;if&nbsp;possible</tt></dd></dl>

<dl><dt><a name="FigureCanvasTemplate-draw_event"><strong>draw_event</strong></a>(self, renderer)</dt></dl>

<dl><dt><a name="FigureCanvasTemplate-draw_idle"><strong>draw_idle</strong></a>(self, *args, **kwargs)</dt><dd><tt>draw&nbsp;only&nbsp;if&nbsp;idle;&nbsp;defaults&nbsp;to&nbsp;draw&nbsp;but&nbsp;backends&nbsp;can&nbsp;overrride</tt></dd></dl>

<dl><dt><a name="FigureCanvasTemplate-flush_events"><strong>flush_events</strong></a>(self)</dt><dd><tt>Flush&nbsp;the&nbsp;GUI&nbsp;events&nbsp;for&nbsp;the&nbsp;figure.&nbsp;Implemented&nbsp;only&nbsp;for<br>
backends&nbsp;with&nbsp;GUIs.</tt></dd></dl>

<dl><dt><a name="FigureCanvasTemplate-get_supported_filetypes"><strong>get_supported_filetypes</strong></a>(self)</dt></dl>

<dl><dt><a name="FigureCanvasTemplate-get_supported_filetypes_grouped"><strong>get_supported_filetypes_grouped</strong></a>(self)</dt></dl>

<dl><dt><a name="FigureCanvasTemplate-get_width_height"><strong>get_width_height</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;figure&nbsp;width&nbsp;and&nbsp;height&nbsp;in&nbsp;points&nbsp;or&nbsp;pixels<br>
(depending&nbsp;on&nbsp;the&nbsp;backend),&nbsp;truncated&nbsp;to&nbsp;integers</tt></dd></dl>

<dl><dt><a name="FigureCanvasTemplate-key_press_event"><strong>key_press_event</strong></a>(self, key, guiEvent<font color="#909090">=None</font>)</dt></dl>

<dl><dt><a name="FigureCanvasTemplate-key_release_event"><strong>key_release_event</strong></a>(self, key, guiEvent<font color="#909090">=None</font>)</dt></dl>

<dl><dt><a name="FigureCanvasTemplate-motion_notify_event"><strong>motion_notify_event</strong></a>(self, x, y, guiEvent<font color="#909090">=None</font>)</dt><dd><tt>Backend&nbsp;derived&nbsp;classes&nbsp;should&nbsp;call&nbsp;this&nbsp;function&nbsp;on&nbsp;any<br>
motion-notify-event.&nbsp;x,y&nbsp;are&nbsp;the&nbsp;canvas&nbsp;coords:&nbsp;0,0&nbsp;is&nbsp;lower,&nbsp;left.<br>
button&nbsp;and&nbsp;key&nbsp;are&nbsp;as&nbsp;defined&nbsp;in&nbsp;MouseEvent</tt></dd></dl>

<dl><dt><a name="FigureCanvasTemplate-mpl_connect"><strong>mpl_connect</strong></a>(self, s, func)</dt><dd><tt>Connect&nbsp;event&nbsp;with&nbsp;string&nbsp;s&nbsp;to&nbsp;func.&nbsp;&nbsp;The&nbsp;signature&nbsp;of&nbsp;func&nbsp;is<br>
&nbsp;<br>
&nbsp;&nbsp;def&nbsp;func(event)<br>
&nbsp;<br>
where&nbsp;event&nbsp;is&nbsp;a&nbsp;MplEvent.&nbsp;&nbsp;The&nbsp;following&nbsp;events&nbsp;are&nbsp;recognized<br>
&nbsp;<br>
'resize_event',<br>
'draw_event',<br>
'key_press_event',<br>
'key_release_event',<br>
'button_press_event',<br>
'button_release_event',<br>
'scroll_event',<br>
'motion_notify_event',<br>
'pick_event',<br>
&nbsp;<br>
&nbsp;<br>
For&nbsp;the&nbsp;three&nbsp;events&nbsp;above,&nbsp;if&nbsp;the&nbsp;mouse&nbsp;is&nbsp;over&nbsp;the&nbsp;axes,<br>
the&nbsp;variable&nbsp;event.inaxes&nbsp;will&nbsp;be&nbsp;set&nbsp;to&nbsp;the&nbsp;axes&nbsp;it&nbsp;is&nbsp;over,<br>
and&nbsp;additionally,&nbsp;the&nbsp;variables&nbsp;event.xdata&nbsp;and&nbsp;event.ydata<br>
will&nbsp;be&nbsp;defined.&nbsp;&nbsp;This&nbsp;is&nbsp;the&nbsp;mouse&nbsp;location&nbsp;in&nbsp;data&nbsp;coords.<br>
See&nbsp;backend_bases.MplEvent.<br>
&nbsp;<br>
return&nbsp;value&nbsp;is&nbsp;a&nbsp;connection&nbsp;id&nbsp;that&nbsp;can&nbsp;be&nbsp;used&nbsp;with<br>
mpl_disconnect</tt></dd></dl>

<dl><dt><a name="FigureCanvasTemplate-mpl_disconnect"><strong>mpl_disconnect</strong></a>(self, cid)</dt><dd><tt>disconnect&nbsp;callback&nbsp;id&nbsp;cid</tt></dd></dl>

<dl><dt><a name="FigureCanvasTemplate-onHilite"><strong>onHilite</strong></a>(self, ev)</dt><dd><tt>Mouse&nbsp;event&nbsp;processor&nbsp;which&nbsp;highlights&nbsp;the&nbsp;artists<br>
under&nbsp;the&nbsp;cursor.&nbsp;&nbsp;Connect&nbsp;this&nbsp;to&nbsp;the&nbsp;motion_notify_event<br>
using&nbsp;canvas.<a href="#FigureCanvasTemplate-mpl_connect">mpl_connect</a>('motion_notify_event',canvas.onHilite)</tt></dd></dl>

<dl><dt><a name="FigureCanvasTemplate-onRemove"><strong>onRemove</strong></a>(self, ev)</dt><dd><tt>Mouse&nbsp;event&nbsp;processor&nbsp;which&nbsp;removes&nbsp;the&nbsp;top&nbsp;artist<br>
under&nbsp;the&nbsp;cursor.&nbsp;&nbsp;Connect&nbsp;this&nbsp;to&nbsp;the&nbsp;mouse_press_event<br>
using&nbsp;canvas.<a href="#FigureCanvasTemplate-mpl_connect">mpl_connect</a>('mouse_press_event',canvas.onRemove)</tt></dd></dl>

<dl><dt><a name="FigureCanvasTemplate-pick"><strong>pick</strong></a>(self, mouseevent)</dt></dl>

<dl><dt><a name="FigureCanvasTemplate-pick_event"><strong>pick_event</strong></a>(self, mouseevent, artist, **kwargs)</dt><dd><tt>This&nbsp;method&nbsp;will&nbsp;be&nbsp;called&nbsp;by&nbsp;artists&nbsp;who&nbsp;are&nbsp;picked&nbsp;and&nbsp;will<br>
fire&nbsp;off&nbsp;PickEvent&nbsp;callbacks&nbsp;registered&nbsp;listeners</tt></dd></dl>

<dl><dt><a name="FigureCanvasTemplate-print_bmp"><strong>print_bmp</strong></a> = print_raw(self, *args, **kwargs)</dt></dl>

<dl><dt><a name="FigureCanvasTemplate-print_emf"><strong>print_emf</strong></a>(self, *args, **kwargs)</dt></dl>

<dl><dt><a name="FigureCanvasTemplate-print_eps"><strong>print_eps</strong></a>(self, *args, **kwargs)</dt></dl>

<dl><dt><a name="FigureCanvasTemplate-print_figure"><strong>print_figure</strong></a>(self, filename, dpi<font color="#909090">=None</font>, facecolor<font color="#909090">='w'</font>, edgecolor<font color="#909090">='w'</font>, orientation<font color="#909090">='portrait'</font>, format<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>Render&nbsp;the&nbsp;figure&nbsp;to&nbsp;hardcopy.&nbsp;Set&nbsp;the&nbsp;figure&nbsp;patch&nbsp;face&nbsp;and&nbsp;edge<br>
colors.&nbsp;&nbsp;This&nbsp;is&nbsp;useful&nbsp;because&nbsp;some&nbsp;of&nbsp;the&nbsp;GUIs&nbsp;have&nbsp;a&nbsp;gray&nbsp;figure<br>
face&nbsp;color&nbsp;background&nbsp;and&nbsp;you'll&nbsp;probably&nbsp;want&nbsp;to&nbsp;override&nbsp;this&nbsp;on<br>
hardcopy.<br>
&nbsp;<br>
filename&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;can&nbsp;also&nbsp;be&nbsp;a&nbsp;file&nbsp;object&nbsp;on&nbsp;image&nbsp;backends<br>
orientation&nbsp;-&nbsp;only&nbsp;currently&nbsp;applies&nbsp;to&nbsp;PostScript&nbsp;printing.<br>
dpi&nbsp;-&nbsp;the&nbsp;dots&nbsp;per&nbsp;inch&nbsp;to&nbsp;save&nbsp;the&nbsp;figure&nbsp;in;&nbsp;if&nbsp;None,&nbsp;use&nbsp;savefig.dpi<br>
facecolor&nbsp;-&nbsp;the&nbsp;facecolor&nbsp;of&nbsp;the&nbsp;figure<br>
edgecolor&nbsp;-&nbsp;the&nbsp;edgecolor&nbsp;of&nbsp;the&nbsp;figure<br>
orientation&nbsp;-&nbsp;'landscape'&nbsp;|&nbsp;'portrait'&nbsp;(not&nbsp;supported&nbsp;on&nbsp;all&nbsp;backends)<br>
format&nbsp;-&nbsp;when&nbsp;set,&nbsp;forcibly&nbsp;set&nbsp;the&nbsp;file&nbsp;format&nbsp;to&nbsp;save&nbsp;to</tt></dd></dl>

<dl><dt><a name="FigureCanvasTemplate-print_pdf"><strong>print_pdf</strong></a>(self, *args, **kwargs)</dt></dl>

<dl><dt><a name="FigureCanvasTemplate-print_png"><strong>print_png</strong></a>(self, *args, **kwargs)</dt></dl>

<dl><dt><a name="FigureCanvasTemplate-print_ps"><strong>print_ps</strong></a>(self, *args, **kwargs)</dt></dl>

<dl><dt><a name="FigureCanvasTemplate-print_raw"><strong>print_raw</strong></a>(self, *args, **kwargs)</dt></dl>

<dl><dt><a name="FigureCanvasTemplate-print_rgb"><strong>print_rgb</strong></a> = print_raw(self, *args, **kwargs)</dt></dl>

<dl><dt><a name="FigureCanvasTemplate-print_svg"><strong>print_svg</strong></a>(self, *args, **kwargs)</dt></dl>

<dl><dt><a name="FigureCanvasTemplate-print_svgz"><strong>print_svgz</strong></a>(self, *args, **kwargs)</dt></dl>

<dl><dt><a name="FigureCanvasTemplate-resize"><strong>resize</strong></a>(self, w, h)</dt><dd><tt>set&nbsp;the&nbsp;canvas&nbsp;size&nbsp;in&nbsp;pixels</tt></dd></dl>

<dl><dt><a name="FigureCanvasTemplate-resize_event"><strong>resize_event</strong></a>(self)</dt></dl>

<dl><dt><a name="FigureCanvasTemplate-scroll_event"><strong>scroll_event</strong></a>(self, x, y, button, guiEvent<font color="#909090">=None</font>)</dt><dd><tt>Backend&nbsp;derived&nbsp;classes&nbsp;should&nbsp;call&nbsp;this&nbsp;function&nbsp;on&nbsp;any<br>
scroll&nbsp;wheel&nbsp;event.&nbsp;&nbsp;x,y&nbsp;are&nbsp;the&nbsp;canvas&nbsp;coords:&nbsp;0,0&nbsp;is&nbsp;lower,<br>
left.&nbsp;&nbsp;button&nbsp;and&nbsp;key&nbsp;are&nbsp;as&nbsp;defined&nbsp;in&nbsp;MouseEvent</tt></dd></dl>

<dl><dt><a name="FigureCanvasTemplate-set_window_title"><strong>set_window_title</strong></a>(self, title)</dt><dd><tt>Set&nbsp;the&nbsp;title&nbsp;text&nbsp;of&nbsp;the&nbsp;window&nbsp;containing&nbsp;the&nbsp;figure.&nbsp;&nbsp;Note&nbsp;that<br>
this&nbsp;has&nbsp;no&nbsp;effect&nbsp;if&nbsp;there&nbsp;is&nbsp;no&nbsp;window&nbsp;(eg,&nbsp;a&nbsp;PS&nbsp;backend).</tt></dd></dl>

<dl><dt><a name="FigureCanvasTemplate-switch_backends"><strong>switch_backends</strong></a>(self, FigureCanvasClass)</dt><dd><tt>instantiate&nbsp;an&nbsp;instance&nbsp;of&nbsp;FigureCanvasClass<br>
&nbsp;<br>
This&nbsp;is&nbsp;used&nbsp;for&nbsp;backend&nbsp;switching,&nbsp;eg,&nbsp;to&nbsp;instantiate&nbsp;a<br>
FigureCanvasPS&nbsp;from&nbsp;a&nbsp;FigureCanvasGTK.&nbsp;&nbsp;Note,&nbsp;deep&nbsp;copying&nbsp;is<br>
not&nbsp;done,&nbsp;so&nbsp;any&nbsp;changes&nbsp;to&nbsp;one&nbsp;of&nbsp;the&nbsp;instances&nbsp;(eg,&nbsp;setting<br>
figure&nbsp;size&nbsp;or&nbsp;line&nbsp;props),&nbsp;will&nbsp;be&nbsp;reflected&nbsp;in&nbsp;the&nbsp;other</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.backend_bases.html#FigureCanvasBase">matplotlib.backend_bases.FigureCanvasBase</a>:<br>
<dl><dt><strong>events</strong> = ('resize_event', 'draw_event', 'key_press_event', 'key_release_event', 'button_press_event', 'button_release_event', 'scroll_event', 'motion_notify_event', 'pick_event')</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><strong>FigureManager</strong> = <a name="FigureManager">class FigureManagerTemplate</a>(<a href="matplotlib.backend_bases.html#FigureManagerBase">matplotlib.backend_bases.FigureManagerBase</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Wrap&nbsp;everything&nbsp;up&nbsp;into&nbsp;a&nbsp;window&nbsp;for&nbsp;the&nbsp;pylab&nbsp;interface<br>
&nbsp;<br>
For&nbsp;non&nbsp;interactive&nbsp;backends,&nbsp;the&nbsp;base&nbsp;class&nbsp;does&nbsp;all&nbsp;the&nbsp;work<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods inherited from <a href="matplotlib.backend_bases.html#FigureManagerBase">matplotlib.backend_bases.FigureManagerBase</a>:<br>
<dl><dt><a name="FigureManagerTemplate-__init__"><strong>__init__</strong></a>(self, canvas, num)</dt></dl>

<dl><dt><a name="FigureManagerTemplate-destroy"><strong>destroy</strong></a>(self)</dt></dl>

<dl><dt><a name="FigureManagerTemplate-full_screen_toggle"><strong>full_screen_toggle</strong></a>(self)</dt></dl>

<dl><dt><a name="FigureManagerTemplate-key_press"><strong>key_press</strong></a>(self, event)</dt></dl>

<dl><dt><a name="FigureManagerTemplate-resize"><strong>resize</strong></a>(self, w, h)</dt><dd><tt>For&nbsp;gui&nbsp;backends:&nbsp;resize&nbsp;window&nbsp;in&nbsp;pixels</tt></dd></dl>

<dl><dt><a name="FigureManagerTemplate-set_window_title"><strong>set_window_title</strong></a>(self, title)</dt><dd><tt>Set&nbsp;the&nbsp;title&nbsp;text&nbsp;of&nbsp;the&nbsp;window&nbsp;containing&nbsp;the&nbsp;figure.&nbsp;&nbsp;Note&nbsp;that<br>
this&nbsp;has&nbsp;no&nbsp;effect&nbsp;if&nbsp;there&nbsp;is&nbsp;no&nbsp;window&nbsp;(eg,&nbsp;a&nbsp;PS&nbsp;backend).</tt></dd></dl>

<dl><dt><a name="FigureManagerTemplate-show_popup"><strong>show_popup</strong></a>(self, msg)</dt><dd><tt>Display&nbsp;message&nbsp;in&nbsp;a&nbsp;popup&nbsp;--&nbsp;GUI&nbsp;only</tt></dd></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="FigureManagerTemplate">class <strong>FigureManagerTemplate</strong></a>(<a href="matplotlib.backend_bases.html#FigureManagerBase">matplotlib.backend_bases.FigureManagerBase</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Wrap&nbsp;everything&nbsp;up&nbsp;into&nbsp;a&nbsp;window&nbsp;for&nbsp;the&nbsp;pylab&nbsp;interface<br>
&nbsp;<br>
For&nbsp;non&nbsp;interactive&nbsp;backends,&nbsp;the&nbsp;base&nbsp;class&nbsp;does&nbsp;all&nbsp;the&nbsp;work<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods inherited from <a href="matplotlib.backend_bases.html#FigureManagerBase">matplotlib.backend_bases.FigureManagerBase</a>:<br>
<dl><dt><a name="FigureManagerTemplate-__init__"><strong>__init__</strong></a>(self, canvas, num)</dt></dl>

<dl><dt><a name="FigureManagerTemplate-destroy"><strong>destroy</strong></a>(self)</dt></dl>

<dl><dt><a name="FigureManagerTemplate-full_screen_toggle"><strong>full_screen_toggle</strong></a>(self)</dt></dl>

<dl><dt><a name="FigureManagerTemplate-key_press"><strong>key_press</strong></a>(self, event)</dt></dl>

<dl><dt><a name="FigureManagerTemplate-resize"><strong>resize</strong></a>(self, w, h)</dt><dd><tt>For&nbsp;gui&nbsp;backends:&nbsp;resize&nbsp;window&nbsp;in&nbsp;pixels</tt></dd></dl>

<dl><dt><a name="FigureManagerTemplate-set_window_title"><strong>set_window_title</strong></a>(self, title)</dt><dd><tt>Set&nbsp;the&nbsp;title&nbsp;text&nbsp;of&nbsp;the&nbsp;window&nbsp;containing&nbsp;the&nbsp;figure.&nbsp;&nbsp;Note&nbsp;that<br>
this&nbsp;has&nbsp;no&nbsp;effect&nbsp;if&nbsp;there&nbsp;is&nbsp;no&nbsp;window&nbsp;(eg,&nbsp;a&nbsp;PS&nbsp;backend).</tt></dd></dl>

<dl><dt><a name="FigureManagerTemplate-show_popup"><strong>show_popup</strong></a>(self, msg)</dt><dd><tt>Display&nbsp;message&nbsp;in&nbsp;a&nbsp;popup&nbsp;--&nbsp;GUI&nbsp;only</tt></dd></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="GraphicsContextTemplate">class <strong>GraphicsContextTemplate</strong></a>(<a href="matplotlib.backend_bases.html#GraphicsContextBase">matplotlib.backend_bases.GraphicsContextBase</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>The&nbsp;graphics&nbsp;context&nbsp;provides&nbsp;the&nbsp;color,&nbsp;line&nbsp;styles,&nbsp;etc...&nbsp;&nbsp;See&nbsp;the&nbsp;gtk<br>
and&nbsp;postscript&nbsp;backends&nbsp;for&nbsp;examples&nbsp;of&nbsp;mapping&nbsp;the&nbsp;graphics&nbsp;context<br>
attributes&nbsp;(cap&nbsp;styles,&nbsp;join&nbsp;styles,&nbsp;line&nbsp;widths,&nbsp;colors)&nbsp;to&nbsp;a&nbsp;particular<br>
backend.&nbsp;&nbsp;In&nbsp;GTK&nbsp;this&nbsp;is&nbsp;done&nbsp;by&nbsp;wrapping&nbsp;a&nbsp;gtk.gdk.GC&nbsp;object&nbsp;and<br>
forwarding&nbsp;the&nbsp;appropriate&nbsp;calls&nbsp;to&nbsp;it&nbsp;using&nbsp;a&nbsp;dictionary&nbsp;mapping&nbsp;styles<br>
to&nbsp;gdk&nbsp;constants.&nbsp;&nbsp;In&nbsp;Postscript,&nbsp;all&nbsp;the&nbsp;work&nbsp;is&nbsp;done&nbsp;by&nbsp;the&nbsp;renderer,<br>
mapping&nbsp;line&nbsp;styles&nbsp;to&nbsp;postscript&nbsp;calls.<br>
&nbsp;<br>
If&nbsp;it's&nbsp;more&nbsp;appropriate&nbsp;to&nbsp;do&nbsp;the&nbsp;mapping&nbsp;at&nbsp;the&nbsp;renderer&nbsp;level&nbsp;(as&nbsp;in<br>
the&nbsp;postscript&nbsp;backend),&nbsp;you&nbsp;don't&nbsp;need&nbsp;to&nbsp;override&nbsp;any&nbsp;of&nbsp;the&nbsp;GC&nbsp;methods.<br>
If&nbsp;it's&nbsp;more&nbsp;appropriate&nbsp;to&nbsp;wrap&nbsp;an&nbsp;instance&nbsp;(as&nbsp;in&nbsp;the&nbsp;GTK&nbsp;backend)&nbsp;and<br>
do&nbsp;the&nbsp;mapping&nbsp;here,&nbsp;you'll&nbsp;need&nbsp;to&nbsp;override&nbsp;several&nbsp;of&nbsp;the&nbsp;setter<br>
methods.<br>
&nbsp;<br>
The&nbsp;base&nbsp;GraphicsContext&nbsp;stores&nbsp;colors&nbsp;as&nbsp;a&nbsp;RGB&nbsp;tuple&nbsp;on&nbsp;the&nbsp;unit<br>
interval,&nbsp;eg,&nbsp;(0.5,&nbsp;0.0,&nbsp;1.0).&nbsp;You&nbsp;may&nbsp;need&nbsp;to&nbsp;map&nbsp;this&nbsp;to&nbsp;colors<br>
appropriate&nbsp;for&nbsp;your&nbsp;backend.<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods inherited from <a href="matplotlib.backend_bases.html#GraphicsContextBase">matplotlib.backend_bases.GraphicsContextBase</a>:<br>
<dl><dt><a name="GraphicsContextTemplate-__init__"><strong>__init__</strong></a>(self)</dt></dl>

<dl><dt><a name="GraphicsContextTemplate-copy_properties"><strong>copy_properties</strong></a>(self, gc)</dt><dd><tt>Copy&nbsp;properties&nbsp;from&nbsp;gc&nbsp;to&nbsp;self</tt></dd></dl>

<dl><dt><a name="GraphicsContextTemplate-get_alpha"><strong>get_alpha</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on<br>
all&nbsp;backends</tt></dd></dl>

<dl><dt><a name="GraphicsContextTemplate-get_antialiased"><strong>get_antialiased</strong></a>(self)</dt><dd><tt>Return&nbsp;true&nbsp;if&nbsp;the&nbsp;object&nbsp;should&nbsp;try&nbsp;to&nbsp;do&nbsp;antialiased&nbsp;rendering</tt></dd></dl>

<dl><dt><a name="GraphicsContextTemplate-get_capstyle"><strong>get_capstyle</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;capstyle&nbsp;as&nbsp;a&nbsp;string&nbsp;in&nbsp;('butt',&nbsp;'round',&nbsp;'projecting')</tt></dd></dl>

<dl><dt><a name="GraphicsContextTemplate-get_clip_path"><strong>get_clip_path</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;clip&nbsp;path&nbsp;in&nbsp;the&nbsp;form&nbsp;(path,&nbsp;transform),&nbsp;where&nbsp;path<br>
is&nbsp;a&nbsp;path.Path&nbsp;instance,&nbsp;and&nbsp;transform&nbsp;as&nbsp;an&nbsp;affine&nbsp;transform<br>
to&nbsp;apply&nbsp;to&nbsp;the&nbsp;path&nbsp;before&nbsp;clipping.</tt></dd></dl>

<dl><dt><a name="GraphicsContextTemplate-get_clip_rectangle"><strong>get_clip_rectangle</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;clip&nbsp;rectangle&nbsp;as&nbsp;a&nbsp;Bbox&nbsp;instance</tt></dd></dl>

<dl><dt><a name="GraphicsContextTemplate-get_dashes"><strong>get_dashes</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;dash&nbsp;information&nbsp;as&nbsp;an&nbsp;offset&nbsp;dashlist&nbsp;tuple&nbsp;The<br>
dash&nbsp;list&nbsp;is&nbsp;a&nbsp;even&nbsp;size&nbsp;list&nbsp;that&nbsp;gives&nbsp;the&nbsp;ink&nbsp;on,&nbsp;ink&nbsp;off<br>
in&nbsp;pixels.&nbsp;&nbsp;See&nbsp;p107&nbsp;of&nbsp;to&nbsp;postscript&nbsp;BLUEBOOK&nbsp;for&nbsp;more&nbsp;info<br>
&nbsp;<br>
Default&nbsp;value&nbsp;is&nbsp;None</tt></dd></dl>

<dl><dt><a name="GraphicsContextTemplate-get_hatch"><strong>get_hatch</strong></a>(self)</dt><dd><tt>Gets&nbsp;the&nbsp;current&nbsp;hatch&nbsp;style</tt></dd></dl>

<dl><dt><a name="GraphicsContextTemplate-get_joinstyle"><strong>get_joinstyle</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;line&nbsp;join&nbsp;style&nbsp;as&nbsp;one&nbsp;of&nbsp;('miter',&nbsp;'round',&nbsp;'bevel')</tt></dd></dl>

<dl><dt><a name="GraphicsContextTemplate-get_linestyle"><strong>get_linestyle</strong></a>(self, style)</dt><dd><tt>Return&nbsp;the&nbsp;linestyle:&nbsp;one&nbsp;of&nbsp;('solid',&nbsp;'dashed',&nbsp;'dashdot',<br>
'dotted').</tt></dd></dl>

<dl><dt><a name="GraphicsContextTemplate-get_linewidth"><strong>get_linewidth</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;line&nbsp;width&nbsp;in&nbsp;points&nbsp;as&nbsp;a&nbsp;scalar</tt></dd></dl>

<dl><dt><a name="GraphicsContextTemplate-get_rgb"><strong>get_rgb</strong></a>(self)</dt><dd><tt>returns&nbsp;a&nbsp;tuple&nbsp;of&nbsp;three&nbsp;floats&nbsp;from&nbsp;0-1.&nbsp;&nbsp;color&nbsp;can&nbsp;be&nbsp;a<br>
matlab&nbsp;format&nbsp;string,&nbsp;a&nbsp;html&nbsp;hex&nbsp;color&nbsp;string,&nbsp;or&nbsp;a&nbsp;rgb&nbsp;tuple</tt></dd></dl>

<dl><dt><a name="GraphicsContextTemplate-set_alpha"><strong>set_alpha</strong></a>(self, alpha)</dt><dd><tt>Set&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on<br>
all&nbsp;backends</tt></dd></dl>

<dl><dt><a name="GraphicsContextTemplate-set_antialiased"><strong>set_antialiased</strong></a>(self, b)</dt><dd><tt>True&nbsp;if&nbsp;object&nbsp;should&nbsp;be&nbsp;drawn&nbsp;with&nbsp;antialiased&nbsp;rendering</tt></dd></dl>

<dl><dt><a name="GraphicsContextTemplate-set_capstyle"><strong>set_capstyle</strong></a>(self, cs)</dt><dd><tt>Set&nbsp;the&nbsp;capstyle&nbsp;as&nbsp;a&nbsp;string&nbsp;in&nbsp;('butt',&nbsp;'round',&nbsp;'projecting')</tt></dd></dl>

<dl><dt><a name="GraphicsContextTemplate-set_clip_path"><strong>set_clip_path</strong></a>(self, path)</dt><dd><tt>Set&nbsp;the&nbsp;clip&nbsp;path&nbsp;and&nbsp;transformation.&nbsp;&nbsp;Path&nbsp;should&nbsp;be&nbsp;a<br>
transforms.TransformedPath&nbsp;instance.</tt></dd></dl>

<dl><dt><a name="GraphicsContextTemplate-set_clip_rectangle"><strong>set_clip_rectangle</strong></a>(self, rectangle)</dt><dd><tt>Set&nbsp;the&nbsp;clip&nbsp;rectangle&nbsp;with&nbsp;sequence&nbsp;(left,&nbsp;bottom,&nbsp;width,&nbsp;height)</tt></dd></dl>

<dl><dt><a name="GraphicsContextTemplate-set_dashes"><strong>set_dashes</strong></a>(self, dash_offset, dash_list)</dt><dd><tt>Set&nbsp;the&nbsp;dash&nbsp;style&nbsp;for&nbsp;the&nbsp;gc.<br>
dash_offset&nbsp;is&nbsp;the&nbsp;offset&nbsp;(usually&nbsp;0).<br>
dash_list&nbsp;specifies&nbsp;the&nbsp;on-off&nbsp;sequence&nbsp;as&nbsp;points<br>
(None,&nbsp;None)&nbsp;specifies&nbsp;a&nbsp;solid&nbsp;line</tt></dd></dl>

<dl><dt><a name="GraphicsContextTemplate-set_foreground"><strong>set_foreground</strong></a>(self, fg, isRGB<font color="#909090">=False</font>)</dt><dd><tt>Set&nbsp;the&nbsp;foreground&nbsp;color.&nbsp;&nbsp;fg&nbsp;can&nbsp;be&nbsp;a&nbsp;matlab&nbsp;format&nbsp;string,&nbsp;a<br>
html&nbsp;hex&nbsp;color&nbsp;string,&nbsp;an&nbsp;rgb&nbsp;unit&nbsp;tuple,&nbsp;or&nbsp;a&nbsp;float&nbsp;between&nbsp;0<br>
and&nbsp;1.&nbsp;&nbsp;In&nbsp;the&nbsp;latter&nbsp;case,&nbsp;grayscale&nbsp;is&nbsp;used.<br>
&nbsp;<br>
The&nbsp;GraphicsContext&nbsp;converts&nbsp;colors&nbsp;to&nbsp;rgb&nbsp;internally.&nbsp;&nbsp;If&nbsp;you<br>
know&nbsp;the&nbsp;color&nbsp;is&nbsp;rgb&nbsp;already,&nbsp;you&nbsp;can&nbsp;set&nbsp;isRGB&nbsp;to&nbsp;True&nbsp;to<br>
avoid&nbsp;the&nbsp;performace&nbsp;hit&nbsp;of&nbsp;the&nbsp;conversion</tt></dd></dl>

<dl><dt><a name="GraphicsContextTemplate-set_graylevel"><strong>set_graylevel</strong></a>(self, frac)</dt><dd><tt>Set&nbsp;the&nbsp;foreground&nbsp;color&nbsp;to&nbsp;be&nbsp;a&nbsp;gray&nbsp;level&nbsp;with&nbsp;frac&nbsp;frac</tt></dd></dl>

<dl><dt><a name="GraphicsContextTemplate-set_hatch"><strong>set_hatch</strong></a>(self, hatch)</dt><dd><tt>Sets&nbsp;the&nbsp;hatch&nbsp;style&nbsp;for&nbsp;filling</tt></dd></dl>

<dl><dt><a name="GraphicsContextTemplate-set_joinstyle"><strong>set_joinstyle</strong></a>(self, js)</dt><dd><tt>Set&nbsp;the&nbsp;join&nbsp;style&nbsp;to&nbsp;be&nbsp;one&nbsp;of&nbsp;('miter',&nbsp;'round',&nbsp;'bevel')</tt></dd></dl>

<dl><dt><a name="GraphicsContextTemplate-set_linestyle"><strong>set_linestyle</strong></a>(self, style)</dt><dd><tt>Set&nbsp;the&nbsp;linestyle&nbsp;to&nbsp;be&nbsp;one&nbsp;of&nbsp;('solid',&nbsp;'dashed',&nbsp;'dashdot',<br>
'dotted').</tt></dd></dl>

<dl><dt><a name="GraphicsContextTemplate-set_linewidth"><strong>set_linewidth</strong></a>(self, w)</dt><dd><tt>Set&nbsp;the&nbsp;linewidth&nbsp;in&nbsp;points</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.backend_bases.html#GraphicsContextBase">matplotlib.backend_bases.GraphicsContextBase</a>:<br>
<dl><dt><strong>dashd</strong> = {'dashdot': (0, (3.0, 5.0, 1.0, 5.0)), 'dashed': (0, (6.0, 6.0)), 'dotted': (0, (1.0, 3.0)), 'solid': (None, None)}</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="RendererTemplate">class <strong>RendererTemplate</strong></a>(<a href="matplotlib.backend_bases.html#RendererBase">matplotlib.backend_bases.RendererBase</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>The&nbsp;renderer&nbsp;handles&nbsp;drawing/rendering&nbsp;operations.<br>
&nbsp;<br>
This&nbsp;is&nbsp;a&nbsp;minimal&nbsp;do-nothing&nbsp;class&nbsp;that&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;get&nbsp;started&nbsp;when<br>
writing&nbsp;a&nbsp;new&nbsp;backend.&nbsp;Refer&nbsp;to&nbsp;backend_bases.<a href="matplotlib.backend_bases.html#RendererBase">RendererBase</a>&nbsp;for<br>
documentation&nbsp;of&nbsp;the&nbsp;classes&nbsp;methods.<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="RendererTemplate-__init__"><strong>__init__</strong></a>(self, dpi)</dt></dl>

<dl><dt><a name="RendererTemplate-draw_image"><strong>draw_image</strong></a>(self, x, y, im, bbox, clippath<font color="#909090">=None</font>, clippath_trans<font color="#909090">=None</font>)</dt></dl>

<dl><dt><a name="RendererTemplate-draw_path"><strong>draw_path</strong></a>(self, gc, path, transform, rgbFace<font color="#909090">=None</font>)</dt></dl>

<dl><dt><a name="RendererTemplate-draw_text"><strong>draw_text</strong></a>(self, gc, x, y, s, prop, angle, ismath<font color="#909090">=False</font>)</dt></dl>

<dl><dt><a name="RendererTemplate-flipy"><strong>flipy</strong></a>(self)</dt></dl>

<dl><dt><a name="RendererTemplate-get_canvas_width_height"><strong>get_canvas_width_height</strong></a>(self)</dt></dl>

<dl><dt><a name="RendererTemplate-get_text_width_height_descent"><strong>get_text_width_height_descent</strong></a>(self, s, prop, ismath)</dt></dl>

<dl><dt><a name="RendererTemplate-new_gc"><strong>new_gc</strong></a>(self)</dt></dl>

<dl><dt><a name="RendererTemplate-points_to_pixels"><strong>points_to_pixels</strong></a>(self, points)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.backend_bases.html#RendererBase">matplotlib.backend_bases.RendererBase</a>:<br>
<dl><dt><a name="RendererTemplate-close_group"><strong>close_group</strong></a>(self, s)</dt><dd><tt>close&nbsp;a&nbsp;grouping&nbsp;element&nbsp;with&nbsp;label&nbsp;s<br>
Is&nbsp;only&nbsp;currently&nbsp;used&nbsp;by&nbsp;backend_svg</tt></dd></dl>

<dl><dt><a name="RendererTemplate-draw_markers"><strong>draw_markers</strong></a>(self, gc, marker_path, marker_trans, path, trans, rgbFace<font color="#909090">=None</font>)</dt><dd><tt>Draws&nbsp;a&nbsp;marker&nbsp;at&nbsp;each&nbsp;of&nbsp;the&nbsp;vertices&nbsp;in&nbsp;path.&nbsp;&nbsp;This&nbsp;includes<br>
all&nbsp;vertices,&nbsp;including&nbsp;control&nbsp;points&nbsp;on&nbsp;curves.&nbsp;&nbsp;To&nbsp;avoid<br>
that&nbsp;behavior,&nbsp;those&nbsp;vertices&nbsp;should&nbsp;be&nbsp;removed&nbsp;before&nbsp;calling<br>
this&nbsp;function.<br>
&nbsp;<br>
marker_trans&nbsp;is&nbsp;an&nbsp;affine&nbsp;transform&nbsp;applied&nbsp;to&nbsp;the&nbsp;marker.<br>
trans&nbsp;is&nbsp;an&nbsp;affine&nbsp;transform&nbsp;applied&nbsp;to&nbsp;the&nbsp;path.<br>
&nbsp;<br>
This&nbsp;provides&nbsp;a&nbsp;fallback&nbsp;implementation&nbsp;of&nbsp;draw_markers&nbsp;that<br>
makes&nbsp;multiple&nbsp;calls&nbsp;to&nbsp;draw_path.&nbsp;&nbsp;Some&nbsp;backends&nbsp;may&nbsp;want&nbsp;to<br>
override&nbsp;this&nbsp;method&nbsp;in&nbsp;order&nbsp;to&nbsp;draw&nbsp;the&nbsp;marker&nbsp;only&nbsp;once&nbsp;and<br>
reuse&nbsp;it&nbsp;multiple&nbsp;times.</tt></dd></dl>

<dl><dt><a name="RendererTemplate-draw_path_collection"><strong>draw_path_collection</strong></a>(self, master_transform, cliprect, clippath, clippath_trans, paths, all_transforms, offsets, offsetTrans, facecolors, edgecolors, linewidths, linestyles, antialiaseds)</dt><dd><tt>Draws&nbsp;a&nbsp;collection&nbsp;of&nbsp;paths,&nbsp;selecting&nbsp;drawing&nbsp;properties&nbsp;from<br>
the&nbsp;lists&nbsp;facecolors,&nbsp;edgecolors,&nbsp;linewidths,&nbsp;linestyles&nbsp;and<br>
antialiaseds.&nbsp;&nbsp;offsets&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;offsets&nbsp;to&nbsp;apply&nbsp;to&nbsp;each<br>
of&nbsp;the&nbsp;paths.&nbsp;&nbsp;The&nbsp;offsets&nbsp;in&nbsp;offsets&nbsp;are&nbsp;first&nbsp;transformed&nbsp;by<br>
offsetTrans&nbsp;before&nbsp;being&nbsp;applied.<br>
&nbsp;<br>
This&nbsp;provides&nbsp;a&nbsp;fallback&nbsp;implementation&nbsp;of<br>
draw_path_collection&nbsp;that&nbsp;makes&nbsp;multiple&nbsp;calls&nbsp;to&nbsp;draw_path.<br>
Some&nbsp;backends&nbsp;may&nbsp;want&nbsp;to&nbsp;override&nbsp;this&nbsp;in&nbsp;order&nbsp;to&nbsp;render<br>
each&nbsp;set&nbsp;of&nbsp;path&nbsp;data&nbsp;only&nbsp;once,&nbsp;and&nbsp;then&nbsp;reference&nbsp;that&nbsp;path<br>
multiple&nbsp;times&nbsp;with&nbsp;the&nbsp;different&nbsp;offsets,&nbsp;colors,&nbsp;styles&nbsp;etc.<br>
The&nbsp;generator&nbsp;methods&nbsp;_iter_collection_raw_paths&nbsp;and<br>
_iter_collection&nbsp;are&nbsp;provided&nbsp;to&nbsp;help&nbsp;with&nbsp;(and&nbsp;standardize)<br>
the&nbsp;implementation&nbsp;across&nbsp;backends.&nbsp;&nbsp;It&nbsp;is&nbsp;highly&nbsp;recommended<br>
to&nbsp;use&nbsp;those&nbsp;generators,&nbsp;so&nbsp;that&nbsp;changes&nbsp;to&nbsp;the&nbsp;behavior&nbsp;of<br>
draw_path_collection&nbsp;can&nbsp;be&nbsp;made&nbsp;globally.</tt></dd></dl>

<dl><dt><a name="RendererTemplate-draw_quad_mesh"><strong>draw_quad_mesh</strong></a>(self, master_transform, cliprect, clippath, clippath_trans, meshWidth, meshHeight, coordinates, offsets, offsetTrans, facecolors, antialiased, showedges)</dt><dd><tt>This&nbsp;provides&nbsp;a&nbsp;fallback&nbsp;implementation&nbsp;of&nbsp;draw_quad_mesh&nbsp;that<br>
generates&nbsp;paths&nbsp;and&nbsp;then&nbsp;calls&nbsp;draw_path_collection.</tt></dd></dl>

<dl><dt><a name="RendererTemplate-draw_tex"><strong>draw_tex</strong></a>(self, gc, x, y, s, prop, angle, ismath<font color="#909090">='TeX!'</font>)</dt></dl>

<dl><dt><a name="RendererTemplate-get_image_magnification"><strong>get_image_magnification</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;factor&nbsp;by&nbsp;which&nbsp;to&nbsp;magnify&nbsp;images&nbsp;passed&nbsp;to&nbsp;draw_image.<br>
Allows&nbsp;a&nbsp;backend&nbsp;to&nbsp;have&nbsp;images&nbsp;at&nbsp;a&nbsp;different&nbsp;resolution&nbsp;to&nbsp;other<br>
artists.</tt></dd></dl>

<dl><dt><a name="RendererTemplate-get_texmanager"><strong>get_texmanager</strong></a>(self)</dt></dl>

<dl><dt><a name="RendererTemplate-open_group"><strong>open_group</strong></a>(self, s)</dt><dd><tt>open&nbsp;a&nbsp;grouping&nbsp;element&nbsp;with&nbsp;label&nbsp;s<br>
Is&nbsp;only&nbsp;currently&nbsp;used&nbsp;by&nbsp;backend_svg</tt></dd></dl>

<dl><dt><a name="RendererTemplate-option_image_nocomposite"><strong>option_image_nocomposite</strong></a>(self)</dt><dd><tt>overwrite&nbsp;this&nbsp;method&nbsp;for&nbsp;renderers&nbsp;that&nbsp;do&nbsp;not&nbsp;necessarily<br>
want&nbsp;to&nbsp;rescale&nbsp;and&nbsp;composite&nbsp;raster&nbsp;images.&nbsp;(like&nbsp;SVG)</tt></dd></dl>

<dl><dt><a name="RendererTemplate-start_rasterizing"><strong>start_rasterizing</strong></a>(self)</dt></dl>

<dl><dt><a name="RendererTemplate-stop_rasterizing"><strong>stop_rasterizing</strong></a>(self)</dt></dl>

<dl><dt><a name="RendererTemplate-strip_math"><strong>strip_math</strong></a>(self, s)</dt></dl>

</td></tr></table></td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#eeaa77">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Functions</strong></big></font></td></tr>
    
<tr><td bgcolor="#eeaa77"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl><dt><a name="-draw_if_interactive"><strong>draw_if_interactive</strong></a>()</dt><dd><tt>For&nbsp;image&nbsp;backends&nbsp;-&nbsp;is&nbsp;not&nbsp;required<br>
For&nbsp;GUI&nbsp;backends&nbsp;-&nbsp;this&nbsp;should&nbsp;be&nbsp;overriden&nbsp;if&nbsp;drawing&nbsp;should&nbsp;be&nbsp;done&nbsp;in<br>
interactive&nbsp;python&nbsp;mode</tt></dd></dl>
 <dl><dt><a name="-new_figure_manager"><strong>new_figure_manager</strong></a>(num, *args, **kwargs)</dt><dd><tt>Create&nbsp;a&nbsp;new&nbsp;figure&nbsp;manager&nbsp;instance</tt></dd></dl>
 <dl><dt><a name="-show"><strong>show</strong></a>()</dt><dd><tt>For&nbsp;image&nbsp;backends&nbsp;-&nbsp;is&nbsp;not&nbsp;required<br>
For&nbsp;GUI&nbsp;backends&nbsp;-&nbsp;<a href="#-show">show</a>()&nbsp;is&nbsp;usually&nbsp;the&nbsp;last&nbsp;line&nbsp;of&nbsp;a&nbsp;pylab&nbsp;script&nbsp;and<br>
tells&nbsp;the&nbsp;backend&nbsp;that&nbsp;it&nbsp;is&nbsp;time&nbsp;to&nbsp;draw.&nbsp;&nbsp;In&nbsp;interactive&nbsp;mode,&nbsp;this&nbsp;may<br>
be&nbsp;a&nbsp;do&nbsp;nothing&nbsp;func.&nbsp;&nbsp;See&nbsp;the&nbsp;GTK&nbsp;backend&nbsp;for&nbsp;an&nbsp;example&nbsp;of&nbsp;how&nbsp;to&nbsp;handle<br>
interactive&nbsp;versus&nbsp;batch&nbsp;mode</tt></dd></dl>
</td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#55aa55">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Data</strong></big></font></td></tr>
    
<tr><td bgcolor="#55aa55"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><strong>division</strong> = _Feature((2, 2, 0, 'alpha', 2), (3, 0, 0, 'alpha', 0), 8192)</td></tr></table>
@footer@