@header@
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
<tr bgcolor="#7799ee">
<td valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong><a href="matplotlib.html"><font color="#ffffff">matplotlib</font></a>.<a href="matplotlib.backends.html"><font color="#ffffff">backends</font></a>.backend_ps</strong></big></big> (version 0.98.0)</font></td
><td align=right valign=bottom
><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/home/jdhunter/dev/lib64/python2.5/site-packages/matplotlib/backends/backend_ps.py">/home/jdhunter/dev/lib64/python2.5/site-packages/matplotlib/backends/backend_ps.py</a></font></td></tr></table>
    <p><tt>A&nbsp;PostScript&nbsp;backend,&nbsp;which&nbsp;can&nbsp;produce&nbsp;both&nbsp;PostScript&nbsp;.ps&nbsp;and&nbsp;.eps</tt></p>
<p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#aa55cc">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
    
<tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="binascii.html">binascii</a><br>
<a href="glob.html">glob</a><br>
<a href="math.html">math</a><br>
</td><td width="25%" valign=top><a href="md5.html">md5</a><br>
<a href="numpy.html">numpy</a><br>
<a href="os.html">os</a><br>
</td><td width="25%" valign=top><a href="re.html">re</a><br>
<a href="shutil.html">shutil</a><br>
<a href="sys.html">sys</a><br>
</td><td width="25%" valign=top><a href="time.html">time</a><br>
</td></tr></table></td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ee77aa">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
    
<tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backend_bases.html#FigureCanvasBase">matplotlib.backend_bases.FigureCanvasBase</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_ps.html#FigureCanvasPS">FigureCanvasPS</a>
</font></dt></dl>
</dd>
<dt><font face="helvetica, arial"><a href="matplotlib.backend_bases.html#FigureManagerBase">matplotlib.backend_bases.FigureManagerBase</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_ps.html#FigureManagerPS">FigureManagerPS</a>
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_ps.html#FigureManagerPS">FigureManagerPS</a>
</font></dt></dl>
</dd>
<dt><font face="helvetica, arial"><a href="matplotlib.backend_bases.html#GraphicsContextBase">matplotlib.backend_bases.GraphicsContextBase</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_ps.html#GraphicsContextPS">GraphicsContextPS</a>
</font></dt></dl>
</dd>
<dt><font face="helvetica, arial"><a href="matplotlib.backend_bases.html#RendererBase">matplotlib.backend_bases.RendererBase</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_ps.html#RendererPS">RendererPS</a>
</font></dt></dl>
</dd>
</dl>
 <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="FigureCanvasPS">class <strong>FigureCanvasPS</strong></a>(<a href="matplotlib.backend_bases.html#FigureCanvasBase">matplotlib.backend_bases.FigureCanvasBase</a>)</font></td></tr>
    
<tr><td bgcolor="#ffc8d8"><tt>&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="FigureCanvasPS-draw"><strong>draw</strong></a>(self)</dt></dl>

<dl><dt><a name="FigureCanvasPS-get_default_filetype"><strong>get_default_filetype</strong></a>(self)</dt></dl>

<dl><dt><a name="FigureCanvasPS-print_eps"><strong>print_eps</strong></a>(self, outfile, *args, **kwargs)</dt></dl>

<dl><dt><a name="FigureCanvasPS-print_ps"><strong>print_ps</strong></a>(self, outfile, *args, **kwargs)</dt></dl>

<hr>
Data and other attributes defined here:<br>
<dl><dt><strong>filetypes</strong> = {'eps': 'Encapsulated Postscript', 'ps': 'Postscript'}</dl>

<hr>
Methods inherited from <a href="matplotlib.backend_bases.html#FigureCanvasBase">matplotlib.backend_bases.FigureCanvasBase</a>:<br>
<dl><dt><a name="FigureCanvasPS-__init__"><strong>__init__</strong></a>(self, figure)</dt></dl>

<dl><dt><a name="FigureCanvasPS-blit"><strong>blit</strong></a>(self, bbox<font color="#909090">=None</font>)</dt><dd><tt>blit&nbsp;the&nbsp;canvas&nbsp;in&nbsp;bbox&nbsp;(default&nbsp;entire&nbsp;canvas)</tt></dd></dl>

<dl><dt><a name="FigureCanvasPS-button_press_event"><strong>button_press_event</strong></a>(self, x, y, button, guiEvent<font color="#909090">=None</font>)</dt><dd><tt>Backend&nbsp;derived&nbsp;classes&nbsp;should&nbsp;call&nbsp;this&nbsp;function&nbsp;on&nbsp;any&nbsp;mouse<br>
button&nbsp;press.&nbsp;&nbsp;x,y&nbsp;are&nbsp;the&nbsp;canvas&nbsp;coords:&nbsp;0,0&nbsp;is&nbsp;lower,&nbsp;left.<br>
button&nbsp;and&nbsp;key&nbsp;are&nbsp;as&nbsp;defined&nbsp;in&nbsp;MouseEvent</tt></dd></dl>

<dl><dt><a name="FigureCanvasPS-button_release_event"><strong>button_release_event</strong></a>(self, x, y, button, guiEvent<font color="#909090">=None</font>)</dt><dd><tt>Backend&nbsp;derived&nbsp;classes&nbsp;should&nbsp;call&nbsp;this&nbsp;function&nbsp;on&nbsp;any&nbsp;mouse<br>
button&nbsp;release.&nbsp;&nbsp;x,y&nbsp;are&nbsp;the&nbsp;canvas&nbsp;coords:&nbsp;0,0&nbsp;is&nbsp;lower,&nbsp;left.<br>
button&nbsp;and&nbsp;key&nbsp;are&nbsp;as&nbsp;defined&nbsp;in&nbsp;MouseEvent</tt></dd></dl>

<dl><dt><a name="FigureCanvasPS-draw_cursor"><strong>draw_cursor</strong></a>(self, event)</dt><dd><tt>Draw&nbsp;a&nbsp;cursor&nbsp;in&nbsp;the&nbsp;event.axes&nbsp;if&nbsp;inaxes&nbsp;is&nbsp;not&nbsp;None.&nbsp;&nbsp;Use<br>
native&nbsp;GUI&nbsp;drawing&nbsp;for&nbsp;efficiency&nbsp;if&nbsp;possible</tt></dd></dl>

<dl><dt><a name="FigureCanvasPS-draw_event"><strong>draw_event</strong></a>(self, renderer)</dt></dl>

<dl><dt><a name="FigureCanvasPS-draw_idle"><strong>draw_idle</strong></a>(self, *args, **kwargs)</dt><dd><tt>draw&nbsp;only&nbsp;if&nbsp;idle;&nbsp;defaults&nbsp;to&nbsp;draw&nbsp;but&nbsp;backends&nbsp;can&nbsp;overrride</tt></dd></dl>

<dl><dt><a name="FigureCanvasPS-flush_events"><strong>flush_events</strong></a>(self)</dt><dd><tt>Flush&nbsp;the&nbsp;GUI&nbsp;events&nbsp;for&nbsp;the&nbsp;figure.&nbsp;Implemented&nbsp;only&nbsp;for<br>
backends&nbsp;with&nbsp;GUIs.</tt></dd></dl>

<dl><dt><a name="FigureCanvasPS-get_supported_filetypes"><strong>get_supported_filetypes</strong></a>(self)</dt></dl>

<dl><dt><a name="FigureCanvasPS-get_supported_filetypes_grouped"><strong>get_supported_filetypes_grouped</strong></a>(self)</dt></dl>

<dl><dt><a name="FigureCanvasPS-get_width_height"><strong>get_width_height</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;figure&nbsp;width&nbsp;and&nbsp;height&nbsp;in&nbsp;points&nbsp;or&nbsp;pixels<br>
(depending&nbsp;on&nbsp;the&nbsp;backend),&nbsp;truncated&nbsp;to&nbsp;integers</tt></dd></dl>

<dl><dt><a name="FigureCanvasPS-key_press_event"><strong>key_press_event</strong></a>(self, key, guiEvent<font color="#909090">=None</font>)</dt></dl>

<dl><dt><a name="FigureCanvasPS-key_release_event"><strong>key_release_event</strong></a>(self, key, guiEvent<font color="#909090">=None</font>)</dt></dl>

<dl><dt><a name="FigureCanvasPS-motion_notify_event"><strong>motion_notify_event</strong></a>(self, x, y, guiEvent<font color="#909090">=None</font>)</dt><dd><tt>Backend&nbsp;derived&nbsp;classes&nbsp;should&nbsp;call&nbsp;this&nbsp;function&nbsp;on&nbsp;any<br>
motion-notify-event.&nbsp;x,y&nbsp;are&nbsp;the&nbsp;canvas&nbsp;coords:&nbsp;0,0&nbsp;is&nbsp;lower,&nbsp;left.<br>
button&nbsp;and&nbsp;key&nbsp;are&nbsp;as&nbsp;defined&nbsp;in&nbsp;MouseEvent</tt></dd></dl>

<dl><dt><a name="FigureCanvasPS-mpl_connect"><strong>mpl_connect</strong></a>(self, s, func)</dt><dd><tt>Connect&nbsp;event&nbsp;with&nbsp;string&nbsp;s&nbsp;to&nbsp;func.&nbsp;&nbsp;The&nbsp;signature&nbsp;of&nbsp;func&nbsp;is<br>
&nbsp;<br>
&nbsp;&nbsp;def&nbsp;func(event)<br>
&nbsp;<br>
where&nbsp;event&nbsp;is&nbsp;a&nbsp;MplEvent.&nbsp;&nbsp;The&nbsp;following&nbsp;events&nbsp;are&nbsp;recognized<br>
&nbsp;<br>
'resize_event',<br>
'draw_event',<br>
'key_press_event',<br>
'key_release_event',<br>
'button_press_event',<br>
'button_release_event',<br>
'scroll_event',<br>
'motion_notify_event',<br>
'pick_event',<br>
&nbsp;<br>
&nbsp;<br>
For&nbsp;the&nbsp;three&nbsp;events&nbsp;above,&nbsp;if&nbsp;the&nbsp;mouse&nbsp;is&nbsp;over&nbsp;the&nbsp;axes,<br>
the&nbsp;variable&nbsp;event.inaxes&nbsp;will&nbsp;be&nbsp;set&nbsp;to&nbsp;the&nbsp;axes&nbsp;it&nbsp;is&nbsp;over,<br>
and&nbsp;additionally,&nbsp;the&nbsp;variables&nbsp;event.xdata&nbsp;and&nbsp;event.ydata<br>
will&nbsp;be&nbsp;defined.&nbsp;&nbsp;This&nbsp;is&nbsp;the&nbsp;mouse&nbsp;location&nbsp;in&nbsp;data&nbsp;coords.<br>
See&nbsp;backend_bases.MplEvent.<br>
&nbsp;<br>
return&nbsp;value&nbsp;is&nbsp;a&nbsp;connection&nbsp;id&nbsp;that&nbsp;can&nbsp;be&nbsp;used&nbsp;with<br>
mpl_disconnect</tt></dd></dl>

<dl><dt><a name="FigureCanvasPS-mpl_disconnect"><strong>mpl_disconnect</strong></a>(self, cid)</dt><dd><tt>disconnect&nbsp;callback&nbsp;id&nbsp;cid</tt></dd></dl>

<dl><dt><a name="FigureCanvasPS-onHilite"><strong>onHilite</strong></a>(self, ev)</dt><dd><tt>Mouse&nbsp;event&nbsp;processor&nbsp;which&nbsp;highlights&nbsp;the&nbsp;artists<br>
under&nbsp;the&nbsp;cursor.&nbsp;&nbsp;Connect&nbsp;this&nbsp;to&nbsp;the&nbsp;motion_notify_event<br>
using&nbsp;canvas.<a href="#FigureCanvasPS-mpl_connect">mpl_connect</a>('motion_notify_event',canvas.onHilite)</tt></dd></dl>

<dl><dt><a name="FigureCanvasPS-onRemove"><strong>onRemove</strong></a>(self, ev)</dt><dd><tt>Mouse&nbsp;event&nbsp;processor&nbsp;which&nbsp;removes&nbsp;the&nbsp;top&nbsp;artist<br>
under&nbsp;the&nbsp;cursor.&nbsp;&nbsp;Connect&nbsp;this&nbsp;to&nbsp;the&nbsp;mouse_press_event<br>
using&nbsp;canvas.<a href="#FigureCanvasPS-mpl_connect">mpl_connect</a>('mouse_press_event',canvas.onRemove)</tt></dd></dl>

<dl><dt><a name="FigureCanvasPS-pick"><strong>pick</strong></a>(self, mouseevent)</dt></dl>

<dl><dt><a name="FigureCanvasPS-pick_event"><strong>pick_event</strong></a>(self, mouseevent, artist, **kwargs)</dt><dd><tt>This&nbsp;method&nbsp;will&nbsp;be&nbsp;called&nbsp;by&nbsp;artists&nbsp;who&nbsp;are&nbsp;picked&nbsp;and&nbsp;will<br>
fire&nbsp;off&nbsp;PickEvent&nbsp;callbacks&nbsp;registered&nbsp;listeners</tt></dd></dl>

<dl><dt><a name="FigureCanvasPS-print_bmp"><strong>print_bmp</strong></a> = print_raw(self, *args, **kwargs)</dt></dl>

<dl><dt><a name="FigureCanvasPS-print_emf"><strong>print_emf</strong></a>(self, *args, **kwargs)</dt></dl>

<dl><dt><a name="FigureCanvasPS-print_figure"><strong>print_figure</strong></a>(self, filename, dpi<font color="#909090">=None</font>, facecolor<font color="#909090">='w'</font>, edgecolor<font color="#909090">='w'</font>, orientation<font color="#909090">='portrait'</font>, format<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>Render&nbsp;the&nbsp;figure&nbsp;to&nbsp;hardcopy.&nbsp;Set&nbsp;the&nbsp;figure&nbsp;patch&nbsp;face&nbsp;and&nbsp;edge<br>
colors.&nbsp;&nbsp;This&nbsp;is&nbsp;useful&nbsp;because&nbsp;some&nbsp;of&nbsp;the&nbsp;GUIs&nbsp;have&nbsp;a&nbsp;gray&nbsp;figure<br>
face&nbsp;color&nbsp;background&nbsp;and&nbsp;you'll&nbsp;probably&nbsp;want&nbsp;to&nbsp;override&nbsp;this&nbsp;on<br>
hardcopy.<br>
&nbsp;<br>
filename&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;can&nbsp;also&nbsp;be&nbsp;a&nbsp;file&nbsp;object&nbsp;on&nbsp;image&nbsp;backends<br>
orientation&nbsp;-&nbsp;only&nbsp;currently&nbsp;applies&nbsp;to&nbsp;PostScript&nbsp;printing.<br>
dpi&nbsp;-&nbsp;the&nbsp;dots&nbsp;per&nbsp;inch&nbsp;to&nbsp;save&nbsp;the&nbsp;figure&nbsp;in;&nbsp;if&nbsp;None,&nbsp;use&nbsp;savefig.dpi<br>
facecolor&nbsp;-&nbsp;the&nbsp;facecolor&nbsp;of&nbsp;the&nbsp;figure<br>
edgecolor&nbsp;-&nbsp;the&nbsp;edgecolor&nbsp;of&nbsp;the&nbsp;figure<br>
orientation&nbsp;-&nbsp;'landscape'&nbsp;|&nbsp;'portrait'&nbsp;(not&nbsp;supported&nbsp;on&nbsp;all&nbsp;backends)<br>
format&nbsp;-&nbsp;when&nbsp;set,&nbsp;forcibly&nbsp;set&nbsp;the&nbsp;file&nbsp;format&nbsp;to&nbsp;save&nbsp;to</tt></dd></dl>

<dl><dt><a name="FigureCanvasPS-print_pdf"><strong>print_pdf</strong></a>(self, *args, **kwargs)</dt></dl>

<dl><dt><a name="FigureCanvasPS-print_png"><strong>print_png</strong></a>(self, *args, **kwargs)</dt></dl>

<dl><dt><a name="FigureCanvasPS-print_raw"><strong>print_raw</strong></a>(self, *args, **kwargs)</dt></dl>

<dl><dt><a name="FigureCanvasPS-print_rgb"><strong>print_rgb</strong></a> = print_raw(self, *args, **kwargs)</dt></dl>

<dl><dt><a name="FigureCanvasPS-print_svg"><strong>print_svg</strong></a>(self, *args, **kwargs)</dt></dl>

<dl><dt><a name="FigureCanvasPS-print_svgz"><strong>print_svgz</strong></a>(self, *args, **kwargs)</dt></dl>

<dl><dt><a name="FigureCanvasPS-resize"><strong>resize</strong></a>(self, w, h)</dt><dd><tt>set&nbsp;the&nbsp;canvas&nbsp;size&nbsp;in&nbsp;pixels</tt></dd></dl>

<dl><dt><a name="FigureCanvasPS-resize_event"><strong>resize_event</strong></a>(self)</dt></dl>

<dl><dt><a name="FigureCanvasPS-scroll_event"><strong>scroll_event</strong></a>(self, x, y, button, guiEvent<font color="#909090">=None</font>)</dt><dd><tt>Backend&nbsp;derived&nbsp;classes&nbsp;should&nbsp;call&nbsp;this&nbsp;function&nbsp;on&nbsp;any<br>
scroll&nbsp;wheel&nbsp;event.&nbsp;&nbsp;x,y&nbsp;are&nbsp;the&nbsp;canvas&nbsp;coords:&nbsp;0,0&nbsp;is&nbsp;lower,<br>
left.&nbsp;&nbsp;button&nbsp;and&nbsp;key&nbsp;are&nbsp;as&nbsp;defined&nbsp;in&nbsp;MouseEvent</tt></dd></dl>

<dl><dt><a name="FigureCanvasPS-set_window_title"><strong>set_window_title</strong></a>(self, title)</dt><dd><tt>Set&nbsp;the&nbsp;title&nbsp;text&nbsp;of&nbsp;the&nbsp;window&nbsp;containing&nbsp;the&nbsp;figure.&nbsp;&nbsp;Note&nbsp;that<br>
this&nbsp;has&nbsp;no&nbsp;effect&nbsp;if&nbsp;there&nbsp;is&nbsp;no&nbsp;window&nbsp;(eg,&nbsp;a&nbsp;PS&nbsp;backend).</tt></dd></dl>

<dl><dt><a name="FigureCanvasPS-switch_backends"><strong>switch_backends</strong></a>(self, FigureCanvasClass)</dt><dd><tt>instantiate&nbsp;an&nbsp;instance&nbsp;of&nbsp;FigureCanvasClass<br>
&nbsp;<br>
This&nbsp;is&nbsp;used&nbsp;for&nbsp;backend&nbsp;switching,&nbsp;eg,&nbsp;to&nbsp;instantiate&nbsp;a<br>
<a href="#FigureCanvasPS">FigureCanvasPS</a>&nbsp;from&nbsp;a&nbsp;FigureCanvasGTK.&nbsp;&nbsp;Note,&nbsp;deep&nbsp;copying&nbsp;is<br>
not&nbsp;done,&nbsp;so&nbsp;any&nbsp;changes&nbsp;to&nbsp;one&nbsp;of&nbsp;the&nbsp;instances&nbsp;(eg,&nbsp;setting<br>
figure&nbsp;size&nbsp;or&nbsp;line&nbsp;props),&nbsp;will&nbsp;be&nbsp;reflected&nbsp;in&nbsp;the&nbsp;other</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.backend_bases.html#FigureCanvasBase">matplotlib.backend_bases.FigureCanvasBase</a>:<br>
<dl><dt><strong>events</strong> = ('resize_event', 'draw_event', 'key_press_event', 'key_release_event', 'button_press_event', 'button_release_event', 'scroll_event', 'motion_notify_event', 'pick_event')</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><strong>FigureManager</strong> = <a name="FigureManager">class FigureManagerPS</a>(<a href="matplotlib.backend_bases.html#FigureManagerBase">matplotlib.backend_bases.FigureManagerBase</a>)</font></td></tr>
    
<tr><td bgcolor="#ffc8d8"><tt>&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%">Methods inherited from <a href="matplotlib.backend_bases.html#FigureManagerBase">matplotlib.backend_bases.FigureManagerBase</a>:<br>
<dl><dt><a name="FigureManagerPS-__init__"><strong>__init__</strong></a>(self, canvas, num)</dt></dl>

<dl><dt><a name="FigureManagerPS-destroy"><strong>destroy</strong></a>(self)</dt></dl>

<dl><dt><a name="FigureManagerPS-full_screen_toggle"><strong>full_screen_toggle</strong></a>(self)</dt></dl>

<dl><dt><a name="FigureManagerPS-key_press"><strong>key_press</strong></a>(self, event)</dt></dl>

<dl><dt><a name="FigureManagerPS-resize"><strong>resize</strong></a>(self, w, h)</dt><dd><tt>For&nbsp;gui&nbsp;backends:&nbsp;resize&nbsp;window&nbsp;in&nbsp;pixels</tt></dd></dl>

<dl><dt><a name="FigureManagerPS-set_window_title"><strong>set_window_title</strong></a>(self, title)</dt><dd><tt>Set&nbsp;the&nbsp;title&nbsp;text&nbsp;of&nbsp;the&nbsp;window&nbsp;containing&nbsp;the&nbsp;figure.&nbsp;&nbsp;Note&nbsp;that<br>
this&nbsp;has&nbsp;no&nbsp;effect&nbsp;if&nbsp;there&nbsp;is&nbsp;no&nbsp;window&nbsp;(eg,&nbsp;a&nbsp;PS&nbsp;backend).</tt></dd></dl>

<dl><dt><a name="FigureManagerPS-show_popup"><strong>show_popup</strong></a>(self, msg)</dt><dd><tt>Display&nbsp;message&nbsp;in&nbsp;a&nbsp;popup&nbsp;--&nbsp;GUI&nbsp;only</tt></dd></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="FigureManagerPS">class <strong>FigureManagerPS</strong></a>(<a href="matplotlib.backend_bases.html#FigureManagerBase">matplotlib.backend_bases.FigureManagerBase</a>)</font></td></tr>
    
<tr><td bgcolor="#ffc8d8"><tt>&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%">Methods inherited from <a href="matplotlib.backend_bases.html#FigureManagerBase">matplotlib.backend_bases.FigureManagerBase</a>:<br>
<dl><dt><a name="FigureManagerPS-__init__"><strong>__init__</strong></a>(self, canvas, num)</dt></dl>

<dl><dt><a name="FigureManagerPS-destroy"><strong>destroy</strong></a>(self)</dt></dl>

<dl><dt><a name="FigureManagerPS-full_screen_toggle"><strong>full_screen_toggle</strong></a>(self)</dt></dl>

<dl><dt><a name="FigureManagerPS-key_press"><strong>key_press</strong></a>(self, event)</dt></dl>

<dl><dt><a name="FigureManagerPS-resize"><strong>resize</strong></a>(self, w, h)</dt><dd><tt>For&nbsp;gui&nbsp;backends:&nbsp;resize&nbsp;window&nbsp;in&nbsp;pixels</tt></dd></dl>

<dl><dt><a name="FigureManagerPS-set_window_title"><strong>set_window_title</strong></a>(self, title)</dt><dd><tt>Set&nbsp;the&nbsp;title&nbsp;text&nbsp;of&nbsp;the&nbsp;window&nbsp;containing&nbsp;the&nbsp;figure.&nbsp;&nbsp;Note&nbsp;that<br>
this&nbsp;has&nbsp;no&nbsp;effect&nbsp;if&nbsp;there&nbsp;is&nbsp;no&nbsp;window&nbsp;(eg,&nbsp;a&nbsp;PS&nbsp;backend).</tt></dd></dl>

<dl><dt><a name="FigureManagerPS-show_popup"><strong>show_popup</strong></a>(self, msg)</dt><dd><tt>Display&nbsp;message&nbsp;in&nbsp;a&nbsp;popup&nbsp;--&nbsp;GUI&nbsp;only</tt></dd></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="GraphicsContextPS">class <strong>GraphicsContextPS</strong></a>(<a href="matplotlib.backend_bases.html#GraphicsContextBase">matplotlib.backend_bases.GraphicsContextBase</a>)</font></td></tr>
    
<tr><td bgcolor="#ffc8d8"><tt>&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="GraphicsContextPS-get_capstyle"><strong>get_capstyle</strong></a>(self)</dt></dl>

<dl><dt><a name="GraphicsContextPS-get_joinstyle"><strong>get_joinstyle</strong></a>(self)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.backend_bases.html#GraphicsContextBase">matplotlib.backend_bases.GraphicsContextBase</a>:<br>
<dl><dt><a name="GraphicsContextPS-__init__"><strong>__init__</strong></a>(self)</dt></dl>

<dl><dt><a name="GraphicsContextPS-copy_properties"><strong>copy_properties</strong></a>(self, gc)</dt><dd><tt>Copy&nbsp;properties&nbsp;from&nbsp;gc&nbsp;to&nbsp;self</tt></dd></dl>

<dl><dt><a name="GraphicsContextPS-get_alpha"><strong>get_alpha</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on<br>
all&nbsp;backends</tt></dd></dl>

<dl><dt><a name="GraphicsContextPS-get_antialiased"><strong>get_antialiased</strong></a>(self)</dt><dd><tt>Return&nbsp;true&nbsp;if&nbsp;the&nbsp;object&nbsp;should&nbsp;try&nbsp;to&nbsp;do&nbsp;antialiased&nbsp;rendering</tt></dd></dl>

<dl><dt><a name="GraphicsContextPS-get_clip_path"><strong>get_clip_path</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;clip&nbsp;path&nbsp;in&nbsp;the&nbsp;form&nbsp;(path,&nbsp;transform),&nbsp;where&nbsp;path<br>
is&nbsp;a&nbsp;path.Path&nbsp;instance,&nbsp;and&nbsp;transform&nbsp;as&nbsp;an&nbsp;affine&nbsp;transform<br>
to&nbsp;apply&nbsp;to&nbsp;the&nbsp;path&nbsp;before&nbsp;clipping.</tt></dd></dl>

<dl><dt><a name="GraphicsContextPS-get_clip_rectangle"><strong>get_clip_rectangle</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;clip&nbsp;rectangle&nbsp;as&nbsp;a&nbsp;Bbox&nbsp;instance</tt></dd></dl>

<dl><dt><a name="GraphicsContextPS-get_dashes"><strong>get_dashes</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;dash&nbsp;information&nbsp;as&nbsp;an&nbsp;offset&nbsp;dashlist&nbsp;tuple&nbsp;The<br>
dash&nbsp;list&nbsp;is&nbsp;a&nbsp;even&nbsp;size&nbsp;list&nbsp;that&nbsp;gives&nbsp;the&nbsp;ink&nbsp;on,&nbsp;ink&nbsp;off<br>
in&nbsp;pixels.&nbsp;&nbsp;See&nbsp;p107&nbsp;of&nbsp;to&nbsp;postscript&nbsp;BLUEBOOK&nbsp;for&nbsp;more&nbsp;info<br>
&nbsp;<br>
Default&nbsp;value&nbsp;is&nbsp;None</tt></dd></dl>

<dl><dt><a name="GraphicsContextPS-get_hatch"><strong>get_hatch</strong></a>(self)</dt><dd><tt>Gets&nbsp;the&nbsp;current&nbsp;hatch&nbsp;style</tt></dd></dl>

<dl><dt><a name="GraphicsContextPS-get_linestyle"><strong>get_linestyle</strong></a>(self, style)</dt><dd><tt>Return&nbsp;the&nbsp;linestyle:&nbsp;one&nbsp;of&nbsp;('solid',&nbsp;'dashed',&nbsp;'dashdot',<br>
'dotted').</tt></dd></dl>

<dl><dt><a name="GraphicsContextPS-get_linewidth"><strong>get_linewidth</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;line&nbsp;width&nbsp;in&nbsp;points&nbsp;as&nbsp;a&nbsp;scalar</tt></dd></dl>

<dl><dt><a name="GraphicsContextPS-get_rgb"><strong>get_rgb</strong></a>(self)</dt><dd><tt>returns&nbsp;a&nbsp;tuple&nbsp;of&nbsp;three&nbsp;floats&nbsp;from&nbsp;0-1.&nbsp;&nbsp;color&nbsp;can&nbsp;be&nbsp;a<br>
matlab&nbsp;format&nbsp;string,&nbsp;a&nbsp;html&nbsp;hex&nbsp;color&nbsp;string,&nbsp;or&nbsp;a&nbsp;rgb&nbsp;tuple</tt></dd></dl>

<dl><dt><a name="GraphicsContextPS-set_alpha"><strong>set_alpha</strong></a>(self, alpha)</dt><dd><tt>Set&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on<br>
all&nbsp;backends</tt></dd></dl>

<dl><dt><a name="GraphicsContextPS-set_antialiased"><strong>set_antialiased</strong></a>(self, b)</dt><dd><tt>True&nbsp;if&nbsp;object&nbsp;should&nbsp;be&nbsp;drawn&nbsp;with&nbsp;antialiased&nbsp;rendering</tt></dd></dl>

<dl><dt><a name="GraphicsContextPS-set_capstyle"><strong>set_capstyle</strong></a>(self, cs)</dt><dd><tt>Set&nbsp;the&nbsp;capstyle&nbsp;as&nbsp;a&nbsp;string&nbsp;in&nbsp;('butt',&nbsp;'round',&nbsp;'projecting')</tt></dd></dl>

<dl><dt><a name="GraphicsContextPS-set_clip_path"><strong>set_clip_path</strong></a>(self, path)</dt><dd><tt>Set&nbsp;the&nbsp;clip&nbsp;path&nbsp;and&nbsp;transformation.&nbsp;&nbsp;Path&nbsp;should&nbsp;be&nbsp;a<br>
transforms.TransformedPath&nbsp;instance.</tt></dd></dl>

<dl><dt><a name="GraphicsContextPS-set_clip_rectangle"><strong>set_clip_rectangle</strong></a>(self, rectangle)</dt><dd><tt>Set&nbsp;the&nbsp;clip&nbsp;rectangle&nbsp;with&nbsp;sequence&nbsp;(left,&nbsp;bottom,&nbsp;width,&nbsp;height)</tt></dd></dl>

<dl><dt><a name="GraphicsContextPS-set_dashes"><strong>set_dashes</strong></a>(self, dash_offset, dash_list)</dt><dd><tt>Set&nbsp;the&nbsp;dash&nbsp;style&nbsp;for&nbsp;the&nbsp;gc.<br>
dash_offset&nbsp;is&nbsp;the&nbsp;offset&nbsp;(usually&nbsp;0).<br>
dash_list&nbsp;specifies&nbsp;the&nbsp;on-off&nbsp;sequence&nbsp;as&nbsp;points<br>
(None,&nbsp;None)&nbsp;specifies&nbsp;a&nbsp;solid&nbsp;line</tt></dd></dl>

<dl><dt><a name="GraphicsContextPS-set_foreground"><strong>set_foreground</strong></a>(self, fg, isRGB<font color="#909090">=False</font>)</dt><dd><tt>Set&nbsp;the&nbsp;foreground&nbsp;color.&nbsp;&nbsp;fg&nbsp;can&nbsp;be&nbsp;a&nbsp;matlab&nbsp;format&nbsp;string,&nbsp;a<br>
html&nbsp;hex&nbsp;color&nbsp;string,&nbsp;an&nbsp;rgb&nbsp;unit&nbsp;tuple,&nbsp;or&nbsp;a&nbsp;float&nbsp;between&nbsp;0<br>
and&nbsp;1.&nbsp;&nbsp;In&nbsp;the&nbsp;latter&nbsp;case,&nbsp;grayscale&nbsp;is&nbsp;used.<br>
&nbsp;<br>
The&nbsp;GraphicsContext&nbsp;converts&nbsp;colors&nbsp;to&nbsp;rgb&nbsp;internally.&nbsp;&nbsp;If&nbsp;you<br>
know&nbsp;the&nbsp;color&nbsp;is&nbsp;rgb&nbsp;already,&nbsp;you&nbsp;can&nbsp;set&nbsp;isRGB&nbsp;to&nbsp;True&nbsp;to<br>
avoid&nbsp;the&nbsp;performace&nbsp;hit&nbsp;of&nbsp;the&nbsp;conversion</tt></dd></dl>

<dl><dt><a name="GraphicsContextPS-set_graylevel"><strong>set_graylevel</strong></a>(self, frac)</dt><dd><tt>Set&nbsp;the&nbsp;foreground&nbsp;color&nbsp;to&nbsp;be&nbsp;a&nbsp;gray&nbsp;level&nbsp;with&nbsp;frac&nbsp;frac</tt></dd></dl>

<dl><dt><a name="GraphicsContextPS-set_hatch"><strong>set_hatch</strong></a>(self, hatch)</dt><dd><tt>Sets&nbsp;the&nbsp;hatch&nbsp;style&nbsp;for&nbsp;filling</tt></dd></dl>

<dl><dt><a name="GraphicsContextPS-set_joinstyle"><strong>set_joinstyle</strong></a>(self, js)</dt><dd><tt>Set&nbsp;the&nbsp;join&nbsp;style&nbsp;to&nbsp;be&nbsp;one&nbsp;of&nbsp;('miter',&nbsp;'round',&nbsp;'bevel')</tt></dd></dl>

<dl><dt><a name="GraphicsContextPS-set_linestyle"><strong>set_linestyle</strong></a>(self, style)</dt><dd><tt>Set&nbsp;the&nbsp;linestyle&nbsp;to&nbsp;be&nbsp;one&nbsp;of&nbsp;('solid',&nbsp;'dashed',&nbsp;'dashdot',<br>
'dotted').</tt></dd></dl>

<dl><dt><a name="GraphicsContextPS-set_linewidth"><strong>set_linewidth</strong></a>(self, w)</dt><dd><tt>Set&nbsp;the&nbsp;linewidth&nbsp;in&nbsp;points</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.backend_bases.html#GraphicsContextBase">matplotlib.backend_bases.GraphicsContextBase</a>:<br>
<dl><dt><strong>dashd</strong> = {'dashdot': (0, (3.0, 5.0, 1.0, 5.0)), 'dashed': (0, (6.0, 6.0)), 'dotted': (0, (1.0, 3.0)), 'solid': (None, None)}</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="RendererPS">class <strong>RendererPS</strong></a>(<a href="matplotlib.backend_bases.html#RendererBase">matplotlib.backend_bases.RendererBase</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>The&nbsp;renderer&nbsp;handles&nbsp;all&nbsp;the&nbsp;drawing&nbsp;primitives&nbsp;using&nbsp;a&nbsp;graphics<br>
context&nbsp;instance&nbsp;that&nbsp;controls&nbsp;the&nbsp;colors/styles.<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="RendererPS-__init__"><strong>__init__</strong></a>(self, width, height, pswriter, dpi<font color="#909090">=72</font>)</dt></dl>

<dl><dt><a name="RendererPS-draw_image"><strong>draw_image</strong></a>(self, x, y, im, bbox, clippath<font color="#909090">=None</font>, clippath_trans<font color="#909090">=None</font>)</dt><dd><tt>Draw&nbsp;the&nbsp;Image&nbsp;instance&nbsp;into&nbsp;the&nbsp;current&nbsp;axes;&nbsp;x&nbsp;is&nbsp;the<br>
distance&nbsp;in&nbsp;pixels&nbsp;from&nbsp;the&nbsp;left&nbsp;hand&nbsp;side&nbsp;of&nbsp;the&nbsp;canvas&nbsp;and&nbsp;y<br>
is&nbsp;the&nbsp;distance&nbsp;from&nbsp;bottom<br>
&nbsp;<br>
bbox&nbsp;is&nbsp;a&nbsp;matplotlib.transforms.BBox&nbsp;instance&nbsp;for&nbsp;clipping,&nbsp;or<br>
None</tt></dd></dl>

<dl><dt><a name="RendererPS-draw_markers"><strong>draw_markers</strong></a>(self, gc, marker_path, marker_trans, path, trans, rgbFace<font color="#909090">=None</font>)</dt><dd><tt>Draw&nbsp;the&nbsp;markers&nbsp;defined&nbsp;by&nbsp;path&nbsp;at&nbsp;each&nbsp;of&nbsp;the&nbsp;positions&nbsp;in&nbsp;x<br>
and&nbsp;y.&nbsp;&nbsp;path&nbsp;coordinates&nbsp;are&nbsp;points,&nbsp;x&nbsp;and&nbsp;y&nbsp;coords&nbsp;will&nbsp;be<br>
transformed&nbsp;by&nbsp;the&nbsp;transform</tt></dd></dl>

<dl><dt><a name="RendererPS-draw_mathtext"><strong>draw_mathtext</strong></a>(self, gc, x, y, s, prop, angle)</dt><dd><tt>Draw&nbsp;the&nbsp;math&nbsp;text&nbsp;using&nbsp;matplotlib.mathtext</tt></dd></dl>

<dl><dt><a name="RendererPS-draw_path"><strong>draw_path</strong></a>(self, gc, path, transform, rgbFace<font color="#909090">=None</font>)</dt><dd><tt>Draws&nbsp;a&nbsp;Path&nbsp;instance&nbsp;using&nbsp;the&nbsp;given&nbsp;affine&nbsp;transform.</tt></dd></dl>

<dl><dt><a name="RendererPS-draw_path_collection"><strong>draw_path_collection</strong></a>(self, master_transform, cliprect, clippath, clippath_trans, paths, all_transforms, offsets, offsetTrans, facecolors, edgecolors, linewidths, linestyles, antialiaseds)</dt></dl>

<dl><dt><a name="RendererPS-draw_tex"><strong>draw_tex</strong></a>(self, gc, x, y, s, prop, angle, ismath<font color="#909090">='TeX!'</font>)</dt><dd><tt>draw&nbsp;a&nbsp;Text&nbsp;instance</tt></dd></dl>

<dl><dt><a name="RendererPS-draw_text"><strong>draw_text</strong></a>(self, gc, x, y, s, prop, angle, ismath)</dt><dd><tt>draw&nbsp;a&nbsp;Text&nbsp;instance</tt></dd></dl>

<dl><dt><a name="RendererPS-draw_unicode"><strong>draw_unicode</strong></a>(self, gc, x, y, s, prop, angle)</dt><dd><tt>draw&nbsp;a&nbsp;unicode&nbsp;string.&nbsp;&nbsp;ps&nbsp;doesn't&nbsp;have&nbsp;unicode&nbsp;support,&nbsp;so<br>
we&nbsp;have&nbsp;to&nbsp;do&nbsp;this&nbsp;the&nbsp;hard&nbsp;way</tt></dd></dl>

<dl><dt><a name="RendererPS-flipy"><strong>flipy</strong></a>(self)</dt><dd><tt>return&nbsp;true&nbsp;if&nbsp;small&nbsp;y&nbsp;numbers&nbsp;are&nbsp;top&nbsp;for&nbsp;renderer</tt></dd></dl>

<dl><dt><a name="RendererPS-get_canvas_width_height"><strong>get_canvas_width_height</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;canvas&nbsp;width&nbsp;and&nbsp;height&nbsp;in&nbsp;display&nbsp;coords</tt></dd></dl>

<dl><dt><a name="RendererPS-get_image_magnification"><strong>get_image_magnification</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;factor&nbsp;by&nbsp;which&nbsp;to&nbsp;magnify&nbsp;images&nbsp;passed&nbsp;to&nbsp;draw_image.<br>
Allows&nbsp;a&nbsp;backend&nbsp;to&nbsp;have&nbsp;images&nbsp;at&nbsp;a&nbsp;different&nbsp;resolution&nbsp;to&nbsp;other<br>
artists.</tt></dd></dl>

<dl><dt><a name="RendererPS-get_text_width_height_descent"><strong>get_text_width_height_descent</strong></a>(self, s, prop, ismath)</dt><dd><tt>get&nbsp;the&nbsp;width&nbsp;and&nbsp;height&nbsp;in&nbsp;display&nbsp;coords&nbsp;of&nbsp;the&nbsp;string&nbsp;s<br>
with&nbsp;FontPropertry&nbsp;prop</tt></dd></dl>

<dl><dt><a name="RendererPS-merge_used_characters"><strong>merge_used_characters</strong></a>(self, other)</dt></dl>

<dl><dt><a name="RendererPS-new_gc"><strong>new_gc</strong></a>(self)</dt></dl>

<dl><dt><a name="RendererPS-set_color"><strong>set_color</strong></a>(self, r, g, b, store<font color="#909090">=1</font>)</dt></dl>

<dl><dt><a name="RendererPS-set_font"><strong>set_font</strong></a>(self, fontname, fontsize, store<font color="#909090">=1</font>)</dt></dl>

<dl><dt><a name="RendererPS-set_hatch"><strong>set_hatch</strong></a>(self, hatch)</dt><dd><tt>hatch&nbsp;can&nbsp;be&nbsp;one&nbsp;of:<br>
&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;-&nbsp;diagonal&nbsp;hatching<br>
&nbsp;&nbsp;&nbsp;&nbsp;\&nbsp;&nbsp;&nbsp;-&nbsp;back&nbsp;diagonal<br>
&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;-&nbsp;vertical<br>
&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;&nbsp;-&nbsp;horizontal<br>
&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;&nbsp;&nbsp;-&nbsp;crossed<br>
&nbsp;&nbsp;&nbsp;&nbsp;X&nbsp;&nbsp;&nbsp;-&nbsp;crossed&nbsp;diagonal<br>
&nbsp;<br>
letters&nbsp;can&nbsp;be&nbsp;combined,&nbsp;in&nbsp;which&nbsp;case&nbsp;all&nbsp;the&nbsp;specified<br>
hatchings&nbsp;are&nbsp;done<br>
&nbsp;<br>
if&nbsp;same&nbsp;letter&nbsp;repeats,&nbsp;it&nbsp;increases&nbsp;the&nbsp;density&nbsp;of&nbsp;hatching<br>
in&nbsp;that&nbsp;direction</tt></dd></dl>

<dl><dt><a name="RendererPS-set_linecap"><strong>set_linecap</strong></a>(self, linecap, store<font color="#909090">=1</font>)</dt></dl>

<dl><dt><a name="RendererPS-set_linedash"><strong>set_linedash</strong></a>(self, offset, seq, store<font color="#909090">=1</font>)</dt></dl>

<dl><dt><a name="RendererPS-set_linejoin"><strong>set_linejoin</strong></a>(self, linejoin, store<font color="#909090">=1</font>)</dt></dl>

<dl><dt><a name="RendererPS-set_linewidth"><strong>set_linewidth</strong></a>(self, linewidth, store<font color="#909090">=1</font>)</dt></dl>

<dl><dt><a name="RendererPS-track_characters"><strong>track_characters</strong></a>(self, font, s)</dt><dd><tt>Keeps&nbsp;track&nbsp;of&nbsp;which&nbsp;characters&nbsp;are&nbsp;required&nbsp;from<br>
each&nbsp;font.</tt></dd></dl>

<hr>
Data and other attributes defined here:<br>
<dl><dt><strong>afmfontd</strong> = {}</dl>

<dl><dt><strong>fontd</strong> = {}</dl>

<hr>
Methods inherited from <a href="matplotlib.backend_bases.html#RendererBase">matplotlib.backend_bases.RendererBase</a>:<br>
<dl><dt><a name="RendererPS-close_group"><strong>close_group</strong></a>(self, s)</dt><dd><tt>close&nbsp;a&nbsp;grouping&nbsp;element&nbsp;with&nbsp;label&nbsp;s<br>
Is&nbsp;only&nbsp;currently&nbsp;used&nbsp;by&nbsp;backend_svg</tt></dd></dl>

<dl><dt><a name="RendererPS-draw_quad_mesh"><strong>draw_quad_mesh</strong></a>(self, master_transform, cliprect, clippath, clippath_trans, meshWidth, meshHeight, coordinates, offsets, offsetTrans, facecolors, antialiased, showedges)</dt><dd><tt>This&nbsp;provides&nbsp;a&nbsp;fallback&nbsp;implementation&nbsp;of&nbsp;draw_quad_mesh&nbsp;that<br>
generates&nbsp;paths&nbsp;and&nbsp;then&nbsp;calls&nbsp;draw_path_collection.</tt></dd></dl>

<dl><dt><a name="RendererPS-get_texmanager"><strong>get_texmanager</strong></a>(self)</dt></dl>

<dl><dt><a name="RendererPS-open_group"><strong>open_group</strong></a>(self, s)</dt><dd><tt>open&nbsp;a&nbsp;grouping&nbsp;element&nbsp;with&nbsp;label&nbsp;s<br>
Is&nbsp;only&nbsp;currently&nbsp;used&nbsp;by&nbsp;backend_svg</tt></dd></dl>

<dl><dt><a name="RendererPS-option_image_nocomposite"><strong>option_image_nocomposite</strong></a>(self)</dt><dd><tt>overwrite&nbsp;this&nbsp;method&nbsp;for&nbsp;renderers&nbsp;that&nbsp;do&nbsp;not&nbsp;necessarily<br>
want&nbsp;to&nbsp;rescale&nbsp;and&nbsp;composite&nbsp;raster&nbsp;images.&nbsp;(like&nbsp;SVG)</tt></dd></dl>

<dl><dt><a name="RendererPS-points_to_pixels"><strong>points_to_pixels</strong></a>(self, points)</dt><dd><tt>Convert&nbsp;points&nbsp;to&nbsp;display&nbsp;units<br>
points&nbsp;-&nbsp;a&nbsp;float&nbsp;or&nbsp;a&nbsp;numpy&nbsp;array&nbsp;of&nbsp;float<br>
return&nbsp;points&nbsp;converted&nbsp;to&nbsp;pixels<br>
&nbsp;<br>
You&nbsp;need&nbsp;to&nbsp;override&nbsp;this&nbsp;function&nbsp;(unless&nbsp;your&nbsp;backend&nbsp;doesn't&nbsp;have&nbsp;a<br>
dpi,&nbsp;eg,&nbsp;postscript&nbsp;or&nbsp;svg).<br>
Some&nbsp;imaging&nbsp;systems&nbsp;assume&nbsp;some&nbsp;value&nbsp;for&nbsp;pixels&nbsp;per&nbsp;inch.<br>
points&nbsp;to&nbsp;pixels&nbsp;=&nbsp;points&nbsp;*&nbsp;pixels_per_inch/72.0&nbsp;*&nbsp;dpi/72.0</tt></dd></dl>

<dl><dt><a name="RendererPS-start_rasterizing"><strong>start_rasterizing</strong></a>(self)</dt></dl>

<dl><dt><a name="RendererPS-stop_rasterizing"><strong>stop_rasterizing</strong></a>(self)</dt></dl>

<dl><dt><a name="RendererPS-strip_math"><strong>strip_math</strong></a>(self, s)</dt></dl>

</td></tr></table></td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#eeaa77">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Functions</strong></big></font></td></tr>
    
<tr><td bgcolor="#eeaa77"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl><dt><a name="-FT2Font"><strong>FT2Font</strong></a>(...)</dt><dd><tt>FT2Font</tt></dd></dl>
 <dl><dt><a name="-StringIO"><strong>StringIO</strong></a>(...)</dt><dd><tt><a href="#-StringIO">StringIO</a>([s])&nbsp;--&nbsp;Return&nbsp;a&nbsp;StringIO-like&nbsp;stream&nbsp;for&nbsp;reading&nbsp;or&nbsp;writing</tt></dd></dl>
 <dl><dt><a name="-convert_psfrags"><strong>convert_psfrags</strong></a>(tmpfile, psfrags, font_preamble, custom_preamble, paperWidth, paperHeight, orientation)</dt><dd><tt>When&nbsp;we&nbsp;want&nbsp;to&nbsp;use&nbsp;the&nbsp;LaTeX&nbsp;backend&nbsp;with&nbsp;postscript,&nbsp;we&nbsp;write&nbsp;PSFrag&nbsp;tags<br>
to&nbsp;a&nbsp;temporary&nbsp;postscript&nbsp;file,&nbsp;each&nbsp;one&nbsp;marking&nbsp;a&nbsp;position&nbsp;for&nbsp;LaTeX&nbsp;to<br>
render&nbsp;some&nbsp;text.&nbsp;convert_psfrags&nbsp;generates&nbsp;a&nbsp;LaTeX&nbsp;document&nbsp;containing&nbsp;the<br>
commands&nbsp;to&nbsp;convert&nbsp;those&nbsp;tags&nbsp;to&nbsp;text.&nbsp;LaTeX/dvips&nbsp;produces&nbsp;the&nbsp;postscript<br>
file&nbsp;that&nbsp;includes&nbsp;the&nbsp;actual&nbsp;text.</tt></dd></dl>
 <dl><dt><a name="-convert_ttf_to_ps"><strong>convert_ttf_to_ps</strong></a>(...)</dt><dd><tt><a href="#-convert_ttf_to_ps">convert_ttf_to_ps</a>(filename,&nbsp;output,&nbsp;fonttype,&nbsp;glyph_ids)<br>
&nbsp;<br>
Converts&nbsp;the&nbsp;Truetype&nbsp;font&nbsp;into&nbsp;a&nbsp;Type&nbsp;3&nbsp;or&nbsp;Type&nbsp;42&nbsp;Postscript&nbsp;font,&nbsp;optionally&nbsp;subsetting&nbsp;the&nbsp;font&nbsp;to&nbsp;only&nbsp;the&nbsp;desired&nbsp;set&nbsp;of&nbsp;characters.<br>
&nbsp;<br>
filename&nbsp;is&nbsp;the&nbsp;path&nbsp;to&nbsp;a&nbsp;TTF&nbsp;font&nbsp;file.<br>
output&nbsp;is&nbsp;a&nbsp;Python&nbsp;file-like&nbsp;object&nbsp;with&nbsp;a&nbsp;write&nbsp;method&nbsp;that&nbsp;the&nbsp;Postscript&nbsp;font&nbsp;data&nbsp;will&nbsp;be&nbsp;written&nbsp;to.<br>
fonttype&nbsp;may&nbsp;be&nbsp;either&nbsp;3&nbsp;or&nbsp;42.&nbsp;&nbsp;Type&nbsp;3&nbsp;is&nbsp;a&nbsp;"raw&nbsp;Postscript"&nbsp;font.&nbsp;Type&nbsp;42&nbsp;is&nbsp;an&nbsp;embedded&nbsp;Truetype&nbsp;font.&nbsp;&nbsp;Glyph&nbsp;subsetting&nbsp;is&nbsp;not&nbsp;supported&nbsp;for&nbsp;Type&nbsp;42&nbsp;fonts.<br>
glyph_ids&nbsp;(optional)&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;glyph&nbsp;ids&nbsp;(integers)&nbsp;to&nbsp;keep&nbsp;when&nbsp;subsetting&nbsp;to&nbsp;a&nbsp;Type&nbsp;3&nbsp;font.&nbsp;&nbsp;If&nbsp;glyph_ids&nbsp;is&nbsp;not&nbsp;provided&nbsp;or&nbsp;is&nbsp;None,&nbsp;then&nbsp;all&nbsp;glyphs&nbsp;will&nbsp;be&nbsp;included.&nbsp;&nbsp;If&nbsp;any&nbsp;of&nbsp;the&nbsp;glyphs&nbsp;specified&nbsp;are&nbsp;composite&nbsp;glyphs,&nbsp;then&nbsp;the&nbsp;component&nbsp;glyphs&nbsp;will&nbsp;also&nbsp;be&nbsp;included.</tt></dd></dl>
 <dl><dt><a name="-get_bbox"><strong>get_bbox</strong></a>(tmpfile, bbox)</dt><dd><tt>Use&nbsp;ghostscript's&nbsp;bbox&nbsp;device&nbsp;to&nbsp;find&nbsp;the&nbsp;center&nbsp;of&nbsp;the&nbsp;bounding&nbsp;box.&nbsp;Return<br>
an&nbsp;appropriately&nbsp;sized&nbsp;bbox&nbsp;centered&nbsp;around&nbsp;that&nbsp;point.&nbsp;A&nbsp;bit&nbsp;of&nbsp;a&nbsp;hack.</tt></dd></dl>
 <dl><dt><a name="-gs_distill"><strong>gs_distill</strong></a>(tmpfile, eps<font color="#909090">=False</font>, ptype<font color="#909090">='letter'</font>, bbox<font color="#909090">=None</font>)</dt><dd><tt>Use&nbsp;ghostscript's&nbsp;pswrite&nbsp;or&nbsp;epswrite&nbsp;device&nbsp;to&nbsp;distill&nbsp;a&nbsp;file.<br>
This&nbsp;yields&nbsp;smaller&nbsp;files&nbsp;without&nbsp;illegal&nbsp;encapsulated&nbsp;postscript<br>
operators.&nbsp;The&nbsp;output&nbsp;is&nbsp;low-level,&nbsp;converting&nbsp;text&nbsp;to&nbsp;outlines.</tt></dd></dl>
 <dl><dt><a name="-new_figure_manager"><strong>new_figure_manager</strong></a>(num, *args, **kwargs)</dt></dl>
 <dl><dt><a name="-pstoeps"><strong>pstoeps</strong></a>(tmpfile, bbox)</dt><dd><tt>Convert&nbsp;the&nbsp;postscript&nbsp;to&nbsp;encapsulated&nbsp;postscript.</tt></dd></dl>
 <dl><dt><a name="-quote_ps_string"><strong>quote_ps_string</strong></a>(s)</dt><dd><tt>Quote&nbsp;dangerous&nbsp;characters&nbsp;of&nbsp;S&nbsp;for&nbsp;use&nbsp;in&nbsp;a&nbsp;PostScript&nbsp;string&nbsp;constant.</tt></dd></dl>
 <dl><dt><a name="-seq_allequal"><strong>seq_allequal</strong></a>(seq1, seq2)</dt><dd><tt>seq1&nbsp;and&nbsp;seq2&nbsp;are&nbsp;either&nbsp;None&nbsp;or&nbsp;sequences&nbsp;or&nbsp;numerix&nbsp;arrays<br>
Return&nbsp;True&nbsp;if&nbsp;both&nbsp;are&nbsp;None&nbsp;or&nbsp;both&nbsp;are&nbsp;seqs&nbsp;with&nbsp;identical<br>
elements</tt></dd></dl>
 <dl><dt><a name="-xpdf_distill"><strong>xpdf_distill</strong></a>(tmpfile, eps<font color="#909090">=False</font>, ptype<font color="#909090">='letter'</font>, bbox<font color="#909090">=None</font>)</dt><dd><tt>Use&nbsp;ghostscript's&nbsp;ps2pdf&nbsp;and&nbsp;xpdf's/poppler's&nbsp;pdftops&nbsp;to&nbsp;distill&nbsp;a&nbsp;file.<br>
This&nbsp;yields&nbsp;smaller&nbsp;files&nbsp;without&nbsp;illegal&nbsp;encapsulated&nbsp;postscript<br>
operators.&nbsp;This&nbsp;distiller&nbsp;is&nbsp;preferred,&nbsp;generating&nbsp;high-level&nbsp;postscript<br>
output&nbsp;that&nbsp;treats&nbsp;text&nbsp;as&nbsp;text.</tt></dd></dl>
</td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#55aa55">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Data</strong></big></font></td></tr>
    
<tr><td bgcolor="#55aa55"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><strong>KERNING_DEFAULT</strong> = 0<br>
<strong>LOAD_NO_HINTING</strong> = 2L<br>
<strong>__version__</strong> = '0.98.0'<br>
<strong>backend_version</strong> = 'Level II'<br>
<strong>cmd_split</strong> = ';'<br>
<strong>debugPS</strong> = 0<br>
<strong>division</strong> = _Feature((2, 2, 0, 'alpha', 2), (3, 0, 0, 'alpha', 0), 8192)<br>
<strong>get_realpath_and_stat</strong> = &lt;matplotlib.cbook.GetRealpathAndStat instance at 0xe15d40&gt;<br>
<strong>papersize</strong> = {'a0': (33.109999999999999, 46.810000000000002), 'a1': (23.390000000000001, 33.109999999999999), 'a10': (1.02, 1.4570000000000001), 'a2': (16.539999999999999, 23.390000000000001), 'a3': (11.69, 16.539999999999999), 'a4': (8.2699999999999996, 11.69), 'a5': (5.8300000000000001, 8.2699999999999996), 'a6': (4.1299999999999999, 5.8300000000000001), 'a7': (2.9100000000000001, 4.1299999999999999), 'a8': (2.0699999999999998, 2.9100000000000001), ...}<br>
<strong>psDefs</strong> = ['/m { moveto } bind def', '/l { lineto } bind def', '/r { rlineto } bind def', '/c { curveto } bind def', '/cl { closepath } bind def', '/box {<font color="#c040c0">\n</font>      m<font color="#c040c0">\n</font>      1 index 0 r<font color="#c040c0">\n</font>      0 exch r<font color="#c040c0">\n</font>      neg 0 r<font color="#c040c0">\n</font>      cl<font color="#c040c0">\n</font>    } bind def', '/clipbox {<font color="#c040c0">\n</font>      box<font color="#c040c0">\n</font>      clip<font color="#c040c0">\n</font>      newpath<font color="#c040c0">\n</font>    } bind def']<br>
<strong>rcParams</strong> = {'figure.subplot.right': 0.90000000000000002, 'm...persize': 'letter', 'svg.embed_char_paths': True}<br>
<strong>uni2type1</strong> = {32: 'space', 33: 'exclam', 34: 'quotedbl', 35: 'numbersign', 36: 'dollar', 37: 'percent', 38: 'ampersand', 39: 'quotesingle', 40: 'parenleft', 41: 'parenright', ...}<br>
<strong>verbose</strong> = &lt;matplotlib.Verbose instance at 0xe38c20&gt;</td></tr></table>
@footer@