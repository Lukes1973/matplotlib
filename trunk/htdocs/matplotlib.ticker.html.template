@header@
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
<tr bgcolor="#7799ee">
<td valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong><a href="matplotlib.html"><font color="#ffffff">matplotlib</font></a>.ticker</strong></big></big></font></td
><td align=right valign=bottom
><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/usr/lib/python2.4/site-packages/matplotlib/ticker.py">/usr/lib/python2.4/site-packages/matplotlib/ticker.py</a></font></td></tr></table>
    <p><tt>Tick&nbsp;locating&nbsp;and&nbsp;formatting<br>
============================<br>
&nbsp;<br>
This&nbsp;module&nbsp;contains&nbsp;classes&nbsp;to&nbsp;support&nbsp;completely&nbsp;configurable&nbsp;tick<br>
locating&nbsp;and&nbsp;formatting.&nbsp;&nbsp;Although&nbsp;the&nbsp;locators&nbsp;know&nbsp;nothing&nbsp;about<br>
major&nbsp;or&nbsp;minor&nbsp;ticks,&nbsp;they&nbsp;are&nbsp;used&nbsp;by&nbsp;the&nbsp;Axis&nbsp;class&nbsp;to&nbsp;support&nbsp;major<br>
and&nbsp;minor&nbsp;tick&nbsp;locating&nbsp;and&nbsp;formatting.&nbsp;&nbsp;Generic&nbsp;tick&nbsp;locators&nbsp;and<br>
formatters&nbsp;are&nbsp;provided,&nbsp;as&nbsp;well&nbsp;as&nbsp;domain&nbsp;specific&nbsp;custom&nbsp;ones..<br>
&nbsp;<br>
&nbsp;<br>
Tick&nbsp;locating<br>
-------------<br>
&nbsp;<br>
The&nbsp;<a href="#Locator">Locator</a>&nbsp;class&nbsp;is&nbsp;the&nbsp;base&nbsp;class&nbsp;for&nbsp;all&nbsp;tick&nbsp;locators.&nbsp;&nbsp;The<br>
locators&nbsp;handle&nbsp;autoscaling&nbsp;of&nbsp;the&nbsp;view&nbsp;limits&nbsp;based&nbsp;on&nbsp;the&nbsp;data<br>
limits,&nbsp;and&nbsp;the&nbsp;choosing&nbsp;of&nbsp;tick&nbsp;locations.&nbsp;&nbsp;The&nbsp;most&nbsp;generally&nbsp;useful<br>
tick&nbsp;locator&nbsp;is&nbsp;<a href="#MultipleLocator">MultipleLocator</a>.&nbsp;&nbsp;You&nbsp;initialize&nbsp;this&nbsp;with&nbsp;a&nbsp;base,&nbsp;eg<br>
10,&nbsp;and&nbsp;it&nbsp;picks&nbsp;axis&nbsp;limits&nbsp;and&nbsp;ticks&nbsp;that&nbsp;are&nbsp;multiples&nbsp;of&nbsp;your<br>
base.&nbsp;&nbsp;The&nbsp;class&nbsp;<a href="#AutoLocator">AutoLocator</a>&nbsp;contains&nbsp;a&nbsp;<a href="#MultipleLocator">MultipleLocator</a>&nbsp;instance,&nbsp;and<br>
dynamically&nbsp;updates&nbsp;it&nbsp;based&nbsp;upon&nbsp;the&nbsp;data&nbsp;and&nbsp;zoom&nbsp;limits.&nbsp;&nbsp;This<br>
should&nbsp;provide&nbsp;much&nbsp;more&nbsp;intelligent&nbsp;automatic&nbsp;tick&nbsp;locations&nbsp;both&nbsp;in<br>
figure&nbsp;creation&nbsp;and&nbsp;in&nbsp;navigation&nbsp;than&nbsp;in&nbsp;prior&nbsp;versions&nbsp;of<br>
matplotlib.<br>
&nbsp;<br>
The&nbsp;basic&nbsp;generic&nbsp;&nbsp;locators&nbsp;are<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;<a href="#NullLocator">NullLocator</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;No&nbsp;ticks<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;<a href="#FixedLocator">FixedLocator</a>&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;Tick&nbsp;locations&nbsp;are&nbsp;fixed<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;<a href="#IndexLocator">IndexLocator</a>&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;locator&nbsp;for&nbsp;index&nbsp;plots&nbsp;(eg&nbsp;where&nbsp;x&nbsp;=&nbsp;range(len(y))<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;<a href="#LinearLocator">LinearLocator</a>&nbsp;&nbsp;&nbsp;-&nbsp;evenly&nbsp;spaced&nbsp;ticks&nbsp;from&nbsp;min&nbsp;to&nbsp;max<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;<a href="#LogLocator">LogLocator</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;logarithmically&nbsp;ticks&nbsp;from&nbsp;min&nbsp;to&nbsp;max<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;<a href="#MultipleLocator">MultipleLocator</a>&nbsp;-&nbsp;ticks&nbsp;and&nbsp;range&nbsp;are&nbsp;a&nbsp;multiple&nbsp;of&nbsp;base;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;either&nbsp;integer&nbsp;or&nbsp;float<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;<a href="#AutoLocator">AutoLocator</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;choose&nbsp;a&nbsp;<a href="#MultipleLocator">MultipleLocator</a>&nbsp;and&nbsp;dyamically&nbsp;reassign<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it&nbsp;for&nbsp;intelligent&nbsp;ticking&nbsp;during&nbsp;navigation<br>
&nbsp;<br>
There&nbsp;are&nbsp;a&nbsp;number&nbsp;of&nbsp;locators&nbsp;specialized&nbsp;for&nbsp;date&nbsp;locations&nbsp;-&nbsp;see<br>
the&nbsp;dates&nbsp;module<br>
&nbsp;<br>
You&nbsp;can&nbsp;define&nbsp;your&nbsp;own&nbsp;locator&nbsp;by&nbsp;deriving&nbsp;from&nbsp;<a href="#Locator">Locator</a>.&nbsp;&nbsp;You&nbsp;must<br>
override&nbsp;the&nbsp;__call__&nbsp;method,&nbsp;which&nbsp;returns&nbsp;a&nbsp;sequence&nbsp;of&nbsp;locations,<br>
and&nbsp;you&nbsp;will&nbsp;probably&nbsp;want&nbsp;to&nbsp;override&nbsp;the&nbsp;autoscale&nbsp;method&nbsp;to&nbsp;set&nbsp;the<br>
view&nbsp;limits&nbsp;from&nbsp;the&nbsp;data&nbsp;limits.<br>
&nbsp;<br>
If&nbsp;you&nbsp;want&nbsp;to&nbsp;override&nbsp;the&nbsp;default&nbsp;locator,&nbsp;use&nbsp;one&nbsp;of&nbsp;the&nbsp;above&nbsp;or&nbsp;a<br>
custom&nbsp;locator&nbsp;and&nbsp;pass&nbsp;it&nbsp;to&nbsp;the&nbsp;x&nbsp;or&nbsp;y&nbsp;axis&nbsp;instance.&nbsp;&nbsp;The&nbsp;relevant<br>
methods&nbsp;are::<br>
&nbsp;<br>
&nbsp;&nbsp;ax.xaxis.set_major_locator(&nbsp;xmajorLocator&nbsp;)<br>
&nbsp;&nbsp;ax.xaxis.set_minor_locator(&nbsp;xminorLocator&nbsp;)<br>
&nbsp;&nbsp;ax.yaxis.set_major_locator(&nbsp;ymajorLocator&nbsp;)<br>
&nbsp;&nbsp;ax.yaxis.set_minor_locator(&nbsp;yminorLocator&nbsp;)<br>
&nbsp;<br>
The&nbsp;default&nbsp;minor&nbsp;locator&nbsp;is&nbsp;the&nbsp;<a href="#NullLocator">NullLocator</a>,&nbsp;eg&nbsp;no&nbsp;minor&nbsp;ticks&nbsp;on&nbsp;by<br>
default.<br>
&nbsp;<br>
Tick&nbsp;formatting<br>
---------------<br>
&nbsp;<br>
Tick&nbsp;formatting&nbsp;is&nbsp;controlled&nbsp;by&nbsp;classes&nbsp;derived&nbsp;from&nbsp;<a href="#Formatter">Formatter</a>.&nbsp;&nbsp;The<br>
formatter&nbsp;operates&nbsp;on&nbsp;a&nbsp;single&nbsp;tick&nbsp;value&nbsp;and&nbsp;returns&nbsp;a&nbsp;string&nbsp;to&nbsp;the<br>
axis.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;<a href="#NullFormatter">NullFormatter</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;no&nbsp;labels&nbsp;on&nbsp;the&nbsp;ticks<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;<a href="#FixedFormatter">FixedFormatter</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;set&nbsp;the&nbsp;strings&nbsp;manually&nbsp;for&nbsp;the&nbsp;labels<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;<a href="#FuncFormatter">FuncFormatter</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;user&nbsp;defined&nbsp;function&nbsp;sets&nbsp;the&nbsp;labels<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;<a href="#FormatStrFormatter">FormatStrFormatter</a>&nbsp;-&nbsp;use&nbsp;a&nbsp;sprintf&nbsp;format&nbsp;string<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;<a href="#ScalarFormatter">ScalarFormatter</a>&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;default&nbsp;formatter&nbsp;for&nbsp;scalars;&nbsp;autopick&nbsp;the&nbsp;fmt&nbsp;string<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;<a href="#LogFormatter">LogFormatter</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;formatter&nbsp;for&nbsp;log&nbsp;axes<br>
&nbsp;<br>
&nbsp;<br>
You&nbsp;can&nbsp;derive&nbsp;your&nbsp;own&nbsp;formatter&nbsp;from&nbsp;the&nbsp;<a href="#Formatter">Formatter</a>&nbsp;base&nbsp;class&nbsp;by<br>
simply&nbsp;overriding&nbsp;the&nbsp;__call__&nbsp;method.&nbsp;&nbsp;The&nbsp;formatter&nbsp;class&nbsp;has&nbsp;access<br>
to&nbsp;the&nbsp;axis&nbsp;view&nbsp;and&nbsp;data&nbsp;limits.<br>
&nbsp;<br>
To&nbsp;control&nbsp;the&nbsp;major&nbsp;and&nbsp;minor&nbsp;tick&nbsp;label&nbsp;formats,&nbsp;use&nbsp;one&nbsp;of&nbsp;the<br>
following&nbsp;methods::<br>
&nbsp;<br>
&nbsp;&nbsp;ax.xaxis.set_major_formatter(&nbsp;xmajorFormatter&nbsp;)<br>
&nbsp;&nbsp;ax.xaxis.set_minor_formatter(&nbsp;xminorFormatter&nbsp;)<br>
&nbsp;&nbsp;ax.yaxis.set_major_formatter(&nbsp;ymajorFormatter&nbsp;)<br>
&nbsp;&nbsp;ax.yaxis.set_minor_formatter(&nbsp;yminorFormatter&nbsp;)<br>
&nbsp;<br>
See&nbsp;examples/major_minor_demo1.py&nbsp;for&nbsp;an&nbsp;example&nbsp;of&nbsp;setting&nbsp;major&nbsp;an<br>
minor&nbsp;ticks.&nbsp;&nbsp;See&nbsp;the&nbsp;matplotlib.dates&nbsp;module&nbsp;for&nbsp;more&nbsp;information&nbsp;and<br>
examples&nbsp;of&nbsp;using&nbsp;date&nbsp;locators&nbsp;and&nbsp;formatters.<br>
&nbsp;<br>
DEVELOPERS&nbsp;NOTE<br>
&nbsp;<br>
If&nbsp;you&nbsp;are&nbsp;implementing&nbsp;your&nbsp;own&nbsp;class&nbsp;or&nbsp;modifying&nbsp;one&nbsp;of&nbsp;these,&nbsp;it<br>
is&nbsp;critical&nbsp;that&nbsp;you&nbsp;use&nbsp;viewlim&nbsp;and&nbsp;dataInterval&nbsp;READ&nbsp;ONLY&nbsp;MODE&nbsp;so<br>
multiple&nbsp;axes&nbsp;can&nbsp;share&nbsp;the&nbsp;same&nbsp;locator&nbsp;w/o&nbsp;side&nbsp;effects!</tt></p>
<p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#aa55cc">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
    
<tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="math.html">math</a><br>
<a href="os.html">os</a><br>
</td><td width="25%" valign=top><a href="re.html">re</a><br>
<a href="sys.html">sys</a><br>
</td><td width="25%" valign=top><a href="time.html">time</a><br>
<a href="warnings.html">warnings</a><br>
</td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ee77aa">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
    
<tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl>
<dt><font face="helvetica, arial"><a href="matplotlib.ticker.html#TickHelper">TickHelper</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.ticker.html#Formatter">Formatter</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.ticker.html#FixedFormatter">FixedFormatter</a>
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.ticker.html#FormatStrFormatter">FormatStrFormatter</a>
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.ticker.html#FuncFormatter">FuncFormatter</a>
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.ticker.html#LogFormatter">LogFormatter</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.ticker.html#LogFormatterExponent">LogFormatterExponent</a>
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.ticker.html#LogFormatterMathtext">LogFormatterMathtext</a>
</font></dt></dl>
</dd>
<dt><font face="helvetica, arial"><a href="matplotlib.ticker.html#NullFormatter">NullFormatter</a>
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.ticker.html#ScalarFormatter">ScalarFormatter</a>
</font></dt></dl>
</dd>
<dt><font face="helvetica, arial"><a href="matplotlib.ticker.html#Locator">Locator</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.ticker.html#FixedLocator">FixedLocator</a>
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.ticker.html#IndexLocator">IndexLocator</a>
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.ticker.html#LinearLocator">LinearLocator</a>
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.ticker.html#LogLocator">LogLocator</a>
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.ticker.html#MaxNLocator">MaxNLocator</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.ticker.html#AutoLocator">AutoLocator</a>
</font></dt></dl>
</dd>
<dt><font face="helvetica, arial"><a href="matplotlib.ticker.html#MultipleLocator">MultipleLocator</a>
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.ticker.html#NullLocator">NullLocator</a>
</font></dt></dl>
</dd>
</dl>
</dd>
</dl>
 <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="AutoLocator">class <strong>AutoLocator</strong></a>(<a href="matplotlib.ticker.html#MaxNLocator">MaxNLocator</a>)</font></td></tr>
    
<tr><td bgcolor="#ffc8d8"><tt>&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.ticker.html#AutoLocator">AutoLocator</a></dd>
<dd><a href="matplotlib.ticker.html#MaxNLocator">MaxNLocator</a></dd>
<dd><a href="matplotlib.ticker.html#Locator">Locator</a></dd>
<dd><a href="matplotlib.ticker.html#TickHelper">TickHelper</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="AutoLocator-__init__"><strong>__init__</strong></a>(self)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#MaxNLocator">MaxNLocator</a>:<br>
<dl><dt><a name="AutoLocator-__call__"><strong>__call__</strong></a>(self)</dt></dl>

<dl><dt><a name="AutoLocator-autoscale"><strong>autoscale</strong></a>(self)</dt></dl>

<dl><dt><a name="AutoLocator-bin_boundaries"><strong>bin_boundaries</strong></a>(self, vmin, vmax)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#Locator">Locator</a>:<br>
<dl><dt><a name="AutoLocator-pan"><strong>pan</strong></a>(self, numsteps)</dt><dd><tt>Pan&nbsp;numticks&nbsp;(can&nbsp;be&nbsp;positive&nbsp;or&nbsp;negative)</tt></dd></dl>

<dl><dt><a name="AutoLocator-refresh"><strong>refresh</strong></a>(self)</dt><dd><tt>refresh&nbsp;internal&nbsp;information&nbsp;based&nbsp;on&nbsp;current&nbsp;lim</tt></dd></dl>

<dl><dt><a name="AutoLocator-zoom"><strong>zoom</strong></a>(self, direction)</dt><dd><tt>Zoom&nbsp;in/out&nbsp;on&nbsp;axis;&nbsp;if&nbsp;direction&nbsp;is&nbsp;&gt;0&nbsp;zoom&nbsp;in,&nbsp;else&nbsp;zoom&nbsp;out</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><a name="AutoLocator-set_data_interval"><strong>set_data_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="AutoLocator-set_view_interval"><strong>set_view_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="AutoLocator-verify_intervals"><strong>verify_intervals</strong></a>(self)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><strong>dataInterval</strong> = None</dl>

<dl><dt><strong>viewInterval</strong> = None</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="FixedFormatter">class <strong>FixedFormatter</strong></a>(<a href="matplotlib.ticker.html#Formatter">Formatter</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Return&nbsp;fixed&nbsp;strings&nbsp;for&nbsp;tick&nbsp;labels<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.ticker.html#FixedFormatter">FixedFormatter</a></dd>
<dd><a href="matplotlib.ticker.html#Formatter">Formatter</a></dd>
<dd><a href="matplotlib.ticker.html#TickHelper">TickHelper</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="FixedFormatter-__call__"><strong>__call__</strong></a>(self, x, pos<font color="#909090">=None</font>)</dt><dd><tt>Return&nbsp;the&nbsp;format&nbsp;for&nbsp;tick&nbsp;val&nbsp;x&nbsp;at&nbsp;position&nbsp;pos</tt></dd></dl>

<dl><dt><a name="FixedFormatter-__init__"><strong>__init__</strong></a>(self, seq)</dt><dd><tt>seq&nbsp;is&nbsp;a&nbsp;sequence&nbsp;of&nbsp;strings.&nbsp;&nbsp;For&nbsp;positions&nbsp;i&lt;len(seq)&nbsp;return<br>
seq[i]&nbsp;regardless&nbsp;of&nbsp;x.&nbsp;&nbsp;Otherwise&nbsp;return&nbsp;''</tt></dd></dl>

<dl><dt><a name="FixedFormatter-get_offset"><strong>get_offset</strong></a>(self)</dt></dl>

<dl><dt><a name="FixedFormatter-set_offset_string"><strong>set_offset_string</strong></a>(self, ofs)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#Formatter">Formatter</a>:<br>
<dl><dt><a name="FixedFormatter-format_data"><strong>format_data</strong></a>(self, value)</dt></dl>

<dl><dt><a name="FixedFormatter-format_data_short"><strong>format_data_short</strong></a>(self, value)</dt><dd><tt>return&nbsp;a&nbsp;short&nbsp;string&nbsp;version</tt></dd></dl>

<dl><dt><a name="FixedFormatter-set_locs"><strong>set_locs</strong></a>(self, locs)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#Formatter">Formatter</a>:<br>
<dl><dt><strong>locs</strong> = []</dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><a name="FixedFormatter-set_data_interval"><strong>set_data_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="FixedFormatter-set_view_interval"><strong>set_view_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="FixedFormatter-verify_intervals"><strong>verify_intervals</strong></a>(self)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><strong>dataInterval</strong> = None</dl>

<dl><dt><strong>viewInterval</strong> = None</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="FixedLocator">class <strong>FixedLocator</strong></a>(<a href="matplotlib.ticker.html#Locator">Locator</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Tick&nbsp;locations&nbsp;are&nbsp;fixed.&nbsp;&nbsp;If&nbsp;nbins&nbsp;is&nbsp;not&nbsp;None,<br>
the&nbsp;array&nbsp;of&nbsp;possible&nbsp;positions&nbsp;will&nbsp;be&nbsp;subsampled&nbsp;to<br>
keep&nbsp;the&nbsp;number&nbsp;of&nbsp;ticks&nbsp;&lt;=&nbsp;nbins&nbsp;+1.<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.ticker.html#FixedLocator">FixedLocator</a></dd>
<dd><a href="matplotlib.ticker.html#Locator">Locator</a></dd>
<dd><a href="matplotlib.ticker.html#TickHelper">TickHelper</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="FixedLocator-__call__"><strong>__call__</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;locations&nbsp;of&nbsp;the&nbsp;ticks</tt></dd></dl>

<dl><dt><a name="FixedLocator-__init__"><strong>__init__</strong></a>(self, locs, nbins<font color="#909090">=None</font>)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#Locator">Locator</a>:<br>
<dl><dt><a name="FixedLocator-autoscale"><strong>autoscale</strong></a>(self)</dt><dd><tt>autoscale&nbsp;the&nbsp;view&nbsp;limits</tt></dd></dl>

<dl><dt><a name="FixedLocator-pan"><strong>pan</strong></a>(self, numsteps)</dt><dd><tt>Pan&nbsp;numticks&nbsp;(can&nbsp;be&nbsp;positive&nbsp;or&nbsp;negative)</tt></dd></dl>

<dl><dt><a name="FixedLocator-refresh"><strong>refresh</strong></a>(self)</dt><dd><tt>refresh&nbsp;internal&nbsp;information&nbsp;based&nbsp;on&nbsp;current&nbsp;lim</tt></dd></dl>

<dl><dt><a name="FixedLocator-zoom"><strong>zoom</strong></a>(self, direction)</dt><dd><tt>Zoom&nbsp;in/out&nbsp;on&nbsp;axis;&nbsp;if&nbsp;direction&nbsp;is&nbsp;&gt;0&nbsp;zoom&nbsp;in,&nbsp;else&nbsp;zoom&nbsp;out</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><a name="FixedLocator-set_data_interval"><strong>set_data_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="FixedLocator-set_view_interval"><strong>set_view_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="FixedLocator-verify_intervals"><strong>verify_intervals</strong></a>(self)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><strong>dataInterval</strong> = None</dl>

<dl><dt><strong>viewInterval</strong> = None</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="FormatStrFormatter">class <strong>FormatStrFormatter</strong></a>(<a href="matplotlib.ticker.html#Formatter">Formatter</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Use&nbsp;a&nbsp;format&nbsp;string&nbsp;to&nbsp;format&nbsp;the&nbsp;tick<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.ticker.html#FormatStrFormatter">FormatStrFormatter</a></dd>
<dd><a href="matplotlib.ticker.html#Formatter">Formatter</a></dd>
<dd><a href="matplotlib.ticker.html#TickHelper">TickHelper</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="FormatStrFormatter-__call__"><strong>__call__</strong></a>(self, x, pos<font color="#909090">=None</font>)</dt><dd><tt>Return&nbsp;the&nbsp;format&nbsp;for&nbsp;tick&nbsp;val&nbsp;x&nbsp;at&nbsp;position&nbsp;pos</tt></dd></dl>

<dl><dt><a name="FormatStrFormatter-__init__"><strong>__init__</strong></a>(self, fmt)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#Formatter">Formatter</a>:<br>
<dl><dt><a name="FormatStrFormatter-format_data"><strong>format_data</strong></a>(self, value)</dt></dl>

<dl><dt><a name="FormatStrFormatter-format_data_short"><strong>format_data_short</strong></a>(self, value)</dt><dd><tt>return&nbsp;a&nbsp;short&nbsp;string&nbsp;version</tt></dd></dl>

<dl><dt><a name="FormatStrFormatter-get_offset"><strong>get_offset</strong></a>(self)</dt></dl>

<dl><dt><a name="FormatStrFormatter-set_locs"><strong>set_locs</strong></a>(self, locs)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#Formatter">Formatter</a>:<br>
<dl><dt><strong>locs</strong> = []</dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><a name="FormatStrFormatter-set_data_interval"><strong>set_data_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="FormatStrFormatter-set_view_interval"><strong>set_view_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="FormatStrFormatter-verify_intervals"><strong>verify_intervals</strong></a>(self)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><strong>dataInterval</strong> = None</dl>

<dl><dt><strong>viewInterval</strong> = None</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="Formatter">class <strong>Formatter</strong></a>(<a href="matplotlib.ticker.html#TickHelper">TickHelper</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Convert&nbsp;the&nbsp;tick&nbsp;location&nbsp;to&nbsp;a&nbsp;string<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="Formatter-__call__"><strong>__call__</strong></a>(self, x, pos<font color="#909090">=None</font>)</dt><dd><tt>Return&nbsp;the&nbsp;format&nbsp;for&nbsp;tick&nbsp;val&nbsp;x&nbsp;at&nbsp;position&nbsp;pos;&nbsp;pos=None&nbsp;indicated&nbsp;unspecified</tt></dd></dl>

<dl><dt><a name="Formatter-format_data"><strong>format_data</strong></a>(self, value)</dt></dl>

<dl><dt><a name="Formatter-format_data_short"><strong>format_data_short</strong></a>(self, value)</dt><dd><tt>return&nbsp;a&nbsp;short&nbsp;string&nbsp;version</tt></dd></dl>

<dl><dt><a name="Formatter-get_offset"><strong>get_offset</strong></a>(self)</dt></dl>

<dl><dt><a name="Formatter-set_locs"><strong>set_locs</strong></a>(self, locs)</dt></dl>

<hr>
Data and other attributes defined here:<br>
<dl><dt><strong>locs</strong> = []</dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><a name="Formatter-set_data_interval"><strong>set_data_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="Formatter-set_view_interval"><strong>set_view_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="Formatter-verify_intervals"><strong>verify_intervals</strong></a>(self)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><strong>dataInterval</strong> = None</dl>

<dl><dt><strong>viewInterval</strong> = None</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="FuncFormatter">class <strong>FuncFormatter</strong></a>(<a href="matplotlib.ticker.html#Formatter">Formatter</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>User&nbsp;defined&nbsp;function&nbsp;for&nbsp;formatting<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.ticker.html#FuncFormatter">FuncFormatter</a></dd>
<dd><a href="matplotlib.ticker.html#Formatter">Formatter</a></dd>
<dd><a href="matplotlib.ticker.html#TickHelper">TickHelper</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="FuncFormatter-__call__"><strong>__call__</strong></a>(self, x, pos<font color="#909090">=None</font>)</dt><dd><tt>Return&nbsp;the&nbsp;format&nbsp;for&nbsp;tick&nbsp;val&nbsp;x&nbsp;at&nbsp;position&nbsp;pos</tt></dd></dl>

<dl><dt><a name="FuncFormatter-__init__"><strong>__init__</strong></a>(self, func)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#Formatter">Formatter</a>:<br>
<dl><dt><a name="FuncFormatter-format_data"><strong>format_data</strong></a>(self, value)</dt></dl>

<dl><dt><a name="FuncFormatter-format_data_short"><strong>format_data_short</strong></a>(self, value)</dt><dd><tt>return&nbsp;a&nbsp;short&nbsp;string&nbsp;version</tt></dd></dl>

<dl><dt><a name="FuncFormatter-get_offset"><strong>get_offset</strong></a>(self)</dt></dl>

<dl><dt><a name="FuncFormatter-set_locs"><strong>set_locs</strong></a>(self, locs)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#Formatter">Formatter</a>:<br>
<dl><dt><strong>locs</strong> = []</dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><a name="FuncFormatter-set_data_interval"><strong>set_data_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="FuncFormatter-set_view_interval"><strong>set_view_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="FuncFormatter-verify_intervals"><strong>verify_intervals</strong></a>(self)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><strong>dataInterval</strong> = None</dl>

<dl><dt><strong>viewInterval</strong> = None</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="IndexLocator">class <strong>IndexLocator</strong></a>(<a href="matplotlib.ticker.html#Locator">Locator</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Place&nbsp;a&nbsp;tick&nbsp;on&nbsp;every&nbsp;multiple&nbsp;of&nbsp;some&nbsp;base&nbsp;number&nbsp;of&nbsp;points<br>
plotted,&nbsp;eg&nbsp;on&nbsp;every&nbsp;5th&nbsp;point.&nbsp;&nbsp;It&nbsp;is&nbsp;assumed&nbsp;that&nbsp;you&nbsp;are&nbsp;doing<br>
index&nbsp;plotting;&nbsp;ie&nbsp;the&nbsp;axis&nbsp;is&nbsp;0,&nbsp;len(data).&nbsp;&nbsp;This&nbsp;is&nbsp;mainly<br>
useful&nbsp;for&nbsp;x&nbsp;ticks.<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.ticker.html#IndexLocator">IndexLocator</a></dd>
<dd><a href="matplotlib.ticker.html#Locator">Locator</a></dd>
<dd><a href="matplotlib.ticker.html#TickHelper">TickHelper</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="IndexLocator-__call__"><strong>__call__</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;locations&nbsp;of&nbsp;the&nbsp;ticks</tt></dd></dl>

<dl><dt><a name="IndexLocator-__init__"><strong>__init__</strong></a>(self, base, offset)</dt><dd><tt>place&nbsp;ticks&nbsp;on&nbsp;the&nbsp;i-th&nbsp;data&nbsp;points&nbsp;where&nbsp;(i-offset)%base==0</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#Locator">Locator</a>:<br>
<dl><dt><a name="IndexLocator-autoscale"><strong>autoscale</strong></a>(self)</dt><dd><tt>autoscale&nbsp;the&nbsp;view&nbsp;limits</tt></dd></dl>

<dl><dt><a name="IndexLocator-pan"><strong>pan</strong></a>(self, numsteps)</dt><dd><tt>Pan&nbsp;numticks&nbsp;(can&nbsp;be&nbsp;positive&nbsp;or&nbsp;negative)</tt></dd></dl>

<dl><dt><a name="IndexLocator-refresh"><strong>refresh</strong></a>(self)</dt><dd><tt>refresh&nbsp;internal&nbsp;information&nbsp;based&nbsp;on&nbsp;current&nbsp;lim</tt></dd></dl>

<dl><dt><a name="IndexLocator-zoom"><strong>zoom</strong></a>(self, direction)</dt><dd><tt>Zoom&nbsp;in/out&nbsp;on&nbsp;axis;&nbsp;if&nbsp;direction&nbsp;is&nbsp;&gt;0&nbsp;zoom&nbsp;in,&nbsp;else&nbsp;zoom&nbsp;out</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><a name="IndexLocator-set_data_interval"><strong>set_data_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="IndexLocator-set_view_interval"><strong>set_view_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="IndexLocator-verify_intervals"><strong>verify_intervals</strong></a>(self)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><strong>dataInterval</strong> = None</dl>

<dl><dt><strong>viewInterval</strong> = None</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="LinearLocator">class <strong>LinearLocator</strong></a>(<a href="matplotlib.ticker.html#Locator">Locator</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Determine&nbsp;the&nbsp;tick&nbsp;locations<br>
&nbsp;<br>
The&nbsp;first&nbsp;time&nbsp;this&nbsp;function&nbsp;is&nbsp;called&nbsp;it&nbsp;will&nbsp;try&nbsp;to&nbsp;set&nbsp;the<br>
number&nbsp;of&nbsp;ticks&nbsp;to&nbsp;make&nbsp;a&nbsp;nice&nbsp;tick&nbsp;partitioning.&nbsp;&nbsp;Thereafter&nbsp;the<br>
number&nbsp;of&nbsp;ticks&nbsp;will&nbsp;be&nbsp;fixed&nbsp;so&nbsp;that&nbsp;interactive&nbsp;navigation&nbsp;will<br>
be&nbsp;nice<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.ticker.html#LinearLocator">LinearLocator</a></dd>
<dd><a href="matplotlib.ticker.html#Locator">Locator</a></dd>
<dd><a href="matplotlib.ticker.html#TickHelper">TickHelper</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="LinearLocator-__call__"><strong>__call__</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;locations&nbsp;of&nbsp;the&nbsp;ticks</tt></dd></dl>

<dl><dt><a name="LinearLocator-__init__"><strong>__init__</strong></a>(self, numticks<font color="#909090">=None</font>, presets<font color="#909090">=None</font>)</dt><dd><tt>Use&nbsp;presets&nbsp;to&nbsp;set&nbsp;locs&nbsp;based&nbsp;on&nbsp;lom.&nbsp;&nbsp;A&nbsp;dict&nbsp;mapping&nbsp;vmin,&nbsp;vmax-&gt;locs</tt></dd></dl>

<dl><dt><a name="LinearLocator-autoscale"><strong>autoscale</strong></a>(self)</dt><dd><tt>Try&nbsp;to&nbsp;choose&nbsp;the&nbsp;view&nbsp;limits&nbsp;intelligently</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#Locator">Locator</a>:<br>
<dl><dt><a name="LinearLocator-pan"><strong>pan</strong></a>(self, numsteps)</dt><dd><tt>Pan&nbsp;numticks&nbsp;(can&nbsp;be&nbsp;positive&nbsp;or&nbsp;negative)</tt></dd></dl>

<dl><dt><a name="LinearLocator-refresh"><strong>refresh</strong></a>(self)</dt><dd><tt>refresh&nbsp;internal&nbsp;information&nbsp;based&nbsp;on&nbsp;current&nbsp;lim</tt></dd></dl>

<dl><dt><a name="LinearLocator-zoom"><strong>zoom</strong></a>(self, direction)</dt><dd><tt>Zoom&nbsp;in/out&nbsp;on&nbsp;axis;&nbsp;if&nbsp;direction&nbsp;is&nbsp;&gt;0&nbsp;zoom&nbsp;in,&nbsp;else&nbsp;zoom&nbsp;out</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><a name="LinearLocator-set_data_interval"><strong>set_data_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="LinearLocator-set_view_interval"><strong>set_view_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="LinearLocator-verify_intervals"><strong>verify_intervals</strong></a>(self)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><strong>dataInterval</strong> = None</dl>

<dl><dt><strong>viewInterval</strong> = None</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="Locator">class <strong>Locator</strong></a>(<a href="matplotlib.ticker.html#TickHelper">TickHelper</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Determine&nbsp;the&nbsp;tick&nbsp;locations;<br>
&nbsp;<br>
Note,&nbsp;you&nbsp;should&nbsp;not&nbsp;use&nbsp;the&nbsp;same&nbsp;locator&nbsp;between&nbsp;different&nbsp;Axis<br>
because&nbsp;the&nbsp;locator&nbsp;stores&nbsp;references&nbsp;to&nbsp;the&nbsp;Axis&nbsp;data&nbsp;and&nbsp;view<br>
limits<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="Locator-__call__"><strong>__call__</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;locations&nbsp;of&nbsp;the&nbsp;ticks</tt></dd></dl>

<dl><dt><a name="Locator-autoscale"><strong>autoscale</strong></a>(self)</dt><dd><tt>autoscale&nbsp;the&nbsp;view&nbsp;limits</tt></dd></dl>

<dl><dt><a name="Locator-pan"><strong>pan</strong></a>(self, numsteps)</dt><dd><tt>Pan&nbsp;numticks&nbsp;(can&nbsp;be&nbsp;positive&nbsp;or&nbsp;negative)</tt></dd></dl>

<dl><dt><a name="Locator-refresh"><strong>refresh</strong></a>(self)</dt><dd><tt>refresh&nbsp;internal&nbsp;information&nbsp;based&nbsp;on&nbsp;current&nbsp;lim</tt></dd></dl>

<dl><dt><a name="Locator-zoom"><strong>zoom</strong></a>(self, direction)</dt><dd><tt>Zoom&nbsp;in/out&nbsp;on&nbsp;axis;&nbsp;if&nbsp;direction&nbsp;is&nbsp;&gt;0&nbsp;zoom&nbsp;in,&nbsp;else&nbsp;zoom&nbsp;out</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><a name="Locator-set_data_interval"><strong>set_data_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="Locator-set_view_interval"><strong>set_view_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="Locator-verify_intervals"><strong>verify_intervals</strong></a>(self)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><strong>dataInterval</strong> = None</dl>

<dl><dt><strong>viewInterval</strong> = None</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="LogFormatter">class <strong>LogFormatter</strong></a>(<a href="matplotlib.ticker.html#Formatter">Formatter</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Format&nbsp;values&nbsp;for&nbsp;log&nbsp;axis;<br>
&nbsp;<br>
if&nbsp;attribute&nbsp;decadeOnly&nbsp;is&nbsp;True,&nbsp;only&nbsp;the&nbsp;decades&nbsp;will&nbsp;be&nbsp;labelled.<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.ticker.html#LogFormatter">LogFormatter</a></dd>
<dd><a href="matplotlib.ticker.html#Formatter">Formatter</a></dd>
<dd><a href="matplotlib.ticker.html#TickHelper">TickHelper</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="LogFormatter-__call__"><strong>__call__</strong></a>(self, x, pos<font color="#909090">=None</font>)</dt><dd><tt>Return&nbsp;the&nbsp;format&nbsp;for&nbsp;tick&nbsp;val&nbsp;x&nbsp;at&nbsp;position&nbsp;pos</tt></dd></dl>

<dl><dt><a name="LogFormatter-__init__"><strong>__init__</strong></a>(self, base<font color="#909090">=10.0</font>, labelOnlyBase<font color="#909090">=True</font>)</dt><dd><tt>base&nbsp;is&nbsp;used&nbsp;to&nbsp;locate&nbsp;the&nbsp;decade&nbsp;tick,<br>
which&nbsp;will&nbsp;be&nbsp;the&nbsp;only&nbsp;one&nbsp;to&nbsp;be&nbsp;labeled&nbsp;if&nbsp;labelOnlyBase<br>
is&nbsp;False</tt></dd></dl>

<dl><dt><a name="LogFormatter-base"><strong>base</strong></a>(self, base)</dt><dd><tt>change&nbsp;the&nbsp;base&nbsp;for&nbsp;labeling&nbsp;-&nbsp;warning:&nbsp;should&nbsp;always&nbsp;match&nbsp;the&nbsp;base&nbsp;used&nbsp;for&nbsp;<a href="#LogLocator">LogLocator</a></tt></dd></dl>

<dl><dt><a name="LogFormatter-format_data"><strong>format_data</strong></a>(self, value)</dt></dl>

<dl><dt><a name="LogFormatter-is_decade"><strong>is_decade</strong></a>(self, x)</dt></dl>

<dl><dt><a name="LogFormatter-label_minor"><strong>label_minor</strong></a>(self, labelOnlyBase)</dt><dd><tt>switch&nbsp;on/off&nbsp;minor&nbsp;ticks&nbsp;labeling</tt></dd></dl>

<dl><dt><a name="LogFormatter-nearest_long"><strong>nearest_long</strong></a>(self, x)</dt></dl>

<dl><dt><a name="LogFormatter-pprint_val"><strong>pprint_val</strong></a>(self, x, d)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#Formatter">Formatter</a>:<br>
<dl><dt><a name="LogFormatter-format_data_short"><strong>format_data_short</strong></a>(self, value)</dt><dd><tt>return&nbsp;a&nbsp;short&nbsp;string&nbsp;version</tt></dd></dl>

<dl><dt><a name="LogFormatter-get_offset"><strong>get_offset</strong></a>(self)</dt></dl>

<dl><dt><a name="LogFormatter-set_locs"><strong>set_locs</strong></a>(self, locs)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#Formatter">Formatter</a>:<br>
<dl><dt><strong>locs</strong> = []</dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><a name="LogFormatter-set_data_interval"><strong>set_data_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="LogFormatter-set_view_interval"><strong>set_view_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="LogFormatter-verify_intervals"><strong>verify_intervals</strong></a>(self)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><strong>dataInterval</strong> = None</dl>

<dl><dt><strong>viewInterval</strong> = None</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="LogFormatterExponent">class <strong>LogFormatterExponent</strong></a>(<a href="matplotlib.ticker.html#LogFormatter">LogFormatter</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Format&nbsp;values&nbsp;for&nbsp;log&nbsp;axis;&nbsp;using&nbsp;exponent&nbsp;=&nbsp;log_base(value)<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.ticker.html#LogFormatterExponent">LogFormatterExponent</a></dd>
<dd><a href="matplotlib.ticker.html#LogFormatter">LogFormatter</a></dd>
<dd><a href="matplotlib.ticker.html#Formatter">Formatter</a></dd>
<dd><a href="matplotlib.ticker.html#TickHelper">TickHelper</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="LogFormatterExponent-__call__"><strong>__call__</strong></a>(self, x, pos<font color="#909090">=None</font>)</dt><dd><tt>Return&nbsp;the&nbsp;format&nbsp;for&nbsp;tick&nbsp;val&nbsp;x&nbsp;at&nbsp;position&nbsp;pos</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#LogFormatter">LogFormatter</a>:<br>
<dl><dt><a name="LogFormatterExponent-__init__"><strong>__init__</strong></a>(self, base<font color="#909090">=10.0</font>, labelOnlyBase<font color="#909090">=True</font>)</dt><dd><tt>base&nbsp;is&nbsp;used&nbsp;to&nbsp;locate&nbsp;the&nbsp;decade&nbsp;tick,<br>
which&nbsp;will&nbsp;be&nbsp;the&nbsp;only&nbsp;one&nbsp;to&nbsp;be&nbsp;labeled&nbsp;if&nbsp;labelOnlyBase<br>
is&nbsp;False</tt></dd></dl>

<dl><dt><a name="LogFormatterExponent-base"><strong>base</strong></a>(self, base)</dt><dd><tt>change&nbsp;the&nbsp;base&nbsp;for&nbsp;labeling&nbsp;-&nbsp;warning:&nbsp;should&nbsp;always&nbsp;match&nbsp;the&nbsp;base&nbsp;used&nbsp;for&nbsp;<a href="#LogLocator">LogLocator</a></tt></dd></dl>

<dl><dt><a name="LogFormatterExponent-format_data"><strong>format_data</strong></a>(self, value)</dt></dl>

<dl><dt><a name="LogFormatterExponent-is_decade"><strong>is_decade</strong></a>(self, x)</dt></dl>

<dl><dt><a name="LogFormatterExponent-label_minor"><strong>label_minor</strong></a>(self, labelOnlyBase)</dt><dd><tt>switch&nbsp;on/off&nbsp;minor&nbsp;ticks&nbsp;labeling</tt></dd></dl>

<dl><dt><a name="LogFormatterExponent-nearest_long"><strong>nearest_long</strong></a>(self, x)</dt></dl>

<dl><dt><a name="LogFormatterExponent-pprint_val"><strong>pprint_val</strong></a>(self, x, d)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#Formatter">Formatter</a>:<br>
<dl><dt><a name="LogFormatterExponent-format_data_short"><strong>format_data_short</strong></a>(self, value)</dt><dd><tt>return&nbsp;a&nbsp;short&nbsp;string&nbsp;version</tt></dd></dl>

<dl><dt><a name="LogFormatterExponent-get_offset"><strong>get_offset</strong></a>(self)</dt></dl>

<dl><dt><a name="LogFormatterExponent-set_locs"><strong>set_locs</strong></a>(self, locs)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#Formatter">Formatter</a>:<br>
<dl><dt><strong>locs</strong> = []</dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><a name="LogFormatterExponent-set_data_interval"><strong>set_data_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="LogFormatterExponent-set_view_interval"><strong>set_view_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="LogFormatterExponent-verify_intervals"><strong>verify_intervals</strong></a>(self)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><strong>dataInterval</strong> = None</dl>

<dl><dt><strong>viewInterval</strong> = None</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="LogFormatterMathtext">class <strong>LogFormatterMathtext</strong></a>(<a href="matplotlib.ticker.html#LogFormatter">LogFormatter</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Format&nbsp;values&nbsp;for&nbsp;log&nbsp;axis;&nbsp;using&nbsp;exponent&nbsp;=&nbsp;log_base(value)<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.ticker.html#LogFormatterMathtext">LogFormatterMathtext</a></dd>
<dd><a href="matplotlib.ticker.html#LogFormatter">LogFormatter</a></dd>
<dd><a href="matplotlib.ticker.html#Formatter">Formatter</a></dd>
<dd><a href="matplotlib.ticker.html#TickHelper">TickHelper</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="LogFormatterMathtext-__call__"><strong>__call__</strong></a>(self, x, pos<font color="#909090">=None</font>)</dt><dd><tt>Return&nbsp;the&nbsp;format&nbsp;for&nbsp;tick&nbsp;val&nbsp;x&nbsp;at&nbsp;position&nbsp;pos</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#LogFormatter">LogFormatter</a>:<br>
<dl><dt><a name="LogFormatterMathtext-__init__"><strong>__init__</strong></a>(self, base<font color="#909090">=10.0</font>, labelOnlyBase<font color="#909090">=True</font>)</dt><dd><tt>base&nbsp;is&nbsp;used&nbsp;to&nbsp;locate&nbsp;the&nbsp;decade&nbsp;tick,<br>
which&nbsp;will&nbsp;be&nbsp;the&nbsp;only&nbsp;one&nbsp;to&nbsp;be&nbsp;labeled&nbsp;if&nbsp;labelOnlyBase<br>
is&nbsp;False</tt></dd></dl>

<dl><dt><a name="LogFormatterMathtext-base"><strong>base</strong></a>(self, base)</dt><dd><tt>change&nbsp;the&nbsp;base&nbsp;for&nbsp;labeling&nbsp;-&nbsp;warning:&nbsp;should&nbsp;always&nbsp;match&nbsp;the&nbsp;base&nbsp;used&nbsp;for&nbsp;<a href="#LogLocator">LogLocator</a></tt></dd></dl>

<dl><dt><a name="LogFormatterMathtext-format_data"><strong>format_data</strong></a>(self, value)</dt></dl>

<dl><dt><a name="LogFormatterMathtext-is_decade"><strong>is_decade</strong></a>(self, x)</dt></dl>

<dl><dt><a name="LogFormatterMathtext-label_minor"><strong>label_minor</strong></a>(self, labelOnlyBase)</dt><dd><tt>switch&nbsp;on/off&nbsp;minor&nbsp;ticks&nbsp;labeling</tt></dd></dl>

<dl><dt><a name="LogFormatterMathtext-nearest_long"><strong>nearest_long</strong></a>(self, x)</dt></dl>

<dl><dt><a name="LogFormatterMathtext-pprint_val"><strong>pprint_val</strong></a>(self, x, d)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#Formatter">Formatter</a>:<br>
<dl><dt><a name="LogFormatterMathtext-format_data_short"><strong>format_data_short</strong></a>(self, value)</dt><dd><tt>return&nbsp;a&nbsp;short&nbsp;string&nbsp;version</tt></dd></dl>

<dl><dt><a name="LogFormatterMathtext-get_offset"><strong>get_offset</strong></a>(self)</dt></dl>

<dl><dt><a name="LogFormatterMathtext-set_locs"><strong>set_locs</strong></a>(self, locs)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#Formatter">Formatter</a>:<br>
<dl><dt><strong>locs</strong> = []</dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><a name="LogFormatterMathtext-set_data_interval"><strong>set_data_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="LogFormatterMathtext-set_view_interval"><strong>set_view_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="LogFormatterMathtext-verify_intervals"><strong>verify_intervals</strong></a>(self)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><strong>dataInterval</strong> = None</dl>

<dl><dt><strong>viewInterval</strong> = None</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="LogLocator">class <strong>LogLocator</strong></a>(<a href="matplotlib.ticker.html#Locator">Locator</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Determine&nbsp;the&nbsp;tick&nbsp;locations&nbsp;for&nbsp;log&nbsp;axes<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.ticker.html#LogLocator">LogLocator</a></dd>
<dd><a href="matplotlib.ticker.html#Locator">Locator</a></dd>
<dd><a href="matplotlib.ticker.html#TickHelper">TickHelper</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="LogLocator-__call__"><strong>__call__</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;locations&nbsp;of&nbsp;the&nbsp;ticks</tt></dd></dl>

<dl><dt><a name="LogLocator-__init__"><strong>__init__</strong></a>(self, base<font color="#909090">=10.0</font>, subs<font color="#909090">=[1.0]</font>)</dt><dd><tt>place&nbsp;ticks&nbsp;on&nbsp;the&nbsp;location=&nbsp;base**i*subs[j]</tt></dd></dl>

<dl><dt><a name="LogLocator-autoscale"><strong>autoscale</strong></a>(self)</dt><dd><tt>Try&nbsp;to&nbsp;choose&nbsp;the&nbsp;view&nbsp;limits&nbsp;intelligently</tt></dd></dl>

<dl><dt><a name="LogLocator-base"><strong>base</strong></a>(self, base)</dt><dd><tt>set&nbsp;the&nbsp;base&nbsp;of&nbsp;the&nbsp;log&nbsp;scaling&nbsp;(major&nbsp;tick&nbsp;every&nbsp;base**i,&nbsp;i&nbsp;interger)</tt></dd></dl>

<dl><dt><a name="LogLocator-subs"><strong>subs</strong></a>(self, subs)</dt><dd><tt>set&nbsp;the&nbsp;minor&nbsp;ticks&nbsp;the&nbsp;log&nbsp;scaling&nbsp;every&nbsp;base**i*subs[j]</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#Locator">Locator</a>:<br>
<dl><dt><a name="LogLocator-pan"><strong>pan</strong></a>(self, numsteps)</dt><dd><tt>Pan&nbsp;numticks&nbsp;(can&nbsp;be&nbsp;positive&nbsp;or&nbsp;negative)</tt></dd></dl>

<dl><dt><a name="LogLocator-refresh"><strong>refresh</strong></a>(self)</dt><dd><tt>refresh&nbsp;internal&nbsp;information&nbsp;based&nbsp;on&nbsp;current&nbsp;lim</tt></dd></dl>

<dl><dt><a name="LogLocator-zoom"><strong>zoom</strong></a>(self, direction)</dt><dd><tt>Zoom&nbsp;in/out&nbsp;on&nbsp;axis;&nbsp;if&nbsp;direction&nbsp;is&nbsp;&gt;0&nbsp;zoom&nbsp;in,&nbsp;else&nbsp;zoom&nbsp;out</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><a name="LogLocator-set_data_interval"><strong>set_data_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="LogLocator-set_view_interval"><strong>set_view_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="LogLocator-verify_intervals"><strong>verify_intervals</strong></a>(self)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><strong>dataInterval</strong> = None</dl>

<dl><dt><strong>viewInterval</strong> = None</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="MaxNLocator">class <strong>MaxNLocator</strong></a>(<a href="matplotlib.ticker.html#Locator">Locator</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Select&nbsp;no&nbsp;more&nbsp;than&nbsp;N&nbsp;intervals&nbsp;at&nbsp;nice&nbsp;locations.<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.ticker.html#MaxNLocator">MaxNLocator</a></dd>
<dd><a href="matplotlib.ticker.html#Locator">Locator</a></dd>
<dd><a href="matplotlib.ticker.html#TickHelper">TickHelper</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="MaxNLocator-__call__"><strong>__call__</strong></a>(self)</dt></dl>

<dl><dt><a name="MaxNLocator-__init__"><strong>__init__</strong></a>(self, nbins<font color="#909090">=10</font>, steps<font color="#909090">=None</font>, trim<font color="#909090">=True</font>)</dt></dl>

<dl><dt><a name="MaxNLocator-autoscale"><strong>autoscale</strong></a>(self)</dt></dl>

<dl><dt><a name="MaxNLocator-bin_boundaries"><strong>bin_boundaries</strong></a>(self, vmin, vmax)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#Locator">Locator</a>:<br>
<dl><dt><a name="MaxNLocator-pan"><strong>pan</strong></a>(self, numsteps)</dt><dd><tt>Pan&nbsp;numticks&nbsp;(can&nbsp;be&nbsp;positive&nbsp;or&nbsp;negative)</tt></dd></dl>

<dl><dt><a name="MaxNLocator-refresh"><strong>refresh</strong></a>(self)</dt><dd><tt>refresh&nbsp;internal&nbsp;information&nbsp;based&nbsp;on&nbsp;current&nbsp;lim</tt></dd></dl>

<dl><dt><a name="MaxNLocator-zoom"><strong>zoom</strong></a>(self, direction)</dt><dd><tt>Zoom&nbsp;in/out&nbsp;on&nbsp;axis;&nbsp;if&nbsp;direction&nbsp;is&nbsp;&gt;0&nbsp;zoom&nbsp;in,&nbsp;else&nbsp;zoom&nbsp;out</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><a name="MaxNLocator-set_data_interval"><strong>set_data_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="MaxNLocator-set_view_interval"><strong>set_view_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="MaxNLocator-verify_intervals"><strong>verify_intervals</strong></a>(self)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><strong>dataInterval</strong> = None</dl>

<dl><dt><strong>viewInterval</strong> = None</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="MultipleLocator">class <strong>MultipleLocator</strong></a>(<a href="matplotlib.ticker.html#Locator">Locator</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Set&nbsp;a&nbsp;tick&nbsp;on&nbsp;every&nbsp;integer&nbsp;that&nbsp;is&nbsp;multiple&nbsp;of&nbsp;base&nbsp;in&nbsp;the<br>
viewInterval<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.ticker.html#MultipleLocator">MultipleLocator</a></dd>
<dd><a href="matplotlib.ticker.html#Locator">Locator</a></dd>
<dd><a href="matplotlib.ticker.html#TickHelper">TickHelper</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="MultipleLocator-__call__"><strong>__call__</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;locations&nbsp;of&nbsp;the&nbsp;ticks</tt></dd></dl>

<dl><dt><a name="MultipleLocator-__init__"><strong>__init__</strong></a>(self, base<font color="#909090">=1.0</font>)</dt></dl>

<dl><dt><a name="MultipleLocator-autoscale"><strong>autoscale</strong></a>(self)</dt><dd><tt>Set&nbsp;the&nbsp;view&nbsp;limits&nbsp;to&nbsp;the&nbsp;nearest&nbsp;multiples&nbsp;of&nbsp;base&nbsp;that<br>
contain&nbsp;the&nbsp;data</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#Locator">Locator</a>:<br>
<dl><dt><a name="MultipleLocator-pan"><strong>pan</strong></a>(self, numsteps)</dt><dd><tt>Pan&nbsp;numticks&nbsp;(can&nbsp;be&nbsp;positive&nbsp;or&nbsp;negative)</tt></dd></dl>

<dl><dt><a name="MultipleLocator-refresh"><strong>refresh</strong></a>(self)</dt><dd><tt>refresh&nbsp;internal&nbsp;information&nbsp;based&nbsp;on&nbsp;current&nbsp;lim</tt></dd></dl>

<dl><dt><a name="MultipleLocator-zoom"><strong>zoom</strong></a>(self, direction)</dt><dd><tt>Zoom&nbsp;in/out&nbsp;on&nbsp;axis;&nbsp;if&nbsp;direction&nbsp;is&nbsp;&gt;0&nbsp;zoom&nbsp;in,&nbsp;else&nbsp;zoom&nbsp;out</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><a name="MultipleLocator-set_data_interval"><strong>set_data_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="MultipleLocator-set_view_interval"><strong>set_view_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="MultipleLocator-verify_intervals"><strong>verify_intervals</strong></a>(self)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><strong>dataInterval</strong> = None</dl>

<dl><dt><strong>viewInterval</strong> = None</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="NullFormatter">class <strong>NullFormatter</strong></a>(<a href="matplotlib.ticker.html#Formatter">Formatter</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Always&nbsp;return&nbsp;the&nbsp;empty&nbsp;string<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.ticker.html#NullFormatter">NullFormatter</a></dd>
<dd><a href="matplotlib.ticker.html#Formatter">Formatter</a></dd>
<dd><a href="matplotlib.ticker.html#TickHelper">TickHelper</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="NullFormatter-__call__"><strong>__call__</strong></a>(self, x, pos<font color="#909090">=None</font>)</dt><dd><tt>Return&nbsp;the&nbsp;format&nbsp;for&nbsp;tick&nbsp;val&nbsp;x&nbsp;at&nbsp;position&nbsp;pos</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#Formatter">Formatter</a>:<br>
<dl><dt><a name="NullFormatter-format_data"><strong>format_data</strong></a>(self, value)</dt></dl>

<dl><dt><a name="NullFormatter-format_data_short"><strong>format_data_short</strong></a>(self, value)</dt><dd><tt>return&nbsp;a&nbsp;short&nbsp;string&nbsp;version</tt></dd></dl>

<dl><dt><a name="NullFormatter-get_offset"><strong>get_offset</strong></a>(self)</dt></dl>

<dl><dt><a name="NullFormatter-set_locs"><strong>set_locs</strong></a>(self, locs)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#Formatter">Formatter</a>:<br>
<dl><dt><strong>locs</strong> = []</dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><a name="NullFormatter-set_data_interval"><strong>set_data_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="NullFormatter-set_view_interval"><strong>set_view_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="NullFormatter-verify_intervals"><strong>verify_intervals</strong></a>(self)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><strong>dataInterval</strong> = None</dl>

<dl><dt><strong>viewInterval</strong> = None</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="NullLocator">class <strong>NullLocator</strong></a>(<a href="matplotlib.ticker.html#Locator">Locator</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>No&nbsp;ticks<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.ticker.html#NullLocator">NullLocator</a></dd>
<dd><a href="matplotlib.ticker.html#Locator">Locator</a></dd>
<dd><a href="matplotlib.ticker.html#TickHelper">TickHelper</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="NullLocator-__call__"><strong>__call__</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;locations&nbsp;of&nbsp;the&nbsp;ticks</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#Locator">Locator</a>:<br>
<dl><dt><a name="NullLocator-autoscale"><strong>autoscale</strong></a>(self)</dt><dd><tt>autoscale&nbsp;the&nbsp;view&nbsp;limits</tt></dd></dl>

<dl><dt><a name="NullLocator-pan"><strong>pan</strong></a>(self, numsteps)</dt><dd><tt>Pan&nbsp;numticks&nbsp;(can&nbsp;be&nbsp;positive&nbsp;or&nbsp;negative)</tt></dd></dl>

<dl><dt><a name="NullLocator-refresh"><strong>refresh</strong></a>(self)</dt><dd><tt>refresh&nbsp;internal&nbsp;information&nbsp;based&nbsp;on&nbsp;current&nbsp;lim</tt></dd></dl>

<dl><dt><a name="NullLocator-zoom"><strong>zoom</strong></a>(self, direction)</dt><dd><tt>Zoom&nbsp;in/out&nbsp;on&nbsp;axis;&nbsp;if&nbsp;direction&nbsp;is&nbsp;&gt;0&nbsp;zoom&nbsp;in,&nbsp;else&nbsp;zoom&nbsp;out</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><a name="NullLocator-set_data_interval"><strong>set_data_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="NullLocator-set_view_interval"><strong>set_view_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="NullLocator-verify_intervals"><strong>verify_intervals</strong></a>(self)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><strong>dataInterval</strong> = None</dl>

<dl><dt><strong>viewInterval</strong> = None</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="ScalarFormatter">class <strong>ScalarFormatter</strong></a>(<a href="matplotlib.ticker.html#Formatter">Formatter</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Tick&nbsp;location&nbsp;is&nbsp;a&nbsp;plain&nbsp;old&nbsp;number.&nbsp;&nbsp;If&nbsp;useOffset==True&nbsp;and&nbsp;the&nbsp;data&nbsp;range<br>
is&nbsp;much&nbsp;smaller&nbsp;than&nbsp;the&nbsp;data&nbsp;average,&nbsp;then&nbsp;an&nbsp;offset&nbsp;will&nbsp;be&nbsp;determined<br>
such&nbsp;that&nbsp;the&nbsp;tick&nbsp;labels&nbsp;are&nbsp;meaningful.&nbsp;Scientific&nbsp;notation&nbsp;is&nbsp;used&nbsp;for<br>
data&nbsp;&lt;&nbsp;1e-3&nbsp;or&nbsp;data&nbsp;&gt;=&nbsp;1e4.<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.ticker.html#ScalarFormatter">ScalarFormatter</a></dd>
<dd><a href="matplotlib.ticker.html#Formatter">Formatter</a></dd>
<dd><a href="matplotlib.ticker.html#TickHelper">TickHelper</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="ScalarFormatter-__call__"><strong>__call__</strong></a>(self, x, pos<font color="#909090">=None</font>)</dt><dd><tt>Return&nbsp;the&nbsp;format&nbsp;for&nbsp;tick&nbsp;val&nbsp;x&nbsp;at&nbsp;position&nbsp;pos</tt></dd></dl>

<dl><dt><a name="ScalarFormatter-__init__"><strong>__init__</strong></a>(self, useOffset<font color="#909090">=True</font>, useMathText<font color="#909090">=False</font>)</dt></dl>

<dl><dt><a name="ScalarFormatter-format_data"><strong>format_data</strong></a>(self, value, sign<font color="#909090">=False</font>, mathtext<font color="#909090">=False</font>)</dt><dd><tt>return&nbsp;a&nbsp;formatted&nbsp;string&nbsp;representation&nbsp;of&nbsp;a&nbsp;number</tt></dd></dl>

<dl><dt><a name="ScalarFormatter-format_data_short"><strong>format_data_short</strong></a>(self, value)</dt><dd><tt>return&nbsp;a&nbsp;short&nbsp;formatted&nbsp;string&nbsp;representation&nbsp;of&nbsp;a&nbsp;number</tt></dd></dl>

<dl><dt><a name="ScalarFormatter-get_offset"><strong>get_offset</strong></a>(self)</dt><dd><tt>Return&nbsp;scientific&nbsp;notation,&nbsp;plus&nbsp;offset</tt></dd></dl>

<dl><dt><a name="ScalarFormatter-pprint_val"><strong>pprint_val</strong></a>(self, x)</dt></dl>

<dl><dt><a name="ScalarFormatter-set_locs"><strong>set_locs</strong></a>(self, locs)</dt><dd><tt>set&nbsp;the&nbsp;locations&nbsp;of&nbsp;the&nbsp;ticks</tt></dd></dl>

<dl><dt><a name="ScalarFormatter-set_powerlimits"><strong>set_powerlimits</strong></a>(self, lims)</dt><dd><tt>Sets&nbsp;size&nbsp;thresholds&nbsp;for&nbsp;scientific&nbsp;notation.<br>
&nbsp;<br>
e.g.&nbsp;xaxis.<a href="#ScalarFormatter-set_powerlimits">set_powerlimits</a>((-3,&nbsp;4))&nbsp;sets&nbsp;the&nbsp;default&nbsp;in<br>
which&nbsp;scientific&nbsp;notation&nbsp;is&nbsp;used&nbsp;for&nbsp;numbers&nbsp;less&nbsp;than<br>
1e-3&nbsp;or&nbsp;greater&nbsp;than&nbsp;1e4.<br>
See&nbsp;also&nbsp;<a href="#ScalarFormatter-set_scientific">set_scientific</a>().</tt></dd></dl>

<dl><dt><a name="ScalarFormatter-set_scientific"><strong>set_scientific</strong></a>(self, b)</dt><dd><tt>True&nbsp;or&nbsp;False&nbsp;to&nbsp;turn&nbsp;scientific&nbsp;notation&nbsp;on&nbsp;or&nbsp;off;&nbsp;see&nbsp;also&nbsp;<a href="#ScalarFormatter-set_powerlimits">set_powerlimits</a>()</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#Formatter">Formatter</a>:<br>
<dl><dt><strong>locs</strong> = []</dl>

<hr>
Methods inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><a name="ScalarFormatter-set_data_interval"><strong>set_data_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="ScalarFormatter-set_view_interval"><strong>set_view_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="ScalarFormatter-verify_intervals"><strong>verify_intervals</strong></a>(self)</dt></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.ticker.html#TickHelper">TickHelper</a>:<br>
<dl><dt><strong>dataInterval</strong> = None</dl>

<dl><dt><strong>viewInterval</strong> = None</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="TickHelper">class <strong>TickHelper</strong></a></font></td></tr>
    
<tr><td bgcolor="#ffc8d8"><tt>&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="TickHelper-set_data_interval"><strong>set_data_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="TickHelper-set_view_interval"><strong>set_view_interval</strong></a>(self, interval)</dt></dl>

<dl><dt><a name="TickHelper-verify_intervals"><strong>verify_intervals</strong></a>(self)</dt></dl>

<hr>
Data and other attributes defined here:<br>
<dl><dt><strong>dataInterval</strong> = None</dl>

<dl><dt><strong>viewInterval</strong> = None</dl>

</td></tr></table></td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#55aa55">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Data</strong></big></font></td></tr>
    
<tr><td bgcolor="#55aa55"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><strong>__all__</strong> = ('TickHelper', 'Formatter', 'FixedFormatter', 'NullFormatter', 'FuncFormatter', 'FormatStrFormatter', 'ScalarFormatter', 'LogFormatter', 'LogFormatterExponent', 'LogFormatterMathtext', 'Locator', 'IndexLocator', 'FixedLocator', 'NullLocator', 'LinearLocator', 'LogLocator', 'AutoLocator', 'MultipleLocator', 'MaxNLocator')</td></tr></table>
@footer@