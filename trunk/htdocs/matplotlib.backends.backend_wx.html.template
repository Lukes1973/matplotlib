@header@
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
<tr bgcolor="#7799ee">
<td valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong><a href="matplotlib.html"><font color="#ffffff">matplotlib</font></a>.<a href="matplotlib.backends.html"><font color="#ffffff">backends</font></a>.backend_wx</strong></big></big></font></td
><td align=right valign=bottom
><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/usr/lib64/python2.4/site-packages/matplotlib/backends/backend_wx.py">/usr/lib64/python2.4/site-packages/matplotlib/backends/backend_wx.py</a></font></td></tr></table>
    <p></p>
<p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#aa55cc">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
    
<tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="StringIO.html">StringIO</a><br>
<a href="math.html">math</a><br>
</td><td width="25%" valign=top><a href="matplotlib.html">matplotlib</a><br>
<a href="os.html">os</a><br>
</td><td width="25%" valign=top><a href="sys.html">sys</a><br>
<a href="wx.html">wx</a><br>
</td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ee77aa">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
    
<tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backend_bases.html#FigureCanvasBase">matplotlib.backend_bases.FigureCanvasBase</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_wx.html#FigureCanvasWx">FigureCanvasWx</a>(<a href="matplotlib.backend_bases.html#FigureCanvasBase">matplotlib.backend_bases.FigureCanvasBase</a>, <a href="wx._windows.html#Panel">wx._windows.Panel</a>)
</font></dt></dl>
</dd>
<dt><font face="helvetica, arial"><a href="matplotlib.backend_bases.html#FigureManagerBase">matplotlib.backend_bases.FigureManagerBase</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_wx.html#FigureManagerWx">FigureManagerWx</a>
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_wx.html#FigureManagerWx">FigureManagerWx</a>
</font></dt></dl>
</dd>
<dt><font face="helvetica, arial"><a href="matplotlib.backend_bases.html#GraphicsContextBase">matplotlib.backend_bases.GraphicsContextBase</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_wx.html#GraphicsContextWx">GraphicsContextWx</a>(<a href="matplotlib.backend_bases.html#GraphicsContextBase">matplotlib.backend_bases.GraphicsContextBase</a>, <a href="wx._gdi.html#MemoryDC">wx._gdi.MemoryDC</a>)
</font></dt></dl>
</dd>
<dt><font face="helvetica, arial"><a href="matplotlib.backend_bases.html#NavigationToolbar2">matplotlib.backend_bases.NavigationToolbar2</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_wx.html#NavigationToolbar2Wx">NavigationToolbar2Wx</a>(<a href="matplotlib.backend_bases.html#NavigationToolbar2">matplotlib.backend_bases.NavigationToolbar2</a>, <a href="wx._controls.html#ToolBar">wx._controls.ToolBar</a>)
</font></dt></dl>
</dd>
<dt><font face="helvetica, arial"><a href="matplotlib.backend_bases.html#RendererBase">matplotlib.backend_bases.RendererBase</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_wx.html#RendererWx">RendererWx</a>
</font></dt></dl>
</dd>
<dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_wx.html#fake_stderr">fake_stderr</a>
</font></dt><dt><font face="helvetica, arial"><a href="wx._controls.html#Button">wx._controls.Button</a>(<a href="wx._core.html#Control">wx._core.Control</a>)
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_wx.html#MenuButtonWx">MenuButtonWx</a>
</font></dt></dl>
</dd>
<dt><font face="helvetica, arial"><a href="wx._controls.html#ToolBar">wx._controls.ToolBar</a>(<a href="wx._controls.html#ToolBarBase">wx._controls.ToolBarBase</a>)
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_wx.html#NavigationToolbar2Wx">NavigationToolbar2Wx</a>(<a href="matplotlib.backend_bases.html#NavigationToolbar2">matplotlib.backend_bases.NavigationToolbar2</a>, <a href="wx._controls.html#ToolBar">wx._controls.ToolBar</a>)
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_wx.html#NavigationToolbarWx">NavigationToolbarWx</a>
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_wx.html#NavigationToolbarWx">NavigationToolbarWx</a>
</font></dt></dl>
</dd>
<dt><font face="helvetica, arial"><a href="wx._gdi.html#MemoryDC">wx._gdi.MemoryDC</a>(<a href="wx._gdi.html#DC">wx._gdi.DC</a>)
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_wx.html#GraphicsContextWx">GraphicsContextWx</a>(<a href="matplotlib.backend_bases.html#GraphicsContextBase">matplotlib.backend_bases.GraphicsContextBase</a>, <a href="wx._gdi.html#MemoryDC">wx._gdi.MemoryDC</a>)
</font></dt></dl>
</dd>
<dt><font face="helvetica, arial"><a href="wx._windows.html#Frame">wx._windows.Frame</a>(<a href="wx._windows.html#TopLevelWindow">wx._windows.TopLevelWindow</a>)
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_wx.html#FigureFrameWx">FigureFrameWx</a>
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_wx.html#SubplotToolWX">SubplotToolWX</a>
</font></dt></dl>
</dd>
<dt><font face="helvetica, arial"><a href="wx._windows.html#Panel">wx._windows.Panel</a>(<a href="wx._core.html#Window">wx._core.Window</a>)
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_wx.html#FigureCanvasWx">FigureCanvasWx</a>(<a href="matplotlib.backend_bases.html#FigureCanvasBase">matplotlib.backend_bases.FigureCanvasBase</a>, <a href="wx._windows.html#Panel">wx._windows.Panel</a>)
</font></dt></dl>
</dd>
<dt><font face="helvetica, arial"><a href="wx._windows.html#Printout">wx._windows.Printout</a>(<a href="wx._core.html#Object">wx._core.Object</a>)
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_wx.html#PrintoutWx">PrintoutWx</a>
</font></dt></dl>
</dd>
<dt><font face="helvetica, arial"><a href="wx._windows.html#StatusBar">wx._windows.StatusBar</a>(<a href="wx._core.html#Window">wx._core.Window</a>)
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.backends.backend_wx.html#StatusBarWx">StatusBarWx</a>
</font></dt></dl>
</dd>
</dl>
 <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="FigureCanvasWx">class <strong>FigureCanvasWx</strong></a>(<a href="matplotlib.backend_bases.html#FigureCanvasBase">matplotlib.backend_bases.FigureCanvasBase</a>, <a href="wx._windows.html#Panel">wx._windows.Panel</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>The&nbsp;FigureCanvas&nbsp;contains&nbsp;the&nbsp;figure&nbsp;and&nbsp;does&nbsp;event&nbsp;handling.<br>
&nbsp;<br>
In&nbsp;the&nbsp;wxPython&nbsp;backend,&nbsp;it&nbsp;is&nbsp;derived&nbsp;from&nbsp;wxPanel,&nbsp;and&nbsp;(usually)&nbsp;lives<br>
inside&nbsp;a&nbsp;frame&nbsp;instantiated&nbsp;by&nbsp;a&nbsp;<a href="#FigureManagerWx">FigureManagerWx</a>.&nbsp;The&nbsp;parent&nbsp;window&nbsp;probably<br>
implements&nbsp;a&nbsp;wx.Sizer&nbsp;to&nbsp;control&nbsp;the&nbsp;displayed&nbsp;control&nbsp;size&nbsp;-&nbsp;but&nbsp;we&nbsp;give&nbsp;a<br>
hint&nbsp;as&nbsp;to&nbsp;our&nbsp;preferred&nbsp;minimum&nbsp;size.<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.backends.backend_wx.html#FigureCanvasWx">FigureCanvasWx</a></dd>
<dd><a href="matplotlib.backend_bases.html#FigureCanvasBase">matplotlib.backend_bases.FigureCanvasBase</a></dd>
<dd><a href="wx._windows.html#Panel">wx._windows.Panel</a></dd>
<dd><a href="wx._core.html#Window">wx._core.Window</a></dd>
<dd><a href="wx._core.html#EvtHandler">wx._core.EvtHandler</a></dd>
<dd><a href="wx._core.html#Object">wx._core.Object</a></dd>
<dd><a href="__builtin__.html#object">__builtin__.object</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="FigureCanvasWx-Copy_to_Clipboard"><strong>Copy_to_Clipboard</strong></a>(self, event<font color="#909090">=None</font>)</dt><dd><tt>copy&nbsp;bitmap&nbsp;of&nbsp;canvas&nbsp;to&nbsp;system&nbsp;clipboard</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Destroy"><strong>Destroy</strong></a>(self, *args, **kwargs)</dt></dl>

<dl><dt><a name="FigureCanvasWx-Printer_Init"><strong>Printer_Init</strong></a>(self)</dt><dd><tt>initialize&nbsp;printer&nbsp;settings&nbsp;using&nbsp;wx&nbsp;methods</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Printer_Preview"><strong>Printer_Preview</strong></a>(self, event<font color="#909090">=None</font>)</dt><dd><tt>generate&nbsp;Print&nbsp;Preview&nbsp;with&nbsp;wx&nbsp;Print&nbsp;mechanism</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Printer_Print"><strong>Printer_Print</strong></a>(self, event<font color="#909090">=None</font>)</dt><dd><tt>Print&nbsp;figure&nbsp;using&nbsp;wx&nbsp;Print&nbsp;mechanism</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Printer_Setup"><strong>Printer_Setup</strong></a>(self, event<font color="#909090">=None</font>)</dt><dd><tt>set&nbsp;up&nbsp;figure&nbsp;for&nbsp;printing.&nbsp;&nbsp;The&nbsp;standard&nbsp;wx&nbsp;Printer<br>
Setup&nbsp;Dialog&nbsp;seems&nbsp;to&nbsp;die&nbsp;easily.&nbsp;Therefore,&nbsp;this&nbsp;setup<br>
simply&nbsp;asks&nbsp;for&nbsp;image&nbsp;width&nbsp;and&nbsp;margin&nbsp;for&nbsp;printing.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Printer_Setup2"><strong>Printer_Setup2</strong></a>(self, event<font color="#909090">=None</font>)</dt><dd><tt>set&nbsp;up&nbsp;figure&nbsp;for&nbsp;printing.&nbsp;&nbsp;Using&nbsp;the&nbsp;standard&nbsp;wx&nbsp;Printer<br>
Setup&nbsp;Dialog.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-__init__"><strong>__init__</strong></a>(self, parent, id, figure)</dt><dd><tt>Initialise&nbsp;a&nbsp;FigureWx&nbsp;instance.<br>
&nbsp;<br>
-&nbsp;Initialise&nbsp;the&nbsp;<a href="matplotlib.backend_bases.html#FigureCanvasBase">FigureCanvasBase</a>&nbsp;and&nbsp;wxPanel&nbsp;parents.<br>
-&nbsp;Set&nbsp;event&nbsp;handlers&nbsp;for:<br>
&nbsp;&nbsp;EVT_SIZE&nbsp;&nbsp;(Resize&nbsp;event)<br>
&nbsp;&nbsp;EVT_PAINT&nbsp;(Paint&nbsp;event)</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-draw"><strong>draw</strong></a>(self, repaint<font color="#909090">=True</font>)</dt><dd><tt>Render&nbsp;the&nbsp;figure&nbsp;using&nbsp;<a href="#RendererWx">RendererWx</a>&nbsp;instance&nbsp;renderer,&nbsp;or&nbsp;using&nbsp;a<br>
previously&nbsp;defined&nbsp;renderer&nbsp;if&nbsp;none&nbsp;is&nbsp;specified.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-gui_repaint"><strong>gui_repaint</strong></a>(self, drawDC<font color="#909090">=None</font>)</dt><dd><tt>Performs&nbsp;update&nbsp;of&nbsp;the&nbsp;displayed&nbsp;image&nbsp;on&nbsp;the&nbsp;GUI&nbsp;canvas,&nbsp;using&nbsp;the<br>
supplied&nbsp;device&nbsp;context.&nbsp;&nbsp;If&nbsp;drawDC&nbsp;is&nbsp;None,&nbsp;a&nbsp;ClientDC&nbsp;will&nbsp;be&nbsp;used&nbsp;to<br>
redraw&nbsp;the&nbsp;image.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-print_figure"><strong>print_figure</strong></a>(self, filename, dpi<font color="#909090">=None</font>, facecolor<font color="#909090">='w'</font>, edgecolor<font color="#909090">='w'</font>, orientation<font color="#909090">='portrait'</font>, **kwargs)</dt><dd><tt>Render&nbsp;the&nbsp;figure&nbsp;to&nbsp;hardcopy</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-realize"><strong>realize</strong></a>(self)</dt><dd><tt>This&nbsp;method&nbsp;will&nbsp;be&nbsp;called&nbsp;when&nbsp;the&nbsp;system&nbsp;is&nbsp;ready&nbsp;to&nbsp;draw,<br>
eg&nbsp;when&nbsp;a&nbsp;GUI&nbsp;window&nbsp;is&nbsp;realized</tt></dd></dl>

<hr>
Data and other attributes defined here:<br>
<dl><dt><strong>keyvald</strong> = {306: 'shift', 307: 'alt', 308: 'control', 316: 'left', 317: 'up', 318: 'right', 319: 'down'}</dl>

<hr>
Methods inherited from <a href="matplotlib.backend_bases.html#FigureCanvasBase">matplotlib.backend_bases.FigureCanvasBase</a>:<br>
<dl><dt><a name="FigureCanvasWx-blit"><strong>blit</strong></a>(self, bbox<font color="#909090">=None</font>)</dt><dd><tt>blit&nbsp;the&nbsp;canvas&nbsp;in&nbsp;bbox&nbsp;(default&nbsp;entire&nbsp;canvas)</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-button_press_event"><strong>button_press_event</strong></a>(self, x, y, button, guiEvent<font color="#909090">=None</font>)</dt><dd><tt>Backend&nbsp;derived&nbsp;classes&nbsp;should&nbsp;call&nbsp;this&nbsp;function&nbsp;on&nbsp;any&nbsp;mouse<br>
button&nbsp;press.&nbsp;&nbsp;x,y&nbsp;are&nbsp;the&nbsp;canvas&nbsp;coords:&nbsp;0,0&nbsp;is&nbsp;lower,&nbsp;left.<br>
button&nbsp;and&nbsp;key&nbsp;are&nbsp;as&nbsp;defined&nbsp;in&nbsp;MouseEvent</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-button_release_event"><strong>button_release_event</strong></a>(self, x, y, button, guiEvent<font color="#909090">=None</font>)</dt><dd><tt>Backend&nbsp;derived&nbsp;classes&nbsp;should&nbsp;call&nbsp;this&nbsp;function&nbsp;on&nbsp;any&nbsp;mouse<br>
button&nbsp;release.&nbsp;&nbsp;x,y&nbsp;are&nbsp;the&nbsp;canvas&nbsp;coords:&nbsp;0,0&nbsp;is&nbsp;lower,&nbsp;left.<br>
button&nbsp;and&nbsp;key&nbsp;are&nbsp;as&nbsp;defined&nbsp;in&nbsp;MouseEvent</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-draw_cursor"><strong>draw_cursor</strong></a>(self, event)</dt><dd><tt>Draw&nbsp;a&nbsp;cursor&nbsp;in&nbsp;the&nbsp;event.axes&nbsp;if&nbsp;inaxes&nbsp;is&nbsp;not&nbsp;None.&nbsp;&nbsp;Use<br>
native&nbsp;GUI&nbsp;drawing&nbsp;for&nbsp;efficiency&nbsp;if&nbsp;possible</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-draw_event"><strong>draw_event</strong></a>(self, renderer)</dt></dl>

<dl><dt><a name="FigureCanvasWx-draw_idle"><strong>draw_idle</strong></a>(self, *args, **kwargs)</dt><dd><tt>draw&nbsp;only&nbsp;if&nbsp;idle;&nbsp;defaults&nbsp;to&nbsp;draw&nbsp;but&nbsp;backends&nbsp;can&nbsp;overrride</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-get_width_height"><strong>get_width_height</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;figure&nbsp;width&nbsp;and&nbsp;height&nbsp;in&nbsp;points&nbsp;or&nbsp;pixels<br>
(depending&nbsp;on&nbsp;the&nbsp;backend),&nbsp;truncated&nbsp;to&nbsp;integers</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-key_press_event"><strong>key_press_event</strong></a>(self, key, guiEvent<font color="#909090">=None</font>)</dt></dl>

<dl><dt><a name="FigureCanvasWx-key_release_event"><strong>key_release_event</strong></a>(self, key, guiEvent<font color="#909090">=None</font>)</dt></dl>

<dl><dt><a name="FigureCanvasWx-motion_notify_event"><strong>motion_notify_event</strong></a>(self, x, y, guiEvent<font color="#909090">=None</font>)</dt><dd><tt>Backend&nbsp;derived&nbsp;classes&nbsp;should&nbsp;call&nbsp;this&nbsp;function&nbsp;on&nbsp;any<br>
motion-notify-event.&nbsp;x,y&nbsp;are&nbsp;the&nbsp;canvas&nbsp;coords:&nbsp;0,0&nbsp;is&nbsp;lower,&nbsp;left.<br>
button&nbsp;and&nbsp;key&nbsp;are&nbsp;as&nbsp;defined&nbsp;in&nbsp;MouseEvent</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-mpl_connect"><strong>mpl_connect</strong></a>(self, s, func)</dt><dd><tt>Connect&nbsp;event&nbsp;with&nbsp;string&nbsp;s&nbsp;to&nbsp;func.&nbsp;&nbsp;The&nbsp;signature&nbsp;of&nbsp;func&nbsp;is<br>
&nbsp;<br>
&nbsp;&nbsp;def&nbsp;func(event)<br>
&nbsp;<br>
where&nbsp;event&nbsp;is&nbsp;a&nbsp;MplEvent.&nbsp;&nbsp;The&nbsp;following&nbsp;events&nbsp;are&nbsp;recognized<br>
&nbsp;<br>
&nbsp;'resize_event'<br>
&nbsp;'draw_event'<br>
&nbsp;'key_press_event'<br>
&nbsp;'key_release_event'<br>
&nbsp;'button_press_event'<br>
&nbsp;'button_release_event'<br>
&nbsp;'motion_notify_event'<br>
&nbsp;<br>
&nbsp;For&nbsp;the&nbsp;three&nbsp;events&nbsp;above,&nbsp;if&nbsp;the&nbsp;mouse&nbsp;is&nbsp;over&nbsp;the&nbsp;axes,<br>
&nbsp;the&nbsp;variable&nbsp;event.inaxes&nbsp;will&nbsp;be&nbsp;set&nbsp;to&nbsp;the&nbsp;axes&nbsp;it&nbsp;is&nbsp;over,<br>
&nbsp;and&nbsp;additionally,&nbsp;the&nbsp;variables&nbsp;event.xdata&nbsp;and&nbsp;event.ydata<br>
&nbsp;will&nbsp;be&nbsp;defined.&nbsp;&nbsp;This&nbsp;is&nbsp;the&nbsp;mouse&nbsp;location&nbsp;in&nbsp;data&nbsp;coords.<br>
&nbsp;See&nbsp;backend_bases.MplEvent.<br>
&nbsp;<br>
return&nbsp;value&nbsp;is&nbsp;a&nbsp;connection&nbsp;id&nbsp;that&nbsp;can&nbsp;be&nbsp;used&nbsp;with<br>
mpl_disconnect</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-mpl_disconnect"><strong>mpl_disconnect</strong></a>(self, cid)</dt><dd><tt>Connect&nbsp;s&nbsp;to&nbsp;func.&nbsp;return&nbsp;an&nbsp;id&nbsp;that&nbsp;can&nbsp;be&nbsp;used&nbsp;with&nbsp;disconnect<br>
Method&nbsp;should&nbsp;return&nbsp;None</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-resize"><strong>resize</strong></a>(self, w, h)</dt><dd><tt>set&nbsp;the&nbsp;canvas&nbsp;size&nbsp;in&nbsp;pixels</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-resize_event"><strong>resize_event</strong></a>(self)</dt></dl>

<dl><dt><a name="FigureCanvasWx-switch_backends"><strong>switch_backends</strong></a>(self, FigureCanvasClass)</dt><dd><tt>instantiate&nbsp;an&nbsp;instance&nbsp;of&nbsp;FigureCanvasClass<br>
&nbsp;<br>
This&nbsp;is&nbsp;used&nbsp;for&nbsp;backend&nbsp;switching,&nbsp;eg,&nbsp;to&nbsp;instantiate&nbsp;a<br>
FigureCanvasPS&nbsp;from&nbsp;a&nbsp;FigureCanvasGTK.&nbsp;&nbsp;Note,&nbsp;deep&nbsp;copying&nbsp;is<br>
not&nbsp;done,&nbsp;so&nbsp;any&nbsp;changes&nbsp;to&nbsp;one&nbsp;of&nbsp;the&nbsp;instances&nbsp;(eg,&nbsp;setting<br>
figure&nbsp;size&nbsp;or&nbsp;line&nbsp;props),&nbsp;will&nbsp;be&nbsp;reflected&nbsp;in&nbsp;the&nbsp;other</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.backend_bases.html#FigureCanvasBase">matplotlib.backend_bases.FigureCanvasBase</a>:<br>
<dl><dt><strong>events</strong> = ('key_press_event', 'key_release_event', 'button_press_event', 'button_release_event', 'motion_notify_event')</dl>

<hr>
Methods inherited from <a href="wx._windows.html#Panel">wx._windows.Panel</a>:<br>
<dl><dt><a name="FigureCanvasWx-Create"><strong>Create</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-Create">Create</a>(self,&nbsp;Window&nbsp;parent,&nbsp;int&nbsp;id=-1,&nbsp;Point&nbsp;pos=DefaultPosition,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Size&nbsp;size=DefaultSize,&nbsp;long&nbsp;style=wxTAB_TRAVERSAL|wxNO_BORDER,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;name=PanelNameStr)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Create&nbsp;the&nbsp;GUI&nbsp;part&nbsp;of&nbsp;the&nbsp;Window&nbsp;for&nbsp;2-phase&nbsp;creation&nbsp;mode.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-InitDialog"><strong>InitDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-InitDialog">InitDialog</a>(self)<br>
&nbsp;<br>
Sends&nbsp;an&nbsp;EVT_INIT_DIALOG&nbsp;event,&nbsp;whose&nbsp;handler&nbsp;usually&nbsp;transfers&nbsp;data<br>
to&nbsp;the&nbsp;dialog&nbsp;via&nbsp;validators.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetFocus"><strong>SetFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetFocus">SetFocus</a>(self)<br>
&nbsp;<br>
Overrides&nbsp;`wx.Window.SetFocus`.&nbsp;&nbsp;This&nbsp;method&nbsp;uses&nbsp;the&nbsp;(undocumented)<br>
mix-in&nbsp;class&nbsp;wxControlContainer&nbsp;which&nbsp;manages&nbsp;the&nbsp;focus&nbsp;and&nbsp;TAB&nbsp;logic<br>
for&nbsp;controls&nbsp;which&nbsp;usually&nbsp;have&nbsp;child&nbsp;controls.&nbsp;&nbsp;In&nbsp;practice,&nbsp;if&nbsp;you<br>
call&nbsp;this&nbsp;method&nbsp;and&nbsp;the&nbsp;panel&nbsp;has&nbsp;at&nbsp;least&nbsp;one&nbsp;child&nbsp;window,&nbsp;then&nbsp;the<br>
focus&nbsp;will&nbsp;be&nbsp;given&nbsp;to&nbsp;the&nbsp;child&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetFocusIgnoringChildren"><strong>SetFocusIgnoringChildren</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetFocusIgnoringChildren">SetFocusIgnoringChildren</a>(self)<br>
&nbsp;<br>
In&nbsp;contrast&nbsp;to&nbsp;`SetFocus`&nbsp;(see&nbsp;above)&nbsp;this&nbsp;will&nbsp;set&nbsp;the&nbsp;focus&nbsp;to&nbsp;the<br>
panel&nbsp;even&nbsp;of&nbsp;there&nbsp;are&nbsp;child&nbsp;windows&nbsp;in&nbsp;the&nbsp;panel.&nbsp;This&nbsp;is&nbsp;only<br>
rarely&nbsp;needed.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-__repr__"><strong>__repr__</strong></a>(self)</dt></dl>

<hr>
Static methods inherited from <a href="wx._windows.html#Panel">wx._windows.Panel</a>:<br>
<dl><dt><a name="FigureCanvasWx-GetClassDefaultAttributes"><strong>GetClassDefaultAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetClassDefaultAttributes">GetClassDefaultAttributes</a>(int&nbsp;variant=WINDOW_VARIANT_NORMAL)&nbsp;-&gt;&nbsp;VisualAttributes<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;attributes&nbsp;for&nbsp;this&nbsp;class.&nbsp;&nbsp;This&nbsp;is&nbsp;useful&nbsp;if&nbsp;you&nbsp;want<br>
to&nbsp;use&nbsp;the&nbsp;same&nbsp;font&nbsp;or&nbsp;colour&nbsp;in&nbsp;your&nbsp;own&nbsp;control&nbsp;as&nbsp;in&nbsp;a&nbsp;standard<br>
control&nbsp;--&nbsp;which&nbsp;is&nbsp;a&nbsp;much&nbsp;better&nbsp;idea&nbsp;than&nbsp;hard&nbsp;coding&nbsp;specific<br>
colours&nbsp;or&nbsp;fonts&nbsp;which&nbsp;might&nbsp;look&nbsp;completely&nbsp;out&nbsp;of&nbsp;place&nbsp;on&nbsp;the<br>
user's&nbsp;system,&nbsp;especially&nbsp;if&nbsp;it&nbsp;uses&nbsp;themes.<br>
&nbsp;<br>
The&nbsp;variant&nbsp;parameter&nbsp;is&nbsp;only&nbsp;relevant&nbsp;under&nbsp;Mac&nbsp;currently&nbsp;and&nbsp;is<br>
ignore&nbsp;under&nbsp;other&nbsp;platforms.&nbsp;Under&nbsp;Mac,&nbsp;it&nbsp;will&nbsp;change&nbsp;the&nbsp;size&nbsp;of<br>
the&nbsp;returned&nbsp;font.&nbsp;See&nbsp;`wx.Window.SetWindowVariant`&nbsp;for&nbsp;more&nbsp;about<br>
this.</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#Window">wx._core.Window</a>:<br>
<dl><dt><a name="FigureCanvasWx-AcceptsFocus"><strong>AcceptsFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-AcceptsFocus">AcceptsFocus</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Can&nbsp;this&nbsp;window&nbsp;have&nbsp;focus?</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-AcceptsFocusFromKeyboard"><strong>AcceptsFocusFromKeyboard</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-AcceptsFocusFromKeyboard">AcceptsFocusFromKeyboard</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Can&nbsp;this&nbsp;window&nbsp;be&nbsp;given&nbsp;focus&nbsp;by&nbsp;keyboard&nbsp;navigation?&nbsp;if&nbsp;not,&nbsp;the<br>
only&nbsp;way&nbsp;to&nbsp;give&nbsp;it&nbsp;focus&nbsp;(provided&nbsp;it&nbsp;accepts&nbsp;it&nbsp;at&nbsp;all)&nbsp;is&nbsp;to&nbsp;click<br>
it.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-AddChild"><strong>AddChild</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-AddChild">AddChild</a>(self,&nbsp;Window&nbsp;child)<br>
&nbsp;<br>
Adds&nbsp;a&nbsp;child&nbsp;window.&nbsp;This&nbsp;is&nbsp;called&nbsp;automatically&nbsp;by&nbsp;window&nbsp;creation<br>
functions&nbsp;so&nbsp;should&nbsp;not&nbsp;be&nbsp;required&nbsp;by&nbsp;the&nbsp;application&nbsp;programmer.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-AssociateHandle"><strong>AssociateHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-AssociateHandle">AssociateHandle</a>(self,&nbsp;long&nbsp;handle)<br>
&nbsp;<br>
Associate&nbsp;the&nbsp;window&nbsp;with&nbsp;a&nbsp;new&nbsp;native&nbsp;handle</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-CacheBestSize"><strong>CacheBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-CacheBestSize">CacheBestSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Cache&nbsp;the&nbsp;best&nbsp;size&nbsp;so&nbsp;it&nbsp;doesn't&nbsp;need&nbsp;to&nbsp;be&nbsp;calculated&nbsp;again,&nbsp;(at&nbsp;least&nbsp;until<br>
some&nbsp;properties&nbsp;of&nbsp;the&nbsp;window&nbsp;change.)</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-CaptureMouse"><strong>CaptureMouse</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-CaptureMouse">CaptureMouse</a>(self)<br>
&nbsp;<br>
Directs&nbsp;all&nbsp;mouse&nbsp;input&nbsp;to&nbsp;this&nbsp;window.&nbsp;Call&nbsp;wx.Window.ReleaseMouse&nbsp;to<br>
release&nbsp;the&nbsp;capture.<br>
&nbsp;<br>
Note&nbsp;that&nbsp;wxWindows&nbsp;maintains&nbsp;the&nbsp;stack&nbsp;of&nbsp;windows&nbsp;having&nbsp;captured&nbsp;the<br>
mouse&nbsp;and&nbsp;when&nbsp;the&nbsp;mouse&nbsp;is&nbsp;released&nbsp;the&nbsp;capture&nbsp;returns&nbsp;to&nbsp;the&nbsp;window<br>
which&nbsp;had&nbsp;had&nbsp;captured&nbsp;it&nbsp;previously&nbsp;and&nbsp;it&nbsp;is&nbsp;only&nbsp;really&nbsp;released&nbsp;if<br>
there&nbsp;were&nbsp;no&nbsp;previous&nbsp;window.&nbsp;In&nbsp;particular,&nbsp;this&nbsp;means&nbsp;that&nbsp;you&nbsp;must<br>
release&nbsp;the&nbsp;mouse&nbsp;as&nbsp;many&nbsp;times&nbsp;as&nbsp;you&nbsp;capture&nbsp;it.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Center"><strong>Center</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-Center">Center</a>(self,&nbsp;int&nbsp;direction=BOTH)<br>
&nbsp;<br>
Centers&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;parameter&nbsp;specifies&nbsp;the&nbsp;direction&nbsp;for<br>
cetering,&nbsp;and&nbsp;may&nbsp;be&nbsp;wx.HORIZONTAL,&nbsp;wx.VERTICAL&nbsp;or&nbsp;wx.BOTH.&nbsp;It&nbsp;may<br>
also&nbsp;include&nbsp;wx.CENTER_ON_SCREEN&nbsp;flag&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;center&nbsp;the&nbsp;window<br>
on&nbsp;the&nbsp;entire&nbsp;screen&nbsp;and&nbsp;not&nbsp;on&nbsp;its&nbsp;parent&nbsp;window.&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a<br>
top-level&nbsp;window&nbsp;and&nbsp;has&nbsp;no&nbsp;parent&nbsp;then&nbsp;it&nbsp;will&nbsp;always&nbsp;be&nbsp;centered<br>
relative&nbsp;to&nbsp;the&nbsp;screen.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-CenterOnParent"><strong>CenterOnParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-CenterOnParent">CenterOnParent</a>(self,&nbsp;int&nbsp;dir=BOTH)<br>
&nbsp;<br>
Center&nbsp;with&nbsp;respect&nbsp;to&nbsp;the&nbsp;the&nbsp;parent&nbsp;window</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-CenterOnScreen"><strong>CenterOnScreen</strong></a> = deprecatedWrapper(*args, **kwargs)</dt><dd><tt>&lt;function&nbsp;CenterOnScreen&nbsp;at&nbsp;0x2b90d8dbcf50&gt;&nbsp;is&nbsp;deprecated</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Centre"><strong>Centre</strong></a> = Center(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-Center">Center</a>(self,&nbsp;int&nbsp;direction=BOTH)<br>
&nbsp;<br>
Centers&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;parameter&nbsp;specifies&nbsp;the&nbsp;direction&nbsp;for<br>
cetering,&nbsp;and&nbsp;may&nbsp;be&nbsp;wx.HORIZONTAL,&nbsp;wx.VERTICAL&nbsp;or&nbsp;wx.BOTH.&nbsp;It&nbsp;may<br>
also&nbsp;include&nbsp;wx.CENTER_ON_SCREEN&nbsp;flag&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;center&nbsp;the&nbsp;window<br>
on&nbsp;the&nbsp;entire&nbsp;screen&nbsp;and&nbsp;not&nbsp;on&nbsp;its&nbsp;parent&nbsp;window.&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a<br>
top-level&nbsp;window&nbsp;and&nbsp;has&nbsp;no&nbsp;parent&nbsp;then&nbsp;it&nbsp;will&nbsp;always&nbsp;be&nbsp;centered<br>
relative&nbsp;to&nbsp;the&nbsp;screen.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-CentreOnParent"><strong>CentreOnParent</strong></a> = CenterOnParent(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-CenterOnParent">CenterOnParent</a>(self,&nbsp;int&nbsp;dir=BOTH)<br>
&nbsp;<br>
Center&nbsp;with&nbsp;respect&nbsp;to&nbsp;the&nbsp;the&nbsp;parent&nbsp;window</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-CentreOnScreen"><strong>CentreOnScreen</strong></a> = deprecatedWrapper(*args, **kwargs)</dt><dd><tt>&lt;function&nbsp;CenterOnScreen&nbsp;at&nbsp;0x2b90d8dbcf50&gt;&nbsp;is&nbsp;deprecated</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-ClearBackground"><strong>ClearBackground</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-ClearBackground">ClearBackground</a>(self)<br>
&nbsp;<br>
Clears&nbsp;the&nbsp;window&nbsp;by&nbsp;filling&nbsp;it&nbsp;with&nbsp;the&nbsp;current&nbsp;background<br>
colour.&nbsp;Does&nbsp;not&nbsp;cause&nbsp;an&nbsp;erase&nbsp;background&nbsp;event&nbsp;to&nbsp;be&nbsp;generated.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-ClientToScreen"><strong>ClientToScreen</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-ClientToScreen">ClientToScreen</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;to&nbsp;screen&nbsp;coordinates&nbsp;from&nbsp;coordinates&nbsp;relative&nbsp;to&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-ClientToScreenXY"><strong>ClientToScreenXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-ClientToScreenXY">ClientToScreenXY</a>(int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Converts&nbsp;to&nbsp;screen&nbsp;coordinates&nbsp;from&nbsp;coordinates&nbsp;relative&nbsp;to&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Close"><strong>Close</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-Close">Close</a>(self,&nbsp;bool&nbsp;force=False)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;function&nbsp;simply&nbsp;generates&nbsp;a&nbsp;EVT_CLOSE&nbsp;event&nbsp;whose&nbsp;handler&nbsp;usually<br>
tries&nbsp;to&nbsp;close&nbsp;the&nbsp;window.&nbsp;It&nbsp;doesn't&nbsp;close&nbsp;the&nbsp;window&nbsp;itself,<br>
however.&nbsp;&nbsp;If&nbsp;force&nbsp;is&nbsp;False&nbsp;(the&nbsp;default)&nbsp;then&nbsp;the&nbsp;window's&nbsp;close<br>
handler&nbsp;will&nbsp;be&nbsp;allowed&nbsp;to&nbsp;veto&nbsp;the&nbsp;destruction&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-ConvertDialogPointToPixels"><strong>ConvertDialogPointToPixels</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-ConvertDialogPointToPixels">ConvertDialogPointToPixels</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-ConvertDialogSizeToPixels"><strong>ConvertDialogSizeToPixels</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-ConvertDialogSizeToPixels">ConvertDialogSizeToPixels</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-ConvertPixelPointToDialog"><strong>ConvertPixelPointToDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-ConvertPixelPointToDialog">ConvertPixelPointToDialog</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-ConvertPixelSizeToDialog"><strong>ConvertPixelSizeToDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-ConvertPixelSizeToDialog">ConvertPixelSizeToDialog</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-DLG_PNT"><strong>DLG_PNT</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-DLG_PNT">DLG_PNT</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-DLG_SZE"><strong>DLG_SZE</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-DLG_SZE">DLG_SZE</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-DestroyChildren"><strong>DestroyChildren</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-DestroyChildren">DestroyChildren</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Destroys&nbsp;all&nbsp;children&nbsp;of&nbsp;a&nbsp;window.&nbsp;Called&nbsp;automatically&nbsp;by&nbsp;the<br>
destructor.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Disable"><strong>Disable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-Disable">Disable</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Disables&nbsp;the&nbsp;window,&nbsp;same&nbsp;as&nbsp;<a href="#FigureCanvasWx-Enable">Enable</a>(false).</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-DissociateHandle"><strong>DissociateHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-DissociateHandle">DissociateHandle</a>(self)<br>
&nbsp;<br>
Dissociate&nbsp;the&nbsp;current&nbsp;native&nbsp;handle&nbsp;from&nbsp;the&nbsp;window</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-DragAcceptFiles"><strong>DragAcceptFiles</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-DragAcceptFiles">DragAcceptFiles</a>(self,&nbsp;bool&nbsp;accept)<br>
&nbsp;<br>
Enables&nbsp;or&nbsp;disables&nbsp;eligibility&nbsp;for&nbsp;drop&nbsp;file&nbsp;events,&nbsp;EVT_DROP_FILES.<br>
Only&nbsp;functional&nbsp;on&nbsp;Windows.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Enable"><strong>Enable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-Enable">Enable</a>(self,&nbsp;bool&nbsp;enable=True)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Enable&nbsp;or&nbsp;disable&nbsp;the&nbsp;window&nbsp;for&nbsp;user&nbsp;input.&nbsp;Note&nbsp;that&nbsp;when&nbsp;a&nbsp;parent<br>
window&nbsp;is&nbsp;disabled,&nbsp;all&nbsp;of&nbsp;its&nbsp;children&nbsp;are&nbsp;disabled&nbsp;as&nbsp;well&nbsp;and&nbsp;they<br>
are&nbsp;reenabled&nbsp;again&nbsp;when&nbsp;the&nbsp;parent&nbsp;is.&nbsp;&nbsp;Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window<br>
has&nbsp;been&nbsp;enabled&nbsp;or&nbsp;disabled,&nbsp;false&nbsp;if&nbsp;nothing&nbsp;was&nbsp;done,&nbsp;i.e.&nbsp;if&nbsp;the<br>
window&nbsp;had&nbsp;already&nbsp;been&nbsp;in&nbsp;the&nbsp;specified&nbsp;state.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-FindWindowById"><strong>FindWindowById</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-FindWindowById">FindWindowById</a>(self,&nbsp;long&nbsp;winid)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Find&nbsp;a&nbsp;chld&nbsp;of&nbsp;this&nbsp;window&nbsp;by&nbsp;window&nbsp;ID</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-FindWindowByName"><strong>FindWindowByName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-FindWindowByName">FindWindowByName</a>(self,&nbsp;String&nbsp;name)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Find&nbsp;a&nbsp;child&nbsp;of&nbsp;this&nbsp;window&nbsp;by&nbsp;name</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Fit"><strong>Fit</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-Fit">Fit</a>(self)<br>
&nbsp;<br>
Sizes&nbsp;the&nbsp;window&nbsp;so&nbsp;that&nbsp;it&nbsp;fits&nbsp;around&nbsp;its&nbsp;subwindows.&nbsp;This&nbsp;function<br>
won't&nbsp;do&nbsp;anything&nbsp;if&nbsp;there&nbsp;are&nbsp;no&nbsp;subwindows&nbsp;and&nbsp;will&nbsp;only&nbsp;really&nbsp;work<br>
correctly&nbsp;if&nbsp;sizers&nbsp;are&nbsp;used&nbsp;for&nbsp;the&nbsp;subwindows&nbsp;layout.&nbsp;Also,&nbsp;if&nbsp;the<br>
window&nbsp;has&nbsp;exactly&nbsp;one&nbsp;subwindow&nbsp;it&nbsp;is&nbsp;better&nbsp;(faster&nbsp;and&nbsp;the&nbsp;result<br>
is&nbsp;more&nbsp;precise&nbsp;as&nbsp;Fit&nbsp;adds&nbsp;some&nbsp;margin&nbsp;to&nbsp;account&nbsp;for&nbsp;fuzziness&nbsp;of<br>
its&nbsp;calculations)&nbsp;to&nbsp;call&nbsp;window.<a href="#FigureCanvasWx-SetClientSize">SetClientSize</a>(child.<a href="#FigureCanvasWx-GetSize">GetSize</a>())<br>
instead&nbsp;of&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-FitInside"><strong>FitInside</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-FitInside">FitInside</a>(self)<br>
&nbsp;<br>
Similar&nbsp;to&nbsp;Fit,&nbsp;but&nbsp;sizes&nbsp;the&nbsp;interior&nbsp;(virtual)&nbsp;size&nbsp;of&nbsp;a<br>
window.&nbsp;Mainly&nbsp;useful&nbsp;with&nbsp;scrolled&nbsp;windows&nbsp;to&nbsp;reset&nbsp;scrollbars&nbsp;after<br>
sizing&nbsp;changes&nbsp;that&nbsp;do&nbsp;not&nbsp;trigger&nbsp;a&nbsp;size&nbsp;event,&nbsp;and/or&nbsp;scrolled<br>
windows&nbsp;without&nbsp;an&nbsp;interior&nbsp;sizer.&nbsp;This&nbsp;function&nbsp;similarly&nbsp;won't&nbsp;do<br>
anything&nbsp;if&nbsp;there&nbsp;are&nbsp;no&nbsp;subwindows.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Freeze"><strong>Freeze</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-Freeze">Freeze</a>(self)<br>
&nbsp;<br>
Freezes&nbsp;the&nbsp;window&nbsp;or,&nbsp;in&nbsp;other&nbsp;words,&nbsp;prevents&nbsp;any&nbsp;updates&nbsp;from<br>
taking&nbsp;place&nbsp;on&nbsp;screen,&nbsp;the&nbsp;window&nbsp;is&nbsp;not&nbsp;redrawn&nbsp;at&nbsp;all.&nbsp;Thaw&nbsp;must&nbsp;be<br>
called&nbsp;to&nbsp;reenable&nbsp;window&nbsp;redrawing.&nbsp;&nbsp;Calls&nbsp;to&nbsp;Freeze/Thaw&nbsp;may&nbsp;be<br>
nested,&nbsp;with&nbsp;the&nbsp;actual&nbsp;Thaw&nbsp;being&nbsp;delayed&nbsp;until&nbsp;all&nbsp;the&nbsp;nesting&nbsp;has<br>
been&nbsp;undone.<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;useful&nbsp;for&nbsp;visual&nbsp;appearance&nbsp;optimization&nbsp;(for&nbsp;example,<br>
it&nbsp;is&nbsp;a&nbsp;good&nbsp;idea&nbsp;to&nbsp;use&nbsp;it&nbsp;before&nbsp;inserting&nbsp;large&nbsp;amount&nbsp;of&nbsp;text&nbsp;into<br>
a&nbsp;wxTextCtrl&nbsp;under&nbsp;wxGTK)&nbsp;but&nbsp;is&nbsp;not&nbsp;implemented&nbsp;on&nbsp;all&nbsp;platforms&nbsp;nor<br>
for&nbsp;all&nbsp;controls&nbsp;so&nbsp;it&nbsp;is&nbsp;mostly&nbsp;just&nbsp;a&nbsp;hint&nbsp;to&nbsp;wxWindows&nbsp;and&nbsp;not&nbsp;a<br>
mandatory&nbsp;directive.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetAcceleratorTable"><strong>GetAcceleratorTable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetAcceleratorTable">GetAcceleratorTable</a>(self)&nbsp;-&gt;&nbsp;AcceleratorTable<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;accelerator&nbsp;table&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetAdjustedBestSize"><strong>GetAdjustedBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetAdjustedBestSize">GetAdjustedBestSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;similar&nbsp;to&nbsp;GetBestSize,&nbsp;except&nbsp;in&nbsp;one<br>
thing.&nbsp;GetBestSize&nbsp;should&nbsp;return&nbsp;the&nbsp;minimum&nbsp;untruncated&nbsp;size&nbsp;of&nbsp;the<br>
window,&nbsp;while&nbsp;this&nbsp;method&nbsp;will&nbsp;return&nbsp;the&nbsp;largest&nbsp;of&nbsp;BestSize&nbsp;and&nbsp;any<br>
user&nbsp;specified&nbsp;minimum&nbsp;size.&nbsp;ie.&nbsp;it&nbsp;is&nbsp;the&nbsp;minimum&nbsp;size&nbsp;the&nbsp;window<br>
should&nbsp;currently&nbsp;be&nbsp;drawn&nbsp;at,&nbsp;not&nbsp;the&nbsp;minimal&nbsp;size&nbsp;it&nbsp;can&nbsp;possibly<br>
tolerate.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetAutoLayout"><strong>GetAutoLayout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetAutoLayout">GetAutoLayout</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;current&nbsp;autoLayout&nbsp;setting</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetBackgroundColour"><strong>GetBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetBackgroundColour">GetBackgroundColour</a>(self)&nbsp;-&gt;&nbsp;Colour<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetBackgroundStyle"><strong>GetBackgroundStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetBackgroundStyle">GetBackgroundStyle</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;style&nbsp;of&nbsp;the&nbsp;window.<br>
&nbsp;<br>
:see:&nbsp;`SetBackgroundStyle`</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetBestFittingSize"><strong>GetBestFittingSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetBestFittingSize">GetBestFittingSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;function&nbsp;will&nbsp;merge&nbsp;the&nbsp;window's&nbsp;best&nbsp;size&nbsp;into&nbsp;the&nbsp;window's<br>
minimum&nbsp;size,&nbsp;giving&nbsp;priority&nbsp;to&nbsp;the&nbsp;min&nbsp;size&nbsp;components,&nbsp;and&nbsp;returns<br>
the&nbsp;results.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetBestSize"><strong>GetBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetBestSize">GetBestSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;function&nbsp;returns&nbsp;the&nbsp;best&nbsp;acceptable&nbsp;minimal&nbsp;size&nbsp;for&nbsp;the<br>
window,&nbsp;if&nbsp;applicable.&nbsp;For&nbsp;example,&nbsp;for&nbsp;a&nbsp;static&nbsp;text&nbsp;control,&nbsp;it&nbsp;will<br>
be&nbsp;the&nbsp;minimal&nbsp;size&nbsp;such&nbsp;that&nbsp;the&nbsp;control&nbsp;label&nbsp;is&nbsp;not&nbsp;truncated.&nbsp;For<br>
windows&nbsp;containing&nbsp;subwindows&nbsp;(suzh&nbsp;aswx.<a href="wx._windows.html#Panel">Panel</a>),&nbsp;the&nbsp;size&nbsp;returned&nbsp;by<br>
this&nbsp;function&nbsp;will&nbsp;be&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;size&nbsp;the&nbsp;window&nbsp;would&nbsp;have&nbsp;had<br>
after&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetBestSizeTuple"><strong>GetBestSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetBestSizeTuple">GetBestSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
This&nbsp;function&nbsp;returns&nbsp;the&nbsp;best&nbsp;acceptable&nbsp;minimal&nbsp;size&nbsp;for&nbsp;the<br>
window,&nbsp;if&nbsp;applicable.&nbsp;For&nbsp;example,&nbsp;for&nbsp;a&nbsp;static&nbsp;text&nbsp;control,&nbsp;it&nbsp;will<br>
be&nbsp;the&nbsp;minimal&nbsp;size&nbsp;such&nbsp;that&nbsp;the&nbsp;control&nbsp;label&nbsp;is&nbsp;not&nbsp;truncated.&nbsp;For<br>
windows&nbsp;containing&nbsp;subwindows&nbsp;(suzh&nbsp;aswx.<a href="wx._windows.html#Panel">Panel</a>),&nbsp;the&nbsp;size&nbsp;returned&nbsp;by<br>
this&nbsp;function&nbsp;will&nbsp;be&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;size&nbsp;the&nbsp;window&nbsp;would&nbsp;have&nbsp;had<br>
after&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetBestVirtualSize"><strong>GetBestVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetBestVirtualSize">GetBestVirtualSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Return&nbsp;the&nbsp;largest&nbsp;of&nbsp;ClientSize&nbsp;and&nbsp;BestSize&nbsp;(as&nbsp;determined&nbsp;by&nbsp;a<br>
sizer,&nbsp;interior&nbsp;children,&nbsp;or&nbsp;other&nbsp;means)</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetBorder"><strong>GetBorder</strong></a>(*args)</dt><dd><tt><a href="#FigureCanvasWx-GetBorder">GetBorder</a>(self,&nbsp;long&nbsp;flags)&nbsp;-&gt;&nbsp;int<br>
<a href="#FigureCanvasWx-GetBorder">GetBorder</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;border&nbsp;for&nbsp;the&nbsp;flags&nbsp;of&nbsp;this&nbsp;window</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetCaret"><strong>GetCaret</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetCaret">GetCaret</a>(self)&nbsp;-&gt;&nbsp;Caret<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;caret&nbsp;associated&nbsp;with&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetCharHeight"><strong>GetCharHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetCharHeight">GetCharHeight</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;(average)&nbsp;character&nbsp;size&nbsp;for&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetCharWidth"><strong>GetCharWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetCharWidth">GetCharWidth</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;(average)&nbsp;character&nbsp;size&nbsp;for&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetChildren"><strong>GetChildren</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetChildren">GetChildren</a>(self)&nbsp;-&gt;&nbsp;PyObject<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;list&nbsp;of&nbsp;the&nbsp;window's&nbsp;children.&nbsp;&nbsp;NOTE:&nbsp;Currently&nbsp;this&nbsp;is&nbsp;a<br>
copy&nbsp;of&nbsp;the&nbsp;child&nbsp;window&nbsp;list&nbsp;maintained&nbsp;by&nbsp;the&nbsp;window,&nbsp;so&nbsp;the&nbsp;return<br>
value&nbsp;of&nbsp;this&nbsp;function&nbsp;is&nbsp;only&nbsp;valid&nbsp;as&nbsp;long&nbsp;as&nbsp;the&nbsp;window's&nbsp;children<br>
do&nbsp;not&nbsp;change.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetClientAreaOrigin"><strong>GetClientAreaOrigin</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetClientAreaOrigin">GetClientAreaOrigin</a>(self)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Get&nbsp;the&nbsp;origin&nbsp;of&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window&nbsp;relative&nbsp;to&nbsp;the<br>
window's&nbsp;top&nbsp;left&nbsp;corner&nbsp;(the&nbsp;client&nbsp;area&nbsp;may&nbsp;be&nbsp;shifted&nbsp;because&nbsp;of<br>
the&nbsp;borders,&nbsp;scrollbars,&nbsp;other&nbsp;decorations...)</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetClientRect"><strong>GetClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetClientRect">GetClientRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Get&nbsp;the&nbsp;client&nbsp;area&nbsp;position&nbsp;and&nbsp;size&nbsp;as&nbsp;a&nbsp;`wx.Rect`&nbsp;object.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetClientSize"><strong>GetClientSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetClientSize">GetClientSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;gets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window's&nbsp;'client&nbsp;area'&nbsp;in&nbsp;pixels.&nbsp;The&nbsp;client<br>
area&nbsp;is&nbsp;the&nbsp;area&nbsp;which&nbsp;may&nbsp;be&nbsp;drawn&nbsp;on&nbsp;by&nbsp;the&nbsp;programmer,&nbsp;excluding<br>
title&nbsp;bar,&nbsp;border,&nbsp;scrollbars,&nbsp;etc.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetClientSizeTuple"><strong>GetClientSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetClientSizeTuple">GetClientSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
This&nbsp;gets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window's&nbsp;'client&nbsp;area'&nbsp;in&nbsp;pixels.&nbsp;The&nbsp;client<br>
area&nbsp;is&nbsp;the&nbsp;area&nbsp;which&nbsp;may&nbsp;be&nbsp;drawn&nbsp;on&nbsp;by&nbsp;the&nbsp;programmer,&nbsp;excluding<br>
title&nbsp;bar,&nbsp;border,&nbsp;scrollbars,&nbsp;etc.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetConstraints"><strong>GetConstraints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetConstraints">GetConstraints</a>(self)&nbsp;-&gt;&nbsp;LayoutConstraints<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;pointer&nbsp;to&nbsp;the&nbsp;window's&nbsp;layout&nbsp;constraints,&nbsp;or&nbsp;None&nbsp;if&nbsp;there<br>
are&nbsp;none.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetContainingSizer"><strong>GetContainingSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetContainingSizer">GetContainingSizer</a>(self)&nbsp;-&gt;&nbsp;Sizer<br>
&nbsp;<br>
Return&nbsp;the&nbsp;sizer&nbsp;that&nbsp;this&nbsp;window&nbsp;is&nbsp;a&nbsp;member&nbsp;of,&nbsp;if&nbsp;any,&nbsp;otherwise&nbsp;None.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetCursor"><strong>GetCursor</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetCursor">GetCursor</a>(self)&nbsp;-&gt;&nbsp;Cursor<br>
&nbsp;<br>
Return&nbsp;the&nbsp;cursor&nbsp;associated&nbsp;with&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetDefaultAttributes"><strong>GetDefaultAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetDefaultAttributes">GetDefaultAttributes</a>(self)&nbsp;-&gt;&nbsp;VisualAttributes<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;attributes&nbsp;for&nbsp;an&nbsp;instance&nbsp;of&nbsp;this&nbsp;class.&nbsp;&nbsp;This&nbsp;is<br>
useful&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;use&nbsp;the&nbsp;same&nbsp;font&nbsp;or&nbsp;colour&nbsp;in&nbsp;your&nbsp;own&nbsp;control<br>
as&nbsp;in&nbsp;a&nbsp;standard&nbsp;control&nbsp;--&nbsp;which&nbsp;is&nbsp;a&nbsp;much&nbsp;better&nbsp;idea&nbsp;than&nbsp;hard<br>
coding&nbsp;specific&nbsp;colours&nbsp;or&nbsp;fonts&nbsp;which&nbsp;might&nbsp;look&nbsp;completely&nbsp;out&nbsp;of<br>
place&nbsp;on&nbsp;the&nbsp;user's&nbsp;system,&nbsp;especially&nbsp;if&nbsp;it&nbsp;uses&nbsp;themes.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetDefaultItem"><strong>GetDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetDefaultItem">GetDefaultItem</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;child&nbsp;of&nbsp;this&nbsp;parent,&nbsp;i.e.&nbsp;the&nbsp;one&nbsp;which&nbsp;is&nbsp;activated<br>
by&nbsp;pressing&nbsp;&lt;Enter&gt;&nbsp;such&nbsp;as&nbsp;the&nbsp;OK&nbsp;button&nbsp;on&nbsp;a&nbsp;wx.Dialog.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetDropTarget"><strong>GetDropTarget</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetDropTarget">GetDropTarget</a>(self)&nbsp;-&gt;&nbsp;DropTarget<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;associated&nbsp;drop&nbsp;target,&nbsp;which&nbsp;may&nbsp;be&nbsp;None.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetEventHandler"><strong>GetEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetEventHandler">GetEventHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;event&nbsp;handler&nbsp;for&nbsp;this&nbsp;window.&nbsp;By&nbsp;default,&nbsp;the&nbsp;window&nbsp;is<br>
its&nbsp;own&nbsp;event&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetExtraStyle"><strong>GetExtraStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetExtraStyle">GetExtraStyle</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;extra&nbsp;style&nbsp;bits&nbsp;for&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetFont"><strong>GetFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetFont">GetFont</a>(self)&nbsp;-&gt;&nbsp;Font<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;default&nbsp;font&nbsp;used&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetForegroundColour"><strong>GetForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetForegroundColour">GetForegroundColour</a>(self)&nbsp;-&gt;&nbsp;Colour<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;foreground&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;interpretation&nbsp;of<br>
foreground&nbsp;colour&nbsp;is&nbsp;dependent&nbsp;on&nbsp;the&nbsp;window&nbsp;class;&nbsp;it&nbsp;may&nbsp;be&nbsp;the&nbsp;text<br>
colour&nbsp;or&nbsp;other&nbsp;colour,&nbsp;or&nbsp;it&nbsp;may&nbsp;not&nbsp;be&nbsp;used&nbsp;at&nbsp;all.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetFullTextExtent"><strong>GetFullTextExtent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetFullTextExtent">GetFullTextExtent</a>(String&nbsp;string,&nbsp;Font&nbsp;font=None)&nbsp;-&gt;<br>
&nbsp;&nbsp;&nbsp;(width,&nbsp;height,&nbsp;descent,&nbsp;externalLeading)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;width,&nbsp;height,&nbsp;decent&nbsp;and&nbsp;leading&nbsp;of&nbsp;the&nbsp;text&nbsp;using&nbsp;the<br>
current&nbsp;or&nbsp;specified&nbsp;font.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetGrandParent"><strong>GetGrandParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetGrandParent">GetGrandParent</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;parent&nbsp;of&nbsp;the&nbsp;parent&nbsp;of&nbsp;this&nbsp;window,&nbsp;or&nbsp;None&nbsp;if&nbsp;there<br>
isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetHandle"><strong>GetHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetHandle">GetHandle</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;platform-specific&nbsp;handle&nbsp;(as&nbsp;a&nbsp;long&nbsp;integer)&nbsp;of&nbsp;the<br>
physical&nbsp;window.&nbsp;&nbsp;Currently&nbsp;on&nbsp;wxMac&nbsp;it&nbsp;returns&nbsp;the&nbsp;handle&nbsp;of&nbsp;the<br>
toplevel&nbsp;parent&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetHelpText"><strong>GetHelpText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetHelpText">GetHelpText</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;help&nbsp;text&nbsp;to&nbsp;be&nbsp;used&nbsp;as&nbsp;context-sensitive&nbsp;help&nbsp;for&nbsp;this<br>
window.&nbsp;&nbsp;Note&nbsp;that&nbsp;the&nbsp;text&nbsp;is&nbsp;actually&nbsp;stored&nbsp;by&nbsp;the&nbsp;current<br>
wxHelpProvider&nbsp;implementation,&nbsp;and&nbsp;not&nbsp;in&nbsp;the&nbsp;window&nbsp;object&nbsp;itself.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetId"><strong>GetId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetId">GetId</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;identifier&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Each&nbsp;window&nbsp;has&nbsp;an&nbsp;integer<br>
identifier.&nbsp;If&nbsp;the&nbsp;application&nbsp;has&nbsp;not&nbsp;provided&nbsp;one&nbsp;(or&nbsp;the&nbsp;default&nbsp;Id<br>
-1&nbsp;is&nbsp;used)&nbsp;then&nbsp;an&nbsp;unique&nbsp;identifier&nbsp;with&nbsp;a&nbsp;negative&nbsp;value&nbsp;will&nbsp;be<br>
generated.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetLabel"><strong>GetLabel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetLabel">GetLabel</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Generic&nbsp;way&nbsp;of&nbsp;getting&nbsp;a&nbsp;label&nbsp;from&nbsp;any&nbsp;window,&nbsp;for&nbsp;identification<br>
purposes.&nbsp;&nbsp;The&nbsp;interpretation&nbsp;of&nbsp;this&nbsp;function&nbsp;differs&nbsp;from&nbsp;class&nbsp;to<br>
class.&nbsp;For&nbsp;frames&nbsp;and&nbsp;dialogs,&nbsp;the&nbsp;value&nbsp;returned&nbsp;is&nbsp;the&nbsp;title.&nbsp;For<br>
buttons&nbsp;or&nbsp;static&nbsp;text&nbsp;controls,&nbsp;it&nbsp;is&nbsp;the&nbsp;button&nbsp;text.&nbsp;This&nbsp;function<br>
can&nbsp;be&nbsp;useful&nbsp;for&nbsp;meta-programs&nbsp;such&nbsp;as&nbsp;testing&nbsp;tools&nbsp;or&nbsp;special-needs<br>
access&nbsp;programs)which&nbsp;need&nbsp;to&nbsp;identify&nbsp;windows&nbsp;by&nbsp;name.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetMaxHeight"><strong>GetMaxHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetMaxHeight">GetMaxHeight</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetMaxSize"><strong>GetMaxSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetMaxSize">GetMaxSize</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetMaxWidth"><strong>GetMaxWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetMaxWidth">GetMaxWidth</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetMinHeight"><strong>GetMinHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetMinHeight">GetMinHeight</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetMinSize"><strong>GetMinSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetMinSize">GetMinSize</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetMinWidth"><strong>GetMinWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetMinWidth">GetMinWidth</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetName"><strong>GetName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetName">GetName</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;windows&nbsp;name.&nbsp;&nbsp;This&nbsp;name&nbsp;is&nbsp;not&nbsp;guaranteed&nbsp;to&nbsp;be&nbsp;unique;<br>
it&nbsp;is&nbsp;up&nbsp;to&nbsp;the&nbsp;programmer&nbsp;to&nbsp;supply&nbsp;an&nbsp;appropriate&nbsp;name&nbsp;in&nbsp;the&nbsp;window<br>
constructor&nbsp;or&nbsp;via&nbsp;wx.Window.SetName.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetParent"><strong>GetParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetParent">GetParent</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;parent&nbsp;window&nbsp;of&nbsp;this&nbsp;window,&nbsp;or&nbsp;None&nbsp;if&nbsp;there&nbsp;isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetPosition"><strong>GetPosition</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetPosition">GetPosition</a>(self)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window's&nbsp;position.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetPositionTuple"><strong>GetPositionTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetPositionTuple">GetPositionTuple</a>()&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window's&nbsp;position.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetRect"><strong>GetRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetRect">GetRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;size&nbsp;and&nbsp;position&nbsp;of&nbsp;the&nbsp;window&nbsp;as&nbsp;a&nbsp;wx.Rect&nbsp;object.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetScrollPos"><strong>GetScrollPos</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetScrollPos">GetScrollPos</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;position.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetScrollRange"><strong>GetScrollRange</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetScrollRange">GetScrollRange</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;range.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetScrollThumb"><strong>GetScrollThumb</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetScrollThumb">GetScrollThumb</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;thumb&nbsp;size.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetSize"><strong>GetSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetSize">GetSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetSizeTuple"><strong>GetSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetSizeTuple">GetSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetSizer"><strong>GetSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetSizer">GetSizer</a>(self)&nbsp;-&gt;&nbsp;Sizer<br>
&nbsp;<br>
Return&nbsp;the&nbsp;sizer&nbsp;associated&nbsp;with&nbsp;the&nbsp;window&nbsp;by&nbsp;a&nbsp;previous&nbsp;call&nbsp;to<br>
SetSizer&nbsp;or&nbsp;None&nbsp;if&nbsp;there&nbsp;isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetTextExtent"><strong>GetTextExtent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetTextExtent">GetTextExtent</a>(String&nbsp;string)&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;width&nbsp;and&nbsp;height&nbsp;of&nbsp;the&nbsp;text&nbsp;using&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetThemeEnabled"><strong>GetThemeEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetThemeEnabled">GetThemeEnabled</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Return&nbsp;the&nbsp;themeEnabled&nbsp;flag.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetTitle"><strong>GetTitle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetTitle">GetTitle</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window's&nbsp;title.&nbsp;Applicable&nbsp;only&nbsp;to&nbsp;frames&nbsp;and&nbsp;dialogs.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetToolTip"><strong>GetToolTip</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetToolTip">GetToolTip</a>(self)&nbsp;-&gt;&nbsp;ToolTip<br>
&nbsp;<br>
get&nbsp;the&nbsp;associated&nbsp;tooltip&nbsp;or&nbsp;None&nbsp;if&nbsp;none</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetUpdateClientRect"><strong>GetUpdateClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetUpdateClientRect">GetUpdateClientRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Get&nbsp;the&nbsp;update&nbsp;rectangle&nbsp;region&nbsp;bounding&nbsp;box&nbsp;in&nbsp;client&nbsp;coords.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetUpdateRegion"><strong>GetUpdateRegion</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetUpdateRegion">GetUpdateRegion</a>(self)&nbsp;-&gt;&nbsp;Region<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;region&nbsp;specifying&nbsp;which&nbsp;parts&nbsp;of&nbsp;the&nbsp;window&nbsp;have&nbsp;been<br>
damaged.&nbsp;Should&nbsp;only&nbsp;be&nbsp;called&nbsp;within&nbsp;an&nbsp;EVT_PAINT&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetValidator"><strong>GetValidator</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetValidator">GetValidator</a>(self)&nbsp;-&gt;&nbsp;Validator<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;pointer&nbsp;to&nbsp;the&nbsp;current&nbsp;validator&nbsp;for&nbsp;the&nbsp;window,&nbsp;or&nbsp;None&nbsp;if<br>
there&nbsp;is&nbsp;none.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetVirtualSize"><strong>GetVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetVirtualSize">GetVirtualSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Get&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows<br>
this&nbsp;is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetVirtualSizeTuple"><strong>GetVirtualSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetVirtualSizeTuple">GetVirtualSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows<br>
this&nbsp;is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetWindowStyle"><strong>GetWindowStyle</strong></a> = GetWindowStyleFlag(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetWindowStyleFlag">GetWindowStyleFlag</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window&nbsp;style&nbsp;that&nbsp;was&nbsp;passed&nbsp;to&nbsp;the&nbsp;constructor&nbsp;or&nbsp;Create<br>
method.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetWindowStyleFlag"><strong>GetWindowStyleFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetWindowStyleFlag">GetWindowStyleFlag</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window&nbsp;style&nbsp;that&nbsp;was&nbsp;passed&nbsp;to&nbsp;the&nbsp;constructor&nbsp;or&nbsp;Create<br>
method.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetWindowVariant"><strong>GetWindowVariant</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetWindowVariant">GetWindowVariant</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-HasCapture"><strong>HasCapture</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-HasCapture">HasCapture</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;this&nbsp;window&nbsp;has&nbsp;the&nbsp;current&nbsp;mouse&nbsp;capture.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-HasFlag"><strong>HasFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-HasFlag">HasFlag</a>(self,&nbsp;int&nbsp;flag)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Test&nbsp;if&nbsp;the&nbsp;given&nbsp;style&nbsp;is&nbsp;set&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-HasScrollbar"><strong>HasScrollbar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-HasScrollbar">HasScrollbar</a>(self,&nbsp;int&nbsp;orient)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Does&nbsp;the&nbsp;window&nbsp;have&nbsp;the&nbsp;scrollbar&nbsp;for&nbsp;this&nbsp;orientation?</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-HasTransparentBackground"><strong>HasTransparentBackground</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-HasTransparentBackground">HasTransparentBackground</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;True&nbsp;if&nbsp;this&nbsp;window's&nbsp;background&nbsp;is&nbsp;transparent&nbsp;(as,&nbsp;for<br>
example,&nbsp;for&nbsp;`wx.StaticText`)&nbsp;and&nbsp;should&nbsp;show&nbsp;the&nbsp;parent&nbsp;window's<br>
background.<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;mostly&nbsp;used&nbsp;internally&nbsp;by&nbsp;the&nbsp;library&nbsp;itself&nbsp;and&nbsp;you<br>
normally&nbsp;shouldn't&nbsp;have&nbsp;to&nbsp;call&nbsp;it.&nbsp;You&nbsp;may,&nbsp;however,&nbsp;have&nbsp;to&nbsp;override<br>
it&nbsp;in&nbsp;your&nbsp;custom&nbsp;control&nbsp;classes&nbsp;to&nbsp;ensure&nbsp;that&nbsp;background&nbsp;is&nbsp;painted<br>
correctly.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Hide"><strong>Hide</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-Hide">Hide</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Equivalent&nbsp;to&nbsp;calling&nbsp;<a href="#FigureCanvasWx-Show">Show</a>(False).</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-HitTest"><strong>HitTest</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-HitTest">HitTest</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Test&nbsp;where&nbsp;the&nbsp;given&nbsp;(in&nbsp;client&nbsp;coords)&nbsp;point&nbsp;lies</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-HitTestXY"><strong>HitTestXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-HitTestXY">HitTestXY</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Test&nbsp;where&nbsp;the&nbsp;given&nbsp;(in&nbsp;client&nbsp;coords)&nbsp;point&nbsp;lies</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-InheritAttributes"><strong>InheritAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-InheritAttributes">InheritAttributes</a>(self)<br>
&nbsp;<br>
This&nbsp;function&nbsp;is&nbsp;(or&nbsp;should&nbsp;be,&nbsp;in&nbsp;case&nbsp;of&nbsp;custom&nbsp;controls)&nbsp;called<br>
during&nbsp;window&nbsp;creation&nbsp;to&nbsp;intelligently&nbsp;set&nbsp;up&nbsp;the&nbsp;window&nbsp;visual<br>
attributes,&nbsp;that&nbsp;is&nbsp;the&nbsp;font&nbsp;and&nbsp;the&nbsp;foreground&nbsp;and&nbsp;background<br>
colours.<br>
&nbsp;<br>
By&nbsp;'intelligently'&nbsp;the&nbsp;following&nbsp;is&nbsp;meant:&nbsp;by&nbsp;default,&nbsp;all&nbsp;windows&nbsp;use<br>
their&nbsp;own&nbsp;default&nbsp;attributes.&nbsp;However&nbsp;if&nbsp;some&nbsp;of&nbsp;the&nbsp;parent's<br>
attributes&nbsp;are&nbsp;explicitly&nbsp;changed&nbsp;(that&nbsp;is,&nbsp;using&nbsp;SetFont&nbsp;and&nbsp;not<br>
SetOwnFont)&nbsp;and&nbsp;if&nbsp;the&nbsp;corresponding&nbsp;attribute&nbsp;hadn't&nbsp;been<br>
explicitly&nbsp;set&nbsp;for&nbsp;this&nbsp;window&nbsp;itself,&nbsp;then&nbsp;this&nbsp;window&nbsp;takes&nbsp;the&nbsp;same<br>
value&nbsp;as&nbsp;used&nbsp;by&nbsp;the&nbsp;parent.&nbsp;In&nbsp;addition,&nbsp;if&nbsp;the&nbsp;window&nbsp;overrides<br>
ShouldInheritColours&nbsp;to&nbsp;return&nbsp;false,&nbsp;the&nbsp;colours&nbsp;will&nbsp;not&nbsp;be&nbsp;changed<br>
no&nbsp;matter&nbsp;what&nbsp;and&nbsp;only&nbsp;the&nbsp;font&nbsp;might.<br>
&nbsp;<br>
This&nbsp;rather&nbsp;complicated&nbsp;logic&nbsp;is&nbsp;necessary&nbsp;in&nbsp;order&nbsp;to&nbsp;accommodate&nbsp;the<br>
different&nbsp;usage&nbsp;scenarios.&nbsp;The&nbsp;most&nbsp;common&nbsp;one&nbsp;is&nbsp;when&nbsp;all&nbsp;default<br>
attributes&nbsp;are&nbsp;used&nbsp;and&nbsp;in&nbsp;this&nbsp;case,&nbsp;nothing&nbsp;should&nbsp;be&nbsp;inherited&nbsp;as<br>
in&nbsp;modern&nbsp;GUIs&nbsp;different&nbsp;controls&nbsp;use&nbsp;different&nbsp;fonts&nbsp;(and&nbsp;colours)<br>
than&nbsp;their&nbsp;siblings&nbsp;so&nbsp;they&nbsp;can't&nbsp;inherit&nbsp;the&nbsp;same&nbsp;value&nbsp;from&nbsp;the<br>
parent.&nbsp;However&nbsp;it&nbsp;was&nbsp;also&nbsp;deemed&nbsp;desirable&nbsp;to&nbsp;allow&nbsp;to&nbsp;simply&nbsp;change<br>
the&nbsp;attributes&nbsp;of&nbsp;all&nbsp;children&nbsp;at&nbsp;once&nbsp;by&nbsp;just&nbsp;changing&nbsp;the&nbsp;font&nbsp;or<br>
colour&nbsp;of&nbsp;their&nbsp;common&nbsp;parent,&nbsp;hence&nbsp;in&nbsp;this&nbsp;case&nbsp;we&nbsp;do&nbsp;inherit&nbsp;the<br>
parents&nbsp;attributes.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-InheritsBackgroundColour"><strong>InheritsBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-InheritsBackgroundColour">InheritsBackgroundColour</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-InvalidateBestSize"><strong>InvalidateBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-InvalidateBestSize">InvalidateBestSize</a>(self)<br>
&nbsp;<br>
Reset&nbsp;the&nbsp;cached&nbsp;best&nbsp;size&nbsp;value&nbsp;so&nbsp;it&nbsp;will&nbsp;be&nbsp;recalculated&nbsp;the&nbsp;next<br>
time&nbsp;it&nbsp;is&nbsp;needed.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-IsBeingDeleted"><strong>IsBeingDeleted</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-IsBeingDeleted">IsBeingDeleted</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Is&nbsp;the&nbsp;window&nbsp;in&nbsp;the&nbsp;process&nbsp;of&nbsp;being&nbsp;deleted?</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-IsEnabled"><strong>IsEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-IsEnabled">IsEnabled</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;enabled&nbsp;for&nbsp;input,&nbsp;false&nbsp;otherwise.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-IsExposed"><strong>IsExposed</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-IsExposed">IsExposed</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;w=1,&nbsp;int&nbsp;h=1)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-IsExposedPoint"><strong>IsExposedPoint</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-IsExposedPoint">IsExposedPoint</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-IsExposedRect"><strong>IsExposedRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-IsExposedRect">IsExposedRect</a>(self,&nbsp;Rect&nbsp;rect)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-IsRetained"><strong>IsRetained</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-IsRetained">IsRetained</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;retained,&nbsp;false&nbsp;otherwise.&nbsp;&nbsp;Retained<br>
windows&nbsp;are&nbsp;only&nbsp;available&nbsp;on&nbsp;X&nbsp;platforms.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-IsShown"><strong>IsShown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-IsShown">IsShown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;shown,&nbsp;false&nbsp;if&nbsp;it&nbsp;has&nbsp;been&nbsp;hidden.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-IsTopLevel"><strong>IsTopLevel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-IsTopLevel">IsTopLevel</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;window&nbsp;is&nbsp;a&nbsp;top-level&nbsp;one.&nbsp;Currently&nbsp;all<br>
frames&nbsp;and&nbsp;dialogs&nbsp;are&nbsp;always&nbsp;considered&nbsp;to&nbsp;be&nbsp;top-level&nbsp;windows&nbsp;(even<br>
if&nbsp;they&nbsp;have&nbsp;a&nbsp;parent&nbsp;window).</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Layout"><strong>Layout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-Layout">Layout</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Invokes&nbsp;the&nbsp;constraint-based&nbsp;layout&nbsp;algorithm&nbsp;or&nbsp;the&nbsp;sizer-based<br>
algorithm&nbsp;for&nbsp;this&nbsp;window.&nbsp;&nbsp;See&nbsp;SetAutoLayout:&nbsp;when&nbsp;auto&nbsp;layout&nbsp;is&nbsp;on,<br>
this&nbsp;function&nbsp;gets&nbsp;called&nbsp;automatically&nbsp;by&nbsp;the&nbsp;default&nbsp;EVT_SIZE<br>
handler&nbsp;when&nbsp;the&nbsp;window&nbsp;is&nbsp;resized.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-LineDown"><strong>LineDown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-LineDown">LineDown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#FigureCanvasWx-ScrollLines">ScrollLines</a>(1).</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-LineUp"><strong>LineUp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-LineUp">LineUp</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#FigureCanvasWx-ScrollLines">ScrollLines</a>(-1).</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Lower"><strong>Lower</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-Lower">Lower</a>(self)<br>
&nbsp;<br>
Lowers&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;bottom&nbsp;of&nbsp;the&nbsp;window&nbsp;hierarchy.&nbsp;&nbsp;In&nbsp;current<br>
version&nbsp;of&nbsp;wxWidgets&nbsp;this&nbsp;works&nbsp;both&nbsp;for&nbsp;manage&nbsp;and&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-MakeModal"><strong>MakeModal</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-MakeModal">MakeModal</a>(self,&nbsp;bool&nbsp;modal=True)<br>
&nbsp;<br>
Disables&nbsp;all&nbsp;other&nbsp;windows&nbsp;in&nbsp;the&nbsp;application&nbsp;so&nbsp;that&nbsp;the&nbsp;user&nbsp;can<br>
only&nbsp;interact&nbsp;with&nbsp;this&nbsp;window.&nbsp;&nbsp;Passing&nbsp;False&nbsp;will&nbsp;reverse&nbsp;this<br>
effect.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Move"><strong>Move</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-Move">Move</a>(self,&nbsp;Point&nbsp;pt,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-MoveAfterInTabOrder"><strong>MoveAfterInTabOrder</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-MoveAfterInTabOrder">MoveAfterInTabOrder</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Moves&nbsp;this&nbsp;window&nbsp;in&nbsp;the&nbsp;tab&nbsp;navigation&nbsp;order&nbsp;after&nbsp;the&nbsp;specified<br>
sibling&nbsp;window.&nbsp;&nbsp;This&nbsp;means&nbsp;that&nbsp;when&nbsp;the&nbsp;user&nbsp;presses&nbsp;the&nbsp;TAB&nbsp;key&nbsp;on<br>
that&nbsp;other&nbsp;window,&nbsp;the&nbsp;focus&nbsp;switches&nbsp;to&nbsp;this&nbsp;window.<br>
&nbsp;<br>
The&nbsp;default&nbsp;tab&nbsp;order&nbsp;is&nbsp;the&nbsp;same&nbsp;as&nbsp;creation&nbsp;order.&nbsp;&nbsp;This&nbsp;function<br>
and&nbsp;`MoveBeforeInTabOrder`&nbsp;allow&nbsp;to&nbsp;change&nbsp;it&nbsp;after&nbsp;creating&nbsp;all&nbsp;the<br>
windows.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-MoveBeforeInTabOrder"><strong>MoveBeforeInTabOrder</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-MoveBeforeInTabOrder">MoveBeforeInTabOrder</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Same&nbsp;as&nbsp;`MoveAfterInTabOrder`&nbsp;except&nbsp;that&nbsp;it&nbsp;inserts&nbsp;this&nbsp;window&nbsp;just<br>
before&nbsp;win&nbsp;instead&nbsp;of&nbsp;putting&nbsp;it&nbsp;right&nbsp;after&nbsp;it.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-MoveXY"><strong>MoveXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-MoveXY">MoveXY</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Navigate"><strong>Navigate</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-Navigate">Navigate</a>(self,&nbsp;int&nbsp;flags=NavigationKeyEvent.IsForward)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Does&nbsp;keyboard&nbsp;navigation&nbsp;from&nbsp;this&nbsp;window&nbsp;to&nbsp;another,&nbsp;by&nbsp;sending&nbsp;a<br>
`wx.NavigationKeyEvent`.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-PageDown"><strong>PageDown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-PageDown">PageDown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#FigureCanvasWx-ScrollPages">ScrollPages</a>(1).</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-PageUp"><strong>PageUp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-PageUp">PageUp</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#FigureCanvasWx-ScrollPages">ScrollPages</a>(-1).</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-PopEventHandler"><strong>PopEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-PopEventHandler">PopEventHandler</a>(self,&nbsp;bool&nbsp;deleteHandler=False)&nbsp;-&gt;&nbsp;EvtHandler<br>
&nbsp;<br>
Removes&nbsp;and&nbsp;returns&nbsp;the&nbsp;top-most&nbsp;event&nbsp;handler&nbsp;on&nbsp;the&nbsp;event&nbsp;handler<br>
stack.&nbsp;&nbsp;If&nbsp;deleteHandler&nbsp;is&nbsp;True&nbsp;then&nbsp;the&nbsp;wx.EvtHandler&nbsp;object&nbsp;will&nbsp;be<br>
destroyed&nbsp;after&nbsp;it&nbsp;is&nbsp;popped.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-PopupMenu"><strong>PopupMenu</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-PopupMenu">PopupMenu</a>(self,&nbsp;Menu&nbsp;menu,&nbsp;Point&nbsp;pos=DefaultPosition)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Pops&nbsp;up&nbsp;the&nbsp;given&nbsp;menu&nbsp;at&nbsp;the&nbsp;specified&nbsp;coordinates,&nbsp;relative&nbsp;to&nbsp;this&nbsp;window,<br>
and&nbsp;returns&nbsp;control&nbsp;when&nbsp;the&nbsp;user&nbsp;has&nbsp;dismissed&nbsp;the&nbsp;menu.&nbsp;If&nbsp;a&nbsp;menu&nbsp;item&nbsp;is<br>
selected,&nbsp;the&nbsp;corresponding&nbsp;menu&nbsp;event&nbsp;is&nbsp;generated&nbsp;and&nbsp;will&nbsp;be&nbsp;processed&nbsp;as<br>
usual.&nbsp;&nbsp;If&nbsp;the&nbsp;default&nbsp;position&nbsp;is&nbsp;given&nbsp;then&nbsp;the&nbsp;current&nbsp;position&nbsp;of&nbsp;the<br>
mouse&nbsp;cursor&nbsp;will&nbsp;be&nbsp;used.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-PopupMenuXY"><strong>PopupMenuXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-PopupMenuXY">PopupMenuXY</a>(self,&nbsp;Menu&nbsp;menu,&nbsp;int&nbsp;x=-1,&nbsp;int&nbsp;y=-1)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Pops&nbsp;up&nbsp;the&nbsp;given&nbsp;menu&nbsp;at&nbsp;the&nbsp;specified&nbsp;coordinates,&nbsp;relative&nbsp;to&nbsp;this&nbsp;window,<br>
and&nbsp;returns&nbsp;control&nbsp;when&nbsp;the&nbsp;user&nbsp;has&nbsp;dismissed&nbsp;the&nbsp;menu.&nbsp;If&nbsp;a&nbsp;menu&nbsp;item&nbsp;is<br>
selected,&nbsp;the&nbsp;corresponding&nbsp;menu&nbsp;event&nbsp;is&nbsp;generated&nbsp;and&nbsp;will&nbsp;be&nbsp;processed&nbsp;as<br>
usual.&nbsp;&nbsp;If&nbsp;the&nbsp;default&nbsp;position&nbsp;is&nbsp;given&nbsp;then&nbsp;the&nbsp;current&nbsp;position&nbsp;of&nbsp;the<br>
mouse&nbsp;cursor&nbsp;will&nbsp;be&nbsp;used.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-PostCreate"><strong>PostCreate</strong></a>(self, pre)</dt><dd><tt>Phase&nbsp;3&nbsp;of&nbsp;the&nbsp;2-phase&nbsp;create&nbsp;&lt;wink!&gt;<br>
Call&nbsp;this&nbsp;method&nbsp;after&nbsp;precreating&nbsp;the&nbsp;window&nbsp;with&nbsp;the&nbsp;2-phase&nbsp;create&nbsp;method.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-PrepareDC"><strong>PrepareDC</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-PrepareDC">PrepareDC</a>(self,&nbsp;DC&nbsp;dc)<br>
&nbsp;<br>
Call&nbsp;this&nbsp;function&nbsp;to&nbsp;prepare&nbsp;the&nbsp;device&nbsp;context&nbsp;for&nbsp;drawing&nbsp;a<br>
scrolled&nbsp;image.&nbsp;It&nbsp;sets&nbsp;the&nbsp;device&nbsp;origin&nbsp;according&nbsp;to&nbsp;the&nbsp;current<br>
scroll&nbsp;position.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-PushEventHandler"><strong>PushEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-PushEventHandler">PushEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)<br>
&nbsp;<br>
Pushes&nbsp;this&nbsp;event&nbsp;handler&nbsp;onto&nbsp;the&nbsp;event&nbsp;handler&nbsp;stack&nbsp;for&nbsp;the&nbsp;window.<br>
An&nbsp;event&nbsp;handler&nbsp;is&nbsp;an&nbsp;object&nbsp;that&nbsp;is&nbsp;capable&nbsp;of&nbsp;processing&nbsp;the&nbsp;events<br>
sent&nbsp;to&nbsp;a&nbsp;window.&nbsp;By&nbsp;default,&nbsp;the&nbsp;window&nbsp;is&nbsp;its&nbsp;own&nbsp;event&nbsp;handler,&nbsp;but<br>
an&nbsp;application&nbsp;may&nbsp;wish&nbsp;to&nbsp;substitute&nbsp;another,&nbsp;for&nbsp;example&nbsp;to&nbsp;allow<br>
central&nbsp;implementation&nbsp;of&nbsp;event-handling&nbsp;for&nbsp;a&nbsp;variety&nbsp;of&nbsp;different<br>
window&nbsp;classes.<br>
&nbsp;<br>
wx.Window.PushEventHandler&nbsp;allows&nbsp;an&nbsp;application&nbsp;to&nbsp;set&nbsp;up&nbsp;a&nbsp;chain&nbsp;of<br>
event&nbsp;handlers,&nbsp;where&nbsp;an&nbsp;event&nbsp;not&nbsp;handled&nbsp;by&nbsp;one&nbsp;event&nbsp;handler&nbsp;is<br>
handed&nbsp;to&nbsp;the&nbsp;next&nbsp;one&nbsp;in&nbsp;the&nbsp;chain.&nbsp;Use&nbsp;`wx.Window.PopEventHandler`&nbsp;to<br>
remove&nbsp;the&nbsp;event&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Raise"><strong>Raise</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-Raise">Raise</a>(self)<br>
&nbsp;<br>
Raises&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;top&nbsp;of&nbsp;the&nbsp;window&nbsp;hierarchy.&nbsp;&nbsp;In&nbsp;current<br>
version&nbsp;of&nbsp;wxWidgets&nbsp;this&nbsp;works&nbsp;both&nbsp;for&nbsp;manage&nbsp;and&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Refresh"><strong>Refresh</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-Refresh">Refresh</a>(self,&nbsp;bool&nbsp;eraseBackground=True,&nbsp;Rect&nbsp;rect=None)<br>
&nbsp;<br>
Mark&nbsp;the&nbsp;specified&nbsp;rectangle&nbsp;(or&nbsp;the&nbsp;whole&nbsp;window)&nbsp;as&nbsp;"dirty"&nbsp;so&nbsp;it<br>
will&nbsp;be&nbsp;repainted.&nbsp;&nbsp;Causes&nbsp;an&nbsp;EVT_PAINT&nbsp;event&nbsp;to&nbsp;be&nbsp;generated&nbsp;and&nbsp;sent<br>
to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-RefreshRect"><strong>RefreshRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-RefreshRect">RefreshRect</a>(self,&nbsp;Rect&nbsp;rect,&nbsp;bool&nbsp;eraseBackground=True)<br>
&nbsp;<br>
Redraws&nbsp;the&nbsp;contents&nbsp;of&nbsp;the&nbsp;given&nbsp;rectangle:&nbsp;the&nbsp;area&nbsp;inside&nbsp;it&nbsp;will<br>
be&nbsp;repainted.&nbsp;&nbsp;This&nbsp;is&nbsp;the&nbsp;same&nbsp;as&nbsp;Refresh&nbsp;but&nbsp;has&nbsp;a&nbsp;nicer&nbsp;syntax.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-RegisterHotKey"><strong>RegisterHotKey</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-RegisterHotKey">RegisterHotKey</a>(self,&nbsp;int&nbsp;hotkeyId,&nbsp;int&nbsp;modifiers,&nbsp;int&nbsp;keycode)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Registers&nbsp;a&nbsp;system&nbsp;wide&nbsp;hotkey.&nbsp;Every&nbsp;time&nbsp;the&nbsp;user&nbsp;presses&nbsp;the&nbsp;hotkey<br>
registered&nbsp;here,&nbsp;this&nbsp;window&nbsp;will&nbsp;receive&nbsp;a&nbsp;hotkey&nbsp;event.&nbsp;It&nbsp;will<br>
receive&nbsp;the&nbsp;event&nbsp;even&nbsp;if&nbsp;the&nbsp;application&nbsp;is&nbsp;in&nbsp;the&nbsp;background&nbsp;and<br>
does&nbsp;not&nbsp;have&nbsp;the&nbsp;input&nbsp;focus&nbsp;because&nbsp;the&nbsp;user&nbsp;is&nbsp;working&nbsp;with&nbsp;some<br>
other&nbsp;application.&nbsp;&nbsp;To&nbsp;bind&nbsp;an&nbsp;event&nbsp;handler&nbsp;function&nbsp;to&nbsp;this&nbsp;hotkey<br>
use&nbsp;EVT_HOTKEY&nbsp;with&nbsp;an&nbsp;id&nbsp;equal&nbsp;to&nbsp;hotkeyId.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the<br>
hotkey&nbsp;was&nbsp;registered&nbsp;successfully.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-ReleaseMouse"><strong>ReleaseMouse</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-ReleaseMouse">ReleaseMouse</a>(self)<br>
&nbsp;<br>
Releases&nbsp;mouse&nbsp;input&nbsp;captured&nbsp;with&nbsp;wx.Window.CaptureMouse.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-RemoveChild"><strong>RemoveChild</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-RemoveChild">RemoveChild</a>(self,&nbsp;Window&nbsp;child)<br>
&nbsp;<br>
Removes&nbsp;a&nbsp;child&nbsp;window.&nbsp;This&nbsp;is&nbsp;called&nbsp;automatically&nbsp;by&nbsp;window<br>
deletion&nbsp;functions&nbsp;so&nbsp;should&nbsp;not&nbsp;be&nbsp;required&nbsp;by&nbsp;the&nbsp;application<br>
programmer.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-RemoveEventHandler"><strong>RemoveEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-RemoveEventHandler">RemoveEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Find&nbsp;the&nbsp;given&nbsp;handler&nbsp;in&nbsp;the&nbsp;event&nbsp;handler&nbsp;chain&nbsp;and&nbsp;remove&nbsp;(but&nbsp;not<br>
delete)&nbsp;it&nbsp;from&nbsp;the&nbsp;event&nbsp;handler&nbsp;chain,&nbsp;return&nbsp;True&nbsp;if&nbsp;it&nbsp;was&nbsp;found<br>
and&nbsp;False&nbsp;otherwise&nbsp;(this&nbsp;also&nbsp;results&nbsp;in&nbsp;an&nbsp;assert&nbsp;failure&nbsp;so&nbsp;this<br>
function&nbsp;should&nbsp;only&nbsp;be&nbsp;called&nbsp;when&nbsp;the&nbsp;handler&nbsp;is&nbsp;supposed&nbsp;to&nbsp;be<br>
there.)</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Reparent"><strong>Reparent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-Reparent">Reparent</a>(self,&nbsp;Window&nbsp;newParent)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Reparents&nbsp;the&nbsp;window,&nbsp;i.e&nbsp;the&nbsp;window&nbsp;will&nbsp;be&nbsp;removed&nbsp;from&nbsp;its&nbsp;current<br>
parent&nbsp;window&nbsp;(e.g.&nbsp;a&nbsp;non-standard&nbsp;toolbar&nbsp;in&nbsp;a&nbsp;wxFrame)&nbsp;and&nbsp;then<br>
re-inserted&nbsp;into&nbsp;another.&nbsp;Available&nbsp;on&nbsp;Windows&nbsp;and&nbsp;GTK.&nbsp;&nbsp;Returns&nbsp;True<br>
if&nbsp;the&nbsp;parent&nbsp;was&nbsp;changed,&nbsp;False&nbsp;otherwise&nbsp;(error&nbsp;or&nbsp;newParent&nbsp;==<br>
oldParent)</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-ScreenToClient"><strong>ScreenToClient</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-ScreenToClient">ScreenToClient</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;from&nbsp;screen&nbsp;to&nbsp;client&nbsp;window&nbsp;coordinates.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-ScreenToClientXY"><strong>ScreenToClientXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-ScreenToClientXY">ScreenToClientXY</a>(int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Converts&nbsp;from&nbsp;screen&nbsp;to&nbsp;client&nbsp;window&nbsp;coordinates.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-ScrollLines"><strong>ScrollLines</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-ScrollLines">ScrollLines</a>(self,&nbsp;int&nbsp;lines)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
If&nbsp;the&nbsp;platform&nbsp;and&nbsp;window&nbsp;class&nbsp;supports&nbsp;it,&nbsp;scrolls&nbsp;the&nbsp;window&nbsp;by<br>
the&nbsp;given&nbsp;number&nbsp;of&nbsp;lines&nbsp;down,&nbsp;if&nbsp;lines&nbsp;is&nbsp;positive,&nbsp;or&nbsp;up&nbsp;if&nbsp;lines<br>
is&nbsp;negative.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;window&nbsp;was&nbsp;scrolled,&nbsp;False&nbsp;if&nbsp;it&nbsp;was<br>
already&nbsp;on&nbsp;top/bottom&nbsp;and&nbsp;nothing&nbsp;was&nbsp;done.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-ScrollPages"><strong>ScrollPages</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-ScrollPages">ScrollPages</a>(self,&nbsp;int&nbsp;pages)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
If&nbsp;the&nbsp;platform&nbsp;and&nbsp;window&nbsp;class&nbsp;supports&nbsp;it,&nbsp;scrolls&nbsp;the&nbsp;window&nbsp;by<br>
the&nbsp;given&nbsp;number&nbsp;of&nbsp;pages&nbsp;down,&nbsp;if&nbsp;pages&nbsp;is&nbsp;positive,&nbsp;or&nbsp;up&nbsp;if&nbsp;pages<br>
is&nbsp;negative.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;window&nbsp;was&nbsp;scrolled,&nbsp;False&nbsp;if&nbsp;it&nbsp;was<br>
already&nbsp;on&nbsp;top/bottom&nbsp;and&nbsp;nothing&nbsp;was&nbsp;done.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-ScrollWindow"><strong>ScrollWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-ScrollWindow">ScrollWindow</a>(self,&nbsp;int&nbsp;dx,&nbsp;int&nbsp;dy,&nbsp;Rect&nbsp;rect=None)<br>
&nbsp;<br>
Physically&nbsp;scrolls&nbsp;the&nbsp;pixels&nbsp;in&nbsp;the&nbsp;window&nbsp;and&nbsp;move&nbsp;child&nbsp;windows<br>
accordingly.&nbsp;&nbsp;Use&nbsp;this&nbsp;function&nbsp;to&nbsp;optimise&nbsp;your&nbsp;scrolling<br>
implementations,&nbsp;to&nbsp;minimise&nbsp;the&nbsp;area&nbsp;that&nbsp;must&nbsp;be&nbsp;redrawn.&nbsp;Note&nbsp;that<br>
it&nbsp;is&nbsp;rarely&nbsp;required&nbsp;to&nbsp;call&nbsp;this&nbsp;function&nbsp;from&nbsp;a&nbsp;user&nbsp;program.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SendSizeEvent"><strong>SendSizeEvent</strong></a>(self)</dt></dl>

<dl><dt><a name="FigureCanvasWx-SetAcceleratorTable"><strong>SetAcceleratorTable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetAcceleratorTable">SetAcceleratorTable</a>(self,&nbsp;AcceleratorTable&nbsp;accel)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;accelerator&nbsp;table&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetAutoLayout"><strong>SetAutoLayout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetAutoLayout">SetAutoLayout</a>(self,&nbsp;bool&nbsp;autoLayout)<br>
&nbsp;<br>
Determines&nbsp;whether&nbsp;the&nbsp;Layout&nbsp;function&nbsp;will&nbsp;be&nbsp;called&nbsp;automatically<br>
when&nbsp;the&nbsp;window&nbsp;is&nbsp;resized.&nbsp;&nbsp;It&nbsp;is&nbsp;called&nbsp;implicitly&nbsp;by&nbsp;SetSizer&nbsp;but<br>
if&nbsp;you&nbsp;use&nbsp;SetConstraints&nbsp;you&nbsp;should&nbsp;call&nbsp;it&nbsp;manually&nbsp;or&nbsp;otherwise&nbsp;the<br>
window&nbsp;layout&nbsp;won't&nbsp;be&nbsp;correctly&nbsp;updated&nbsp;when&nbsp;its&nbsp;size&nbsp;changes.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetBackgroundColour"><strong>SetBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetBackgroundColour">SetBackgroundColour</a>(self,&nbsp;Colour&nbsp;colour)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;background&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;colour<br>
was&nbsp;changed.&nbsp;&nbsp;The&nbsp;background&nbsp;colour&nbsp;is&nbsp;usually&nbsp;painted&nbsp;by&nbsp;the&nbsp;default<br>
EVT_ERASE_BACKGROUND&nbsp;event&nbsp;handler&nbsp;function&nbsp;under&nbsp;Windows&nbsp;and<br>
automatically&nbsp;under&nbsp;GTK.&nbsp;&nbsp;Using&nbsp;`wx.NullColour`&nbsp;will&nbsp;reset&nbsp;the&nbsp;window<br>
to&nbsp;the&nbsp;default&nbsp;background&nbsp;colour.<br>
&nbsp;<br>
Note&nbsp;that&nbsp;setting&nbsp;the&nbsp;background&nbsp;colour&nbsp;may&nbsp;not&nbsp;cause&nbsp;an&nbsp;immediate<br>
refresh,&nbsp;so&nbsp;you&nbsp;may&nbsp;wish&nbsp;to&nbsp;call&nbsp;`ClearBackground`&nbsp;or&nbsp;`Refresh`&nbsp;after<br>
calling&nbsp;this&nbsp;function.<br>
&nbsp;<br>
Using&nbsp;this&nbsp;function&nbsp;will&nbsp;disable&nbsp;attempts&nbsp;to&nbsp;use&nbsp;themes&nbsp;for&nbsp;this<br>
window,&nbsp;if&nbsp;the&nbsp;system&nbsp;supports&nbsp;them.&nbsp;&nbsp;Use&nbsp;with&nbsp;care&nbsp;since&nbsp;usually&nbsp;the<br>
themes&nbsp;represent&nbsp;the&nbsp;appearance&nbsp;chosen&nbsp;by&nbsp;the&nbsp;user&nbsp;to&nbsp;be&nbsp;used&nbsp;for&nbsp;all<br>
applications&nbsp;on&nbsp;the&nbsp;system.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetBackgroundStyle"><strong>SetBackgroundStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetBackgroundStyle">SetBackgroundStyle</a>(self,&nbsp;int&nbsp;style)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;The&nbsp;background&nbsp;style<br>
indicates&nbsp;how&nbsp;the&nbsp;background&nbsp;of&nbsp;the&nbsp;window&nbsp;is&nbsp;drawn.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;======================&nbsp;&nbsp;========================================<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_SYSTEM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;colour&nbsp;or&nbsp;pattern&nbsp;should<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;be&nbsp;determined&nbsp;by&nbsp;the&nbsp;system<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_COLOUR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;should&nbsp;be&nbsp;a&nbsp;solid&nbsp;colour<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_CUSTOM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;will&nbsp;be&nbsp;implemented&nbsp;by&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;application.<br>
&nbsp;&nbsp;&nbsp;&nbsp;======================&nbsp;&nbsp;========================================<br>
&nbsp;<br>
On&nbsp;GTK+,&nbsp;use&nbsp;of&nbsp;wx.BG_STYLE_CUSTOM&nbsp;allows&nbsp;the&nbsp;flicker-free&nbsp;drawing&nbsp;of<br>
a&nbsp;custom&nbsp;background,&nbsp;such&nbsp;as&nbsp;a&nbsp;tiled&nbsp;bitmap.&nbsp;Currently&nbsp;the&nbsp;style&nbsp;has<br>
no&nbsp;effect&nbsp;on&nbsp;other&nbsp;platforms.<br>
&nbsp;<br>
:see:&nbsp;`GetBackgroundStyle`,&nbsp;`SetBackgroundColour`</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetBestFittingSize"><strong>SetBestFittingSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetBestFittingSize">SetBestFittingSize</a>(self,&nbsp;Size&nbsp;size=DefaultSize)<br>
&nbsp;<br>
A&nbsp;'Smart'&nbsp;SetSize&nbsp;that&nbsp;will&nbsp;fill&nbsp;in&nbsp;default&nbsp;size&nbsp;components&nbsp;with&nbsp;the<br>
window's&nbsp;*best&nbsp;size*&nbsp;values.&nbsp;&nbsp;Also&nbsp;set's&nbsp;the&nbsp;minsize&nbsp;for&nbsp;use&nbsp;with&nbsp;sizers.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetCaret"><strong>SetCaret</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetCaret">SetCaret</a>(self,&nbsp;Caret&nbsp;caret)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;caret&nbsp;associated&nbsp;with&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetClientRect"><strong>SetClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetClientRect">SetClientRect</a>(self,&nbsp;Rect&nbsp;rect)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetClientSize"><strong>SetClientSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetClientSize">SetClientSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetClientSizeWH"><strong>SetClientSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetClientSizeWH">SetClientSizeWH</a>(self,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetConstraints"><strong>SetConstraints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetConstraints">SetConstraints</a>(self,&nbsp;LayoutConstraints&nbsp;constraints)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window&nbsp;to&nbsp;have&nbsp;the&nbsp;given&nbsp;layout&nbsp;constraints.&nbsp;If&nbsp;an&nbsp;existing<br>
layout&nbsp;constraints&nbsp;object&nbsp;is&nbsp;already&nbsp;owned&nbsp;by&nbsp;the&nbsp;window,&nbsp;it&nbsp;will&nbsp;be<br>
deleted.&nbsp;&nbsp;Pass&nbsp;None&nbsp;to&nbsp;disassociate&nbsp;and&nbsp;delete&nbsp;the&nbsp;window's&nbsp;current<br>
constraints.<br>
&nbsp;<br>
You&nbsp;must&nbsp;call&nbsp;SetAutoLayout&nbsp;to&nbsp;tell&nbsp;a&nbsp;window&nbsp;to&nbsp;use&nbsp;the&nbsp;constraints<br>
automatically&nbsp;in&nbsp;its&nbsp;default&nbsp;EVT_SIZE&nbsp;handler;&nbsp;otherwise,&nbsp;you&nbsp;must<br>
handle&nbsp;EVT_SIZE&nbsp;yourself&nbsp;and&nbsp;call&nbsp;<a href="#FigureCanvasWx-Layout">Layout</a>()&nbsp;explicitly.&nbsp;When&nbsp;setting<br>
both&nbsp;a&nbsp;wx.LayoutConstraints&nbsp;and&nbsp;a&nbsp;wx.Sizer,&nbsp;only&nbsp;the&nbsp;sizer&nbsp;will&nbsp;have<br>
effect.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetContainingSizer"><strong>SetContainingSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetContainingSizer">SetContainingSizer</a>(self,&nbsp;Sizer&nbsp;sizer)<br>
&nbsp;<br>
This&nbsp;normally&nbsp;does&nbsp;not&nbsp;need&nbsp;to&nbsp;be&nbsp;called&nbsp;by&nbsp;application&nbsp;code.&nbsp;It&nbsp;is<br>
called&nbsp;internally&nbsp;when&nbsp;a&nbsp;window&nbsp;is&nbsp;added&nbsp;to&nbsp;a&nbsp;sizer,&nbsp;and&nbsp;is&nbsp;used&nbsp;so<br>
the&nbsp;window&nbsp;can&nbsp;remove&nbsp;itself&nbsp;from&nbsp;the&nbsp;sizer&nbsp;when&nbsp;it&nbsp;is&nbsp;destroyed.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetCursor"><strong>SetCursor</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetCursor">SetCursor</a>(self,&nbsp;Cursor&nbsp;cursor)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;cursor.&nbsp;Notice&nbsp;that&nbsp;the&nbsp;window&nbsp;cursor&nbsp;also&nbsp;sets&nbsp;it<br>
for&nbsp;the&nbsp;children&nbsp;of&nbsp;the&nbsp;window&nbsp;implicitly.<br>
&nbsp;<br>
The&nbsp;cursor&nbsp;may&nbsp;be&nbsp;wx.NullCursor&nbsp;in&nbsp;which&nbsp;case&nbsp;the&nbsp;window&nbsp;cursor&nbsp;will<br>
be&nbsp;reset&nbsp;back&nbsp;to&nbsp;default.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetDefaultItem"><strong>SetDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetDefaultItem">SetDefaultItem</a>(self,&nbsp;Window&nbsp;child)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Set&nbsp;this&nbsp;child&nbsp;as&nbsp;default,&nbsp;return&nbsp;the&nbsp;old&nbsp;default.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetDimensions"><strong>SetDimensions</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetDimensions">SetDimensions</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height,&nbsp;int&nbsp;sizeFlags=SIZE_AUTO)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;and&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;The&nbsp;sizeFlags<br>
parameter&nbsp;indicates&nbsp;the&nbsp;interpretation&nbsp;of&nbsp;the&nbsp;other&nbsp;params&nbsp;if&nbsp;they&nbsp;are<br>
equal&nbsp;to&nbsp;-1.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;========================&nbsp;&nbsp;======================================<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.SIZE_AUTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;-1&nbsp;indicates&nbsp;that&nbsp;a&nbsp;class-specific<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;should&nbsp;be&nbsp;used.<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.SIZE_USE_EXISTING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Axisting&nbsp;dimensions&nbsp;should&nbsp;be&nbsp;used&nbsp;if<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;values&nbsp;are&nbsp;supplied.<br>
&nbsp;&nbsp;&nbsp;&nbsp;wxSIZE_ALLOW_MINUS_ONE&nbsp;&nbsp;&nbsp;&nbsp;Allow&nbsp;dimensions&nbsp;of&nbsp;-1&nbsp;and&nbsp;less&nbsp;to&nbsp;be<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interpreted&nbsp;as&nbsp;real&nbsp;dimensions,&nbsp;not<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;values.<br>
&nbsp;&nbsp;&nbsp;&nbsp;========================&nbsp;&nbsp;======================================</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetDropTarget"><strong>SetDropTarget</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetDropTarget">SetDropTarget</a>(self,&nbsp;DropTarget&nbsp;dropTarget)<br>
&nbsp;<br>
Associates&nbsp;a&nbsp;drop&nbsp;target&nbsp;with&nbsp;this&nbsp;window.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;already&nbsp;has<br>
a&nbsp;drop&nbsp;target,&nbsp;it&nbsp;is&nbsp;deleted.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetEventHandler"><strong>SetEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetEventHandler">SetEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;event&nbsp;handler&nbsp;for&nbsp;this&nbsp;window.&nbsp;&nbsp;An&nbsp;event&nbsp;handler&nbsp;is&nbsp;an&nbsp;object<br>
that&nbsp;is&nbsp;capable&nbsp;of&nbsp;processing&nbsp;the&nbsp;events&nbsp;sent&nbsp;to&nbsp;a&nbsp;window.&nbsp;By&nbsp;default,<br>
the&nbsp;window&nbsp;is&nbsp;its&nbsp;own&nbsp;event&nbsp;handler,&nbsp;but&nbsp;an&nbsp;application&nbsp;may&nbsp;wish&nbsp;to<br>
substitute&nbsp;another,&nbsp;for&nbsp;example&nbsp;to&nbsp;allow&nbsp;central&nbsp;implementation&nbsp;of<br>
event-handling&nbsp;for&nbsp;a&nbsp;variety&nbsp;of&nbsp;different&nbsp;window&nbsp;classes.<br>
&nbsp;<br>
It&nbsp;is&nbsp;usually&nbsp;better&nbsp;to&nbsp;use&nbsp;`wx.Window.PushEventHandler`&nbsp;since&nbsp;this&nbsp;sets<br>
up&nbsp;a&nbsp;chain&nbsp;of&nbsp;event&nbsp;handlers,&nbsp;where&nbsp;an&nbsp;event&nbsp;not&nbsp;handled&nbsp;by&nbsp;one&nbsp;event<br>
handler&nbsp;is&nbsp;handed&nbsp;to&nbsp;the&nbsp;next&nbsp;one&nbsp;in&nbsp;the&nbsp;chain.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetExtraStyle"><strong>SetExtraStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetExtraStyle">SetExtraStyle</a>(self,&nbsp;long&nbsp;exStyle)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;extra&nbsp;style&nbsp;bits&nbsp;for&nbsp;the&nbsp;window.&nbsp;&nbsp;Extra&nbsp;styles&nbsp;are&nbsp;the&nbsp;less<br>
often&nbsp;used&nbsp;style&nbsp;bits&nbsp;which&nbsp;can't&nbsp;be&nbsp;set&nbsp;with&nbsp;the&nbsp;constructor&nbsp;or&nbsp;with<br>
<a href="#FigureCanvasWx-SetWindowStyleFlag">SetWindowStyleFlag</a>()</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetFocusFromKbd"><strong>SetFocusFromKbd</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetFocusFromKbd">SetFocusFromKbd</a>(self)<br>
&nbsp;<br>
Set&nbsp;focus&nbsp;to&nbsp;this&nbsp;window&nbsp;as&nbsp;the&nbsp;result&nbsp;of&nbsp;a&nbsp;keyboard&nbsp;action.&nbsp;&nbsp;Normally<br>
only&nbsp;called&nbsp;internally.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetFont"><strong>SetFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetFont">SetFont</a>(self,&nbsp;Font&nbsp;font)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;font&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetForegroundColour"><strong>SetForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetForegroundColour">SetForegroundColour</a>(self,&nbsp;Colour&nbsp;colour)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;foreground&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Returns&nbsp;True&nbsp;is&nbsp;the&nbsp;colour<br>
was&nbsp;changed.&nbsp;&nbsp;The&nbsp;interpretation&nbsp;of&nbsp;foreground&nbsp;colour&nbsp;is&nbsp;dependent&nbsp;on<br>
the&nbsp;window&nbsp;class;&nbsp;it&nbsp;may&nbsp;be&nbsp;the&nbsp;text&nbsp;colour&nbsp;or&nbsp;other&nbsp;colour,&nbsp;or&nbsp;it&nbsp;may<br>
not&nbsp;be&nbsp;used&nbsp;at&nbsp;all.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetHelpText"><strong>SetHelpText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetHelpText">SetHelpText</a>(self,&nbsp;String&nbsp;text)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;help&nbsp;text&nbsp;to&nbsp;be&nbsp;used&nbsp;as&nbsp;context-sensitive&nbsp;help&nbsp;for&nbsp;this<br>
window.&nbsp;&nbsp;Note&nbsp;that&nbsp;the&nbsp;text&nbsp;is&nbsp;actually&nbsp;stored&nbsp;by&nbsp;the&nbsp;current<br>
wxHelpProvider&nbsp;implementation,&nbsp;and&nbsp;not&nbsp;in&nbsp;the&nbsp;window&nbsp;object&nbsp;itself.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetHelpTextForId"><strong>SetHelpTextForId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetHelpTextForId">SetHelpTextForId</a>(self,&nbsp;String&nbsp;text)<br>
&nbsp;<br>
Associate&nbsp;this&nbsp;help&nbsp;text&nbsp;with&nbsp;all&nbsp;windows&nbsp;with&nbsp;the&nbsp;same&nbsp;id&nbsp;as&nbsp;this<br>
one.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetId"><strong>SetId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetId">SetId</a>(self,&nbsp;int&nbsp;winid)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;identifier&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Each&nbsp;window&nbsp;has&nbsp;an&nbsp;integer<br>
identifier.&nbsp;If&nbsp;the&nbsp;application&nbsp;has&nbsp;not&nbsp;provided&nbsp;one,&nbsp;an&nbsp;identifier<br>
will&nbsp;be&nbsp;generated.&nbsp;Normally,&nbsp;the&nbsp;identifier&nbsp;should&nbsp;be&nbsp;provided&nbsp;on<br>
creation&nbsp;and&nbsp;should&nbsp;not&nbsp;be&nbsp;modified&nbsp;subsequently.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetLabel"><strong>SetLabel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetLabel">SetLabel</a>(self,&nbsp;String&nbsp;label)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;text&nbsp;which&nbsp;the&nbsp;window&nbsp;shows&nbsp;in&nbsp;its&nbsp;label&nbsp;if&nbsp;applicable.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetMaxSize"><strong>SetMaxSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetMaxSize">SetMaxSize</a>(self,&nbsp;Size&nbsp;maxSize)<br>
&nbsp;<br>
A&nbsp;more&nbsp;convenient&nbsp;method&nbsp;than&nbsp;`SetSizeHints`&nbsp;for&nbsp;setting&nbsp;just&nbsp;the<br>
max&nbsp;size.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetMinSize"><strong>SetMinSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetMinSize">SetMinSize</a>(self,&nbsp;Size&nbsp;minSize)<br>
&nbsp;<br>
A&nbsp;more&nbsp;convenient&nbsp;method&nbsp;than&nbsp;`SetSizeHints`&nbsp;for&nbsp;setting&nbsp;just&nbsp;the<br>
min&nbsp;size.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetName"><strong>SetName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetName">SetName</a>(self,&nbsp;String&nbsp;name)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;name.&nbsp;&nbsp;The&nbsp;window&nbsp;name&nbsp;is&nbsp;used&nbsp;for&nbsp;ressource&nbsp;setting<br>
in&nbsp;X,&nbsp;it&nbsp;is&nbsp;not&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;window&nbsp;title/label</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetOwnBackgroundColour"><strong>SetOwnBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetOwnBackgroundColour">SetOwnBackgroundColour</a>(self,&nbsp;Colour&nbsp;colour)</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetOwnFont"><strong>SetOwnFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetOwnFont">SetOwnFont</a>(self,&nbsp;Font&nbsp;font)</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetOwnForegroundColour"><strong>SetOwnForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetOwnForegroundColour">SetOwnForegroundColour</a>(self,&nbsp;Colour&nbsp;colour)</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetPosition"><strong>SetPosition</strong></a> = Move(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-Move">Move</a>(self,&nbsp;Point&nbsp;pt,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetRect"><strong>SetRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetRect">SetRect</a>(self,&nbsp;Rect&nbsp;rect,&nbsp;int&nbsp;sizeFlags=SIZE_AUTO)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;and&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels&nbsp;using&nbsp;a&nbsp;wx.Rect.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetScrollPos"><strong>SetScrollPos</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetScrollPos">SetScrollPos</a>(self,&nbsp;int&nbsp;orientation,&nbsp;int&nbsp;pos,&nbsp;bool&nbsp;refresh=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;of&nbsp;one&nbsp;of&nbsp;the&nbsp;built-in&nbsp;scrollbars.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetScrollbar"><strong>SetScrollbar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetScrollbar">SetScrollbar</a>(self,&nbsp;int&nbsp;orientation,&nbsp;int&nbsp;position,&nbsp;int&nbsp;thumbSize,&nbsp;int&nbsp;range,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;refresh=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;scrollbar&nbsp;properties&nbsp;of&nbsp;a&nbsp;built-in&nbsp;scrollbar.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetSize"><strong>SetSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetSize">SetSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetSizeHints"><strong>SetSizeHints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetSizeHints">SetSizeHints</a>(self,&nbsp;int&nbsp;minW,&nbsp;int&nbsp;minH,&nbsp;int&nbsp;maxW=-1,&nbsp;int&nbsp;maxH=-1,&nbsp;int&nbsp;incW=-1,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;incH=-1)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;window&nbsp;sizes,&nbsp;and&nbsp;window<br>
size&nbsp;increments.&nbsp;If&nbsp;a&nbsp;pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the<br>
default&nbsp;values&nbsp;will&nbsp;be&nbsp;used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user<br>
will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds&nbsp;(if&nbsp;it&nbsp;is<br>
a&nbsp;top-level&nbsp;window.)&nbsp;&nbsp;Sizers&nbsp;will&nbsp;also&nbsp;inspect&nbsp;the&nbsp;minimum&nbsp;window&nbsp;size<br>
and&nbsp;will&nbsp;use&nbsp;that&nbsp;value&nbsp;if&nbsp;set&nbsp;when&nbsp;calculating&nbsp;layout.<br>
&nbsp;<br>
The&nbsp;resizing&nbsp;increments&nbsp;are&nbsp;only&nbsp;significant&nbsp;under&nbsp;Motif&nbsp;or&nbsp;Xt.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetSizeHintsSz"><strong>SetSizeHintsSz</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetSizeHintsSz">SetSizeHintsSz</a>(self,&nbsp;Size&nbsp;minSize,&nbsp;Size&nbsp;maxSize=DefaultSize,&nbsp;Size&nbsp;incSize=DefaultSize)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;window&nbsp;sizes,&nbsp;and&nbsp;window<br>
size&nbsp;increments.&nbsp;If&nbsp;a&nbsp;pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the<br>
default&nbsp;values&nbsp;will&nbsp;be&nbsp;used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user<br>
will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds&nbsp;(if&nbsp;it&nbsp;is<br>
a&nbsp;top-level&nbsp;window.)&nbsp;&nbsp;Sizers&nbsp;will&nbsp;also&nbsp;inspect&nbsp;the&nbsp;minimum&nbsp;window&nbsp;size<br>
and&nbsp;will&nbsp;use&nbsp;that&nbsp;value&nbsp;if&nbsp;set&nbsp;when&nbsp;calculating&nbsp;layout.<br>
&nbsp;<br>
The&nbsp;resizing&nbsp;increments&nbsp;are&nbsp;only&nbsp;significant&nbsp;under&nbsp;Motif&nbsp;or&nbsp;Xt.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetSizeWH"><strong>SetSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetSizeWH">SetSizeWH</a>(self,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetSizer"><strong>SetSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetSizer">SetSizer</a>(self,&nbsp;Sizer&nbsp;sizer,&nbsp;bool&nbsp;deleteOld=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window&nbsp;to&nbsp;have&nbsp;the&nbsp;given&nbsp;layout&nbsp;sizer.&nbsp;The&nbsp;window&nbsp;will&nbsp;then<br>
own&nbsp;the&nbsp;object,&nbsp;and&nbsp;will&nbsp;take&nbsp;care&nbsp;of&nbsp;its&nbsp;deletion.&nbsp;If&nbsp;an&nbsp;existing<br>
layout&nbsp;sizer&nbsp;object&nbsp;is&nbsp;already&nbsp;owned&nbsp;by&nbsp;the&nbsp;window,&nbsp;it&nbsp;will&nbsp;be&nbsp;deleted<br>
if&nbsp;the&nbsp;deleteOld&nbsp;parameter&nbsp;is&nbsp;true.&nbsp;Note&nbsp;that&nbsp;this&nbsp;function&nbsp;will&nbsp;also<br>
call&nbsp;SetAutoLayout&nbsp;implicitly&nbsp;with&nbsp;a&nbsp;True&nbsp;parameter&nbsp;if&nbsp;the&nbsp;sizer&nbsp;is<br>
non-None,&nbsp;and&nbsp;False&nbsp;otherwise.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetSizerAndFit"><strong>SetSizerAndFit</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetSizerAndFit">SetSizerAndFit</a>(self,&nbsp;Sizer&nbsp;sizer,&nbsp;bool&nbsp;deleteOld=True)<br>
&nbsp;<br>
The&nbsp;same&nbsp;as&nbsp;SetSizer,&nbsp;except&nbsp;it&nbsp;also&nbsp;sets&nbsp;the&nbsp;size&nbsp;hints&nbsp;for&nbsp;the<br>
window&nbsp;based&nbsp;on&nbsp;the&nbsp;sizer's&nbsp;minimum&nbsp;size.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetThemeEnabled"><strong>SetThemeEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetThemeEnabled">SetThemeEnabled</a>(self,&nbsp;bool&nbsp;enableTheme)<br>
&nbsp;<br>
This&nbsp;function&nbsp;tells&nbsp;a&nbsp;window&nbsp;if&nbsp;it&nbsp;should&nbsp;use&nbsp;the&nbsp;system's&nbsp;"theme"<br>
&nbsp;code&nbsp;to&nbsp;draw&nbsp;the&nbsp;windows'&nbsp;background&nbsp;instead&nbsp;if&nbsp;its&nbsp;own&nbsp;background<br>
&nbsp;drawing&nbsp;code.&nbsp;This&nbsp;will&nbsp;only&nbsp;have&nbsp;an&nbsp;effect&nbsp;on&nbsp;platforms&nbsp;that&nbsp;support<br>
&nbsp;the&nbsp;notion&nbsp;of&nbsp;themes&nbsp;in&nbsp;user&nbsp;defined&nbsp;windows.&nbsp;One&nbsp;such&nbsp;platform&nbsp;is<br>
&nbsp;GTK+&nbsp;where&nbsp;windows&nbsp;can&nbsp;have&nbsp;(very&nbsp;colourful)&nbsp;backgrounds&nbsp;defined&nbsp;by&nbsp;a<br>
&nbsp;user's&nbsp;selected&nbsp;theme.<br>
&nbsp;<br>
Dialogs,&nbsp;notebook&nbsp;pages&nbsp;and&nbsp;the&nbsp;status&nbsp;bar&nbsp;have&nbsp;this&nbsp;flag&nbsp;set&nbsp;to&nbsp;true<br>
by&nbsp;default&nbsp;so&nbsp;that&nbsp;the&nbsp;default&nbsp;look&nbsp;and&nbsp;feel&nbsp;is&nbsp;simulated&nbsp;best.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetTitle"><strong>SetTitle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetTitle">SetTitle</a>(self,&nbsp;String&nbsp;title)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;title.&nbsp;Applicable&nbsp;only&nbsp;to&nbsp;frames&nbsp;and&nbsp;dialogs.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetTmpDefaultItem"><strong>SetTmpDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetTmpDefaultItem">SetTmpDefaultItem</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Set&nbsp;this&nbsp;child&nbsp;as&nbsp;temporary&nbsp;default</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetToolTip"><strong>SetToolTip</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetToolTip">SetToolTip</a>(self,&nbsp;ToolTip&nbsp;tip)<br>
&nbsp;<br>
Attach&nbsp;a&nbsp;tooltip&nbsp;to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetToolTipString"><strong>SetToolTipString</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetToolTipString">SetToolTipString</a>(self,&nbsp;String&nbsp;tip)<br>
&nbsp;<br>
Attach&nbsp;a&nbsp;tooltip&nbsp;to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetValidator"><strong>SetValidator</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetValidator">SetValidator</a>(self,&nbsp;Validator&nbsp;validator)<br>
&nbsp;<br>
Deletes&nbsp;the&nbsp;current&nbsp;validator&nbsp;(if&nbsp;any)&nbsp;and&nbsp;sets&nbsp;the&nbsp;window&nbsp;validator,<br>
having&nbsp;called&nbsp;wx.Validator.Clone&nbsp;to&nbsp;create&nbsp;a&nbsp;new&nbsp;validator&nbsp;of&nbsp;this<br>
type.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetVirtualSize"><strong>SetVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetVirtualSize">SetVirtualSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;a&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows&nbsp;this<br>
is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetVirtualSizeHints"><strong>SetVirtualSizeHints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetVirtualSizeHints">SetVirtualSizeHints</a>(self,&nbsp;int&nbsp;minW,&nbsp;int&nbsp;minH,&nbsp;int&nbsp;maxW=-1,&nbsp;int&nbsp;maxH=-1)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;virtual&nbsp;window&nbsp;sizes.&nbsp;If&nbsp;a<br>
pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the&nbsp;default&nbsp;values&nbsp;will&nbsp;be<br>
used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user&nbsp;will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size<br>
the&nbsp;virtual&nbsp;area&nbsp;of&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetVirtualSizeHintsSz"><strong>SetVirtualSizeHintsSz</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetVirtualSizeHintsSz">SetVirtualSizeHintsSz</a>(self,&nbsp;Size&nbsp;minSize,&nbsp;Size&nbsp;maxSize=DefaultSize)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;virtual&nbsp;window&nbsp;sizes.&nbsp;If&nbsp;a<br>
pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the&nbsp;default&nbsp;values&nbsp;will&nbsp;be<br>
used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user&nbsp;will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size<br>
the&nbsp;virtual&nbsp;area&nbsp;of&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetVirtualSizeWH"><strong>SetVirtualSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetVirtualSizeWH">SetVirtualSizeWH</a>(self,&nbsp;int&nbsp;w,&nbsp;int&nbsp;h)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;a&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows&nbsp;this<br>
is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetWindowStyle"><strong>SetWindowStyle</strong></a> = SetWindowStyleFlag(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetWindowStyleFlag">SetWindowStyleFlag</a>(self,&nbsp;long&nbsp;style)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;Please&nbsp;note&nbsp;that&nbsp;some&nbsp;styles&nbsp;cannot&nbsp;be<br>
changed&nbsp;after&nbsp;the&nbsp;window&nbsp;creation&nbsp;and&nbsp;that&nbsp;<a href="#FigureCanvasWx-Refresh">Refresh</a>()&nbsp;might&nbsp;need&nbsp;to&nbsp;be<br>
called&nbsp;after&nbsp;changing&nbsp;the&nbsp;others&nbsp;for&nbsp;the&nbsp;change&nbsp;to&nbsp;take&nbsp;place<br>
immediately.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetWindowStyleFlag"><strong>SetWindowStyleFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetWindowStyleFlag">SetWindowStyleFlag</a>(self,&nbsp;long&nbsp;style)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;Please&nbsp;note&nbsp;that&nbsp;some&nbsp;styles&nbsp;cannot&nbsp;be<br>
changed&nbsp;after&nbsp;the&nbsp;window&nbsp;creation&nbsp;and&nbsp;that&nbsp;<a href="#FigureCanvasWx-Refresh">Refresh</a>()&nbsp;might&nbsp;need&nbsp;to&nbsp;be<br>
called&nbsp;after&nbsp;changing&nbsp;the&nbsp;others&nbsp;for&nbsp;the&nbsp;change&nbsp;to&nbsp;take&nbsp;place<br>
immediately.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetWindowVariant"><strong>SetWindowVariant</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetWindowVariant">SetWindowVariant</a>(self,&nbsp;int&nbsp;variant)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;variant&nbsp;of&nbsp;the&nbsp;window/font&nbsp;size&nbsp;to&nbsp;use&nbsp;for&nbsp;this&nbsp;window,&nbsp;if<br>
the&nbsp;platform&nbsp;supports&nbsp;variants,&nbsp;for&nbsp;example,&nbsp;wxMac.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-ShouldInheritColours"><strong>ShouldInheritColours</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-ShouldInheritColours">ShouldInheritColours</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Return&nbsp;true&nbsp;from&nbsp;here&nbsp;to&nbsp;allow&nbsp;the&nbsp;colours&nbsp;of&nbsp;this&nbsp;window&nbsp;to&nbsp;be<br>
changed&nbsp;by&nbsp;InheritAttributes,&nbsp;returning&nbsp;false&nbsp;forbids&nbsp;inheriting&nbsp;them<br>
from&nbsp;the&nbsp;parent&nbsp;window.<br>
&nbsp;<br>
The&nbsp;base&nbsp;class&nbsp;version&nbsp;returns&nbsp;false,&nbsp;but&nbsp;this&nbsp;method&nbsp;is&nbsp;overridden&nbsp;in<br>
wxControl&nbsp;where&nbsp;it&nbsp;returns&nbsp;true.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Show"><strong>Show</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-Show">Show</a>(self,&nbsp;bool&nbsp;show=True)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Shows&nbsp;or&nbsp;hides&nbsp;the&nbsp;window.&nbsp;You&nbsp;may&nbsp;need&nbsp;to&nbsp;call&nbsp;Raise&nbsp;for&nbsp;a&nbsp;top&nbsp;level<br>
window&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;bring&nbsp;it&nbsp;to&nbsp;top,&nbsp;although&nbsp;this&nbsp;is&nbsp;not&nbsp;needed&nbsp;if<br>
Show&nbsp;is&nbsp;called&nbsp;immediately&nbsp;after&nbsp;the&nbsp;frame&nbsp;creation.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if<br>
the&nbsp;window&nbsp;has&nbsp;been&nbsp;shown&nbsp;or&nbsp;hidden&nbsp;or&nbsp;False&nbsp;if&nbsp;nothing&nbsp;was&nbsp;done<br>
because&nbsp;it&nbsp;already&nbsp;was&nbsp;in&nbsp;the&nbsp;requested&nbsp;state.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Thaw"><strong>Thaw</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-Thaw">Thaw</a>(self)<br>
&nbsp;<br>
Reenables&nbsp;window&nbsp;updating&nbsp;after&nbsp;a&nbsp;previous&nbsp;call&nbsp;to&nbsp;Freeze.&nbsp;&nbsp;Calls&nbsp;to<br>
Freeze/Thaw&nbsp;may&nbsp;be&nbsp;nested,&nbsp;so&nbsp;Thaw&nbsp;must&nbsp;be&nbsp;called&nbsp;the&nbsp;same&nbsp;number&nbsp;of<br>
times&nbsp;that&nbsp;Freeze&nbsp;was&nbsp;before&nbsp;the&nbsp;window&nbsp;will&nbsp;be&nbsp;updated.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-TransferDataFromWindow"><strong>TransferDataFromWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-TransferDataFromWindow">TransferDataFromWindow</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Transfers&nbsp;values&nbsp;from&nbsp;child&nbsp;controls&nbsp;to&nbsp;data&nbsp;areas&nbsp;specified&nbsp;by&nbsp;their<br>
validators.&nbsp;Returns&nbsp;false&nbsp;if&nbsp;a&nbsp;transfer&nbsp;failed.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has<br>
wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra&nbsp;style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will<br>
also&nbsp;call&nbsp;<a href="#FigureCanvasWx-TransferDataFromWindow">TransferDataFromWindow</a>()&nbsp;of&nbsp;all&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-TransferDataToWindow"><strong>TransferDataToWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-TransferDataToWindow">TransferDataToWindow</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Transfers&nbsp;values&nbsp;to&nbsp;child&nbsp;controls&nbsp;from&nbsp;data&nbsp;areas&nbsp;specified&nbsp;by&nbsp;their<br>
validators.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has&nbsp;wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra<br>
style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will&nbsp;also&nbsp;call&nbsp;<a href="#FigureCanvasWx-TransferDataToWindow">TransferDataToWindow</a>()&nbsp;of<br>
all&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-UnregisterHotKey"><strong>UnregisterHotKey</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-UnregisterHotKey">UnregisterHotKey</a>(self,&nbsp;int&nbsp;hotkeyId)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Unregisters&nbsp;a&nbsp;system&nbsp;wide&nbsp;hotkey.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Update"><strong>Update</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-Update">Update</a>(self)<br>
&nbsp;<br>
Calling&nbsp;this&nbsp;method&nbsp;immediately&nbsp;repaints&nbsp;the&nbsp;invalidated&nbsp;area&nbsp;of&nbsp;the<br>
window&nbsp;instead&nbsp;of&nbsp;waiting&nbsp;for&nbsp;the&nbsp;EVT_PAINT&nbsp;event&nbsp;to&nbsp;happen,&nbsp;(normally<br>
this&nbsp;would&nbsp;usually&nbsp;only&nbsp;happen&nbsp;when&nbsp;the&nbsp;flow&nbsp;of&nbsp;control&nbsp;returns&nbsp;to&nbsp;the<br>
event&nbsp;loop.)&nbsp;&nbsp;Notice&nbsp;that&nbsp;this&nbsp;function&nbsp;doesn't&nbsp;refresh&nbsp;the&nbsp;window&nbsp;and<br>
does&nbsp;nothing&nbsp;if&nbsp;the&nbsp;window&nbsp;has&nbsp;been&nbsp;already&nbsp;repainted.&nbsp;&nbsp;Use&nbsp;Refresh<br>
first&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;immediately&nbsp;redraw&nbsp;the&nbsp;window&nbsp;(or&nbsp;some&nbsp;portion&nbsp;of<br>
it)&nbsp;unconditionally.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-UpdateWindowUI"><strong>UpdateWindowUI</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-UpdateWindowUI">UpdateWindowUI</a>(self,&nbsp;long&nbsp;flags=UPDATE_UI_NONE)<br>
&nbsp;<br>
This&nbsp;function&nbsp;sends&nbsp;EVT_UPDATE_UI&nbsp;events&nbsp;to&nbsp;the&nbsp;window.&nbsp;The&nbsp;particular<br>
implementation&nbsp;depends&nbsp;on&nbsp;the&nbsp;window;&nbsp;for&nbsp;example&nbsp;a&nbsp;wx.<a href="wx._controls.html#ToolBar">ToolBar</a>&nbsp;will<br>
send&nbsp;an&nbsp;update&nbsp;UI&nbsp;event&nbsp;for&nbsp;each&nbsp;toolbar&nbsp;button,&nbsp;and&nbsp;a&nbsp;wx.<a href="wx._windows.html#Frame">Frame</a>&nbsp;will<br>
send&nbsp;an&nbsp;update&nbsp;UI&nbsp;event&nbsp;for&nbsp;each&nbsp;menubar&nbsp;menu&nbsp;item.&nbsp;You&nbsp;can&nbsp;call&nbsp;this<br>
function&nbsp;from&nbsp;your&nbsp;application&nbsp;to&nbsp;ensure&nbsp;that&nbsp;your&nbsp;UI&nbsp;is&nbsp;up-to-date&nbsp;at<br>
a&nbsp;particular&nbsp;point&nbsp;in&nbsp;time&nbsp;(as&nbsp;far&nbsp;as&nbsp;your&nbsp;EVT_UPDATE_UI&nbsp;handlers&nbsp;are<br>
concerned).&nbsp;This&nbsp;may&nbsp;be&nbsp;necessary&nbsp;if&nbsp;you&nbsp;have&nbsp;called<br>
`wx.UpdateUIEvent.SetMode`&nbsp;or&nbsp;`wx.UpdateUIEvent.SetUpdateInterval`&nbsp;to<br>
limit&nbsp;the&nbsp;overhead&nbsp;that&nbsp;wxWindows&nbsp;incurs&nbsp;by&nbsp;sending&nbsp;update&nbsp;UI&nbsp;events<br>
in&nbsp;idle&nbsp;time.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-UseBgCol"><strong>UseBgCol</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-UseBgCol">UseBgCol</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Validate"><strong>Validate</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-Validate">Validate</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Validates&nbsp;the&nbsp;current&nbsp;values&nbsp;of&nbsp;the&nbsp;child&nbsp;controls&nbsp;using&nbsp;their<br>
validators.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has&nbsp;wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra<br>
style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will&nbsp;also&nbsp;call&nbsp;<a href="#FigureCanvasWx-Validate">Validate</a>()&nbsp;of&nbsp;all&nbsp;child<br>
windows.&nbsp;&nbsp;Returns&nbsp;false&nbsp;if&nbsp;any&nbsp;of&nbsp;the&nbsp;validations&nbsp;failed.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-WarpPointer"><strong>WarpPointer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-WarpPointer">WarpPointer</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;pointer&nbsp;to&nbsp;the&nbsp;given&nbsp;position&nbsp;on&nbsp;the&nbsp;window.<br>
&nbsp;<br>
NOTE:&nbsp;This&nbsp;function&nbsp;is&nbsp;not&nbsp;supported&nbsp;under&nbsp;Mac&nbsp;because&nbsp;Apple&nbsp;Human<br>
Interface&nbsp;Guidelines&nbsp;forbid&nbsp;moving&nbsp;the&nbsp;mouse&nbsp;cursor&nbsp;programmatically.</tt></dd></dl>

<hr>
Static methods inherited from <a href="wx._core.html#Window">wx._core.Window</a>:<br>
<dl><dt><a name="FigureCanvasWx-FindFocus"><strong>FindFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-FindFocus">FindFocus</a>()&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;window&nbsp;or&nbsp;control&nbsp;that&nbsp;currently&nbsp;has&nbsp;the&nbsp;keyboard&nbsp;focus,<br>
or&nbsp;None.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetCapture"><strong>GetCapture</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetCapture">GetCapture</a>()&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;window&nbsp;which&nbsp;currently&nbsp;captures&nbsp;the&nbsp;mouse&nbsp;or&nbsp;None</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-NewControlId"><strong>NewControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-NewControlId">NewControlId</a>()&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Generate&nbsp;a&nbsp;control&nbsp;id&nbsp;for&nbsp;the&nbsp;controls&nbsp;which&nbsp;were&nbsp;not&nbsp;given&nbsp;one.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-NextControlId"><strong>NextControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-NextControlId">NextControlId</a>(int&nbsp;winid)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;id&nbsp;of&nbsp;the&nbsp;control&nbsp;following&nbsp;the&nbsp;one&nbsp;with&nbsp;the&nbsp;given<br>
autogenerated)&nbsp;id</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-PrevControlId"><strong>PrevControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-PrevControlId">PrevControlId</a>(int&nbsp;winid)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;id&nbsp;of&nbsp;the&nbsp;control&nbsp;preceding&nbsp;the&nbsp;one&nbsp;with&nbsp;the&nbsp;given<br>
autogenerated)&nbsp;id</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#EvtHandler">wx._core.EvtHandler</a>:<br>
<dl><dt><a name="FigureCanvasWx-AddPendingEvent"><strong>AddPendingEvent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-AddPendingEvent">AddPendingEvent</a>(self,&nbsp;Event&nbsp;event)</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Bind"><strong>Bind</strong></a>(self, event, handler, source<font color="#909090">=None</font>, id<font color="#909090">=-1</font>, id2<font color="#909090">=-1</font>)</dt><dd><tt>Bind&nbsp;an&nbsp;event&nbsp;to&nbsp;an&nbsp;event&nbsp;handler.<br>
&nbsp;<br>
:param&nbsp;event:&nbsp;One&nbsp;of&nbsp;the&nbsp;EVT_*&nbsp;objects&nbsp;that&nbsp;specifies&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type&nbsp;of&nbsp;event&nbsp;to&nbsp;bind,<br>
&nbsp;<br>
:param&nbsp;handler:&nbsp;A&nbsp;callable&nbsp;object&nbsp;to&nbsp;be&nbsp;invoked&nbsp;when&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event&nbsp;is&nbsp;delivered&nbsp;to&nbsp;self.&nbsp;&nbsp;Pass&nbsp;None&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;disconnect&nbsp;an&nbsp;event&nbsp;handler.<br>
&nbsp;<br>
:param&nbsp;source:&nbsp;Sometimes&nbsp;the&nbsp;event&nbsp;originates&nbsp;from&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;different&nbsp;window&nbsp;than&nbsp;self,&nbsp;but&nbsp;you&nbsp;still<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;want&nbsp;to&nbsp;catch&nbsp;it&nbsp;in&nbsp;self.&nbsp;&nbsp;(For&nbsp;example,&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button&nbsp;event&nbsp;delivered&nbsp;to&nbsp;a&nbsp;frame.)&nbsp;&nbsp;By<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;passing&nbsp;the&nbsp;source&nbsp;of&nbsp;the&nbsp;event,&nbsp;the&nbsp;event<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handling&nbsp;system&nbsp;is&nbsp;able&nbsp;to&nbsp;differentiate<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;between&nbsp;the&nbsp;same&nbsp;event&nbsp;type&nbsp;from&nbsp;different<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controls.<br>
&nbsp;<br>
:param&nbsp;id:&nbsp;Used&nbsp;to&nbsp;spcify&nbsp;the&nbsp;event&nbsp;source&nbsp;by&nbsp;ID&nbsp;instead<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;instance.<br>
&nbsp;<br>
:param&nbsp;id2:&nbsp;Used&nbsp;when&nbsp;it&nbsp;is&nbsp;desirable&nbsp;to&nbsp;bind&nbsp;a&nbsp;handler<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;a&nbsp;range&nbsp;of&nbsp;IDs,&nbsp;such&nbsp;as&nbsp;with&nbsp;EVT_MENU_RANGE.</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Connect"><strong>Connect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-Connect">Connect</a>(self,&nbsp;int&nbsp;id,&nbsp;int&nbsp;lastId,&nbsp;int&nbsp;eventType,&nbsp;PyObject&nbsp;func)</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Disconnect"><strong>Disconnect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-Disconnect">Disconnect</a>(self,&nbsp;int&nbsp;id,&nbsp;int&nbsp;lastId=-1,&nbsp;wxEventType&nbsp;eventType=wxEVT_NULL)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetEvtHandlerEnabled"><strong>GetEvtHandlerEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetEvtHandlerEnabled">GetEvtHandlerEnabled</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetNextHandler"><strong>GetNextHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetNextHandler">GetNextHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-GetPreviousHandler"><strong>GetPreviousHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetPreviousHandler">GetPreviousHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-ProcessEvent"><strong>ProcessEvent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-ProcessEvent">ProcessEvent</a>(self,&nbsp;Event&nbsp;event)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-ProcessPendingEvents"><strong>ProcessPendingEvents</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-ProcessPendingEvents">ProcessPendingEvents</a>(self)</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetEvtHandlerEnabled"><strong>SetEvtHandlerEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetEvtHandlerEnabled">SetEvtHandlerEnabled</a>(self,&nbsp;bool&nbsp;enabled)</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetNextHandler"><strong>SetNextHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetNextHandler">SetNextHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-SetPreviousHandler"><strong>SetPreviousHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-SetPreviousHandler">SetPreviousHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)</tt></dd></dl>

<dl><dt><a name="FigureCanvasWx-Unbind"><strong>Unbind</strong></a>(self, event, source<font color="#909090">=None</font>, id<font color="#909090">=-1</font>, id2<font color="#909090">=-1</font>)</dt><dd><tt>Disconencts&nbsp;the&nbsp;event&nbsp;handler&nbsp;binding&nbsp;for&nbsp;event&nbsp;from&nbsp;self.<br>
Returns&nbsp;True&nbsp;if&nbsp;successful.</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#Object">wx._core.Object</a>:<br>
<dl><dt><a name="FigureCanvasWx-GetClassName"><strong>GetClassName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureCanvasWx-GetClassName">GetClassName</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;class&nbsp;name&nbsp;of&nbsp;the&nbsp;C++&nbsp;class&nbsp;using&nbsp;wxRTTI.</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="wx._core.html#Object">wx._core.Object</a>:<br>
<dl><dt><strong>__dict__</strong> = &lt;dictproxy object&gt;<dd><tt>dictionary&nbsp;for&nbsp;instance&nbsp;variables&nbsp;(if&nbsp;defined)</tt></dl>

<dl><dt><strong>__weakref__</strong> = &lt;attribute '__weakref__' of 'Object' objects&gt;<dd><tt>list&nbsp;of&nbsp;weak&nbsp;references&nbsp;to&nbsp;the&nbsp;object&nbsp;(if&nbsp;defined)</tt></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="FigureFrameWx">class <strong>FigureFrameWx</strong></a>(<a href="wx._windows.html#Frame">wx._windows.Frame</a>)</font></td></tr>
    
<tr><td bgcolor="#ffc8d8"><tt>&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.backends.backend_wx.html#FigureFrameWx">FigureFrameWx</a></dd>
<dd><a href="wx._windows.html#Frame">wx._windows.Frame</a></dd>
<dd><a href="wx._windows.html#TopLevelWindow">wx._windows.TopLevelWindow</a></dd>
<dd><a href="wx._core.html#Window">wx._core.Window</a></dd>
<dd><a href="wx._core.html#EvtHandler">wx._core.EvtHandler</a></dd>
<dd><a href="wx._core.html#Object">wx._core.Object</a></dd>
<dd><a href="__builtin__.html#object">__builtin__.object</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="FigureFrameWx-Destroy"><strong>Destroy</strong></a>(self, *args, **kwargs)</dt></dl>

<dl><dt><a name="FigureFrameWx-GetToolBar"><strong>GetToolBar</strong></a>(self)</dt><dd><tt>Override&nbsp;wxFrame::GetToolBar&nbsp;as&nbsp;we&nbsp;don't&nbsp;have&nbsp;managed&nbsp;toolbar</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-__init__"><strong>__init__</strong></a>(self, num, fig)</dt></dl>

<dl><dt><a name="FigureFrameWx-get_canvas"><strong>get_canvas</strong></a>(self, fig)</dt></dl>

<dl><dt><a name="FigureFrameWx-get_figure_manager"><strong>get_figure_manager</strong></a>(self)</dt></dl>

<hr>
Methods inherited from <a href="wx._windows.html#Frame">wx._windows.Frame</a>:<br>
<dl><dt><a name="FigureFrameWx-Command"><strong>Command</strong></a> = ProcessCommand(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-ProcessCommand">ProcessCommand</a>(self,&nbsp;int&nbsp;winid)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Create"><strong>Create</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Create">Create</a>(self,&nbsp;Window&nbsp;parent,&nbsp;int&nbsp;id=-1,&nbsp;String&nbsp;title=EmptyString,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Point&nbsp;pos=DefaultPosition,&nbsp;Size&nbsp;size=DefaultSize,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;long&nbsp;style=DEFAULT_FRAME_STYLE,&nbsp;String&nbsp;name=FrameNameStr)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-CreateStatusBar"><strong>CreateStatusBar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-CreateStatusBar">CreateStatusBar</a>(self,&nbsp;int&nbsp;number=1,&nbsp;long&nbsp;style=DEFAULT_STATUSBAR_STYLE,&nbsp;int&nbsp;winid=0,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;name=StatusLineNameStr)&nbsp;-&gt;&nbsp;<a href="wx._windows.html#StatusBar">StatusBar</a></tt></dd></dl>

<dl><dt><a name="FigureFrameWx-CreateToolBar"><strong>CreateToolBar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-CreateToolBar">CreateToolBar</a>(self,&nbsp;long&nbsp;style=-1,&nbsp;int&nbsp;winid=-1,&nbsp;String&nbsp;name=ToolBarNameStr)&nbsp;-&gt;&nbsp;wxToolBar</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-DoGiveHelp"><strong>DoGiveHelp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-DoGiveHelp">DoGiveHelp</a>(self,&nbsp;String&nbsp;text,&nbsp;bool&nbsp;show)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-DoMenuUpdates"><strong>DoMenuUpdates</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-DoMenuUpdates">DoMenuUpdates</a>(self,&nbsp;Menu&nbsp;menu=None)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetClientAreaOrigin"><strong>GetClientAreaOrigin</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetClientAreaOrigin">GetClientAreaOrigin</a>(self)&nbsp;-&gt;&nbsp;Point</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetMenuBar"><strong>GetMenuBar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetMenuBar">GetMenuBar</a>(self)&nbsp;-&gt;&nbsp;MenuBar</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetStatusBar"><strong>GetStatusBar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetStatusBar">GetStatusBar</a>(self)&nbsp;-&gt;&nbsp;<a href="wx._windows.html#StatusBar">StatusBar</a></tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetStatusBarPane"><strong>GetStatusBarPane</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetStatusBarPane">GetStatusBarPane</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-PopStatusText"><strong>PopStatusText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-PopStatusText">PopStatusText</a>(self,&nbsp;int&nbsp;number=0)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-ProcessCommand"><strong>ProcessCommand</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-ProcessCommand">ProcessCommand</a>(self,&nbsp;int&nbsp;winid)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-PushStatusText"><strong>PushStatusText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-PushStatusText">PushStatusText</a>(self,&nbsp;String&nbsp;text,&nbsp;int&nbsp;number=0)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SendSizeEvent"><strong>SendSizeEvent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SendSizeEvent">SendSizeEvent</a>(self)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetMenuBar"><strong>SetMenuBar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetMenuBar">SetMenuBar</a>(self,&nbsp;MenuBar&nbsp;menubar)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetStatusBar"><strong>SetStatusBar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetStatusBar">SetStatusBar</a>(self,&nbsp;<a href="wx._windows.html#StatusBar">StatusBar</a>&nbsp;statBar)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetStatusBarPane"><strong>SetStatusBarPane</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetStatusBarPane">SetStatusBarPane</a>(self,&nbsp;int&nbsp;n)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetStatusText"><strong>SetStatusText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetStatusText">SetStatusText</a>(self,&nbsp;String&nbsp;text,&nbsp;int&nbsp;number=0)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetStatusWidths"><strong>SetStatusWidths</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetStatusWidths">SetStatusWidths</a>(self,&nbsp;int&nbsp;widths)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetToolBar"><strong>SetToolBar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetToolBar">SetToolBar</a>(self,&nbsp;wxToolBar&nbsp;toolbar)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-__repr__"><strong>__repr__</strong></a>(self)</dt></dl>

<hr>
Static methods inherited from <a href="wx._windows.html#Frame">wx._windows.Frame</a>:<br>
<dl><dt><a name="FigureFrameWx-GetClassDefaultAttributes"><strong>GetClassDefaultAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetClassDefaultAttributes">GetClassDefaultAttributes</a>(int&nbsp;variant=WINDOW_VARIANT_NORMAL)&nbsp;-&gt;&nbsp;VisualAttributes<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;attributes&nbsp;for&nbsp;this&nbsp;class.&nbsp;&nbsp;This&nbsp;is&nbsp;useful&nbsp;if&nbsp;you&nbsp;want<br>
to&nbsp;use&nbsp;the&nbsp;same&nbsp;font&nbsp;or&nbsp;colour&nbsp;in&nbsp;your&nbsp;own&nbsp;control&nbsp;as&nbsp;in&nbsp;a&nbsp;standard<br>
control&nbsp;--&nbsp;which&nbsp;is&nbsp;a&nbsp;much&nbsp;better&nbsp;idea&nbsp;than&nbsp;hard&nbsp;coding&nbsp;specific<br>
colours&nbsp;or&nbsp;fonts&nbsp;which&nbsp;might&nbsp;look&nbsp;completely&nbsp;out&nbsp;of&nbsp;place&nbsp;on&nbsp;the<br>
user's&nbsp;system,&nbsp;especially&nbsp;if&nbsp;it&nbsp;uses&nbsp;themes.<br>
&nbsp;<br>
The&nbsp;variant&nbsp;parameter&nbsp;is&nbsp;only&nbsp;relevant&nbsp;under&nbsp;Mac&nbsp;currently&nbsp;and&nbsp;is<br>
ignore&nbsp;under&nbsp;other&nbsp;platforms.&nbsp;Under&nbsp;Mac,&nbsp;it&nbsp;will&nbsp;change&nbsp;the&nbsp;size&nbsp;of<br>
the&nbsp;returned&nbsp;font.&nbsp;See&nbsp;`wx.Window.SetWindowVariant`&nbsp;for&nbsp;more&nbsp;about<br>
this.</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._windows.html#TopLevelWindow">wx._windows.TopLevelWindow</a>:<br>
<dl><dt><a name="FigureFrameWx-CenterOnScreen"><strong>CenterOnScreen</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-CenterOnScreen">CenterOnScreen</a>(self,&nbsp;int&nbsp;dir=BOTH)<br>
&nbsp;<br>
Center&nbsp;the&nbsp;window&nbsp;on&nbsp;screen</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-CentreOnScreen"><strong>CentreOnScreen</strong></a> = CenterOnScreen(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-CenterOnScreen">CenterOnScreen</a>(self,&nbsp;int&nbsp;dir=BOTH)<br>
&nbsp;<br>
Center&nbsp;the&nbsp;window&nbsp;on&nbsp;screen</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetIcon"><strong>GetIcon</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetIcon">GetIcon</a>(self)&nbsp;-&gt;&nbsp;Icon</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetTitle"><strong>GetTitle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetTitle">GetTitle</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window's&nbsp;title.&nbsp;Applicable&nbsp;only&nbsp;to&nbsp;frames&nbsp;and&nbsp;dialogs.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Iconize"><strong>Iconize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Iconize">Iconize</a>(self,&nbsp;bool&nbsp;iconize=True)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-IsActive"><strong>IsActive</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-IsActive">IsActive</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-IsFullScreen"><strong>IsFullScreen</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-IsFullScreen">IsFullScreen</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-IsIconized"><strong>IsIconized</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-IsIconized">IsIconized</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-IsMaximized"><strong>IsMaximized</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-IsMaximized">IsMaximized</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-MacGetMetalAppearance"><strong>MacGetMetalAppearance</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-MacGetMetalAppearance">MacGetMetalAppearance</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-MacSetMetalAppearance"><strong>MacSetMetalAppearance</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-MacSetMetalAppearance">MacSetMetalAppearance</a>(self,&nbsp;bool&nbsp;on)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Maximize"><strong>Maximize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Maximize">Maximize</a>(self,&nbsp;bool&nbsp;maximize=True)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-RequestUserAttention"><strong>RequestUserAttention</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-RequestUserAttention">RequestUserAttention</a>(self,&nbsp;int&nbsp;flags=USER_ATTENTION_INFO)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Restore"><strong>Restore</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Restore">Restore</a>(self)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetIcon"><strong>SetIcon</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetIcon">SetIcon</a>(self,&nbsp;Icon&nbsp;icon)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetIcons"><strong>SetIcons</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetIcons">SetIcons</a>(self,&nbsp;wxIconBundle&nbsp;icons)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetShape"><strong>SetShape</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetShape">SetShape</a>(self,&nbsp;Region&nbsp;region)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetTitle"><strong>SetTitle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetTitle">SetTitle</a>(self,&nbsp;String&nbsp;title)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;title.&nbsp;Applicable&nbsp;only&nbsp;to&nbsp;frames&nbsp;and&nbsp;dialogs.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-ShowFullScreen"><strong>ShowFullScreen</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-ShowFullScreen">ShowFullScreen</a>(self,&nbsp;bool&nbsp;show,&nbsp;long&nbsp;style=FULLSCREEN_ALL)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#Window">wx._core.Window</a>:<br>
<dl><dt><a name="FigureFrameWx-AcceptsFocus"><strong>AcceptsFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-AcceptsFocus">AcceptsFocus</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Can&nbsp;this&nbsp;window&nbsp;have&nbsp;focus?</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-AcceptsFocusFromKeyboard"><strong>AcceptsFocusFromKeyboard</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-AcceptsFocusFromKeyboard">AcceptsFocusFromKeyboard</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Can&nbsp;this&nbsp;window&nbsp;be&nbsp;given&nbsp;focus&nbsp;by&nbsp;keyboard&nbsp;navigation?&nbsp;if&nbsp;not,&nbsp;the<br>
only&nbsp;way&nbsp;to&nbsp;give&nbsp;it&nbsp;focus&nbsp;(provided&nbsp;it&nbsp;accepts&nbsp;it&nbsp;at&nbsp;all)&nbsp;is&nbsp;to&nbsp;click<br>
it.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-AddChild"><strong>AddChild</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-AddChild">AddChild</a>(self,&nbsp;Window&nbsp;child)<br>
&nbsp;<br>
Adds&nbsp;a&nbsp;child&nbsp;window.&nbsp;This&nbsp;is&nbsp;called&nbsp;automatically&nbsp;by&nbsp;window&nbsp;creation<br>
functions&nbsp;so&nbsp;should&nbsp;not&nbsp;be&nbsp;required&nbsp;by&nbsp;the&nbsp;application&nbsp;programmer.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-AssociateHandle"><strong>AssociateHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-AssociateHandle">AssociateHandle</a>(self,&nbsp;long&nbsp;handle)<br>
&nbsp;<br>
Associate&nbsp;the&nbsp;window&nbsp;with&nbsp;a&nbsp;new&nbsp;native&nbsp;handle</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-CacheBestSize"><strong>CacheBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-CacheBestSize">CacheBestSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Cache&nbsp;the&nbsp;best&nbsp;size&nbsp;so&nbsp;it&nbsp;doesn't&nbsp;need&nbsp;to&nbsp;be&nbsp;calculated&nbsp;again,&nbsp;(at&nbsp;least&nbsp;until<br>
some&nbsp;properties&nbsp;of&nbsp;the&nbsp;window&nbsp;change.)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-CaptureMouse"><strong>CaptureMouse</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-CaptureMouse">CaptureMouse</a>(self)<br>
&nbsp;<br>
Directs&nbsp;all&nbsp;mouse&nbsp;input&nbsp;to&nbsp;this&nbsp;window.&nbsp;Call&nbsp;wx.Window.ReleaseMouse&nbsp;to<br>
release&nbsp;the&nbsp;capture.<br>
&nbsp;<br>
Note&nbsp;that&nbsp;wxWindows&nbsp;maintains&nbsp;the&nbsp;stack&nbsp;of&nbsp;windows&nbsp;having&nbsp;captured&nbsp;the<br>
mouse&nbsp;and&nbsp;when&nbsp;the&nbsp;mouse&nbsp;is&nbsp;released&nbsp;the&nbsp;capture&nbsp;returns&nbsp;to&nbsp;the&nbsp;window<br>
which&nbsp;had&nbsp;had&nbsp;captured&nbsp;it&nbsp;previously&nbsp;and&nbsp;it&nbsp;is&nbsp;only&nbsp;really&nbsp;released&nbsp;if<br>
there&nbsp;were&nbsp;no&nbsp;previous&nbsp;window.&nbsp;In&nbsp;particular,&nbsp;this&nbsp;means&nbsp;that&nbsp;you&nbsp;must<br>
release&nbsp;the&nbsp;mouse&nbsp;as&nbsp;many&nbsp;times&nbsp;as&nbsp;you&nbsp;capture&nbsp;it.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Center"><strong>Center</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Center">Center</a>(self,&nbsp;int&nbsp;direction=BOTH)<br>
&nbsp;<br>
Centers&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;parameter&nbsp;specifies&nbsp;the&nbsp;direction&nbsp;for<br>
cetering,&nbsp;and&nbsp;may&nbsp;be&nbsp;wx.HORIZONTAL,&nbsp;wx.VERTICAL&nbsp;or&nbsp;wx.BOTH.&nbsp;It&nbsp;may<br>
also&nbsp;include&nbsp;wx.CENTER_ON_SCREEN&nbsp;flag&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;center&nbsp;the&nbsp;window<br>
on&nbsp;the&nbsp;entire&nbsp;screen&nbsp;and&nbsp;not&nbsp;on&nbsp;its&nbsp;parent&nbsp;window.&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a<br>
top-level&nbsp;window&nbsp;and&nbsp;has&nbsp;no&nbsp;parent&nbsp;then&nbsp;it&nbsp;will&nbsp;always&nbsp;be&nbsp;centered<br>
relative&nbsp;to&nbsp;the&nbsp;screen.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-CenterOnParent"><strong>CenterOnParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-CenterOnParent">CenterOnParent</a>(self,&nbsp;int&nbsp;dir=BOTH)<br>
&nbsp;<br>
Center&nbsp;with&nbsp;respect&nbsp;to&nbsp;the&nbsp;the&nbsp;parent&nbsp;window</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Centre"><strong>Centre</strong></a> = Center(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Center">Center</a>(self,&nbsp;int&nbsp;direction=BOTH)<br>
&nbsp;<br>
Centers&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;parameter&nbsp;specifies&nbsp;the&nbsp;direction&nbsp;for<br>
cetering,&nbsp;and&nbsp;may&nbsp;be&nbsp;wx.HORIZONTAL,&nbsp;wx.VERTICAL&nbsp;or&nbsp;wx.BOTH.&nbsp;It&nbsp;may<br>
also&nbsp;include&nbsp;wx.CENTER_ON_SCREEN&nbsp;flag&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;center&nbsp;the&nbsp;window<br>
on&nbsp;the&nbsp;entire&nbsp;screen&nbsp;and&nbsp;not&nbsp;on&nbsp;its&nbsp;parent&nbsp;window.&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a<br>
top-level&nbsp;window&nbsp;and&nbsp;has&nbsp;no&nbsp;parent&nbsp;then&nbsp;it&nbsp;will&nbsp;always&nbsp;be&nbsp;centered<br>
relative&nbsp;to&nbsp;the&nbsp;screen.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-CentreOnParent"><strong>CentreOnParent</strong></a> = CenterOnParent(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-CenterOnParent">CenterOnParent</a>(self,&nbsp;int&nbsp;dir=BOTH)<br>
&nbsp;<br>
Center&nbsp;with&nbsp;respect&nbsp;to&nbsp;the&nbsp;the&nbsp;parent&nbsp;window</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-ClearBackground"><strong>ClearBackground</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-ClearBackground">ClearBackground</a>(self)<br>
&nbsp;<br>
Clears&nbsp;the&nbsp;window&nbsp;by&nbsp;filling&nbsp;it&nbsp;with&nbsp;the&nbsp;current&nbsp;background<br>
colour.&nbsp;Does&nbsp;not&nbsp;cause&nbsp;an&nbsp;erase&nbsp;background&nbsp;event&nbsp;to&nbsp;be&nbsp;generated.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-ClientToScreen"><strong>ClientToScreen</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-ClientToScreen">ClientToScreen</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;to&nbsp;screen&nbsp;coordinates&nbsp;from&nbsp;coordinates&nbsp;relative&nbsp;to&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-ClientToScreenXY"><strong>ClientToScreenXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-ClientToScreenXY">ClientToScreenXY</a>(int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Converts&nbsp;to&nbsp;screen&nbsp;coordinates&nbsp;from&nbsp;coordinates&nbsp;relative&nbsp;to&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Close"><strong>Close</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Close">Close</a>(self,&nbsp;bool&nbsp;force=False)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;function&nbsp;simply&nbsp;generates&nbsp;a&nbsp;EVT_CLOSE&nbsp;event&nbsp;whose&nbsp;handler&nbsp;usually<br>
tries&nbsp;to&nbsp;close&nbsp;the&nbsp;window.&nbsp;It&nbsp;doesn't&nbsp;close&nbsp;the&nbsp;window&nbsp;itself,<br>
however.&nbsp;&nbsp;If&nbsp;force&nbsp;is&nbsp;False&nbsp;(the&nbsp;default)&nbsp;then&nbsp;the&nbsp;window's&nbsp;close<br>
handler&nbsp;will&nbsp;be&nbsp;allowed&nbsp;to&nbsp;veto&nbsp;the&nbsp;destruction&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-ConvertDialogPointToPixels"><strong>ConvertDialogPointToPixels</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-ConvertDialogPointToPixels">ConvertDialogPointToPixels</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-ConvertDialogSizeToPixels"><strong>ConvertDialogSizeToPixels</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-ConvertDialogSizeToPixels">ConvertDialogSizeToPixels</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-ConvertPixelPointToDialog"><strong>ConvertPixelPointToDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-ConvertPixelPointToDialog">ConvertPixelPointToDialog</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-ConvertPixelSizeToDialog"><strong>ConvertPixelSizeToDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-ConvertPixelSizeToDialog">ConvertPixelSizeToDialog</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-DLG_PNT"><strong>DLG_PNT</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-DLG_PNT">DLG_PNT</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-DLG_SZE"><strong>DLG_SZE</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-DLG_SZE">DLG_SZE</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-DestroyChildren"><strong>DestroyChildren</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-DestroyChildren">DestroyChildren</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Destroys&nbsp;all&nbsp;children&nbsp;of&nbsp;a&nbsp;window.&nbsp;Called&nbsp;automatically&nbsp;by&nbsp;the<br>
destructor.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Disable"><strong>Disable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Disable">Disable</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Disables&nbsp;the&nbsp;window,&nbsp;same&nbsp;as&nbsp;<a href="#FigureFrameWx-Enable">Enable</a>(false).</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-DissociateHandle"><strong>DissociateHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-DissociateHandle">DissociateHandle</a>(self)<br>
&nbsp;<br>
Dissociate&nbsp;the&nbsp;current&nbsp;native&nbsp;handle&nbsp;from&nbsp;the&nbsp;window</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-DragAcceptFiles"><strong>DragAcceptFiles</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-DragAcceptFiles">DragAcceptFiles</a>(self,&nbsp;bool&nbsp;accept)<br>
&nbsp;<br>
Enables&nbsp;or&nbsp;disables&nbsp;eligibility&nbsp;for&nbsp;drop&nbsp;file&nbsp;events,&nbsp;EVT_DROP_FILES.<br>
Only&nbsp;functional&nbsp;on&nbsp;Windows.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Enable"><strong>Enable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Enable">Enable</a>(self,&nbsp;bool&nbsp;enable=True)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Enable&nbsp;or&nbsp;disable&nbsp;the&nbsp;window&nbsp;for&nbsp;user&nbsp;input.&nbsp;Note&nbsp;that&nbsp;when&nbsp;a&nbsp;parent<br>
window&nbsp;is&nbsp;disabled,&nbsp;all&nbsp;of&nbsp;its&nbsp;children&nbsp;are&nbsp;disabled&nbsp;as&nbsp;well&nbsp;and&nbsp;they<br>
are&nbsp;reenabled&nbsp;again&nbsp;when&nbsp;the&nbsp;parent&nbsp;is.&nbsp;&nbsp;Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window<br>
has&nbsp;been&nbsp;enabled&nbsp;or&nbsp;disabled,&nbsp;false&nbsp;if&nbsp;nothing&nbsp;was&nbsp;done,&nbsp;i.e.&nbsp;if&nbsp;the<br>
window&nbsp;had&nbsp;already&nbsp;been&nbsp;in&nbsp;the&nbsp;specified&nbsp;state.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-FindWindowById"><strong>FindWindowById</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-FindWindowById">FindWindowById</a>(self,&nbsp;long&nbsp;winid)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Find&nbsp;a&nbsp;chld&nbsp;of&nbsp;this&nbsp;window&nbsp;by&nbsp;window&nbsp;ID</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-FindWindowByName"><strong>FindWindowByName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-FindWindowByName">FindWindowByName</a>(self,&nbsp;String&nbsp;name)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Find&nbsp;a&nbsp;child&nbsp;of&nbsp;this&nbsp;window&nbsp;by&nbsp;name</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Fit"><strong>Fit</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Fit">Fit</a>(self)<br>
&nbsp;<br>
Sizes&nbsp;the&nbsp;window&nbsp;so&nbsp;that&nbsp;it&nbsp;fits&nbsp;around&nbsp;its&nbsp;subwindows.&nbsp;This&nbsp;function<br>
won't&nbsp;do&nbsp;anything&nbsp;if&nbsp;there&nbsp;are&nbsp;no&nbsp;subwindows&nbsp;and&nbsp;will&nbsp;only&nbsp;really&nbsp;work<br>
correctly&nbsp;if&nbsp;sizers&nbsp;are&nbsp;used&nbsp;for&nbsp;the&nbsp;subwindows&nbsp;layout.&nbsp;Also,&nbsp;if&nbsp;the<br>
window&nbsp;has&nbsp;exactly&nbsp;one&nbsp;subwindow&nbsp;it&nbsp;is&nbsp;better&nbsp;(faster&nbsp;and&nbsp;the&nbsp;result<br>
is&nbsp;more&nbsp;precise&nbsp;as&nbsp;Fit&nbsp;adds&nbsp;some&nbsp;margin&nbsp;to&nbsp;account&nbsp;for&nbsp;fuzziness&nbsp;of<br>
its&nbsp;calculations)&nbsp;to&nbsp;call&nbsp;window.<a href="#FigureFrameWx-SetClientSize">SetClientSize</a>(child.<a href="#FigureFrameWx-GetSize">GetSize</a>())<br>
instead&nbsp;of&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-FitInside"><strong>FitInside</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-FitInside">FitInside</a>(self)<br>
&nbsp;<br>
Similar&nbsp;to&nbsp;Fit,&nbsp;but&nbsp;sizes&nbsp;the&nbsp;interior&nbsp;(virtual)&nbsp;size&nbsp;of&nbsp;a<br>
window.&nbsp;Mainly&nbsp;useful&nbsp;with&nbsp;scrolled&nbsp;windows&nbsp;to&nbsp;reset&nbsp;scrollbars&nbsp;after<br>
sizing&nbsp;changes&nbsp;that&nbsp;do&nbsp;not&nbsp;trigger&nbsp;a&nbsp;size&nbsp;event,&nbsp;and/or&nbsp;scrolled<br>
windows&nbsp;without&nbsp;an&nbsp;interior&nbsp;sizer.&nbsp;This&nbsp;function&nbsp;similarly&nbsp;won't&nbsp;do<br>
anything&nbsp;if&nbsp;there&nbsp;are&nbsp;no&nbsp;subwindows.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Freeze"><strong>Freeze</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Freeze">Freeze</a>(self)<br>
&nbsp;<br>
Freezes&nbsp;the&nbsp;window&nbsp;or,&nbsp;in&nbsp;other&nbsp;words,&nbsp;prevents&nbsp;any&nbsp;updates&nbsp;from<br>
taking&nbsp;place&nbsp;on&nbsp;screen,&nbsp;the&nbsp;window&nbsp;is&nbsp;not&nbsp;redrawn&nbsp;at&nbsp;all.&nbsp;Thaw&nbsp;must&nbsp;be<br>
called&nbsp;to&nbsp;reenable&nbsp;window&nbsp;redrawing.&nbsp;&nbsp;Calls&nbsp;to&nbsp;Freeze/Thaw&nbsp;may&nbsp;be<br>
nested,&nbsp;with&nbsp;the&nbsp;actual&nbsp;Thaw&nbsp;being&nbsp;delayed&nbsp;until&nbsp;all&nbsp;the&nbsp;nesting&nbsp;has<br>
been&nbsp;undone.<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;useful&nbsp;for&nbsp;visual&nbsp;appearance&nbsp;optimization&nbsp;(for&nbsp;example,<br>
it&nbsp;is&nbsp;a&nbsp;good&nbsp;idea&nbsp;to&nbsp;use&nbsp;it&nbsp;before&nbsp;inserting&nbsp;large&nbsp;amount&nbsp;of&nbsp;text&nbsp;into<br>
a&nbsp;wxTextCtrl&nbsp;under&nbsp;wxGTK)&nbsp;but&nbsp;is&nbsp;not&nbsp;implemented&nbsp;on&nbsp;all&nbsp;platforms&nbsp;nor<br>
for&nbsp;all&nbsp;controls&nbsp;so&nbsp;it&nbsp;is&nbsp;mostly&nbsp;just&nbsp;a&nbsp;hint&nbsp;to&nbsp;wxWindows&nbsp;and&nbsp;not&nbsp;a<br>
mandatory&nbsp;directive.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetAcceleratorTable"><strong>GetAcceleratorTable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetAcceleratorTable">GetAcceleratorTable</a>(self)&nbsp;-&gt;&nbsp;AcceleratorTable<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;accelerator&nbsp;table&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetAdjustedBestSize"><strong>GetAdjustedBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetAdjustedBestSize">GetAdjustedBestSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;similar&nbsp;to&nbsp;GetBestSize,&nbsp;except&nbsp;in&nbsp;one<br>
thing.&nbsp;GetBestSize&nbsp;should&nbsp;return&nbsp;the&nbsp;minimum&nbsp;untruncated&nbsp;size&nbsp;of&nbsp;the<br>
window,&nbsp;while&nbsp;this&nbsp;method&nbsp;will&nbsp;return&nbsp;the&nbsp;largest&nbsp;of&nbsp;BestSize&nbsp;and&nbsp;any<br>
user&nbsp;specified&nbsp;minimum&nbsp;size.&nbsp;ie.&nbsp;it&nbsp;is&nbsp;the&nbsp;minimum&nbsp;size&nbsp;the&nbsp;window<br>
should&nbsp;currently&nbsp;be&nbsp;drawn&nbsp;at,&nbsp;not&nbsp;the&nbsp;minimal&nbsp;size&nbsp;it&nbsp;can&nbsp;possibly<br>
tolerate.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetAutoLayout"><strong>GetAutoLayout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetAutoLayout">GetAutoLayout</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;current&nbsp;autoLayout&nbsp;setting</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetBackgroundColour"><strong>GetBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetBackgroundColour">GetBackgroundColour</a>(self)&nbsp;-&gt;&nbsp;Colour<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetBackgroundStyle"><strong>GetBackgroundStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetBackgroundStyle">GetBackgroundStyle</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;style&nbsp;of&nbsp;the&nbsp;window.<br>
&nbsp;<br>
:see:&nbsp;`SetBackgroundStyle`</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetBestFittingSize"><strong>GetBestFittingSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetBestFittingSize">GetBestFittingSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;function&nbsp;will&nbsp;merge&nbsp;the&nbsp;window's&nbsp;best&nbsp;size&nbsp;into&nbsp;the&nbsp;window's<br>
minimum&nbsp;size,&nbsp;giving&nbsp;priority&nbsp;to&nbsp;the&nbsp;min&nbsp;size&nbsp;components,&nbsp;and&nbsp;returns<br>
the&nbsp;results.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetBestSize"><strong>GetBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetBestSize">GetBestSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;function&nbsp;returns&nbsp;the&nbsp;best&nbsp;acceptable&nbsp;minimal&nbsp;size&nbsp;for&nbsp;the<br>
window,&nbsp;if&nbsp;applicable.&nbsp;For&nbsp;example,&nbsp;for&nbsp;a&nbsp;static&nbsp;text&nbsp;control,&nbsp;it&nbsp;will<br>
be&nbsp;the&nbsp;minimal&nbsp;size&nbsp;such&nbsp;that&nbsp;the&nbsp;control&nbsp;label&nbsp;is&nbsp;not&nbsp;truncated.&nbsp;For<br>
windows&nbsp;containing&nbsp;subwindows&nbsp;(suzh&nbsp;aswx.<a href="wx._windows.html#Panel">Panel</a>),&nbsp;the&nbsp;size&nbsp;returned&nbsp;by<br>
this&nbsp;function&nbsp;will&nbsp;be&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;size&nbsp;the&nbsp;window&nbsp;would&nbsp;have&nbsp;had<br>
after&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetBestSizeTuple"><strong>GetBestSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetBestSizeTuple">GetBestSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
This&nbsp;function&nbsp;returns&nbsp;the&nbsp;best&nbsp;acceptable&nbsp;minimal&nbsp;size&nbsp;for&nbsp;the<br>
window,&nbsp;if&nbsp;applicable.&nbsp;For&nbsp;example,&nbsp;for&nbsp;a&nbsp;static&nbsp;text&nbsp;control,&nbsp;it&nbsp;will<br>
be&nbsp;the&nbsp;minimal&nbsp;size&nbsp;such&nbsp;that&nbsp;the&nbsp;control&nbsp;label&nbsp;is&nbsp;not&nbsp;truncated.&nbsp;For<br>
windows&nbsp;containing&nbsp;subwindows&nbsp;(suzh&nbsp;aswx.<a href="wx._windows.html#Panel">Panel</a>),&nbsp;the&nbsp;size&nbsp;returned&nbsp;by<br>
this&nbsp;function&nbsp;will&nbsp;be&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;size&nbsp;the&nbsp;window&nbsp;would&nbsp;have&nbsp;had<br>
after&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetBestVirtualSize"><strong>GetBestVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetBestVirtualSize">GetBestVirtualSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Return&nbsp;the&nbsp;largest&nbsp;of&nbsp;ClientSize&nbsp;and&nbsp;BestSize&nbsp;(as&nbsp;determined&nbsp;by&nbsp;a<br>
sizer,&nbsp;interior&nbsp;children,&nbsp;or&nbsp;other&nbsp;means)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetBorder"><strong>GetBorder</strong></a>(*args)</dt><dd><tt><a href="#FigureFrameWx-GetBorder">GetBorder</a>(self,&nbsp;long&nbsp;flags)&nbsp;-&gt;&nbsp;int<br>
<a href="#FigureFrameWx-GetBorder">GetBorder</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;border&nbsp;for&nbsp;the&nbsp;flags&nbsp;of&nbsp;this&nbsp;window</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetCaret"><strong>GetCaret</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetCaret">GetCaret</a>(self)&nbsp;-&gt;&nbsp;Caret<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;caret&nbsp;associated&nbsp;with&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetCharHeight"><strong>GetCharHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetCharHeight">GetCharHeight</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;(average)&nbsp;character&nbsp;size&nbsp;for&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetCharWidth"><strong>GetCharWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetCharWidth">GetCharWidth</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;(average)&nbsp;character&nbsp;size&nbsp;for&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetChildren"><strong>GetChildren</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetChildren">GetChildren</a>(self)&nbsp;-&gt;&nbsp;PyObject<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;list&nbsp;of&nbsp;the&nbsp;window's&nbsp;children.&nbsp;&nbsp;NOTE:&nbsp;Currently&nbsp;this&nbsp;is&nbsp;a<br>
copy&nbsp;of&nbsp;the&nbsp;child&nbsp;window&nbsp;list&nbsp;maintained&nbsp;by&nbsp;the&nbsp;window,&nbsp;so&nbsp;the&nbsp;return<br>
value&nbsp;of&nbsp;this&nbsp;function&nbsp;is&nbsp;only&nbsp;valid&nbsp;as&nbsp;long&nbsp;as&nbsp;the&nbsp;window's&nbsp;children<br>
do&nbsp;not&nbsp;change.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetClientRect"><strong>GetClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetClientRect">GetClientRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Get&nbsp;the&nbsp;client&nbsp;area&nbsp;position&nbsp;and&nbsp;size&nbsp;as&nbsp;a&nbsp;`wx.Rect`&nbsp;object.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetClientSize"><strong>GetClientSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetClientSize">GetClientSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;gets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window's&nbsp;'client&nbsp;area'&nbsp;in&nbsp;pixels.&nbsp;The&nbsp;client<br>
area&nbsp;is&nbsp;the&nbsp;area&nbsp;which&nbsp;may&nbsp;be&nbsp;drawn&nbsp;on&nbsp;by&nbsp;the&nbsp;programmer,&nbsp;excluding<br>
title&nbsp;bar,&nbsp;border,&nbsp;scrollbars,&nbsp;etc.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetClientSizeTuple"><strong>GetClientSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetClientSizeTuple">GetClientSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
This&nbsp;gets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window's&nbsp;'client&nbsp;area'&nbsp;in&nbsp;pixels.&nbsp;The&nbsp;client<br>
area&nbsp;is&nbsp;the&nbsp;area&nbsp;which&nbsp;may&nbsp;be&nbsp;drawn&nbsp;on&nbsp;by&nbsp;the&nbsp;programmer,&nbsp;excluding<br>
title&nbsp;bar,&nbsp;border,&nbsp;scrollbars,&nbsp;etc.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetConstraints"><strong>GetConstraints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetConstraints">GetConstraints</a>(self)&nbsp;-&gt;&nbsp;LayoutConstraints<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;pointer&nbsp;to&nbsp;the&nbsp;window's&nbsp;layout&nbsp;constraints,&nbsp;or&nbsp;None&nbsp;if&nbsp;there<br>
are&nbsp;none.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetContainingSizer"><strong>GetContainingSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetContainingSizer">GetContainingSizer</a>(self)&nbsp;-&gt;&nbsp;Sizer<br>
&nbsp;<br>
Return&nbsp;the&nbsp;sizer&nbsp;that&nbsp;this&nbsp;window&nbsp;is&nbsp;a&nbsp;member&nbsp;of,&nbsp;if&nbsp;any,&nbsp;otherwise&nbsp;None.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetCursor"><strong>GetCursor</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetCursor">GetCursor</a>(self)&nbsp;-&gt;&nbsp;Cursor<br>
&nbsp;<br>
Return&nbsp;the&nbsp;cursor&nbsp;associated&nbsp;with&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetDefaultAttributes"><strong>GetDefaultAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetDefaultAttributes">GetDefaultAttributes</a>(self)&nbsp;-&gt;&nbsp;VisualAttributes<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;attributes&nbsp;for&nbsp;an&nbsp;instance&nbsp;of&nbsp;this&nbsp;class.&nbsp;&nbsp;This&nbsp;is<br>
useful&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;use&nbsp;the&nbsp;same&nbsp;font&nbsp;or&nbsp;colour&nbsp;in&nbsp;your&nbsp;own&nbsp;control<br>
as&nbsp;in&nbsp;a&nbsp;standard&nbsp;control&nbsp;--&nbsp;which&nbsp;is&nbsp;a&nbsp;much&nbsp;better&nbsp;idea&nbsp;than&nbsp;hard<br>
coding&nbsp;specific&nbsp;colours&nbsp;or&nbsp;fonts&nbsp;which&nbsp;might&nbsp;look&nbsp;completely&nbsp;out&nbsp;of<br>
place&nbsp;on&nbsp;the&nbsp;user's&nbsp;system,&nbsp;especially&nbsp;if&nbsp;it&nbsp;uses&nbsp;themes.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetDefaultItem"><strong>GetDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetDefaultItem">GetDefaultItem</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;child&nbsp;of&nbsp;this&nbsp;parent,&nbsp;i.e.&nbsp;the&nbsp;one&nbsp;which&nbsp;is&nbsp;activated<br>
by&nbsp;pressing&nbsp;&lt;Enter&gt;&nbsp;such&nbsp;as&nbsp;the&nbsp;OK&nbsp;button&nbsp;on&nbsp;a&nbsp;wx.Dialog.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetDropTarget"><strong>GetDropTarget</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetDropTarget">GetDropTarget</a>(self)&nbsp;-&gt;&nbsp;DropTarget<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;associated&nbsp;drop&nbsp;target,&nbsp;which&nbsp;may&nbsp;be&nbsp;None.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetEventHandler"><strong>GetEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetEventHandler">GetEventHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;event&nbsp;handler&nbsp;for&nbsp;this&nbsp;window.&nbsp;By&nbsp;default,&nbsp;the&nbsp;window&nbsp;is<br>
its&nbsp;own&nbsp;event&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetExtraStyle"><strong>GetExtraStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetExtraStyle">GetExtraStyle</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;extra&nbsp;style&nbsp;bits&nbsp;for&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetFont"><strong>GetFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetFont">GetFont</a>(self)&nbsp;-&gt;&nbsp;Font<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;default&nbsp;font&nbsp;used&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetForegroundColour"><strong>GetForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetForegroundColour">GetForegroundColour</a>(self)&nbsp;-&gt;&nbsp;Colour<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;foreground&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;interpretation&nbsp;of<br>
foreground&nbsp;colour&nbsp;is&nbsp;dependent&nbsp;on&nbsp;the&nbsp;window&nbsp;class;&nbsp;it&nbsp;may&nbsp;be&nbsp;the&nbsp;text<br>
colour&nbsp;or&nbsp;other&nbsp;colour,&nbsp;or&nbsp;it&nbsp;may&nbsp;not&nbsp;be&nbsp;used&nbsp;at&nbsp;all.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetFullTextExtent"><strong>GetFullTextExtent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetFullTextExtent">GetFullTextExtent</a>(String&nbsp;string,&nbsp;Font&nbsp;font=None)&nbsp;-&gt;<br>
&nbsp;&nbsp;&nbsp;(width,&nbsp;height,&nbsp;descent,&nbsp;externalLeading)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;width,&nbsp;height,&nbsp;decent&nbsp;and&nbsp;leading&nbsp;of&nbsp;the&nbsp;text&nbsp;using&nbsp;the<br>
current&nbsp;or&nbsp;specified&nbsp;font.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetGrandParent"><strong>GetGrandParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetGrandParent">GetGrandParent</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;parent&nbsp;of&nbsp;the&nbsp;parent&nbsp;of&nbsp;this&nbsp;window,&nbsp;or&nbsp;None&nbsp;if&nbsp;there<br>
isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetHandle"><strong>GetHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetHandle">GetHandle</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;platform-specific&nbsp;handle&nbsp;(as&nbsp;a&nbsp;long&nbsp;integer)&nbsp;of&nbsp;the<br>
physical&nbsp;window.&nbsp;&nbsp;Currently&nbsp;on&nbsp;wxMac&nbsp;it&nbsp;returns&nbsp;the&nbsp;handle&nbsp;of&nbsp;the<br>
toplevel&nbsp;parent&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetHelpText"><strong>GetHelpText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetHelpText">GetHelpText</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;help&nbsp;text&nbsp;to&nbsp;be&nbsp;used&nbsp;as&nbsp;context-sensitive&nbsp;help&nbsp;for&nbsp;this<br>
window.&nbsp;&nbsp;Note&nbsp;that&nbsp;the&nbsp;text&nbsp;is&nbsp;actually&nbsp;stored&nbsp;by&nbsp;the&nbsp;current<br>
wxHelpProvider&nbsp;implementation,&nbsp;and&nbsp;not&nbsp;in&nbsp;the&nbsp;window&nbsp;object&nbsp;itself.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetId"><strong>GetId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetId">GetId</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;identifier&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Each&nbsp;window&nbsp;has&nbsp;an&nbsp;integer<br>
identifier.&nbsp;If&nbsp;the&nbsp;application&nbsp;has&nbsp;not&nbsp;provided&nbsp;one&nbsp;(or&nbsp;the&nbsp;default&nbsp;Id<br>
-1&nbsp;is&nbsp;used)&nbsp;then&nbsp;an&nbsp;unique&nbsp;identifier&nbsp;with&nbsp;a&nbsp;negative&nbsp;value&nbsp;will&nbsp;be<br>
generated.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetLabel"><strong>GetLabel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetLabel">GetLabel</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Generic&nbsp;way&nbsp;of&nbsp;getting&nbsp;a&nbsp;label&nbsp;from&nbsp;any&nbsp;window,&nbsp;for&nbsp;identification<br>
purposes.&nbsp;&nbsp;The&nbsp;interpretation&nbsp;of&nbsp;this&nbsp;function&nbsp;differs&nbsp;from&nbsp;class&nbsp;to<br>
class.&nbsp;For&nbsp;frames&nbsp;and&nbsp;dialogs,&nbsp;the&nbsp;value&nbsp;returned&nbsp;is&nbsp;the&nbsp;title.&nbsp;For<br>
buttons&nbsp;or&nbsp;static&nbsp;text&nbsp;controls,&nbsp;it&nbsp;is&nbsp;the&nbsp;button&nbsp;text.&nbsp;This&nbsp;function<br>
can&nbsp;be&nbsp;useful&nbsp;for&nbsp;meta-programs&nbsp;such&nbsp;as&nbsp;testing&nbsp;tools&nbsp;or&nbsp;special-needs<br>
access&nbsp;programs)which&nbsp;need&nbsp;to&nbsp;identify&nbsp;windows&nbsp;by&nbsp;name.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetMaxHeight"><strong>GetMaxHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetMaxHeight">GetMaxHeight</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetMaxSize"><strong>GetMaxSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetMaxSize">GetMaxSize</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetMaxWidth"><strong>GetMaxWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetMaxWidth">GetMaxWidth</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetMinHeight"><strong>GetMinHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetMinHeight">GetMinHeight</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetMinSize"><strong>GetMinSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetMinSize">GetMinSize</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetMinWidth"><strong>GetMinWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetMinWidth">GetMinWidth</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetName"><strong>GetName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetName">GetName</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;windows&nbsp;name.&nbsp;&nbsp;This&nbsp;name&nbsp;is&nbsp;not&nbsp;guaranteed&nbsp;to&nbsp;be&nbsp;unique;<br>
it&nbsp;is&nbsp;up&nbsp;to&nbsp;the&nbsp;programmer&nbsp;to&nbsp;supply&nbsp;an&nbsp;appropriate&nbsp;name&nbsp;in&nbsp;the&nbsp;window<br>
constructor&nbsp;or&nbsp;via&nbsp;wx.Window.SetName.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetParent"><strong>GetParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetParent">GetParent</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;parent&nbsp;window&nbsp;of&nbsp;this&nbsp;window,&nbsp;or&nbsp;None&nbsp;if&nbsp;there&nbsp;isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetPosition"><strong>GetPosition</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetPosition">GetPosition</a>(self)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window's&nbsp;position.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetPositionTuple"><strong>GetPositionTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetPositionTuple">GetPositionTuple</a>()&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window's&nbsp;position.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetRect"><strong>GetRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetRect">GetRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;size&nbsp;and&nbsp;position&nbsp;of&nbsp;the&nbsp;window&nbsp;as&nbsp;a&nbsp;wx.Rect&nbsp;object.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetScrollPos"><strong>GetScrollPos</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetScrollPos">GetScrollPos</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;position.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetScrollRange"><strong>GetScrollRange</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetScrollRange">GetScrollRange</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;range.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetScrollThumb"><strong>GetScrollThumb</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetScrollThumb">GetScrollThumb</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;thumb&nbsp;size.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetSize"><strong>GetSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetSize">GetSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetSizeTuple"><strong>GetSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetSizeTuple">GetSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetSizer"><strong>GetSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetSizer">GetSizer</a>(self)&nbsp;-&gt;&nbsp;Sizer<br>
&nbsp;<br>
Return&nbsp;the&nbsp;sizer&nbsp;associated&nbsp;with&nbsp;the&nbsp;window&nbsp;by&nbsp;a&nbsp;previous&nbsp;call&nbsp;to<br>
SetSizer&nbsp;or&nbsp;None&nbsp;if&nbsp;there&nbsp;isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetTextExtent"><strong>GetTextExtent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetTextExtent">GetTextExtent</a>(String&nbsp;string)&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;width&nbsp;and&nbsp;height&nbsp;of&nbsp;the&nbsp;text&nbsp;using&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetThemeEnabled"><strong>GetThemeEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetThemeEnabled">GetThemeEnabled</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Return&nbsp;the&nbsp;themeEnabled&nbsp;flag.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetToolTip"><strong>GetToolTip</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetToolTip">GetToolTip</a>(self)&nbsp;-&gt;&nbsp;ToolTip<br>
&nbsp;<br>
get&nbsp;the&nbsp;associated&nbsp;tooltip&nbsp;or&nbsp;None&nbsp;if&nbsp;none</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetUpdateClientRect"><strong>GetUpdateClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetUpdateClientRect">GetUpdateClientRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Get&nbsp;the&nbsp;update&nbsp;rectangle&nbsp;region&nbsp;bounding&nbsp;box&nbsp;in&nbsp;client&nbsp;coords.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetUpdateRegion"><strong>GetUpdateRegion</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetUpdateRegion">GetUpdateRegion</a>(self)&nbsp;-&gt;&nbsp;Region<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;region&nbsp;specifying&nbsp;which&nbsp;parts&nbsp;of&nbsp;the&nbsp;window&nbsp;have&nbsp;been<br>
damaged.&nbsp;Should&nbsp;only&nbsp;be&nbsp;called&nbsp;within&nbsp;an&nbsp;EVT_PAINT&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetValidator"><strong>GetValidator</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetValidator">GetValidator</a>(self)&nbsp;-&gt;&nbsp;Validator<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;pointer&nbsp;to&nbsp;the&nbsp;current&nbsp;validator&nbsp;for&nbsp;the&nbsp;window,&nbsp;or&nbsp;None&nbsp;if<br>
there&nbsp;is&nbsp;none.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetVirtualSize"><strong>GetVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetVirtualSize">GetVirtualSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Get&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows<br>
this&nbsp;is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetVirtualSizeTuple"><strong>GetVirtualSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetVirtualSizeTuple">GetVirtualSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows<br>
this&nbsp;is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetWindowStyle"><strong>GetWindowStyle</strong></a> = GetWindowStyleFlag(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetWindowStyleFlag">GetWindowStyleFlag</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window&nbsp;style&nbsp;that&nbsp;was&nbsp;passed&nbsp;to&nbsp;the&nbsp;constructor&nbsp;or&nbsp;Create<br>
method.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetWindowStyleFlag"><strong>GetWindowStyleFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetWindowStyleFlag">GetWindowStyleFlag</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window&nbsp;style&nbsp;that&nbsp;was&nbsp;passed&nbsp;to&nbsp;the&nbsp;constructor&nbsp;or&nbsp;Create<br>
method.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetWindowVariant"><strong>GetWindowVariant</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetWindowVariant">GetWindowVariant</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-HasCapture"><strong>HasCapture</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-HasCapture">HasCapture</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;this&nbsp;window&nbsp;has&nbsp;the&nbsp;current&nbsp;mouse&nbsp;capture.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-HasFlag"><strong>HasFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-HasFlag">HasFlag</a>(self,&nbsp;int&nbsp;flag)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Test&nbsp;if&nbsp;the&nbsp;given&nbsp;style&nbsp;is&nbsp;set&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-HasScrollbar"><strong>HasScrollbar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-HasScrollbar">HasScrollbar</a>(self,&nbsp;int&nbsp;orient)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Does&nbsp;the&nbsp;window&nbsp;have&nbsp;the&nbsp;scrollbar&nbsp;for&nbsp;this&nbsp;orientation?</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-HasTransparentBackground"><strong>HasTransparentBackground</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-HasTransparentBackground">HasTransparentBackground</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;True&nbsp;if&nbsp;this&nbsp;window's&nbsp;background&nbsp;is&nbsp;transparent&nbsp;(as,&nbsp;for<br>
example,&nbsp;for&nbsp;`wx.StaticText`)&nbsp;and&nbsp;should&nbsp;show&nbsp;the&nbsp;parent&nbsp;window's<br>
background.<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;mostly&nbsp;used&nbsp;internally&nbsp;by&nbsp;the&nbsp;library&nbsp;itself&nbsp;and&nbsp;you<br>
normally&nbsp;shouldn't&nbsp;have&nbsp;to&nbsp;call&nbsp;it.&nbsp;You&nbsp;may,&nbsp;however,&nbsp;have&nbsp;to&nbsp;override<br>
it&nbsp;in&nbsp;your&nbsp;custom&nbsp;control&nbsp;classes&nbsp;to&nbsp;ensure&nbsp;that&nbsp;background&nbsp;is&nbsp;painted<br>
correctly.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Hide"><strong>Hide</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Hide">Hide</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Equivalent&nbsp;to&nbsp;calling&nbsp;<a href="#FigureFrameWx-Show">Show</a>(False).</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-HitTest"><strong>HitTest</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-HitTest">HitTest</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Test&nbsp;where&nbsp;the&nbsp;given&nbsp;(in&nbsp;client&nbsp;coords)&nbsp;point&nbsp;lies</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-HitTestXY"><strong>HitTestXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-HitTestXY">HitTestXY</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Test&nbsp;where&nbsp;the&nbsp;given&nbsp;(in&nbsp;client&nbsp;coords)&nbsp;point&nbsp;lies</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-InheritAttributes"><strong>InheritAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-InheritAttributes">InheritAttributes</a>(self)<br>
&nbsp;<br>
This&nbsp;function&nbsp;is&nbsp;(or&nbsp;should&nbsp;be,&nbsp;in&nbsp;case&nbsp;of&nbsp;custom&nbsp;controls)&nbsp;called<br>
during&nbsp;window&nbsp;creation&nbsp;to&nbsp;intelligently&nbsp;set&nbsp;up&nbsp;the&nbsp;window&nbsp;visual<br>
attributes,&nbsp;that&nbsp;is&nbsp;the&nbsp;font&nbsp;and&nbsp;the&nbsp;foreground&nbsp;and&nbsp;background<br>
colours.<br>
&nbsp;<br>
By&nbsp;'intelligently'&nbsp;the&nbsp;following&nbsp;is&nbsp;meant:&nbsp;by&nbsp;default,&nbsp;all&nbsp;windows&nbsp;use<br>
their&nbsp;own&nbsp;default&nbsp;attributes.&nbsp;However&nbsp;if&nbsp;some&nbsp;of&nbsp;the&nbsp;parent's<br>
attributes&nbsp;are&nbsp;explicitly&nbsp;changed&nbsp;(that&nbsp;is,&nbsp;using&nbsp;SetFont&nbsp;and&nbsp;not<br>
SetOwnFont)&nbsp;and&nbsp;if&nbsp;the&nbsp;corresponding&nbsp;attribute&nbsp;hadn't&nbsp;been<br>
explicitly&nbsp;set&nbsp;for&nbsp;this&nbsp;window&nbsp;itself,&nbsp;then&nbsp;this&nbsp;window&nbsp;takes&nbsp;the&nbsp;same<br>
value&nbsp;as&nbsp;used&nbsp;by&nbsp;the&nbsp;parent.&nbsp;In&nbsp;addition,&nbsp;if&nbsp;the&nbsp;window&nbsp;overrides<br>
ShouldInheritColours&nbsp;to&nbsp;return&nbsp;false,&nbsp;the&nbsp;colours&nbsp;will&nbsp;not&nbsp;be&nbsp;changed<br>
no&nbsp;matter&nbsp;what&nbsp;and&nbsp;only&nbsp;the&nbsp;font&nbsp;might.<br>
&nbsp;<br>
This&nbsp;rather&nbsp;complicated&nbsp;logic&nbsp;is&nbsp;necessary&nbsp;in&nbsp;order&nbsp;to&nbsp;accommodate&nbsp;the<br>
different&nbsp;usage&nbsp;scenarios.&nbsp;The&nbsp;most&nbsp;common&nbsp;one&nbsp;is&nbsp;when&nbsp;all&nbsp;default<br>
attributes&nbsp;are&nbsp;used&nbsp;and&nbsp;in&nbsp;this&nbsp;case,&nbsp;nothing&nbsp;should&nbsp;be&nbsp;inherited&nbsp;as<br>
in&nbsp;modern&nbsp;GUIs&nbsp;different&nbsp;controls&nbsp;use&nbsp;different&nbsp;fonts&nbsp;(and&nbsp;colours)<br>
than&nbsp;their&nbsp;siblings&nbsp;so&nbsp;they&nbsp;can't&nbsp;inherit&nbsp;the&nbsp;same&nbsp;value&nbsp;from&nbsp;the<br>
parent.&nbsp;However&nbsp;it&nbsp;was&nbsp;also&nbsp;deemed&nbsp;desirable&nbsp;to&nbsp;allow&nbsp;to&nbsp;simply&nbsp;change<br>
the&nbsp;attributes&nbsp;of&nbsp;all&nbsp;children&nbsp;at&nbsp;once&nbsp;by&nbsp;just&nbsp;changing&nbsp;the&nbsp;font&nbsp;or<br>
colour&nbsp;of&nbsp;their&nbsp;common&nbsp;parent,&nbsp;hence&nbsp;in&nbsp;this&nbsp;case&nbsp;we&nbsp;do&nbsp;inherit&nbsp;the<br>
parents&nbsp;attributes.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-InheritsBackgroundColour"><strong>InheritsBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-InheritsBackgroundColour">InheritsBackgroundColour</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-InitDialog"><strong>InitDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-InitDialog">InitDialog</a>(self)<br>
&nbsp;<br>
Sends&nbsp;an&nbsp;EVT_INIT_DIALOG&nbsp;event,&nbsp;whose&nbsp;handler&nbsp;usually&nbsp;transfers&nbsp;data<br>
to&nbsp;the&nbsp;dialog&nbsp;via&nbsp;validators.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-InvalidateBestSize"><strong>InvalidateBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-InvalidateBestSize">InvalidateBestSize</a>(self)<br>
&nbsp;<br>
Reset&nbsp;the&nbsp;cached&nbsp;best&nbsp;size&nbsp;value&nbsp;so&nbsp;it&nbsp;will&nbsp;be&nbsp;recalculated&nbsp;the&nbsp;next<br>
time&nbsp;it&nbsp;is&nbsp;needed.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-IsBeingDeleted"><strong>IsBeingDeleted</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-IsBeingDeleted">IsBeingDeleted</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Is&nbsp;the&nbsp;window&nbsp;in&nbsp;the&nbsp;process&nbsp;of&nbsp;being&nbsp;deleted?</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-IsEnabled"><strong>IsEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-IsEnabled">IsEnabled</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;enabled&nbsp;for&nbsp;input,&nbsp;false&nbsp;otherwise.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-IsExposed"><strong>IsExposed</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-IsExposed">IsExposed</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;w=1,&nbsp;int&nbsp;h=1)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-IsExposedPoint"><strong>IsExposedPoint</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-IsExposedPoint">IsExposedPoint</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-IsExposedRect"><strong>IsExposedRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-IsExposedRect">IsExposedRect</a>(self,&nbsp;Rect&nbsp;rect)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-IsRetained"><strong>IsRetained</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-IsRetained">IsRetained</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;retained,&nbsp;false&nbsp;otherwise.&nbsp;&nbsp;Retained<br>
windows&nbsp;are&nbsp;only&nbsp;available&nbsp;on&nbsp;X&nbsp;platforms.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-IsShown"><strong>IsShown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-IsShown">IsShown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;shown,&nbsp;false&nbsp;if&nbsp;it&nbsp;has&nbsp;been&nbsp;hidden.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-IsTopLevel"><strong>IsTopLevel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-IsTopLevel">IsTopLevel</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;window&nbsp;is&nbsp;a&nbsp;top-level&nbsp;one.&nbsp;Currently&nbsp;all<br>
frames&nbsp;and&nbsp;dialogs&nbsp;are&nbsp;always&nbsp;considered&nbsp;to&nbsp;be&nbsp;top-level&nbsp;windows&nbsp;(even<br>
if&nbsp;they&nbsp;have&nbsp;a&nbsp;parent&nbsp;window).</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Layout"><strong>Layout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Layout">Layout</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Invokes&nbsp;the&nbsp;constraint-based&nbsp;layout&nbsp;algorithm&nbsp;or&nbsp;the&nbsp;sizer-based<br>
algorithm&nbsp;for&nbsp;this&nbsp;window.&nbsp;&nbsp;See&nbsp;SetAutoLayout:&nbsp;when&nbsp;auto&nbsp;layout&nbsp;is&nbsp;on,<br>
this&nbsp;function&nbsp;gets&nbsp;called&nbsp;automatically&nbsp;by&nbsp;the&nbsp;default&nbsp;EVT_SIZE<br>
handler&nbsp;when&nbsp;the&nbsp;window&nbsp;is&nbsp;resized.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-LineDown"><strong>LineDown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-LineDown">LineDown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#FigureFrameWx-ScrollLines">ScrollLines</a>(1).</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-LineUp"><strong>LineUp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-LineUp">LineUp</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#FigureFrameWx-ScrollLines">ScrollLines</a>(-1).</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Lower"><strong>Lower</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Lower">Lower</a>(self)<br>
&nbsp;<br>
Lowers&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;bottom&nbsp;of&nbsp;the&nbsp;window&nbsp;hierarchy.&nbsp;&nbsp;In&nbsp;current<br>
version&nbsp;of&nbsp;wxWidgets&nbsp;this&nbsp;works&nbsp;both&nbsp;for&nbsp;manage&nbsp;and&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-MakeModal"><strong>MakeModal</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-MakeModal">MakeModal</a>(self,&nbsp;bool&nbsp;modal=True)<br>
&nbsp;<br>
Disables&nbsp;all&nbsp;other&nbsp;windows&nbsp;in&nbsp;the&nbsp;application&nbsp;so&nbsp;that&nbsp;the&nbsp;user&nbsp;can<br>
only&nbsp;interact&nbsp;with&nbsp;this&nbsp;window.&nbsp;&nbsp;Passing&nbsp;False&nbsp;will&nbsp;reverse&nbsp;this<br>
effect.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Move"><strong>Move</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Move">Move</a>(self,&nbsp;Point&nbsp;pt,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-MoveAfterInTabOrder"><strong>MoveAfterInTabOrder</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-MoveAfterInTabOrder">MoveAfterInTabOrder</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Moves&nbsp;this&nbsp;window&nbsp;in&nbsp;the&nbsp;tab&nbsp;navigation&nbsp;order&nbsp;after&nbsp;the&nbsp;specified<br>
sibling&nbsp;window.&nbsp;&nbsp;This&nbsp;means&nbsp;that&nbsp;when&nbsp;the&nbsp;user&nbsp;presses&nbsp;the&nbsp;TAB&nbsp;key&nbsp;on<br>
that&nbsp;other&nbsp;window,&nbsp;the&nbsp;focus&nbsp;switches&nbsp;to&nbsp;this&nbsp;window.<br>
&nbsp;<br>
The&nbsp;default&nbsp;tab&nbsp;order&nbsp;is&nbsp;the&nbsp;same&nbsp;as&nbsp;creation&nbsp;order.&nbsp;&nbsp;This&nbsp;function<br>
and&nbsp;`MoveBeforeInTabOrder`&nbsp;allow&nbsp;to&nbsp;change&nbsp;it&nbsp;after&nbsp;creating&nbsp;all&nbsp;the<br>
windows.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-MoveBeforeInTabOrder"><strong>MoveBeforeInTabOrder</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-MoveBeforeInTabOrder">MoveBeforeInTabOrder</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Same&nbsp;as&nbsp;`MoveAfterInTabOrder`&nbsp;except&nbsp;that&nbsp;it&nbsp;inserts&nbsp;this&nbsp;window&nbsp;just<br>
before&nbsp;win&nbsp;instead&nbsp;of&nbsp;putting&nbsp;it&nbsp;right&nbsp;after&nbsp;it.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-MoveXY"><strong>MoveXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-MoveXY">MoveXY</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Navigate"><strong>Navigate</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Navigate">Navigate</a>(self,&nbsp;int&nbsp;flags=NavigationKeyEvent.IsForward)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Does&nbsp;keyboard&nbsp;navigation&nbsp;from&nbsp;this&nbsp;window&nbsp;to&nbsp;another,&nbsp;by&nbsp;sending&nbsp;a<br>
`wx.NavigationKeyEvent`.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-PageDown"><strong>PageDown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-PageDown">PageDown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#FigureFrameWx-ScrollPages">ScrollPages</a>(1).</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-PageUp"><strong>PageUp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-PageUp">PageUp</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#FigureFrameWx-ScrollPages">ScrollPages</a>(-1).</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-PopEventHandler"><strong>PopEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-PopEventHandler">PopEventHandler</a>(self,&nbsp;bool&nbsp;deleteHandler=False)&nbsp;-&gt;&nbsp;EvtHandler<br>
&nbsp;<br>
Removes&nbsp;and&nbsp;returns&nbsp;the&nbsp;top-most&nbsp;event&nbsp;handler&nbsp;on&nbsp;the&nbsp;event&nbsp;handler<br>
stack.&nbsp;&nbsp;If&nbsp;deleteHandler&nbsp;is&nbsp;True&nbsp;then&nbsp;the&nbsp;wx.EvtHandler&nbsp;object&nbsp;will&nbsp;be<br>
destroyed&nbsp;after&nbsp;it&nbsp;is&nbsp;popped.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-PopupMenu"><strong>PopupMenu</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-PopupMenu">PopupMenu</a>(self,&nbsp;Menu&nbsp;menu,&nbsp;Point&nbsp;pos=DefaultPosition)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Pops&nbsp;up&nbsp;the&nbsp;given&nbsp;menu&nbsp;at&nbsp;the&nbsp;specified&nbsp;coordinates,&nbsp;relative&nbsp;to&nbsp;this&nbsp;window,<br>
and&nbsp;returns&nbsp;control&nbsp;when&nbsp;the&nbsp;user&nbsp;has&nbsp;dismissed&nbsp;the&nbsp;menu.&nbsp;If&nbsp;a&nbsp;menu&nbsp;item&nbsp;is<br>
selected,&nbsp;the&nbsp;corresponding&nbsp;menu&nbsp;event&nbsp;is&nbsp;generated&nbsp;and&nbsp;will&nbsp;be&nbsp;processed&nbsp;as<br>
usual.&nbsp;&nbsp;If&nbsp;the&nbsp;default&nbsp;position&nbsp;is&nbsp;given&nbsp;then&nbsp;the&nbsp;current&nbsp;position&nbsp;of&nbsp;the<br>
mouse&nbsp;cursor&nbsp;will&nbsp;be&nbsp;used.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-PopupMenuXY"><strong>PopupMenuXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-PopupMenuXY">PopupMenuXY</a>(self,&nbsp;Menu&nbsp;menu,&nbsp;int&nbsp;x=-1,&nbsp;int&nbsp;y=-1)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Pops&nbsp;up&nbsp;the&nbsp;given&nbsp;menu&nbsp;at&nbsp;the&nbsp;specified&nbsp;coordinates,&nbsp;relative&nbsp;to&nbsp;this&nbsp;window,<br>
and&nbsp;returns&nbsp;control&nbsp;when&nbsp;the&nbsp;user&nbsp;has&nbsp;dismissed&nbsp;the&nbsp;menu.&nbsp;If&nbsp;a&nbsp;menu&nbsp;item&nbsp;is<br>
selected,&nbsp;the&nbsp;corresponding&nbsp;menu&nbsp;event&nbsp;is&nbsp;generated&nbsp;and&nbsp;will&nbsp;be&nbsp;processed&nbsp;as<br>
usual.&nbsp;&nbsp;If&nbsp;the&nbsp;default&nbsp;position&nbsp;is&nbsp;given&nbsp;then&nbsp;the&nbsp;current&nbsp;position&nbsp;of&nbsp;the<br>
mouse&nbsp;cursor&nbsp;will&nbsp;be&nbsp;used.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-PostCreate"><strong>PostCreate</strong></a>(self, pre)</dt><dd><tt>Phase&nbsp;3&nbsp;of&nbsp;the&nbsp;2-phase&nbsp;create&nbsp;&lt;wink!&gt;<br>
Call&nbsp;this&nbsp;method&nbsp;after&nbsp;precreating&nbsp;the&nbsp;window&nbsp;with&nbsp;the&nbsp;2-phase&nbsp;create&nbsp;method.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-PrepareDC"><strong>PrepareDC</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-PrepareDC">PrepareDC</a>(self,&nbsp;DC&nbsp;dc)<br>
&nbsp;<br>
Call&nbsp;this&nbsp;function&nbsp;to&nbsp;prepare&nbsp;the&nbsp;device&nbsp;context&nbsp;for&nbsp;drawing&nbsp;a<br>
scrolled&nbsp;image.&nbsp;It&nbsp;sets&nbsp;the&nbsp;device&nbsp;origin&nbsp;according&nbsp;to&nbsp;the&nbsp;current<br>
scroll&nbsp;position.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-PushEventHandler"><strong>PushEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-PushEventHandler">PushEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)<br>
&nbsp;<br>
Pushes&nbsp;this&nbsp;event&nbsp;handler&nbsp;onto&nbsp;the&nbsp;event&nbsp;handler&nbsp;stack&nbsp;for&nbsp;the&nbsp;window.<br>
An&nbsp;event&nbsp;handler&nbsp;is&nbsp;an&nbsp;object&nbsp;that&nbsp;is&nbsp;capable&nbsp;of&nbsp;processing&nbsp;the&nbsp;events<br>
sent&nbsp;to&nbsp;a&nbsp;window.&nbsp;By&nbsp;default,&nbsp;the&nbsp;window&nbsp;is&nbsp;its&nbsp;own&nbsp;event&nbsp;handler,&nbsp;but<br>
an&nbsp;application&nbsp;may&nbsp;wish&nbsp;to&nbsp;substitute&nbsp;another,&nbsp;for&nbsp;example&nbsp;to&nbsp;allow<br>
central&nbsp;implementation&nbsp;of&nbsp;event-handling&nbsp;for&nbsp;a&nbsp;variety&nbsp;of&nbsp;different<br>
window&nbsp;classes.<br>
&nbsp;<br>
wx.Window.PushEventHandler&nbsp;allows&nbsp;an&nbsp;application&nbsp;to&nbsp;set&nbsp;up&nbsp;a&nbsp;chain&nbsp;of<br>
event&nbsp;handlers,&nbsp;where&nbsp;an&nbsp;event&nbsp;not&nbsp;handled&nbsp;by&nbsp;one&nbsp;event&nbsp;handler&nbsp;is<br>
handed&nbsp;to&nbsp;the&nbsp;next&nbsp;one&nbsp;in&nbsp;the&nbsp;chain.&nbsp;Use&nbsp;`wx.Window.PopEventHandler`&nbsp;to<br>
remove&nbsp;the&nbsp;event&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Raise"><strong>Raise</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Raise">Raise</a>(self)<br>
&nbsp;<br>
Raises&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;top&nbsp;of&nbsp;the&nbsp;window&nbsp;hierarchy.&nbsp;&nbsp;In&nbsp;current<br>
version&nbsp;of&nbsp;wxWidgets&nbsp;this&nbsp;works&nbsp;both&nbsp;for&nbsp;manage&nbsp;and&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Refresh"><strong>Refresh</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Refresh">Refresh</a>(self,&nbsp;bool&nbsp;eraseBackground=True,&nbsp;Rect&nbsp;rect=None)<br>
&nbsp;<br>
Mark&nbsp;the&nbsp;specified&nbsp;rectangle&nbsp;(or&nbsp;the&nbsp;whole&nbsp;window)&nbsp;as&nbsp;"dirty"&nbsp;so&nbsp;it<br>
will&nbsp;be&nbsp;repainted.&nbsp;&nbsp;Causes&nbsp;an&nbsp;EVT_PAINT&nbsp;event&nbsp;to&nbsp;be&nbsp;generated&nbsp;and&nbsp;sent<br>
to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-RefreshRect"><strong>RefreshRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-RefreshRect">RefreshRect</a>(self,&nbsp;Rect&nbsp;rect,&nbsp;bool&nbsp;eraseBackground=True)<br>
&nbsp;<br>
Redraws&nbsp;the&nbsp;contents&nbsp;of&nbsp;the&nbsp;given&nbsp;rectangle:&nbsp;the&nbsp;area&nbsp;inside&nbsp;it&nbsp;will<br>
be&nbsp;repainted.&nbsp;&nbsp;This&nbsp;is&nbsp;the&nbsp;same&nbsp;as&nbsp;Refresh&nbsp;but&nbsp;has&nbsp;a&nbsp;nicer&nbsp;syntax.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-RegisterHotKey"><strong>RegisterHotKey</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-RegisterHotKey">RegisterHotKey</a>(self,&nbsp;int&nbsp;hotkeyId,&nbsp;int&nbsp;modifiers,&nbsp;int&nbsp;keycode)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Registers&nbsp;a&nbsp;system&nbsp;wide&nbsp;hotkey.&nbsp;Every&nbsp;time&nbsp;the&nbsp;user&nbsp;presses&nbsp;the&nbsp;hotkey<br>
registered&nbsp;here,&nbsp;this&nbsp;window&nbsp;will&nbsp;receive&nbsp;a&nbsp;hotkey&nbsp;event.&nbsp;It&nbsp;will<br>
receive&nbsp;the&nbsp;event&nbsp;even&nbsp;if&nbsp;the&nbsp;application&nbsp;is&nbsp;in&nbsp;the&nbsp;background&nbsp;and<br>
does&nbsp;not&nbsp;have&nbsp;the&nbsp;input&nbsp;focus&nbsp;because&nbsp;the&nbsp;user&nbsp;is&nbsp;working&nbsp;with&nbsp;some<br>
other&nbsp;application.&nbsp;&nbsp;To&nbsp;bind&nbsp;an&nbsp;event&nbsp;handler&nbsp;function&nbsp;to&nbsp;this&nbsp;hotkey<br>
use&nbsp;EVT_HOTKEY&nbsp;with&nbsp;an&nbsp;id&nbsp;equal&nbsp;to&nbsp;hotkeyId.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the<br>
hotkey&nbsp;was&nbsp;registered&nbsp;successfully.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-ReleaseMouse"><strong>ReleaseMouse</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-ReleaseMouse">ReleaseMouse</a>(self)<br>
&nbsp;<br>
Releases&nbsp;mouse&nbsp;input&nbsp;captured&nbsp;with&nbsp;wx.Window.CaptureMouse.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-RemoveChild"><strong>RemoveChild</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-RemoveChild">RemoveChild</a>(self,&nbsp;Window&nbsp;child)<br>
&nbsp;<br>
Removes&nbsp;a&nbsp;child&nbsp;window.&nbsp;This&nbsp;is&nbsp;called&nbsp;automatically&nbsp;by&nbsp;window<br>
deletion&nbsp;functions&nbsp;so&nbsp;should&nbsp;not&nbsp;be&nbsp;required&nbsp;by&nbsp;the&nbsp;application<br>
programmer.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-RemoveEventHandler"><strong>RemoveEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-RemoveEventHandler">RemoveEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Find&nbsp;the&nbsp;given&nbsp;handler&nbsp;in&nbsp;the&nbsp;event&nbsp;handler&nbsp;chain&nbsp;and&nbsp;remove&nbsp;(but&nbsp;not<br>
delete)&nbsp;it&nbsp;from&nbsp;the&nbsp;event&nbsp;handler&nbsp;chain,&nbsp;return&nbsp;True&nbsp;if&nbsp;it&nbsp;was&nbsp;found<br>
and&nbsp;False&nbsp;otherwise&nbsp;(this&nbsp;also&nbsp;results&nbsp;in&nbsp;an&nbsp;assert&nbsp;failure&nbsp;so&nbsp;this<br>
function&nbsp;should&nbsp;only&nbsp;be&nbsp;called&nbsp;when&nbsp;the&nbsp;handler&nbsp;is&nbsp;supposed&nbsp;to&nbsp;be<br>
there.)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Reparent"><strong>Reparent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Reparent">Reparent</a>(self,&nbsp;Window&nbsp;newParent)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Reparents&nbsp;the&nbsp;window,&nbsp;i.e&nbsp;the&nbsp;window&nbsp;will&nbsp;be&nbsp;removed&nbsp;from&nbsp;its&nbsp;current<br>
parent&nbsp;window&nbsp;(e.g.&nbsp;a&nbsp;non-standard&nbsp;toolbar&nbsp;in&nbsp;a&nbsp;wxFrame)&nbsp;and&nbsp;then<br>
re-inserted&nbsp;into&nbsp;another.&nbsp;Available&nbsp;on&nbsp;Windows&nbsp;and&nbsp;GTK.&nbsp;&nbsp;Returns&nbsp;True<br>
if&nbsp;the&nbsp;parent&nbsp;was&nbsp;changed,&nbsp;False&nbsp;otherwise&nbsp;(error&nbsp;or&nbsp;newParent&nbsp;==<br>
oldParent)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-ScreenToClient"><strong>ScreenToClient</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-ScreenToClient">ScreenToClient</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;from&nbsp;screen&nbsp;to&nbsp;client&nbsp;window&nbsp;coordinates.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-ScreenToClientXY"><strong>ScreenToClientXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-ScreenToClientXY">ScreenToClientXY</a>(int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Converts&nbsp;from&nbsp;screen&nbsp;to&nbsp;client&nbsp;window&nbsp;coordinates.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-ScrollLines"><strong>ScrollLines</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-ScrollLines">ScrollLines</a>(self,&nbsp;int&nbsp;lines)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
If&nbsp;the&nbsp;platform&nbsp;and&nbsp;window&nbsp;class&nbsp;supports&nbsp;it,&nbsp;scrolls&nbsp;the&nbsp;window&nbsp;by<br>
the&nbsp;given&nbsp;number&nbsp;of&nbsp;lines&nbsp;down,&nbsp;if&nbsp;lines&nbsp;is&nbsp;positive,&nbsp;or&nbsp;up&nbsp;if&nbsp;lines<br>
is&nbsp;negative.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;window&nbsp;was&nbsp;scrolled,&nbsp;False&nbsp;if&nbsp;it&nbsp;was<br>
already&nbsp;on&nbsp;top/bottom&nbsp;and&nbsp;nothing&nbsp;was&nbsp;done.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-ScrollPages"><strong>ScrollPages</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-ScrollPages">ScrollPages</a>(self,&nbsp;int&nbsp;pages)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
If&nbsp;the&nbsp;platform&nbsp;and&nbsp;window&nbsp;class&nbsp;supports&nbsp;it,&nbsp;scrolls&nbsp;the&nbsp;window&nbsp;by<br>
the&nbsp;given&nbsp;number&nbsp;of&nbsp;pages&nbsp;down,&nbsp;if&nbsp;pages&nbsp;is&nbsp;positive,&nbsp;or&nbsp;up&nbsp;if&nbsp;pages<br>
is&nbsp;negative.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;window&nbsp;was&nbsp;scrolled,&nbsp;False&nbsp;if&nbsp;it&nbsp;was<br>
already&nbsp;on&nbsp;top/bottom&nbsp;and&nbsp;nothing&nbsp;was&nbsp;done.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-ScrollWindow"><strong>ScrollWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-ScrollWindow">ScrollWindow</a>(self,&nbsp;int&nbsp;dx,&nbsp;int&nbsp;dy,&nbsp;Rect&nbsp;rect=None)<br>
&nbsp;<br>
Physically&nbsp;scrolls&nbsp;the&nbsp;pixels&nbsp;in&nbsp;the&nbsp;window&nbsp;and&nbsp;move&nbsp;child&nbsp;windows<br>
accordingly.&nbsp;&nbsp;Use&nbsp;this&nbsp;function&nbsp;to&nbsp;optimise&nbsp;your&nbsp;scrolling<br>
implementations,&nbsp;to&nbsp;minimise&nbsp;the&nbsp;area&nbsp;that&nbsp;must&nbsp;be&nbsp;redrawn.&nbsp;Note&nbsp;that<br>
it&nbsp;is&nbsp;rarely&nbsp;required&nbsp;to&nbsp;call&nbsp;this&nbsp;function&nbsp;from&nbsp;a&nbsp;user&nbsp;program.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetAcceleratorTable"><strong>SetAcceleratorTable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetAcceleratorTable">SetAcceleratorTable</a>(self,&nbsp;AcceleratorTable&nbsp;accel)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;accelerator&nbsp;table&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetAutoLayout"><strong>SetAutoLayout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetAutoLayout">SetAutoLayout</a>(self,&nbsp;bool&nbsp;autoLayout)<br>
&nbsp;<br>
Determines&nbsp;whether&nbsp;the&nbsp;Layout&nbsp;function&nbsp;will&nbsp;be&nbsp;called&nbsp;automatically<br>
when&nbsp;the&nbsp;window&nbsp;is&nbsp;resized.&nbsp;&nbsp;It&nbsp;is&nbsp;called&nbsp;implicitly&nbsp;by&nbsp;SetSizer&nbsp;but<br>
if&nbsp;you&nbsp;use&nbsp;SetConstraints&nbsp;you&nbsp;should&nbsp;call&nbsp;it&nbsp;manually&nbsp;or&nbsp;otherwise&nbsp;the<br>
window&nbsp;layout&nbsp;won't&nbsp;be&nbsp;correctly&nbsp;updated&nbsp;when&nbsp;its&nbsp;size&nbsp;changes.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetBackgroundColour"><strong>SetBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetBackgroundColour">SetBackgroundColour</a>(self,&nbsp;Colour&nbsp;colour)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;background&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;colour<br>
was&nbsp;changed.&nbsp;&nbsp;The&nbsp;background&nbsp;colour&nbsp;is&nbsp;usually&nbsp;painted&nbsp;by&nbsp;the&nbsp;default<br>
EVT_ERASE_BACKGROUND&nbsp;event&nbsp;handler&nbsp;function&nbsp;under&nbsp;Windows&nbsp;and<br>
automatically&nbsp;under&nbsp;GTK.&nbsp;&nbsp;Using&nbsp;`wx.NullColour`&nbsp;will&nbsp;reset&nbsp;the&nbsp;window<br>
to&nbsp;the&nbsp;default&nbsp;background&nbsp;colour.<br>
&nbsp;<br>
Note&nbsp;that&nbsp;setting&nbsp;the&nbsp;background&nbsp;colour&nbsp;may&nbsp;not&nbsp;cause&nbsp;an&nbsp;immediate<br>
refresh,&nbsp;so&nbsp;you&nbsp;may&nbsp;wish&nbsp;to&nbsp;call&nbsp;`ClearBackground`&nbsp;or&nbsp;`Refresh`&nbsp;after<br>
calling&nbsp;this&nbsp;function.<br>
&nbsp;<br>
Using&nbsp;this&nbsp;function&nbsp;will&nbsp;disable&nbsp;attempts&nbsp;to&nbsp;use&nbsp;themes&nbsp;for&nbsp;this<br>
window,&nbsp;if&nbsp;the&nbsp;system&nbsp;supports&nbsp;them.&nbsp;&nbsp;Use&nbsp;with&nbsp;care&nbsp;since&nbsp;usually&nbsp;the<br>
themes&nbsp;represent&nbsp;the&nbsp;appearance&nbsp;chosen&nbsp;by&nbsp;the&nbsp;user&nbsp;to&nbsp;be&nbsp;used&nbsp;for&nbsp;all<br>
applications&nbsp;on&nbsp;the&nbsp;system.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetBackgroundStyle"><strong>SetBackgroundStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetBackgroundStyle">SetBackgroundStyle</a>(self,&nbsp;int&nbsp;style)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;The&nbsp;background&nbsp;style<br>
indicates&nbsp;how&nbsp;the&nbsp;background&nbsp;of&nbsp;the&nbsp;window&nbsp;is&nbsp;drawn.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;======================&nbsp;&nbsp;========================================<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_SYSTEM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;colour&nbsp;or&nbsp;pattern&nbsp;should<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;be&nbsp;determined&nbsp;by&nbsp;the&nbsp;system<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_COLOUR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;should&nbsp;be&nbsp;a&nbsp;solid&nbsp;colour<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_CUSTOM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;will&nbsp;be&nbsp;implemented&nbsp;by&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;application.<br>
&nbsp;&nbsp;&nbsp;&nbsp;======================&nbsp;&nbsp;========================================<br>
&nbsp;<br>
On&nbsp;GTK+,&nbsp;use&nbsp;of&nbsp;wx.BG_STYLE_CUSTOM&nbsp;allows&nbsp;the&nbsp;flicker-free&nbsp;drawing&nbsp;of<br>
a&nbsp;custom&nbsp;background,&nbsp;such&nbsp;as&nbsp;a&nbsp;tiled&nbsp;bitmap.&nbsp;Currently&nbsp;the&nbsp;style&nbsp;has<br>
no&nbsp;effect&nbsp;on&nbsp;other&nbsp;platforms.<br>
&nbsp;<br>
:see:&nbsp;`GetBackgroundStyle`,&nbsp;`SetBackgroundColour`</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetBestFittingSize"><strong>SetBestFittingSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetBestFittingSize">SetBestFittingSize</a>(self,&nbsp;Size&nbsp;size=DefaultSize)<br>
&nbsp;<br>
A&nbsp;'Smart'&nbsp;SetSize&nbsp;that&nbsp;will&nbsp;fill&nbsp;in&nbsp;default&nbsp;size&nbsp;components&nbsp;with&nbsp;the<br>
window's&nbsp;*best&nbsp;size*&nbsp;values.&nbsp;&nbsp;Also&nbsp;set's&nbsp;the&nbsp;minsize&nbsp;for&nbsp;use&nbsp;with&nbsp;sizers.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetCaret"><strong>SetCaret</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetCaret">SetCaret</a>(self,&nbsp;Caret&nbsp;caret)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;caret&nbsp;associated&nbsp;with&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetClientRect"><strong>SetClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetClientRect">SetClientRect</a>(self,&nbsp;Rect&nbsp;rect)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetClientSize"><strong>SetClientSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetClientSize">SetClientSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetClientSizeWH"><strong>SetClientSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetClientSizeWH">SetClientSizeWH</a>(self,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetConstraints"><strong>SetConstraints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetConstraints">SetConstraints</a>(self,&nbsp;LayoutConstraints&nbsp;constraints)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window&nbsp;to&nbsp;have&nbsp;the&nbsp;given&nbsp;layout&nbsp;constraints.&nbsp;If&nbsp;an&nbsp;existing<br>
layout&nbsp;constraints&nbsp;object&nbsp;is&nbsp;already&nbsp;owned&nbsp;by&nbsp;the&nbsp;window,&nbsp;it&nbsp;will&nbsp;be<br>
deleted.&nbsp;&nbsp;Pass&nbsp;None&nbsp;to&nbsp;disassociate&nbsp;and&nbsp;delete&nbsp;the&nbsp;window's&nbsp;current<br>
constraints.<br>
&nbsp;<br>
You&nbsp;must&nbsp;call&nbsp;SetAutoLayout&nbsp;to&nbsp;tell&nbsp;a&nbsp;window&nbsp;to&nbsp;use&nbsp;the&nbsp;constraints<br>
automatically&nbsp;in&nbsp;its&nbsp;default&nbsp;EVT_SIZE&nbsp;handler;&nbsp;otherwise,&nbsp;you&nbsp;must<br>
handle&nbsp;EVT_SIZE&nbsp;yourself&nbsp;and&nbsp;call&nbsp;<a href="#FigureFrameWx-Layout">Layout</a>()&nbsp;explicitly.&nbsp;When&nbsp;setting<br>
both&nbsp;a&nbsp;wx.LayoutConstraints&nbsp;and&nbsp;a&nbsp;wx.Sizer,&nbsp;only&nbsp;the&nbsp;sizer&nbsp;will&nbsp;have<br>
effect.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetContainingSizer"><strong>SetContainingSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetContainingSizer">SetContainingSizer</a>(self,&nbsp;Sizer&nbsp;sizer)<br>
&nbsp;<br>
This&nbsp;normally&nbsp;does&nbsp;not&nbsp;need&nbsp;to&nbsp;be&nbsp;called&nbsp;by&nbsp;application&nbsp;code.&nbsp;It&nbsp;is<br>
called&nbsp;internally&nbsp;when&nbsp;a&nbsp;window&nbsp;is&nbsp;added&nbsp;to&nbsp;a&nbsp;sizer,&nbsp;and&nbsp;is&nbsp;used&nbsp;so<br>
the&nbsp;window&nbsp;can&nbsp;remove&nbsp;itself&nbsp;from&nbsp;the&nbsp;sizer&nbsp;when&nbsp;it&nbsp;is&nbsp;destroyed.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetCursor"><strong>SetCursor</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetCursor">SetCursor</a>(self,&nbsp;Cursor&nbsp;cursor)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;cursor.&nbsp;Notice&nbsp;that&nbsp;the&nbsp;window&nbsp;cursor&nbsp;also&nbsp;sets&nbsp;it<br>
for&nbsp;the&nbsp;children&nbsp;of&nbsp;the&nbsp;window&nbsp;implicitly.<br>
&nbsp;<br>
The&nbsp;cursor&nbsp;may&nbsp;be&nbsp;wx.NullCursor&nbsp;in&nbsp;which&nbsp;case&nbsp;the&nbsp;window&nbsp;cursor&nbsp;will<br>
be&nbsp;reset&nbsp;back&nbsp;to&nbsp;default.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetDefaultItem"><strong>SetDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetDefaultItem">SetDefaultItem</a>(self,&nbsp;Window&nbsp;child)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Set&nbsp;this&nbsp;child&nbsp;as&nbsp;default,&nbsp;return&nbsp;the&nbsp;old&nbsp;default.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetDimensions"><strong>SetDimensions</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetDimensions">SetDimensions</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height,&nbsp;int&nbsp;sizeFlags=SIZE_AUTO)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;and&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;The&nbsp;sizeFlags<br>
parameter&nbsp;indicates&nbsp;the&nbsp;interpretation&nbsp;of&nbsp;the&nbsp;other&nbsp;params&nbsp;if&nbsp;they&nbsp;are<br>
equal&nbsp;to&nbsp;-1.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;========================&nbsp;&nbsp;======================================<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.SIZE_AUTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;-1&nbsp;indicates&nbsp;that&nbsp;a&nbsp;class-specific<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;should&nbsp;be&nbsp;used.<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.SIZE_USE_EXISTING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Axisting&nbsp;dimensions&nbsp;should&nbsp;be&nbsp;used&nbsp;if<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;values&nbsp;are&nbsp;supplied.<br>
&nbsp;&nbsp;&nbsp;&nbsp;wxSIZE_ALLOW_MINUS_ONE&nbsp;&nbsp;&nbsp;&nbsp;Allow&nbsp;dimensions&nbsp;of&nbsp;-1&nbsp;and&nbsp;less&nbsp;to&nbsp;be<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interpreted&nbsp;as&nbsp;real&nbsp;dimensions,&nbsp;not<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;values.<br>
&nbsp;&nbsp;&nbsp;&nbsp;========================&nbsp;&nbsp;======================================</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetDropTarget"><strong>SetDropTarget</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetDropTarget">SetDropTarget</a>(self,&nbsp;DropTarget&nbsp;dropTarget)<br>
&nbsp;<br>
Associates&nbsp;a&nbsp;drop&nbsp;target&nbsp;with&nbsp;this&nbsp;window.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;already&nbsp;has<br>
a&nbsp;drop&nbsp;target,&nbsp;it&nbsp;is&nbsp;deleted.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetEventHandler"><strong>SetEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetEventHandler">SetEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;event&nbsp;handler&nbsp;for&nbsp;this&nbsp;window.&nbsp;&nbsp;An&nbsp;event&nbsp;handler&nbsp;is&nbsp;an&nbsp;object<br>
that&nbsp;is&nbsp;capable&nbsp;of&nbsp;processing&nbsp;the&nbsp;events&nbsp;sent&nbsp;to&nbsp;a&nbsp;window.&nbsp;By&nbsp;default,<br>
the&nbsp;window&nbsp;is&nbsp;its&nbsp;own&nbsp;event&nbsp;handler,&nbsp;but&nbsp;an&nbsp;application&nbsp;may&nbsp;wish&nbsp;to<br>
substitute&nbsp;another,&nbsp;for&nbsp;example&nbsp;to&nbsp;allow&nbsp;central&nbsp;implementation&nbsp;of<br>
event-handling&nbsp;for&nbsp;a&nbsp;variety&nbsp;of&nbsp;different&nbsp;window&nbsp;classes.<br>
&nbsp;<br>
It&nbsp;is&nbsp;usually&nbsp;better&nbsp;to&nbsp;use&nbsp;`wx.Window.PushEventHandler`&nbsp;since&nbsp;this&nbsp;sets<br>
up&nbsp;a&nbsp;chain&nbsp;of&nbsp;event&nbsp;handlers,&nbsp;where&nbsp;an&nbsp;event&nbsp;not&nbsp;handled&nbsp;by&nbsp;one&nbsp;event<br>
handler&nbsp;is&nbsp;handed&nbsp;to&nbsp;the&nbsp;next&nbsp;one&nbsp;in&nbsp;the&nbsp;chain.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetExtraStyle"><strong>SetExtraStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetExtraStyle">SetExtraStyle</a>(self,&nbsp;long&nbsp;exStyle)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;extra&nbsp;style&nbsp;bits&nbsp;for&nbsp;the&nbsp;window.&nbsp;&nbsp;Extra&nbsp;styles&nbsp;are&nbsp;the&nbsp;less<br>
often&nbsp;used&nbsp;style&nbsp;bits&nbsp;which&nbsp;can't&nbsp;be&nbsp;set&nbsp;with&nbsp;the&nbsp;constructor&nbsp;or&nbsp;with<br>
<a href="#FigureFrameWx-SetWindowStyleFlag">SetWindowStyleFlag</a>()</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetFocus"><strong>SetFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetFocus">SetFocus</a>(self)<br>
&nbsp;<br>
Set's&nbsp;the&nbsp;focus&nbsp;to&nbsp;this&nbsp;window,&nbsp;allowing&nbsp;it&nbsp;to&nbsp;receive&nbsp;keyboard&nbsp;input.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetFocusFromKbd"><strong>SetFocusFromKbd</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetFocusFromKbd">SetFocusFromKbd</a>(self)<br>
&nbsp;<br>
Set&nbsp;focus&nbsp;to&nbsp;this&nbsp;window&nbsp;as&nbsp;the&nbsp;result&nbsp;of&nbsp;a&nbsp;keyboard&nbsp;action.&nbsp;&nbsp;Normally<br>
only&nbsp;called&nbsp;internally.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetFont"><strong>SetFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetFont">SetFont</a>(self,&nbsp;Font&nbsp;font)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;font&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetForegroundColour"><strong>SetForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetForegroundColour">SetForegroundColour</a>(self,&nbsp;Colour&nbsp;colour)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;foreground&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Returns&nbsp;True&nbsp;is&nbsp;the&nbsp;colour<br>
was&nbsp;changed.&nbsp;&nbsp;The&nbsp;interpretation&nbsp;of&nbsp;foreground&nbsp;colour&nbsp;is&nbsp;dependent&nbsp;on<br>
the&nbsp;window&nbsp;class;&nbsp;it&nbsp;may&nbsp;be&nbsp;the&nbsp;text&nbsp;colour&nbsp;or&nbsp;other&nbsp;colour,&nbsp;or&nbsp;it&nbsp;may<br>
not&nbsp;be&nbsp;used&nbsp;at&nbsp;all.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetHelpText"><strong>SetHelpText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetHelpText">SetHelpText</a>(self,&nbsp;String&nbsp;text)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;help&nbsp;text&nbsp;to&nbsp;be&nbsp;used&nbsp;as&nbsp;context-sensitive&nbsp;help&nbsp;for&nbsp;this<br>
window.&nbsp;&nbsp;Note&nbsp;that&nbsp;the&nbsp;text&nbsp;is&nbsp;actually&nbsp;stored&nbsp;by&nbsp;the&nbsp;current<br>
wxHelpProvider&nbsp;implementation,&nbsp;and&nbsp;not&nbsp;in&nbsp;the&nbsp;window&nbsp;object&nbsp;itself.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetHelpTextForId"><strong>SetHelpTextForId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetHelpTextForId">SetHelpTextForId</a>(self,&nbsp;String&nbsp;text)<br>
&nbsp;<br>
Associate&nbsp;this&nbsp;help&nbsp;text&nbsp;with&nbsp;all&nbsp;windows&nbsp;with&nbsp;the&nbsp;same&nbsp;id&nbsp;as&nbsp;this<br>
one.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetId"><strong>SetId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetId">SetId</a>(self,&nbsp;int&nbsp;winid)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;identifier&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Each&nbsp;window&nbsp;has&nbsp;an&nbsp;integer<br>
identifier.&nbsp;If&nbsp;the&nbsp;application&nbsp;has&nbsp;not&nbsp;provided&nbsp;one,&nbsp;an&nbsp;identifier<br>
will&nbsp;be&nbsp;generated.&nbsp;Normally,&nbsp;the&nbsp;identifier&nbsp;should&nbsp;be&nbsp;provided&nbsp;on<br>
creation&nbsp;and&nbsp;should&nbsp;not&nbsp;be&nbsp;modified&nbsp;subsequently.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetLabel"><strong>SetLabel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetLabel">SetLabel</a>(self,&nbsp;String&nbsp;label)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;text&nbsp;which&nbsp;the&nbsp;window&nbsp;shows&nbsp;in&nbsp;its&nbsp;label&nbsp;if&nbsp;applicable.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetMaxSize"><strong>SetMaxSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetMaxSize">SetMaxSize</a>(self,&nbsp;Size&nbsp;maxSize)<br>
&nbsp;<br>
A&nbsp;more&nbsp;convenient&nbsp;method&nbsp;than&nbsp;`SetSizeHints`&nbsp;for&nbsp;setting&nbsp;just&nbsp;the<br>
max&nbsp;size.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetMinSize"><strong>SetMinSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetMinSize">SetMinSize</a>(self,&nbsp;Size&nbsp;minSize)<br>
&nbsp;<br>
A&nbsp;more&nbsp;convenient&nbsp;method&nbsp;than&nbsp;`SetSizeHints`&nbsp;for&nbsp;setting&nbsp;just&nbsp;the<br>
min&nbsp;size.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetName"><strong>SetName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetName">SetName</a>(self,&nbsp;String&nbsp;name)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;name.&nbsp;&nbsp;The&nbsp;window&nbsp;name&nbsp;is&nbsp;used&nbsp;for&nbsp;ressource&nbsp;setting<br>
in&nbsp;X,&nbsp;it&nbsp;is&nbsp;not&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;window&nbsp;title/label</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetOwnBackgroundColour"><strong>SetOwnBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetOwnBackgroundColour">SetOwnBackgroundColour</a>(self,&nbsp;Colour&nbsp;colour)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetOwnFont"><strong>SetOwnFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetOwnFont">SetOwnFont</a>(self,&nbsp;Font&nbsp;font)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetOwnForegroundColour"><strong>SetOwnForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetOwnForegroundColour">SetOwnForegroundColour</a>(self,&nbsp;Colour&nbsp;colour)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetPosition"><strong>SetPosition</strong></a> = Move(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Move">Move</a>(self,&nbsp;Point&nbsp;pt,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetRect"><strong>SetRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetRect">SetRect</a>(self,&nbsp;Rect&nbsp;rect,&nbsp;int&nbsp;sizeFlags=SIZE_AUTO)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;and&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels&nbsp;using&nbsp;a&nbsp;wx.Rect.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetScrollPos"><strong>SetScrollPos</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetScrollPos">SetScrollPos</a>(self,&nbsp;int&nbsp;orientation,&nbsp;int&nbsp;pos,&nbsp;bool&nbsp;refresh=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;of&nbsp;one&nbsp;of&nbsp;the&nbsp;built-in&nbsp;scrollbars.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetScrollbar"><strong>SetScrollbar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetScrollbar">SetScrollbar</a>(self,&nbsp;int&nbsp;orientation,&nbsp;int&nbsp;position,&nbsp;int&nbsp;thumbSize,&nbsp;int&nbsp;range,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;refresh=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;scrollbar&nbsp;properties&nbsp;of&nbsp;a&nbsp;built-in&nbsp;scrollbar.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetSize"><strong>SetSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetSize">SetSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetSizeHints"><strong>SetSizeHints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetSizeHints">SetSizeHints</a>(self,&nbsp;int&nbsp;minW,&nbsp;int&nbsp;minH,&nbsp;int&nbsp;maxW=-1,&nbsp;int&nbsp;maxH=-1,&nbsp;int&nbsp;incW=-1,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;incH=-1)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;window&nbsp;sizes,&nbsp;and&nbsp;window<br>
size&nbsp;increments.&nbsp;If&nbsp;a&nbsp;pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the<br>
default&nbsp;values&nbsp;will&nbsp;be&nbsp;used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user<br>
will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds&nbsp;(if&nbsp;it&nbsp;is<br>
a&nbsp;top-level&nbsp;window.)&nbsp;&nbsp;Sizers&nbsp;will&nbsp;also&nbsp;inspect&nbsp;the&nbsp;minimum&nbsp;window&nbsp;size<br>
and&nbsp;will&nbsp;use&nbsp;that&nbsp;value&nbsp;if&nbsp;set&nbsp;when&nbsp;calculating&nbsp;layout.<br>
&nbsp;<br>
The&nbsp;resizing&nbsp;increments&nbsp;are&nbsp;only&nbsp;significant&nbsp;under&nbsp;Motif&nbsp;or&nbsp;Xt.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetSizeHintsSz"><strong>SetSizeHintsSz</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetSizeHintsSz">SetSizeHintsSz</a>(self,&nbsp;Size&nbsp;minSize,&nbsp;Size&nbsp;maxSize=DefaultSize,&nbsp;Size&nbsp;incSize=DefaultSize)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;window&nbsp;sizes,&nbsp;and&nbsp;window<br>
size&nbsp;increments.&nbsp;If&nbsp;a&nbsp;pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the<br>
default&nbsp;values&nbsp;will&nbsp;be&nbsp;used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user<br>
will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds&nbsp;(if&nbsp;it&nbsp;is<br>
a&nbsp;top-level&nbsp;window.)&nbsp;&nbsp;Sizers&nbsp;will&nbsp;also&nbsp;inspect&nbsp;the&nbsp;minimum&nbsp;window&nbsp;size<br>
and&nbsp;will&nbsp;use&nbsp;that&nbsp;value&nbsp;if&nbsp;set&nbsp;when&nbsp;calculating&nbsp;layout.<br>
&nbsp;<br>
The&nbsp;resizing&nbsp;increments&nbsp;are&nbsp;only&nbsp;significant&nbsp;under&nbsp;Motif&nbsp;or&nbsp;Xt.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetSizeWH"><strong>SetSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetSizeWH">SetSizeWH</a>(self,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetSizer"><strong>SetSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetSizer">SetSizer</a>(self,&nbsp;Sizer&nbsp;sizer,&nbsp;bool&nbsp;deleteOld=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window&nbsp;to&nbsp;have&nbsp;the&nbsp;given&nbsp;layout&nbsp;sizer.&nbsp;The&nbsp;window&nbsp;will&nbsp;then<br>
own&nbsp;the&nbsp;object,&nbsp;and&nbsp;will&nbsp;take&nbsp;care&nbsp;of&nbsp;its&nbsp;deletion.&nbsp;If&nbsp;an&nbsp;existing<br>
layout&nbsp;sizer&nbsp;object&nbsp;is&nbsp;already&nbsp;owned&nbsp;by&nbsp;the&nbsp;window,&nbsp;it&nbsp;will&nbsp;be&nbsp;deleted<br>
if&nbsp;the&nbsp;deleteOld&nbsp;parameter&nbsp;is&nbsp;true.&nbsp;Note&nbsp;that&nbsp;this&nbsp;function&nbsp;will&nbsp;also<br>
call&nbsp;SetAutoLayout&nbsp;implicitly&nbsp;with&nbsp;a&nbsp;True&nbsp;parameter&nbsp;if&nbsp;the&nbsp;sizer&nbsp;is<br>
non-None,&nbsp;and&nbsp;False&nbsp;otherwise.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetSizerAndFit"><strong>SetSizerAndFit</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetSizerAndFit">SetSizerAndFit</a>(self,&nbsp;Sizer&nbsp;sizer,&nbsp;bool&nbsp;deleteOld=True)<br>
&nbsp;<br>
The&nbsp;same&nbsp;as&nbsp;SetSizer,&nbsp;except&nbsp;it&nbsp;also&nbsp;sets&nbsp;the&nbsp;size&nbsp;hints&nbsp;for&nbsp;the<br>
window&nbsp;based&nbsp;on&nbsp;the&nbsp;sizer's&nbsp;minimum&nbsp;size.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetThemeEnabled"><strong>SetThemeEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetThemeEnabled">SetThemeEnabled</a>(self,&nbsp;bool&nbsp;enableTheme)<br>
&nbsp;<br>
This&nbsp;function&nbsp;tells&nbsp;a&nbsp;window&nbsp;if&nbsp;it&nbsp;should&nbsp;use&nbsp;the&nbsp;system's&nbsp;"theme"<br>
&nbsp;code&nbsp;to&nbsp;draw&nbsp;the&nbsp;windows'&nbsp;background&nbsp;instead&nbsp;if&nbsp;its&nbsp;own&nbsp;background<br>
&nbsp;drawing&nbsp;code.&nbsp;This&nbsp;will&nbsp;only&nbsp;have&nbsp;an&nbsp;effect&nbsp;on&nbsp;platforms&nbsp;that&nbsp;support<br>
&nbsp;the&nbsp;notion&nbsp;of&nbsp;themes&nbsp;in&nbsp;user&nbsp;defined&nbsp;windows.&nbsp;One&nbsp;such&nbsp;platform&nbsp;is<br>
&nbsp;GTK+&nbsp;where&nbsp;windows&nbsp;can&nbsp;have&nbsp;(very&nbsp;colourful)&nbsp;backgrounds&nbsp;defined&nbsp;by&nbsp;a<br>
&nbsp;user's&nbsp;selected&nbsp;theme.<br>
&nbsp;<br>
Dialogs,&nbsp;notebook&nbsp;pages&nbsp;and&nbsp;the&nbsp;status&nbsp;bar&nbsp;have&nbsp;this&nbsp;flag&nbsp;set&nbsp;to&nbsp;true<br>
by&nbsp;default&nbsp;so&nbsp;that&nbsp;the&nbsp;default&nbsp;look&nbsp;and&nbsp;feel&nbsp;is&nbsp;simulated&nbsp;best.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetTmpDefaultItem"><strong>SetTmpDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetTmpDefaultItem">SetTmpDefaultItem</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Set&nbsp;this&nbsp;child&nbsp;as&nbsp;temporary&nbsp;default</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetToolTip"><strong>SetToolTip</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetToolTip">SetToolTip</a>(self,&nbsp;ToolTip&nbsp;tip)<br>
&nbsp;<br>
Attach&nbsp;a&nbsp;tooltip&nbsp;to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetToolTipString"><strong>SetToolTipString</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetToolTipString">SetToolTipString</a>(self,&nbsp;String&nbsp;tip)<br>
&nbsp;<br>
Attach&nbsp;a&nbsp;tooltip&nbsp;to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetValidator"><strong>SetValidator</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetValidator">SetValidator</a>(self,&nbsp;Validator&nbsp;validator)<br>
&nbsp;<br>
Deletes&nbsp;the&nbsp;current&nbsp;validator&nbsp;(if&nbsp;any)&nbsp;and&nbsp;sets&nbsp;the&nbsp;window&nbsp;validator,<br>
having&nbsp;called&nbsp;wx.Validator.Clone&nbsp;to&nbsp;create&nbsp;a&nbsp;new&nbsp;validator&nbsp;of&nbsp;this<br>
type.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetVirtualSize"><strong>SetVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetVirtualSize">SetVirtualSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;a&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows&nbsp;this<br>
is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetVirtualSizeHints"><strong>SetVirtualSizeHints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetVirtualSizeHints">SetVirtualSizeHints</a>(self,&nbsp;int&nbsp;minW,&nbsp;int&nbsp;minH,&nbsp;int&nbsp;maxW=-1,&nbsp;int&nbsp;maxH=-1)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;virtual&nbsp;window&nbsp;sizes.&nbsp;If&nbsp;a<br>
pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the&nbsp;default&nbsp;values&nbsp;will&nbsp;be<br>
used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user&nbsp;will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size<br>
the&nbsp;virtual&nbsp;area&nbsp;of&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetVirtualSizeHintsSz"><strong>SetVirtualSizeHintsSz</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetVirtualSizeHintsSz">SetVirtualSizeHintsSz</a>(self,&nbsp;Size&nbsp;minSize,&nbsp;Size&nbsp;maxSize=DefaultSize)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;virtual&nbsp;window&nbsp;sizes.&nbsp;If&nbsp;a<br>
pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the&nbsp;default&nbsp;values&nbsp;will&nbsp;be<br>
used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user&nbsp;will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size<br>
the&nbsp;virtual&nbsp;area&nbsp;of&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetVirtualSizeWH"><strong>SetVirtualSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetVirtualSizeWH">SetVirtualSizeWH</a>(self,&nbsp;int&nbsp;w,&nbsp;int&nbsp;h)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;a&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows&nbsp;this<br>
is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetWindowStyle"><strong>SetWindowStyle</strong></a> = SetWindowStyleFlag(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetWindowStyleFlag">SetWindowStyleFlag</a>(self,&nbsp;long&nbsp;style)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;Please&nbsp;note&nbsp;that&nbsp;some&nbsp;styles&nbsp;cannot&nbsp;be<br>
changed&nbsp;after&nbsp;the&nbsp;window&nbsp;creation&nbsp;and&nbsp;that&nbsp;<a href="#FigureFrameWx-Refresh">Refresh</a>()&nbsp;might&nbsp;need&nbsp;to&nbsp;be<br>
called&nbsp;after&nbsp;changing&nbsp;the&nbsp;others&nbsp;for&nbsp;the&nbsp;change&nbsp;to&nbsp;take&nbsp;place<br>
immediately.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetWindowStyleFlag"><strong>SetWindowStyleFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetWindowStyleFlag">SetWindowStyleFlag</a>(self,&nbsp;long&nbsp;style)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;Please&nbsp;note&nbsp;that&nbsp;some&nbsp;styles&nbsp;cannot&nbsp;be<br>
changed&nbsp;after&nbsp;the&nbsp;window&nbsp;creation&nbsp;and&nbsp;that&nbsp;<a href="#FigureFrameWx-Refresh">Refresh</a>()&nbsp;might&nbsp;need&nbsp;to&nbsp;be<br>
called&nbsp;after&nbsp;changing&nbsp;the&nbsp;others&nbsp;for&nbsp;the&nbsp;change&nbsp;to&nbsp;take&nbsp;place<br>
immediately.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetWindowVariant"><strong>SetWindowVariant</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetWindowVariant">SetWindowVariant</a>(self,&nbsp;int&nbsp;variant)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;variant&nbsp;of&nbsp;the&nbsp;window/font&nbsp;size&nbsp;to&nbsp;use&nbsp;for&nbsp;this&nbsp;window,&nbsp;if<br>
the&nbsp;platform&nbsp;supports&nbsp;variants,&nbsp;for&nbsp;example,&nbsp;wxMac.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-ShouldInheritColours"><strong>ShouldInheritColours</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-ShouldInheritColours">ShouldInheritColours</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Return&nbsp;true&nbsp;from&nbsp;here&nbsp;to&nbsp;allow&nbsp;the&nbsp;colours&nbsp;of&nbsp;this&nbsp;window&nbsp;to&nbsp;be<br>
changed&nbsp;by&nbsp;InheritAttributes,&nbsp;returning&nbsp;false&nbsp;forbids&nbsp;inheriting&nbsp;them<br>
from&nbsp;the&nbsp;parent&nbsp;window.<br>
&nbsp;<br>
The&nbsp;base&nbsp;class&nbsp;version&nbsp;returns&nbsp;false,&nbsp;but&nbsp;this&nbsp;method&nbsp;is&nbsp;overridden&nbsp;in<br>
wxControl&nbsp;where&nbsp;it&nbsp;returns&nbsp;true.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Show"><strong>Show</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Show">Show</a>(self,&nbsp;bool&nbsp;show=True)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Shows&nbsp;or&nbsp;hides&nbsp;the&nbsp;window.&nbsp;You&nbsp;may&nbsp;need&nbsp;to&nbsp;call&nbsp;Raise&nbsp;for&nbsp;a&nbsp;top&nbsp;level<br>
window&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;bring&nbsp;it&nbsp;to&nbsp;top,&nbsp;although&nbsp;this&nbsp;is&nbsp;not&nbsp;needed&nbsp;if<br>
Show&nbsp;is&nbsp;called&nbsp;immediately&nbsp;after&nbsp;the&nbsp;frame&nbsp;creation.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if<br>
the&nbsp;window&nbsp;has&nbsp;been&nbsp;shown&nbsp;or&nbsp;hidden&nbsp;or&nbsp;False&nbsp;if&nbsp;nothing&nbsp;was&nbsp;done<br>
because&nbsp;it&nbsp;already&nbsp;was&nbsp;in&nbsp;the&nbsp;requested&nbsp;state.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Thaw"><strong>Thaw</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Thaw">Thaw</a>(self)<br>
&nbsp;<br>
Reenables&nbsp;window&nbsp;updating&nbsp;after&nbsp;a&nbsp;previous&nbsp;call&nbsp;to&nbsp;Freeze.&nbsp;&nbsp;Calls&nbsp;to<br>
Freeze/Thaw&nbsp;may&nbsp;be&nbsp;nested,&nbsp;so&nbsp;Thaw&nbsp;must&nbsp;be&nbsp;called&nbsp;the&nbsp;same&nbsp;number&nbsp;of<br>
times&nbsp;that&nbsp;Freeze&nbsp;was&nbsp;before&nbsp;the&nbsp;window&nbsp;will&nbsp;be&nbsp;updated.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-TransferDataFromWindow"><strong>TransferDataFromWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-TransferDataFromWindow">TransferDataFromWindow</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Transfers&nbsp;values&nbsp;from&nbsp;child&nbsp;controls&nbsp;to&nbsp;data&nbsp;areas&nbsp;specified&nbsp;by&nbsp;their<br>
validators.&nbsp;Returns&nbsp;false&nbsp;if&nbsp;a&nbsp;transfer&nbsp;failed.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has<br>
wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra&nbsp;style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will<br>
also&nbsp;call&nbsp;<a href="#FigureFrameWx-TransferDataFromWindow">TransferDataFromWindow</a>()&nbsp;of&nbsp;all&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-TransferDataToWindow"><strong>TransferDataToWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-TransferDataToWindow">TransferDataToWindow</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Transfers&nbsp;values&nbsp;to&nbsp;child&nbsp;controls&nbsp;from&nbsp;data&nbsp;areas&nbsp;specified&nbsp;by&nbsp;their<br>
validators.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has&nbsp;wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra<br>
style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will&nbsp;also&nbsp;call&nbsp;<a href="#FigureFrameWx-TransferDataToWindow">TransferDataToWindow</a>()&nbsp;of<br>
all&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-UnregisterHotKey"><strong>UnregisterHotKey</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-UnregisterHotKey">UnregisterHotKey</a>(self,&nbsp;int&nbsp;hotkeyId)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Unregisters&nbsp;a&nbsp;system&nbsp;wide&nbsp;hotkey.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Update"><strong>Update</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Update">Update</a>(self)<br>
&nbsp;<br>
Calling&nbsp;this&nbsp;method&nbsp;immediately&nbsp;repaints&nbsp;the&nbsp;invalidated&nbsp;area&nbsp;of&nbsp;the<br>
window&nbsp;instead&nbsp;of&nbsp;waiting&nbsp;for&nbsp;the&nbsp;EVT_PAINT&nbsp;event&nbsp;to&nbsp;happen,&nbsp;(normally<br>
this&nbsp;would&nbsp;usually&nbsp;only&nbsp;happen&nbsp;when&nbsp;the&nbsp;flow&nbsp;of&nbsp;control&nbsp;returns&nbsp;to&nbsp;the<br>
event&nbsp;loop.)&nbsp;&nbsp;Notice&nbsp;that&nbsp;this&nbsp;function&nbsp;doesn't&nbsp;refresh&nbsp;the&nbsp;window&nbsp;and<br>
does&nbsp;nothing&nbsp;if&nbsp;the&nbsp;window&nbsp;has&nbsp;been&nbsp;already&nbsp;repainted.&nbsp;&nbsp;Use&nbsp;Refresh<br>
first&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;immediately&nbsp;redraw&nbsp;the&nbsp;window&nbsp;(or&nbsp;some&nbsp;portion&nbsp;of<br>
it)&nbsp;unconditionally.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-UpdateWindowUI"><strong>UpdateWindowUI</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-UpdateWindowUI">UpdateWindowUI</a>(self,&nbsp;long&nbsp;flags=UPDATE_UI_NONE)<br>
&nbsp;<br>
This&nbsp;function&nbsp;sends&nbsp;EVT_UPDATE_UI&nbsp;events&nbsp;to&nbsp;the&nbsp;window.&nbsp;The&nbsp;particular<br>
implementation&nbsp;depends&nbsp;on&nbsp;the&nbsp;window;&nbsp;for&nbsp;example&nbsp;a&nbsp;wx.<a href="wx._controls.html#ToolBar">ToolBar</a>&nbsp;will<br>
send&nbsp;an&nbsp;update&nbsp;UI&nbsp;event&nbsp;for&nbsp;each&nbsp;toolbar&nbsp;button,&nbsp;and&nbsp;a&nbsp;wx.<a href="wx._windows.html#Frame">Frame</a>&nbsp;will<br>
send&nbsp;an&nbsp;update&nbsp;UI&nbsp;event&nbsp;for&nbsp;each&nbsp;menubar&nbsp;menu&nbsp;item.&nbsp;You&nbsp;can&nbsp;call&nbsp;this<br>
function&nbsp;from&nbsp;your&nbsp;application&nbsp;to&nbsp;ensure&nbsp;that&nbsp;your&nbsp;UI&nbsp;is&nbsp;up-to-date&nbsp;at<br>
a&nbsp;particular&nbsp;point&nbsp;in&nbsp;time&nbsp;(as&nbsp;far&nbsp;as&nbsp;your&nbsp;EVT_UPDATE_UI&nbsp;handlers&nbsp;are<br>
concerned).&nbsp;This&nbsp;may&nbsp;be&nbsp;necessary&nbsp;if&nbsp;you&nbsp;have&nbsp;called<br>
`wx.UpdateUIEvent.SetMode`&nbsp;or&nbsp;`wx.UpdateUIEvent.SetUpdateInterval`&nbsp;to<br>
limit&nbsp;the&nbsp;overhead&nbsp;that&nbsp;wxWindows&nbsp;incurs&nbsp;by&nbsp;sending&nbsp;update&nbsp;UI&nbsp;events<br>
in&nbsp;idle&nbsp;time.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-UseBgCol"><strong>UseBgCol</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-UseBgCol">UseBgCol</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Validate"><strong>Validate</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Validate">Validate</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Validates&nbsp;the&nbsp;current&nbsp;values&nbsp;of&nbsp;the&nbsp;child&nbsp;controls&nbsp;using&nbsp;their<br>
validators.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has&nbsp;wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra<br>
style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will&nbsp;also&nbsp;call&nbsp;<a href="#FigureFrameWx-Validate">Validate</a>()&nbsp;of&nbsp;all&nbsp;child<br>
windows.&nbsp;&nbsp;Returns&nbsp;false&nbsp;if&nbsp;any&nbsp;of&nbsp;the&nbsp;validations&nbsp;failed.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-WarpPointer"><strong>WarpPointer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-WarpPointer">WarpPointer</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;pointer&nbsp;to&nbsp;the&nbsp;given&nbsp;position&nbsp;on&nbsp;the&nbsp;window.<br>
&nbsp;<br>
NOTE:&nbsp;This&nbsp;function&nbsp;is&nbsp;not&nbsp;supported&nbsp;under&nbsp;Mac&nbsp;because&nbsp;Apple&nbsp;Human<br>
Interface&nbsp;Guidelines&nbsp;forbid&nbsp;moving&nbsp;the&nbsp;mouse&nbsp;cursor&nbsp;programmatically.</tt></dd></dl>

<hr>
Static methods inherited from <a href="wx._core.html#Window">wx._core.Window</a>:<br>
<dl><dt><a name="FigureFrameWx-FindFocus"><strong>FindFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-FindFocus">FindFocus</a>()&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;window&nbsp;or&nbsp;control&nbsp;that&nbsp;currently&nbsp;has&nbsp;the&nbsp;keyboard&nbsp;focus,<br>
or&nbsp;None.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetCapture"><strong>GetCapture</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetCapture">GetCapture</a>()&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;window&nbsp;which&nbsp;currently&nbsp;captures&nbsp;the&nbsp;mouse&nbsp;or&nbsp;None</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-NewControlId"><strong>NewControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-NewControlId">NewControlId</a>()&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Generate&nbsp;a&nbsp;control&nbsp;id&nbsp;for&nbsp;the&nbsp;controls&nbsp;which&nbsp;were&nbsp;not&nbsp;given&nbsp;one.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-NextControlId"><strong>NextControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-NextControlId">NextControlId</a>(int&nbsp;winid)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;id&nbsp;of&nbsp;the&nbsp;control&nbsp;following&nbsp;the&nbsp;one&nbsp;with&nbsp;the&nbsp;given<br>
autogenerated)&nbsp;id</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-PrevControlId"><strong>PrevControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-PrevControlId">PrevControlId</a>(int&nbsp;winid)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;id&nbsp;of&nbsp;the&nbsp;control&nbsp;preceding&nbsp;the&nbsp;one&nbsp;with&nbsp;the&nbsp;given<br>
autogenerated)&nbsp;id</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#EvtHandler">wx._core.EvtHandler</a>:<br>
<dl><dt><a name="FigureFrameWx-AddPendingEvent"><strong>AddPendingEvent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-AddPendingEvent">AddPendingEvent</a>(self,&nbsp;Event&nbsp;event)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Bind"><strong>Bind</strong></a>(self, event, handler, source<font color="#909090">=None</font>, id<font color="#909090">=-1</font>, id2<font color="#909090">=-1</font>)</dt><dd><tt>Bind&nbsp;an&nbsp;event&nbsp;to&nbsp;an&nbsp;event&nbsp;handler.<br>
&nbsp;<br>
:param&nbsp;event:&nbsp;One&nbsp;of&nbsp;the&nbsp;EVT_*&nbsp;objects&nbsp;that&nbsp;specifies&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type&nbsp;of&nbsp;event&nbsp;to&nbsp;bind,<br>
&nbsp;<br>
:param&nbsp;handler:&nbsp;A&nbsp;callable&nbsp;object&nbsp;to&nbsp;be&nbsp;invoked&nbsp;when&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event&nbsp;is&nbsp;delivered&nbsp;to&nbsp;self.&nbsp;&nbsp;Pass&nbsp;None&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;disconnect&nbsp;an&nbsp;event&nbsp;handler.<br>
&nbsp;<br>
:param&nbsp;source:&nbsp;Sometimes&nbsp;the&nbsp;event&nbsp;originates&nbsp;from&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;different&nbsp;window&nbsp;than&nbsp;self,&nbsp;but&nbsp;you&nbsp;still<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;want&nbsp;to&nbsp;catch&nbsp;it&nbsp;in&nbsp;self.&nbsp;&nbsp;(For&nbsp;example,&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button&nbsp;event&nbsp;delivered&nbsp;to&nbsp;a&nbsp;frame.)&nbsp;&nbsp;By<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;passing&nbsp;the&nbsp;source&nbsp;of&nbsp;the&nbsp;event,&nbsp;the&nbsp;event<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handling&nbsp;system&nbsp;is&nbsp;able&nbsp;to&nbsp;differentiate<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;between&nbsp;the&nbsp;same&nbsp;event&nbsp;type&nbsp;from&nbsp;different<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controls.<br>
&nbsp;<br>
:param&nbsp;id:&nbsp;Used&nbsp;to&nbsp;spcify&nbsp;the&nbsp;event&nbsp;source&nbsp;by&nbsp;ID&nbsp;instead<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;instance.<br>
&nbsp;<br>
:param&nbsp;id2:&nbsp;Used&nbsp;when&nbsp;it&nbsp;is&nbsp;desirable&nbsp;to&nbsp;bind&nbsp;a&nbsp;handler<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;a&nbsp;range&nbsp;of&nbsp;IDs,&nbsp;such&nbsp;as&nbsp;with&nbsp;EVT_MENU_RANGE.</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Connect"><strong>Connect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Connect">Connect</a>(self,&nbsp;int&nbsp;id,&nbsp;int&nbsp;lastId,&nbsp;int&nbsp;eventType,&nbsp;PyObject&nbsp;func)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Disconnect"><strong>Disconnect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-Disconnect">Disconnect</a>(self,&nbsp;int&nbsp;id,&nbsp;int&nbsp;lastId=-1,&nbsp;wxEventType&nbsp;eventType=wxEVT_NULL)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetEvtHandlerEnabled"><strong>GetEvtHandlerEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetEvtHandlerEnabled">GetEvtHandlerEnabled</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetNextHandler"><strong>GetNextHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetNextHandler">GetNextHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-GetPreviousHandler"><strong>GetPreviousHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetPreviousHandler">GetPreviousHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-ProcessEvent"><strong>ProcessEvent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-ProcessEvent">ProcessEvent</a>(self,&nbsp;Event&nbsp;event)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-ProcessPendingEvents"><strong>ProcessPendingEvents</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-ProcessPendingEvents">ProcessPendingEvents</a>(self)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetEvtHandlerEnabled"><strong>SetEvtHandlerEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetEvtHandlerEnabled">SetEvtHandlerEnabled</a>(self,&nbsp;bool&nbsp;enabled)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetNextHandler"><strong>SetNextHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetNextHandler">SetNextHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-SetPreviousHandler"><strong>SetPreviousHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-SetPreviousHandler">SetPreviousHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)</tt></dd></dl>

<dl><dt><a name="FigureFrameWx-Unbind"><strong>Unbind</strong></a>(self, event, source<font color="#909090">=None</font>, id<font color="#909090">=-1</font>, id2<font color="#909090">=-1</font>)</dt><dd><tt>Disconencts&nbsp;the&nbsp;event&nbsp;handler&nbsp;binding&nbsp;for&nbsp;event&nbsp;from&nbsp;self.<br>
Returns&nbsp;True&nbsp;if&nbsp;successful.</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#Object">wx._core.Object</a>:<br>
<dl><dt><a name="FigureFrameWx-GetClassName"><strong>GetClassName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#FigureFrameWx-GetClassName">GetClassName</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;class&nbsp;name&nbsp;of&nbsp;the&nbsp;C++&nbsp;class&nbsp;using&nbsp;wxRTTI.</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="wx._core.html#Object">wx._core.Object</a>:<br>
<dl><dt><strong>__dict__</strong> = &lt;dictproxy object&gt;<dd><tt>dictionary&nbsp;for&nbsp;instance&nbsp;variables&nbsp;(if&nbsp;defined)</tt></dl>

<dl><dt><strong>__weakref__</strong> = &lt;attribute '__weakref__' of 'Object' objects&gt;<dd><tt>list&nbsp;of&nbsp;weak&nbsp;references&nbsp;to&nbsp;the&nbsp;object&nbsp;(if&nbsp;defined)</tt></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><strong>FigureManager</strong> = <a name="FigureManager">class FigureManagerWx</a>(<a href="matplotlib.backend_bases.html#FigureManagerBase">matplotlib.backend_bases.FigureManagerBase</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>This&nbsp;class&nbsp;contains&nbsp;the&nbsp;FigureCanvas&nbsp;and&nbsp;GUI&nbsp;frame<br>
&nbsp;<br>
It&nbsp;is&nbsp;instantiated&nbsp;by&nbsp;GcfWx&nbsp;whenever&nbsp;a&nbsp;new&nbsp;figure&nbsp;is&nbsp;created.&nbsp;GcfWx&nbsp;is<br>
responsible&nbsp;for&nbsp;managing&nbsp;multiple&nbsp;instances&nbsp;of&nbsp;<a href="#FigureManagerWx">FigureManagerWx</a>.<br>
&nbsp;<br>
NB:&nbsp;<a href="matplotlib.backend_bases.html#FigureManagerBase">FigureManagerBase</a>&nbsp;is&nbsp;found&nbsp;in&nbsp;_pylab_helpers<br>
&nbsp;<br>
public&nbsp;attrs<br>
&nbsp;<br>
canvas&nbsp;-&nbsp;a&nbsp;<a href="#FigureCanvasWx">FigureCanvasWx</a>(wx.<a href="wx._windows.html#Panel">Panel</a>)&nbsp;instance<br>
window&nbsp;-&nbsp;a&nbsp;wxFrame&nbsp;instance&nbsp;-&nbsp;<a href="http://www.lpthe.jussieu.fr/~zeitlin/wxWindows/docs/wxwin_wxframe.html#wxframe">http://www.lpthe.jussieu.fr/~zeitlin/wxWindows/docs/wxwin_wxframe.html#wxframe</a><br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="FigureManagerWx-__init__"><strong>__init__</strong></a>(self, canvas, num, frame)</dt></dl>

<dl><dt><a name="FigureManagerWx-destroy"><strong>destroy</strong></a>(self, *args)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.backend_bases.html#FigureManagerBase">matplotlib.backend_bases.FigureManagerBase</a>:<br>
<dl><dt><a name="FigureManagerWx-full_screen_toggle"><strong>full_screen_toggle</strong></a>(self)</dt></dl>

<dl><dt><a name="FigureManagerWx-key_press"><strong>key_press</strong></a>(self, event)</dt></dl>

<dl><dt><a name="FigureManagerWx-resize"><strong>resize</strong></a>(self, w, h)</dt><dd><tt>For&nbsp;gui&nbsp;backends:&nbsp;resize&nbsp;window&nbsp;in&nbsp;pixels</tt></dd></dl>

<dl><dt><a name="FigureManagerWx-show_popup"><strong>show_popup</strong></a>(self, msg)</dt><dd><tt>Display&nbsp;message&nbsp;in&nbsp;a&nbsp;popup&nbsp;--&nbsp;GUI&nbsp;only</tt></dd></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="FigureManagerWx">class <strong>FigureManagerWx</strong></a>(<a href="matplotlib.backend_bases.html#FigureManagerBase">matplotlib.backend_bases.FigureManagerBase</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>This&nbsp;class&nbsp;contains&nbsp;the&nbsp;FigureCanvas&nbsp;and&nbsp;GUI&nbsp;frame<br>
&nbsp;<br>
It&nbsp;is&nbsp;instantiated&nbsp;by&nbsp;GcfWx&nbsp;whenever&nbsp;a&nbsp;new&nbsp;figure&nbsp;is&nbsp;created.&nbsp;GcfWx&nbsp;is<br>
responsible&nbsp;for&nbsp;managing&nbsp;multiple&nbsp;instances&nbsp;of&nbsp;<a href="#FigureManagerWx">FigureManagerWx</a>.<br>
&nbsp;<br>
NB:&nbsp;<a href="matplotlib.backend_bases.html#FigureManagerBase">FigureManagerBase</a>&nbsp;is&nbsp;found&nbsp;in&nbsp;_pylab_helpers<br>
&nbsp;<br>
public&nbsp;attrs<br>
&nbsp;<br>
canvas&nbsp;-&nbsp;a&nbsp;<a href="#FigureCanvasWx">FigureCanvasWx</a>(wx.<a href="wx._windows.html#Panel">Panel</a>)&nbsp;instance<br>
window&nbsp;-&nbsp;a&nbsp;wxFrame&nbsp;instance&nbsp;-&nbsp;<a href="http://www.lpthe.jussieu.fr/~zeitlin/wxWindows/docs/wxwin_wxframe.html#wxframe">http://www.lpthe.jussieu.fr/~zeitlin/wxWindows/docs/wxwin_wxframe.html#wxframe</a><br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="FigureManagerWx-__init__"><strong>__init__</strong></a>(self, canvas, num, frame)</dt></dl>

<dl><dt><a name="FigureManagerWx-destroy"><strong>destroy</strong></a>(self, *args)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.backend_bases.html#FigureManagerBase">matplotlib.backend_bases.FigureManagerBase</a>:<br>
<dl><dt><a name="FigureManagerWx-full_screen_toggle"><strong>full_screen_toggle</strong></a>(self)</dt></dl>

<dl><dt><a name="FigureManagerWx-key_press"><strong>key_press</strong></a>(self, event)</dt></dl>

<dl><dt><a name="FigureManagerWx-resize"><strong>resize</strong></a>(self, w, h)</dt><dd><tt>For&nbsp;gui&nbsp;backends:&nbsp;resize&nbsp;window&nbsp;in&nbsp;pixels</tt></dd></dl>

<dl><dt><a name="FigureManagerWx-show_popup"><strong>show_popup</strong></a>(self, msg)</dt><dd><tt>Display&nbsp;message&nbsp;in&nbsp;a&nbsp;popup&nbsp;--&nbsp;GUI&nbsp;only</tt></dd></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="GraphicsContextWx">class <strong>GraphicsContextWx</strong></a>(<a href="matplotlib.backend_bases.html#GraphicsContextBase">matplotlib.backend_bases.GraphicsContextBase</a>, <a href="wx._gdi.html#MemoryDC">wx._gdi.MemoryDC</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>The&nbsp;graphics&nbsp;context&nbsp;provides&nbsp;the&nbsp;color,&nbsp;line&nbsp;styles,&nbsp;etc...<br>
&nbsp;<br>
In&nbsp;wxPython&nbsp;this&nbsp;is&nbsp;done&nbsp;by&nbsp;wrapping&nbsp;a&nbsp;wxDC&nbsp;object&nbsp;and&nbsp;forwarding&nbsp;the<br>
appropriate&nbsp;calls&nbsp;to&nbsp;it.&nbsp;Notice&nbsp;also&nbsp;that&nbsp;colour&nbsp;and&nbsp;line&nbsp;styles&nbsp;are<br>
mapped&nbsp;on&nbsp;the&nbsp;wx.Pen()&nbsp;member&nbsp;of&nbsp;the&nbsp;wxDC.&nbsp;This&nbsp;means&nbsp;that&nbsp;we&nbsp;have&nbsp;some<br>
rudimentary&nbsp;pen&nbsp;management&nbsp;here.<br>
&nbsp;<br>
The&nbsp;base&nbsp;GraphicsContext&nbsp;stores&nbsp;colors&nbsp;as&nbsp;a&nbsp;RGB&nbsp;tuple&nbsp;on&nbsp;the&nbsp;unit<br>
interval,&nbsp;eg,&nbsp;(0.5,&nbsp;0.0,&nbsp;1.0).&nbsp;&nbsp;wxPython&nbsp;uses&nbsp;an&nbsp;int&nbsp;interval,&nbsp;but<br>
since&nbsp;wxPython&nbsp;colour&nbsp;management&nbsp;is&nbsp;rather&nbsp;simple,&nbsp;I&nbsp;have&nbsp;not&nbsp;chosen<br>
to&nbsp;implement&nbsp;a&nbsp;separate&nbsp;colour&nbsp;manager&nbsp;class.<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.backends.backend_wx.html#GraphicsContextWx">GraphicsContextWx</a></dd>
<dd><a href="matplotlib.backend_bases.html#GraphicsContextBase">matplotlib.backend_bases.GraphicsContextBase</a></dd>
<dd><a href="wx._gdi.html#MemoryDC">wx._gdi.MemoryDC</a></dd>
<dd><a href="wx._gdi.html#DC">wx._gdi.DC</a></dd>
<dd><a href="wx._core.html#Object">wx._core.Object</a></dd>
<dd><a href="__builtin__.html#object">__builtin__.object</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="GraphicsContextWx-__init__"><strong>__init__</strong></a>(self, bitmap, renderer)</dt></dl>

<dl><dt><a name="GraphicsContextWx-get_wxcolour"><strong>get_wxcolour</strong></a>(self)</dt><dd><tt>return&nbsp;a&nbsp;wx.Colour&nbsp;from&nbsp;RGB&nbsp;format</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-select"><strong>select</strong></a>(self)</dt><dd><tt>Select&nbsp;the&nbsp;current&nbsp;bitmap&nbsp;into&nbsp;this&nbsp;wxDC&nbsp;instance</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-set_capstyle"><strong>set_capstyle</strong></a>(self, cs)</dt><dd><tt>Set&nbsp;the&nbsp;capstyle&nbsp;as&nbsp;a&nbsp;string&nbsp;in&nbsp;('butt',&nbsp;'round',&nbsp;'projecting')</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-set_clip_rectangle"><strong>set_clip_rectangle</strong></a>(self, rect)</dt><dd><tt>Destroys&nbsp;previous&nbsp;clipping&nbsp;region&nbsp;and&nbsp;defines&nbsp;a&nbsp;new&nbsp;one.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-set_foreground"><strong>set_foreground</strong></a>(self, fg, isRGB<font color="#909090">=None</font>)</dt><dd><tt>Set&nbsp;the&nbsp;foreground&nbsp;color.&nbsp;&nbsp;fg&nbsp;can&nbsp;be&nbsp;a&nbsp;matlab&nbsp;format&nbsp;string,&nbsp;a<br>
html&nbsp;hex&nbsp;color&nbsp;string,&nbsp;an&nbsp;rgb&nbsp;unit&nbsp;tuple,&nbsp;or&nbsp;a&nbsp;float&nbsp;between&nbsp;0<br>
and&nbsp;1.&nbsp;&nbsp;In&nbsp;the&nbsp;latter&nbsp;case,&nbsp;grayscale&nbsp;is&nbsp;used.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-set_graylevel"><strong>set_graylevel</strong></a>(self, frac)</dt><dd><tt>Set&nbsp;the&nbsp;foreground&nbsp;color.&nbsp;&nbsp;fg&nbsp;can&nbsp;be&nbsp;a&nbsp;matlab&nbsp;format&nbsp;string,&nbsp;a<br>
html&nbsp;hex&nbsp;color&nbsp;string,&nbsp;an&nbsp;rgb&nbsp;unit&nbsp;tuple,&nbsp;or&nbsp;a&nbsp;float&nbsp;between&nbsp;0<br>
and&nbsp;1.&nbsp;&nbsp;In&nbsp;the&nbsp;latter&nbsp;case,&nbsp;grayscale&nbsp;is&nbsp;used.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-set_joinstyle"><strong>set_joinstyle</strong></a>(self, js)</dt><dd><tt>Set&nbsp;the&nbsp;join&nbsp;style&nbsp;to&nbsp;be&nbsp;one&nbsp;of&nbsp;('miter',&nbsp;'round',&nbsp;'bevel')</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-set_linestyle"><strong>set_linestyle</strong></a>(self, ls)</dt><dd><tt>Set&nbsp;the&nbsp;line&nbsp;style&nbsp;to&nbsp;be&nbsp;one&nbsp;of</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-set_linewidth"><strong>set_linewidth</strong></a>(self, w)</dt><dd><tt>Set&nbsp;the&nbsp;line&nbsp;width.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-unselect"><strong>unselect</strong></a>(self)</dt><dd><tt>Select&nbsp;a&nbsp;Null&nbsp;bitmasp&nbsp;into&nbsp;this&nbsp;wxDC&nbsp;instance</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.backend_bases.html#GraphicsContextBase">matplotlib.backend_bases.GraphicsContextBase</a>:<br>
<dl><dt><a name="GraphicsContextWx-copy_properties"><strong>copy_properties</strong></a>(self, gc)</dt><dd><tt>Copy&nbsp;properties&nbsp;from&nbsp;gc&nbsp;to&nbsp;self</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-get_alpha"><strong>get_alpha</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on<br>
all&nbsp;backends</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-get_antialiased"><strong>get_antialiased</strong></a>(self)</dt><dd><tt>Return&nbsp;true&nbsp;if&nbsp;the&nbsp;object&nbsp;should&nbsp;try&nbsp;to&nbsp;do&nbsp;antialiased&nbsp;rendering</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-get_capstyle"><strong>get_capstyle</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;capstyle&nbsp;as&nbsp;a&nbsp;string&nbsp;in&nbsp;('butt',&nbsp;'round',&nbsp;'projecting')</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-get_clip_rectangle"><strong>get_clip_rectangle</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;clip&nbsp;rectangle&nbsp;as&nbsp;(left,&nbsp;bottom,&nbsp;width,&nbsp;height)</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-get_dashes"><strong>get_dashes</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;dash&nbsp;information&nbsp;as&nbsp;an&nbsp;offset&nbsp;dashlist&nbsp;tuple&nbsp;The<br>
dash&nbsp;list&nbsp;is&nbsp;a&nbsp;even&nbsp;size&nbsp;list&nbsp;that&nbsp;gives&nbsp;the&nbsp;ink&nbsp;on,&nbsp;ink&nbsp;off<br>
in&nbsp;pixels.&nbsp;&nbsp;See&nbsp;p107&nbsp;of&nbsp;to&nbsp;postscript&nbsp;BLUEBOOK&nbsp;for&nbsp;more&nbsp;info<br>
&nbsp;<br>
Default&nbsp;value&nbsp;is&nbsp;None</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-get_hatch"><strong>get_hatch</strong></a>(self)</dt><dd><tt>Gets&nbsp;the&nbsp;current&nbsp;hatch&nbsp;style</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-get_joinstyle"><strong>get_joinstyle</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;line&nbsp;join&nbsp;style&nbsp;as&nbsp;one&nbsp;of&nbsp;('miter',&nbsp;'round',&nbsp;'bevel')</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-get_linestyle"><strong>get_linestyle</strong></a>(self, style)</dt><dd><tt>Return&nbsp;the&nbsp;linestyle:&nbsp;one&nbsp;of&nbsp;('solid',&nbsp;'dashed',&nbsp;'dashdot',<br>
'dotted').</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-get_linewidth"><strong>get_linewidth</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;line&nbsp;width&nbsp;in&nbsp;points&nbsp;as&nbsp;a&nbsp;scalar</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-get_rgb"><strong>get_rgb</strong></a>(self)</dt><dd><tt>returns&nbsp;a&nbsp;tuple&nbsp;of&nbsp;three&nbsp;floats&nbsp;from&nbsp;0-1.&nbsp;&nbsp;color&nbsp;can&nbsp;be&nbsp;a<br>
matlab&nbsp;format&nbsp;string,&nbsp;a&nbsp;html&nbsp;hex&nbsp;color&nbsp;string,&nbsp;or&nbsp;a&nbsp;rgb&nbsp;tuple</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-set_alpha"><strong>set_alpha</strong></a>(self, alpha)</dt><dd><tt>Set&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on<br>
all&nbsp;backends</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-set_antialiased"><strong>set_antialiased</strong></a>(self, b)</dt><dd><tt>True&nbsp;if&nbsp;object&nbsp;should&nbsp;be&nbsp;drawn&nbsp;with&nbsp;antialiased&nbsp;rendering</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-set_dashes"><strong>set_dashes</strong></a>(self, dash_offset, dash_list)</dt><dd><tt>Set&nbsp;the&nbsp;dash&nbsp;style&nbsp;for&nbsp;the&nbsp;gc.<br>
dash_offset&nbsp;is&nbsp;the&nbsp;offset&nbsp;(usually&nbsp;0).<br>
dash_list&nbsp;specifies&nbsp;the&nbsp;on-off&nbsp;sequence&nbsp;as&nbsp;points<br>
(None,&nbsp;None)&nbsp;specifies&nbsp;a&nbsp;solid&nbsp;line</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-set_hatch"><strong>set_hatch</strong></a>(self, hatch)</dt><dd><tt>Sets&nbsp;the&nbsp;hatch&nbsp;style&nbsp;for&nbsp;filling</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.backend_bases.html#GraphicsContextBase">matplotlib.backend_bases.GraphicsContextBase</a>:<br>
<dl><dt><strong>dashd</strong> = {'dashdot': (0, (3.0, 5.0, 1.0, 5.0)), 'dashed': (0, (6.0, 6.0)), 'dotted': (0, (1.0, 3.0)), 'solid': (None, None)}</dl>

<hr>
Methods inherited from <a href="wx._gdi.html#MemoryDC">wx._gdi.MemoryDC</a>:<br>
<dl><dt><a name="GraphicsContextWx-SelectObject"><strong>SelectObject</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-SelectObject">SelectObject</a>(self,&nbsp;Bitmap&nbsp;bitmap)<br>
&nbsp;<br>
Selects&nbsp;the&nbsp;bitmap&nbsp;into&nbsp;the&nbsp;device&nbsp;context,&nbsp;to&nbsp;use&nbsp;as&nbsp;the&nbsp;memory<br>
bitmap.&nbsp;Selecting&nbsp;the&nbsp;bitmap&nbsp;into&nbsp;a&nbsp;memory&nbsp;DC&nbsp;allows&nbsp;you&nbsp;to&nbsp;draw&nbsp;into<br>
the&nbsp;DC,&nbsp;and&nbsp;therefore&nbsp;the&nbsp;bitmap,&nbsp;and&nbsp;also&nbsp;to&nbsp;use&nbsp;Blit&nbsp;to&nbsp;copy&nbsp;the<br>
bitmap&nbsp;to&nbsp;a&nbsp;window.<br>
&nbsp;<br>
If&nbsp;the&nbsp;argument&nbsp;is&nbsp;wx.NullBitmap&nbsp;(or&nbsp;some&nbsp;other&nbsp;uninitialised<br>
`wx.Bitmap`)&nbsp;the&nbsp;current&nbsp;bitmap&nbsp;is&nbsp;selected&nbsp;out&nbsp;of&nbsp;the&nbsp;device&nbsp;context,<br>
and&nbsp;the&nbsp;original&nbsp;bitmap&nbsp;restored,&nbsp;allowing&nbsp;the&nbsp;current&nbsp;bitmap&nbsp;to&nbsp;be<br>
destroyed&nbsp;safely.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-__repr__"><strong>__repr__</strong></a>(self)</dt></dl>

<hr>
Methods inherited from <a href="wx._gdi.html#DC">wx._gdi.DC</a>:<br>
<dl><dt><a name="GraphicsContextWx-BeginDrawing"><strong>BeginDrawing</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-BeginDrawing">BeginDrawing</a>(self)<br>
&nbsp;<br>
Allows&nbsp;for&nbsp;optimization&nbsp;of&nbsp;drawing&nbsp;code&nbsp;on&nbsp;platforms&nbsp;that&nbsp;need&nbsp;it.&nbsp;&nbsp;On<br>
other&nbsp;platforms&nbsp;this&nbsp;is&nbsp;just&nbsp;an&nbsp;empty&nbsp;function&nbsp;and&nbsp;is&nbsp;harmless.&nbsp;&nbsp;To<br>
take&nbsp;advantage&nbsp;of&nbsp;this&nbsp;postential&nbsp;optimization&nbsp;simply&nbsp;enclose&nbsp;each<br>
group&nbsp;of&nbsp;calls&nbsp;to&nbsp;the&nbsp;drawing&nbsp;primitives&nbsp;within&nbsp;calls&nbsp;to<br>
`BeginDrawing`&nbsp;and&nbsp;`EndDrawing`.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-Blit"><strong>Blit</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-Blit">Blit</a>(self,&nbsp;int&nbsp;xdest,&nbsp;int&nbsp;ydest,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height,&nbsp;DC&nbsp;source,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;xsrc,&nbsp;int&nbsp;ysrc,&nbsp;int&nbsp;rop=COPY,&nbsp;bool&nbsp;useMask=False,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;xsrcMask=-1,&nbsp;int&nbsp;ysrcMask=-1)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Copy&nbsp;from&nbsp;a&nbsp;source&nbsp;DC&nbsp;to&nbsp;this&nbsp;DC.&nbsp;&nbsp;Parameters&nbsp;specify&nbsp;the&nbsp;destination<br>
coordinates,&nbsp;size&nbsp;of&nbsp;area&nbsp;to&nbsp;copy,&nbsp;source&nbsp;DC,&nbsp;source&nbsp;coordinates,<br>
logical&nbsp;function,&nbsp;whether&nbsp;to&nbsp;use&nbsp;a&nbsp;bitmap&nbsp;mask,&nbsp;and&nbsp;mask&nbsp;source<br>
position.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-BlitPointSize"><strong>BlitPointSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-BlitPointSize">BlitPointSize</a>(self,&nbsp;Point&nbsp;destPt,&nbsp;Size&nbsp;sz,&nbsp;DC&nbsp;source,&nbsp;Point&nbsp;srcPt,&nbsp;int&nbsp;rop=COPY,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;useMask=False,&nbsp;Point&nbsp;srcPtMask=DefaultPosition)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Copy&nbsp;from&nbsp;a&nbsp;source&nbsp;DC&nbsp;to&nbsp;this&nbsp;DC.&nbsp;&nbsp;Parameters&nbsp;specify&nbsp;the&nbsp;destination<br>
coordinates,&nbsp;size&nbsp;of&nbsp;area&nbsp;to&nbsp;copy,&nbsp;source&nbsp;DC,&nbsp;source&nbsp;coordinates,<br>
logical&nbsp;function,&nbsp;whether&nbsp;to&nbsp;use&nbsp;a&nbsp;bitmap&nbsp;mask,&nbsp;and&nbsp;mask&nbsp;source<br>
position.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-CalcBoundingBox"><strong>CalcBoundingBox</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-CalcBoundingBox">CalcBoundingBox</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)<br>
&nbsp;<br>
Adds&nbsp;the&nbsp;specified&nbsp;point&nbsp;to&nbsp;the&nbsp;bounding&nbsp;box&nbsp;which&nbsp;can&nbsp;be&nbsp;retrieved<br>
with&nbsp;`MinX`,&nbsp;`MaxX`&nbsp;and&nbsp;`MinY`,&nbsp;`MaxY`&nbsp;or&nbsp;`GetBoundingBox`&nbsp;functions.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-CalcBoundingBoxPoint"><strong>CalcBoundingBoxPoint</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-CalcBoundingBoxPoint">CalcBoundingBoxPoint</a>(self,&nbsp;Point&nbsp;point)<br>
&nbsp;<br>
Adds&nbsp;the&nbsp;specified&nbsp;point&nbsp;to&nbsp;the&nbsp;bounding&nbsp;box&nbsp;which&nbsp;can&nbsp;be&nbsp;retrieved<br>
with&nbsp;`MinX`,&nbsp;`MaxX`&nbsp;and&nbsp;`MinY`,&nbsp;`MaxY`&nbsp;or&nbsp;`GetBoundingBox`&nbsp;functions.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-CanDrawBitmap"><strong>CanDrawBitmap</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-CanDrawBitmap">CanDrawBitmap</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-CanGetTextExtent"><strong>CanGetTextExtent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-CanGetTextExtent">CanGetTextExtent</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-Clear"><strong>Clear</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-Clear">Clear</a>(self)<br>
&nbsp;<br>
Clears&nbsp;the&nbsp;device&nbsp;context&nbsp;using&nbsp;the&nbsp;current&nbsp;background&nbsp;brush.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-ComputeScaleAndOrigin"><strong>ComputeScaleAndOrigin</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-ComputeScaleAndOrigin">ComputeScaleAndOrigin</a>(self)<br>
&nbsp;<br>
Performs&nbsp;all&nbsp;necessary&nbsp;computations&nbsp;for&nbsp;given&nbsp;platform&nbsp;and&nbsp;context<br>
type&nbsp;after&nbsp;each&nbsp;change&nbsp;of&nbsp;scale&nbsp;and&nbsp;origin&nbsp;parameters.&nbsp;Usually&nbsp;called<br>
automatically&nbsp;internally&nbsp;after&nbsp;such&nbsp;changes.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-CrossHair"><strong>CrossHair</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-CrossHair">CrossHair</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)<br>
&nbsp;<br>
Displays&nbsp;a&nbsp;cross&nbsp;hair&nbsp;using&nbsp;the&nbsp;current&nbsp;pen.&nbsp;This&nbsp;is&nbsp;a&nbsp;vertical&nbsp;and<br>
horizontal&nbsp;line&nbsp;the&nbsp;height&nbsp;and&nbsp;width&nbsp;of&nbsp;the&nbsp;window,&nbsp;centred&nbsp;on&nbsp;the<br>
given&nbsp;point.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-CrossHairPoint"><strong>CrossHairPoint</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-CrossHairPoint">CrossHairPoint</a>(self,&nbsp;Point&nbsp;pt)<br>
&nbsp;<br>
Displays&nbsp;a&nbsp;cross&nbsp;hair&nbsp;using&nbsp;the&nbsp;current&nbsp;pen.&nbsp;This&nbsp;is&nbsp;a&nbsp;vertical&nbsp;and<br>
horizontal&nbsp;line&nbsp;the&nbsp;height&nbsp;and&nbsp;width&nbsp;of&nbsp;the&nbsp;window,&nbsp;centred&nbsp;on&nbsp;the<br>
given&nbsp;point.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DestroyClippingRegion"><strong>DestroyClippingRegion</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DestroyClippingRegion">DestroyClippingRegion</a>(self)<br>
&nbsp;<br>
Destroys&nbsp;the&nbsp;current&nbsp;clipping&nbsp;region&nbsp;so&nbsp;that&nbsp;none&nbsp;of&nbsp;the&nbsp;DC&nbsp;is<br>
clipped.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DeviceToLogicalX"><strong>DeviceToLogicalX</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DeviceToLogicalX">DeviceToLogicalX</a>(self,&nbsp;int&nbsp;x)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Convert&nbsp;device&nbsp;X&nbsp;coordinate&nbsp;to&nbsp;logical&nbsp;coordinate,&nbsp;using&nbsp;the&nbsp;current<br>
mapping&nbsp;mode.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DeviceToLogicalXRel"><strong>DeviceToLogicalXRel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DeviceToLogicalXRel">DeviceToLogicalXRel</a>(self,&nbsp;int&nbsp;x)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Convert&nbsp;device&nbsp;X&nbsp;coordinate&nbsp;to&nbsp;relative&nbsp;logical&nbsp;coordinate,&nbsp;using&nbsp;the<br>
current&nbsp;mapping&nbsp;mode&nbsp;but&nbsp;ignoring&nbsp;the&nbsp;x&nbsp;axis&nbsp;orientation.&nbsp;Use&nbsp;this<br>
function&nbsp;for&nbsp;converting&nbsp;a&nbsp;width,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DeviceToLogicalY"><strong>DeviceToLogicalY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DeviceToLogicalY">DeviceToLogicalY</a>(self,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Converts&nbsp;device&nbsp;Y&nbsp;coordinate&nbsp;to&nbsp;logical&nbsp;coordinate,&nbsp;using&nbsp;the&nbsp;current<br>
mapping&nbsp;mode.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DeviceToLogicalYRel"><strong>DeviceToLogicalYRel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DeviceToLogicalYRel">DeviceToLogicalYRel</a>(self,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Convert&nbsp;device&nbsp;Y&nbsp;coordinate&nbsp;to&nbsp;relative&nbsp;logical&nbsp;coordinate,&nbsp;using&nbsp;the<br>
current&nbsp;mapping&nbsp;mode&nbsp;but&nbsp;ignoring&nbsp;the&nbsp;y&nbsp;axis&nbsp;orientation.&nbsp;Use&nbsp;this<br>
function&nbsp;for&nbsp;converting&nbsp;a&nbsp;height,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawArc"><strong>DrawArc</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawArc">DrawArc</a>(self,&nbsp;int&nbsp;x1,&nbsp;int&nbsp;y1,&nbsp;int&nbsp;x2,&nbsp;int&nbsp;y2,&nbsp;int&nbsp;xc,&nbsp;int&nbsp;yc)<br>
&nbsp;<br>
Draws&nbsp;an&nbsp;arc&nbsp;of&nbsp;a&nbsp;circle,&nbsp;centred&nbsp;on&nbsp;the&nbsp;*center*&nbsp;point&nbsp;(xc,&nbsp;yc),&nbsp;from<br>
the&nbsp;first&nbsp;point&nbsp;to&nbsp;the&nbsp;second.&nbsp;The&nbsp;current&nbsp;pen&nbsp;is&nbsp;used&nbsp;for&nbsp;the&nbsp;outline<br>
and&nbsp;the&nbsp;current&nbsp;brush&nbsp;for&nbsp;filling&nbsp;the&nbsp;shape.<br>
&nbsp;<br>
The&nbsp;arc&nbsp;is&nbsp;drawn&nbsp;in&nbsp;an&nbsp;anticlockwise&nbsp;direction&nbsp;from&nbsp;the&nbsp;start&nbsp;point&nbsp;to<br>
the&nbsp;end&nbsp;point.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawArcPoint"><strong>DrawArcPoint</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawArcPoint">DrawArcPoint</a>(self,&nbsp;Point&nbsp;pt1,&nbsp;Point&nbsp;pt2,&nbsp;Point&nbsp;center)<br>
&nbsp;<br>
Draws&nbsp;an&nbsp;arc&nbsp;of&nbsp;a&nbsp;circle,&nbsp;centred&nbsp;on&nbsp;the&nbsp;*center*&nbsp;point&nbsp;(xc,&nbsp;yc),&nbsp;from<br>
the&nbsp;first&nbsp;point&nbsp;to&nbsp;the&nbsp;second.&nbsp;The&nbsp;current&nbsp;pen&nbsp;is&nbsp;used&nbsp;for&nbsp;the&nbsp;outline<br>
and&nbsp;the&nbsp;current&nbsp;brush&nbsp;for&nbsp;filling&nbsp;the&nbsp;shape.<br>
&nbsp;<br>
The&nbsp;arc&nbsp;is&nbsp;drawn&nbsp;in&nbsp;an&nbsp;anticlockwise&nbsp;direction&nbsp;from&nbsp;the&nbsp;start&nbsp;point&nbsp;to<br>
the&nbsp;end&nbsp;point.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawBitmap"><strong>DrawBitmap</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawBitmap">DrawBitmap</a>(self,&nbsp;Bitmap&nbsp;bmp,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;bool&nbsp;useMask=False)<br>
&nbsp;<br>
Draw&nbsp;a&nbsp;bitmap&nbsp;on&nbsp;the&nbsp;device&nbsp;context&nbsp;at&nbsp;the&nbsp;specified&nbsp;point.&nbsp;If<br>
*transparent*&nbsp;is&nbsp;true&nbsp;and&nbsp;the&nbsp;bitmap&nbsp;has&nbsp;a&nbsp;transparency&nbsp;mask,&nbsp;(or<br>
alpha&nbsp;channel&nbsp;on&nbsp;the&nbsp;platforms&nbsp;that&nbsp;support&nbsp;it)&nbsp;then&nbsp;the&nbsp;bitmap&nbsp;will<br>
be&nbsp;drawn&nbsp;transparently.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawBitmapPoint"><strong>DrawBitmapPoint</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawBitmapPoint">DrawBitmapPoint</a>(self,&nbsp;Bitmap&nbsp;bmp,&nbsp;Point&nbsp;pt,&nbsp;bool&nbsp;useMask=False)<br>
&nbsp;<br>
Draw&nbsp;a&nbsp;bitmap&nbsp;on&nbsp;the&nbsp;device&nbsp;context&nbsp;at&nbsp;the&nbsp;specified&nbsp;point.&nbsp;If<br>
*transparent*&nbsp;is&nbsp;true&nbsp;and&nbsp;the&nbsp;bitmap&nbsp;has&nbsp;a&nbsp;transparency&nbsp;mask,&nbsp;(or<br>
alpha&nbsp;channel&nbsp;on&nbsp;the&nbsp;platforms&nbsp;that&nbsp;support&nbsp;it)&nbsp;then&nbsp;the&nbsp;bitmap&nbsp;will<br>
be&nbsp;drawn&nbsp;transparently.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawCheckMark"><strong>DrawCheckMark</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawCheckMark">DrawCheckMark</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height)<br>
&nbsp;<br>
Draws&nbsp;a&nbsp;check&nbsp;mark&nbsp;inside&nbsp;the&nbsp;given&nbsp;rectangle.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawCheckMarkRect"><strong>DrawCheckMarkRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawCheckMarkRect">DrawCheckMarkRect</a>(self,&nbsp;Rect&nbsp;rect)<br>
&nbsp;<br>
Draws&nbsp;a&nbsp;check&nbsp;mark&nbsp;inside&nbsp;the&nbsp;given&nbsp;rectangle.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawCircle"><strong>DrawCircle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawCircle">DrawCircle</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;radius)<br>
&nbsp;<br>
Draws&nbsp;a&nbsp;circle&nbsp;with&nbsp;the&nbsp;given&nbsp;center&nbsp;point&nbsp;and&nbsp;radius.&nbsp;&nbsp;The&nbsp;current<br>
pen&nbsp;is&nbsp;used&nbsp;for&nbsp;the&nbsp;outline&nbsp;and&nbsp;the&nbsp;current&nbsp;brush&nbsp;for&nbsp;filling&nbsp;the<br>
shape.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawCirclePoint"><strong>DrawCirclePoint</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawCirclePoint">DrawCirclePoint</a>(self,&nbsp;Point&nbsp;pt,&nbsp;int&nbsp;radius)<br>
&nbsp;<br>
Draws&nbsp;a&nbsp;circle&nbsp;with&nbsp;the&nbsp;given&nbsp;center&nbsp;point&nbsp;and&nbsp;radius.&nbsp;&nbsp;The&nbsp;current<br>
pen&nbsp;is&nbsp;used&nbsp;for&nbsp;the&nbsp;outline&nbsp;and&nbsp;the&nbsp;current&nbsp;brush&nbsp;for&nbsp;filling&nbsp;the<br>
shape.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawEllipse"><strong>DrawEllipse</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawEllipse">DrawEllipse</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height)<br>
&nbsp;<br>
Draws&nbsp;an&nbsp;ellipse&nbsp;contained&nbsp;in&nbsp;the&nbsp;specified&nbsp;rectangle.&nbsp;The&nbsp;current&nbsp;pen<br>
is&nbsp;used&nbsp;for&nbsp;the&nbsp;outline&nbsp;and&nbsp;the&nbsp;current&nbsp;brush&nbsp;for&nbsp;filling&nbsp;the&nbsp;shape.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawEllipseList"><strong>DrawEllipseList</strong></a>(self, ellipses, pens<font color="#909090">=None</font>, brushes<font color="#909090">=None</font>)</dt><dd><tt>Draw&nbsp;a&nbsp;list&nbsp;of&nbsp;ellipses&nbsp;as&nbsp;quickly&nbsp;as&nbsp;possible.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;:param&nbsp;ellipses:&nbsp;A&nbsp;sequence&nbsp;of&nbsp;4-element&nbsp;sequences&nbsp;representing<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;each&nbsp;ellipse&nbsp;to&nbsp;draw,&nbsp;(x,y,&nbsp;w,h).<br>
&nbsp;&nbsp;&nbsp;&nbsp;:param&nbsp;pens:&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;None,&nbsp;then&nbsp;the&nbsp;current&nbsp;pen&nbsp;is&nbsp;used.&nbsp;&nbsp;If&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;single&nbsp;pen&nbsp;then&nbsp;it&nbsp;will&nbsp;be&nbsp;used&nbsp;for&nbsp;all&nbsp;ellipses.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;a&nbsp;list&nbsp;of&nbsp;pens&nbsp;then&nbsp;there&nbsp;should&nbsp;be&nbsp;one&nbsp;for&nbsp;each&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ellipse&nbsp;in&nbsp;ellipses.<br>
&nbsp;&nbsp;&nbsp;&nbsp;:param&nbsp;brushes:&nbsp;A&nbsp;brush&nbsp;or&nbsp;brushes&nbsp;to&nbsp;be&nbsp;used&nbsp;to&nbsp;fill&nbsp;the&nbsp;ellipses,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;similar&nbsp;semantics&nbsp;as&nbsp;the&nbsp;pens&nbsp;parameter.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawEllipsePointSize"><strong>DrawEllipsePointSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawEllipsePointSize">DrawEllipsePointSize</a>(self,&nbsp;Point&nbsp;pt,&nbsp;Size&nbsp;sz)<br>
&nbsp;<br>
Draws&nbsp;an&nbsp;ellipse&nbsp;contained&nbsp;in&nbsp;the&nbsp;specified&nbsp;rectangle.&nbsp;The&nbsp;current&nbsp;pen<br>
is&nbsp;used&nbsp;for&nbsp;the&nbsp;outline&nbsp;and&nbsp;the&nbsp;current&nbsp;brush&nbsp;for&nbsp;filling&nbsp;the&nbsp;shape.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawEllipseRect"><strong>DrawEllipseRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawEllipseRect">DrawEllipseRect</a>(self,&nbsp;Rect&nbsp;rect)<br>
&nbsp;<br>
Draws&nbsp;an&nbsp;ellipse&nbsp;contained&nbsp;in&nbsp;the&nbsp;specified&nbsp;rectangle.&nbsp;The&nbsp;current&nbsp;pen<br>
is&nbsp;used&nbsp;for&nbsp;the&nbsp;outline&nbsp;and&nbsp;the&nbsp;current&nbsp;brush&nbsp;for&nbsp;filling&nbsp;the&nbsp;shape.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawEllipticArc"><strong>DrawEllipticArc</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawEllipticArc">DrawEllipticArc</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;w,&nbsp;int&nbsp;h,&nbsp;double&nbsp;start,&nbsp;double&nbsp;end)<br>
&nbsp;<br>
Draws&nbsp;an&nbsp;arc&nbsp;of&nbsp;an&nbsp;ellipse,&nbsp;with&nbsp;the&nbsp;given&nbsp;rectangle&nbsp;defining&nbsp;the<br>
bounds&nbsp;of&nbsp;the&nbsp;ellipse.&nbsp;The&nbsp;current&nbsp;pen&nbsp;is&nbsp;used&nbsp;for&nbsp;drawing&nbsp;the&nbsp;arc&nbsp;and<br>
the&nbsp;current&nbsp;brush&nbsp;is&nbsp;used&nbsp;for&nbsp;drawing&nbsp;the&nbsp;pie.<br>
&nbsp;<br>
The&nbsp;*start*&nbsp;and&nbsp;*end*&nbsp;parameters&nbsp;specify&nbsp;the&nbsp;start&nbsp;and&nbsp;end&nbsp;of&nbsp;the&nbsp;arc<br>
relative&nbsp;to&nbsp;the&nbsp;three-o'clock&nbsp;position&nbsp;from&nbsp;the&nbsp;center&nbsp;of&nbsp;the<br>
rectangle.&nbsp;Angles&nbsp;are&nbsp;specified&nbsp;in&nbsp;degrees&nbsp;(360&nbsp;is&nbsp;a&nbsp;complete<br>
circle).&nbsp;Positive&nbsp;values&nbsp;mean&nbsp;counter-clockwise&nbsp;motion.&nbsp;If&nbsp;start&nbsp;is<br>
equal&nbsp;to&nbsp;end,&nbsp;a&nbsp;complete&nbsp;ellipse&nbsp;will&nbsp;be&nbsp;drawn.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawEllipticArcPointSize"><strong>DrawEllipticArcPointSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawEllipticArcPointSize">DrawEllipticArcPointSize</a>(self,&nbsp;Point&nbsp;pt,&nbsp;Size&nbsp;sz,&nbsp;double&nbsp;start,&nbsp;double&nbsp;end)<br>
&nbsp;<br>
Draws&nbsp;an&nbsp;arc&nbsp;of&nbsp;an&nbsp;ellipse,&nbsp;with&nbsp;the&nbsp;given&nbsp;rectangle&nbsp;defining&nbsp;the<br>
bounds&nbsp;of&nbsp;the&nbsp;ellipse.&nbsp;The&nbsp;current&nbsp;pen&nbsp;is&nbsp;used&nbsp;for&nbsp;drawing&nbsp;the&nbsp;arc&nbsp;and<br>
the&nbsp;current&nbsp;brush&nbsp;is&nbsp;used&nbsp;for&nbsp;drawing&nbsp;the&nbsp;pie.<br>
&nbsp;<br>
The&nbsp;*start*&nbsp;and&nbsp;*end*&nbsp;parameters&nbsp;specify&nbsp;the&nbsp;start&nbsp;and&nbsp;end&nbsp;of&nbsp;the&nbsp;arc<br>
relative&nbsp;to&nbsp;the&nbsp;three-o'clock&nbsp;position&nbsp;from&nbsp;the&nbsp;center&nbsp;of&nbsp;the<br>
rectangle.&nbsp;Angles&nbsp;are&nbsp;specified&nbsp;in&nbsp;degrees&nbsp;(360&nbsp;is&nbsp;a&nbsp;complete<br>
circle).&nbsp;Positive&nbsp;values&nbsp;mean&nbsp;counter-clockwise&nbsp;motion.&nbsp;If&nbsp;start&nbsp;is<br>
equal&nbsp;to&nbsp;end,&nbsp;a&nbsp;complete&nbsp;ellipse&nbsp;will&nbsp;be&nbsp;drawn.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawIcon"><strong>DrawIcon</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawIcon">DrawIcon</a>(self,&nbsp;Icon&nbsp;icon,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)<br>
&nbsp;<br>
Draw&nbsp;an&nbsp;icon&nbsp;on&nbsp;the&nbsp;display&nbsp;(does&nbsp;nothing&nbsp;if&nbsp;the&nbsp;device&nbsp;context&nbsp;is<br>
PostScript).&nbsp;This&nbsp;can&nbsp;be&nbsp;the&nbsp;simplest&nbsp;way&nbsp;of&nbsp;drawing&nbsp;bitmaps&nbsp;on&nbsp;a<br>
window.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawIconPoint"><strong>DrawIconPoint</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawIconPoint">DrawIconPoint</a>(self,&nbsp;Icon&nbsp;icon,&nbsp;Point&nbsp;pt)<br>
&nbsp;<br>
Draw&nbsp;an&nbsp;icon&nbsp;on&nbsp;the&nbsp;display&nbsp;(does&nbsp;nothing&nbsp;if&nbsp;the&nbsp;device&nbsp;context&nbsp;is<br>
PostScript).&nbsp;This&nbsp;can&nbsp;be&nbsp;the&nbsp;simplest&nbsp;way&nbsp;of&nbsp;drawing&nbsp;bitmaps&nbsp;on&nbsp;a<br>
window.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawImageLabel"><strong>DrawImageLabel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawImageLabel">DrawImageLabel</a>(self,&nbsp;String&nbsp;text,&nbsp;Bitmap&nbsp;image,&nbsp;Rect&nbsp;rect,&nbsp;int&nbsp;alignment=wxALIGN_LEFT|wxALIGN_TOP,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;indexAccel=-1)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Draw&nbsp;*text*&nbsp;and&nbsp;an&nbsp;image&nbsp;(which&nbsp;may&nbsp;be&nbsp;``wx.NullBitmap``&nbsp;to&nbsp;skip<br>
drawing&nbsp;it)&nbsp;within&nbsp;the&nbsp;specified&nbsp;rectangle,&nbsp;abiding&nbsp;by&nbsp;the&nbsp;alignment<br>
flags.&nbsp;&nbsp;Will&nbsp;additionally&nbsp;emphasize&nbsp;the&nbsp;character&nbsp;at&nbsp;*indexAccel*&nbsp;if<br>
it&nbsp;is&nbsp;not&nbsp;-1.&nbsp;&nbsp;Returns&nbsp;the&nbsp;bounding&nbsp;rectangle.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawLabel"><strong>DrawLabel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawLabel">DrawLabel</a>(self,&nbsp;String&nbsp;text,&nbsp;Rect&nbsp;rect,&nbsp;int&nbsp;alignment=wxALIGN_LEFT|wxALIGN_TOP,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;indexAccel=-1)<br>
&nbsp;<br>
Draw&nbsp;*text*&nbsp;within&nbsp;the&nbsp;specified&nbsp;rectangle,&nbsp;abiding&nbsp;by&nbsp;the&nbsp;alignment<br>
flags.&nbsp;&nbsp;Will&nbsp;additionally&nbsp;emphasize&nbsp;the&nbsp;character&nbsp;at&nbsp;*indexAccel*&nbsp;if<br>
it&nbsp;is&nbsp;not&nbsp;-1.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawLine"><strong>DrawLine</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawLine">DrawLine</a>(self,&nbsp;int&nbsp;x1,&nbsp;int&nbsp;y1,&nbsp;int&nbsp;x2,&nbsp;int&nbsp;y2)<br>
&nbsp;<br>
Draws&nbsp;a&nbsp;line&nbsp;from&nbsp;the&nbsp;first&nbsp;point&nbsp;to&nbsp;the&nbsp;second.&nbsp;The&nbsp;current&nbsp;pen&nbsp;is<br>
used&nbsp;for&nbsp;drawing&nbsp;the&nbsp;line.&nbsp;Note&nbsp;that&nbsp;the&nbsp;second&nbsp;point&nbsp;is&nbsp;*not*&nbsp;part&nbsp;of<br>
the&nbsp;line&nbsp;and&nbsp;is&nbsp;not&nbsp;drawn&nbsp;by&nbsp;this&nbsp;function&nbsp;(this&nbsp;is&nbsp;consistent&nbsp;with<br>
the&nbsp;behaviour&nbsp;of&nbsp;many&nbsp;other&nbsp;toolkits).</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawLineList"><strong>DrawLineList</strong></a>(self, lines, pens<font color="#909090">=None</font>)</dt><dd><tt>Draw&nbsp;a&nbsp;list&nbsp;of&nbsp;lines&nbsp;as&nbsp;quickly&nbsp;as&nbsp;possible.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;:param&nbsp;lines:&nbsp;&nbsp;A&nbsp;sequence&nbsp;of&nbsp;4-element&nbsp;sequences&nbsp;representing<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;each&nbsp;line&nbsp;to&nbsp;draw,&nbsp;(x1,y1,&nbsp;x2,y2).<br>
&nbsp;&nbsp;&nbsp;&nbsp;:param&nbsp;pens:&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;None,&nbsp;then&nbsp;the&nbsp;current&nbsp;pen&nbsp;is&nbsp;used.&nbsp;&nbsp;If&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;single&nbsp;pen&nbsp;then&nbsp;it&nbsp;will&nbsp;be&nbsp;used&nbsp;for&nbsp;all&nbsp;lines.&nbsp;&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;list&nbsp;of&nbsp;pens&nbsp;then&nbsp;there&nbsp;should&nbsp;be&nbsp;one&nbsp;for&nbsp;each&nbsp;line<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in&nbsp;lines.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawLinePoint"><strong>DrawLinePoint</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawLinePoint">DrawLinePoint</a>(self,&nbsp;Point&nbsp;pt1,&nbsp;Point&nbsp;pt2)<br>
&nbsp;<br>
Draws&nbsp;a&nbsp;line&nbsp;from&nbsp;the&nbsp;first&nbsp;point&nbsp;to&nbsp;the&nbsp;second.&nbsp;The&nbsp;current&nbsp;pen&nbsp;is<br>
used&nbsp;for&nbsp;drawing&nbsp;the&nbsp;line.&nbsp;Note&nbsp;that&nbsp;the&nbsp;second&nbsp;point&nbsp;is&nbsp;*not*&nbsp;part&nbsp;of<br>
the&nbsp;line&nbsp;and&nbsp;is&nbsp;not&nbsp;drawn&nbsp;by&nbsp;this&nbsp;function&nbsp;(this&nbsp;is&nbsp;consistent&nbsp;with<br>
the&nbsp;behaviour&nbsp;of&nbsp;many&nbsp;other&nbsp;toolkits).</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawLines"><strong>DrawLines</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawLines">DrawLines</a>(self,&nbsp;List&nbsp;points,&nbsp;int&nbsp;xoffset=0,&nbsp;int&nbsp;yoffset=0)<br>
&nbsp;<br>
Draws&nbsp;lines&nbsp;using&nbsp;a&nbsp;sequence&nbsp;of&nbsp;`wx.Point`&nbsp;objects,&nbsp;adding&nbsp;the<br>
optional&nbsp;offset&nbsp;coordinate.&nbsp;The&nbsp;current&nbsp;pen&nbsp;is&nbsp;used&nbsp;for&nbsp;drawing&nbsp;the<br>
lines.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawPoint"><strong>DrawPoint</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawPoint">DrawPoint</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)<br>
&nbsp;<br>
Draws&nbsp;a&nbsp;point&nbsp;using&nbsp;the&nbsp;current&nbsp;pen.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawPointList"><strong>DrawPointList</strong></a>(self, points, pens<font color="#909090">=None</font>)</dt><dd><tt>Draw&nbsp;a&nbsp;list&nbsp;of&nbsp;points&nbsp;as&nbsp;quickly&nbsp;as&nbsp;possible.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;:param&nbsp;points:&nbsp;&nbsp;A&nbsp;sequence&nbsp;of&nbsp;2-element&nbsp;sequences&nbsp;representing<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;each&nbsp;point&nbsp;to&nbsp;draw,&nbsp;(x,y).<br>
&nbsp;&nbsp;&nbsp;&nbsp;:param&nbsp;pens:&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;None,&nbsp;then&nbsp;the&nbsp;current&nbsp;pen&nbsp;is&nbsp;used.&nbsp;&nbsp;If&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;single&nbsp;pen&nbsp;then&nbsp;it&nbsp;will&nbsp;be&nbsp;used&nbsp;for&nbsp;all&nbsp;points.&nbsp;&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;list&nbsp;of&nbsp;pens&nbsp;then&nbsp;there&nbsp;should&nbsp;be&nbsp;one&nbsp;for&nbsp;each&nbsp;point<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in&nbsp;points.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawPointPoint"><strong>DrawPointPoint</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawPointPoint">DrawPointPoint</a>(self,&nbsp;Point&nbsp;pt)<br>
&nbsp;<br>
Draws&nbsp;a&nbsp;point&nbsp;using&nbsp;the&nbsp;current&nbsp;pen.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawPolygon"><strong>DrawPolygon</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawPolygon">DrawPolygon</a>(self,&nbsp;List&nbsp;points,&nbsp;int&nbsp;xoffset=0,&nbsp;int&nbsp;yoffset=0,<br>
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;fillStyle=ODDEVEN_RULE)<br>
&nbsp;<br>
Draws&nbsp;a&nbsp;filled&nbsp;polygon&nbsp;using&nbsp;a&nbsp;sequence&nbsp;of&nbsp;`wx.Point`&nbsp;objects,&nbsp;adding<br>
the&nbsp;optional&nbsp;offset&nbsp;coordinate.&nbsp;&nbsp;The&nbsp;last&nbsp;argument&nbsp;specifies&nbsp;the&nbsp;fill<br>
rule:&nbsp;``wx.ODDEVEN_RULE``&nbsp;(the&nbsp;default)&nbsp;or&nbsp;``wx.WINDING_RULE``.<br>
&nbsp;<br>
The&nbsp;current&nbsp;pen&nbsp;is&nbsp;used&nbsp;for&nbsp;drawing&nbsp;the&nbsp;outline,&nbsp;and&nbsp;the&nbsp;current&nbsp;brush<br>
for&nbsp;filling&nbsp;the&nbsp;shape.&nbsp;Using&nbsp;a&nbsp;transparent&nbsp;brush&nbsp;suppresses<br>
filling.&nbsp;Note&nbsp;that&nbsp;wxWidgets&nbsp;automatically&nbsp;closes&nbsp;the&nbsp;first&nbsp;and&nbsp;last<br>
points.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawPolygonList"><strong>DrawPolygonList</strong></a>(self, polygons, pens<font color="#909090">=None</font>, brushes<font color="#909090">=None</font>)</dt><dd><tt>Draw&nbsp;a&nbsp;list&nbsp;of&nbsp;polygons,&nbsp;each&nbsp;of&nbsp;which&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;points.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;:param&nbsp;polygons:&nbsp;A&nbsp;sequence&nbsp;of&nbsp;sequences&nbsp;of&nbsp;sequences.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[(x1,y1),(x2,y2),(x3,y3)...],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(x1,y1),(x2,y2),(x3,y3)...]]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;:param&nbsp;pens:&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;None,&nbsp;then&nbsp;the&nbsp;current&nbsp;pen&nbsp;is&nbsp;used.&nbsp;&nbsp;If&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;single&nbsp;pen&nbsp;then&nbsp;it&nbsp;will&nbsp;be&nbsp;used&nbsp;for&nbsp;all&nbsp;polygons.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;a&nbsp;list&nbsp;of&nbsp;pens&nbsp;then&nbsp;there&nbsp;should&nbsp;be&nbsp;one&nbsp;for&nbsp;each&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;polygon.<br>
&nbsp;&nbsp;&nbsp;&nbsp;:param&nbsp;brushes:&nbsp;A&nbsp;brush&nbsp;or&nbsp;brushes&nbsp;to&nbsp;be&nbsp;used&nbsp;to&nbsp;fill&nbsp;the&nbsp;polygons,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;similar&nbsp;semantics&nbsp;as&nbsp;the&nbsp;pens&nbsp;parameter.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawRectangle"><strong>DrawRectangle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawRectangle">DrawRectangle</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height)<br>
&nbsp;<br>
Draws&nbsp;a&nbsp;rectangle&nbsp;with&nbsp;the&nbsp;given&nbsp;top&nbsp;left&nbsp;corner,&nbsp;and&nbsp;with&nbsp;the&nbsp;given<br>
size.&nbsp;The&nbsp;current&nbsp;pen&nbsp;is&nbsp;used&nbsp;for&nbsp;the&nbsp;outline&nbsp;and&nbsp;the&nbsp;current&nbsp;brush<br>
for&nbsp;filling&nbsp;the&nbsp;shape.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawRectangleList"><strong>DrawRectangleList</strong></a>(self, rectangles, pens<font color="#909090">=None</font>, brushes<font color="#909090">=None</font>)</dt><dd><tt>Draw&nbsp;a&nbsp;list&nbsp;of&nbsp;rectangles&nbsp;as&nbsp;quickly&nbsp;as&nbsp;possible.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;:param&nbsp;rectangles:&nbsp;&nbsp;A&nbsp;sequence&nbsp;of&nbsp;4-element&nbsp;sequences&nbsp;representing<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;each&nbsp;rectangle&nbsp;to&nbsp;draw,&nbsp;(x,y,&nbsp;w,h).<br>
&nbsp;&nbsp;&nbsp;&nbsp;:param&nbsp;pens:&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;None,&nbsp;then&nbsp;the&nbsp;current&nbsp;pen&nbsp;is&nbsp;used.&nbsp;&nbsp;If&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;single&nbsp;pen&nbsp;then&nbsp;it&nbsp;will&nbsp;be&nbsp;used&nbsp;for&nbsp;all&nbsp;rectangles.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;a&nbsp;list&nbsp;of&nbsp;pens&nbsp;then&nbsp;there&nbsp;should&nbsp;be&nbsp;one&nbsp;for&nbsp;each&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rectangle&nbsp;in&nbsp;rectangles.<br>
&nbsp;&nbsp;&nbsp;&nbsp;:param&nbsp;brushes:&nbsp;A&nbsp;brush&nbsp;or&nbsp;brushes&nbsp;to&nbsp;be&nbsp;used&nbsp;to&nbsp;fill&nbsp;the&nbsp;rectagles,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;similar&nbsp;semantics&nbsp;as&nbsp;the&nbsp;pens&nbsp;parameter.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawRectanglePointSize"><strong>DrawRectanglePointSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawRectanglePointSize">DrawRectanglePointSize</a>(self,&nbsp;Point&nbsp;pt,&nbsp;Size&nbsp;sz)<br>
&nbsp;<br>
Draws&nbsp;a&nbsp;rectangle&nbsp;with&nbsp;the&nbsp;given&nbsp;top&nbsp;left&nbsp;corner,&nbsp;and&nbsp;with&nbsp;the&nbsp;given<br>
size.&nbsp;The&nbsp;current&nbsp;pen&nbsp;is&nbsp;used&nbsp;for&nbsp;the&nbsp;outline&nbsp;and&nbsp;the&nbsp;current&nbsp;brush<br>
for&nbsp;filling&nbsp;the&nbsp;shape.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawRectangleRect"><strong>DrawRectangleRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawRectangleRect">DrawRectangleRect</a>(self,&nbsp;Rect&nbsp;rect)<br>
&nbsp;<br>
Draws&nbsp;a&nbsp;rectangle&nbsp;with&nbsp;the&nbsp;given&nbsp;top&nbsp;left&nbsp;corner,&nbsp;and&nbsp;with&nbsp;the&nbsp;given<br>
size.&nbsp;The&nbsp;current&nbsp;pen&nbsp;is&nbsp;used&nbsp;for&nbsp;the&nbsp;outline&nbsp;and&nbsp;the&nbsp;current&nbsp;brush<br>
for&nbsp;filling&nbsp;the&nbsp;shape.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawRotatedText"><strong>DrawRotatedText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawRotatedText">DrawRotatedText</a>(self,&nbsp;String&nbsp;text,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;double&nbsp;angle)<br>
&nbsp;<br>
Draws&nbsp;the&nbsp;text&nbsp;rotated&nbsp;by&nbsp;*angle*&nbsp;degrees,&nbsp;if&nbsp;supported&nbsp;by&nbsp;the&nbsp;platform.<br>
&nbsp;<br>
**NOTE**:&nbsp;Under&nbsp;Win9x&nbsp;only&nbsp;TrueType&nbsp;fonts&nbsp;can&nbsp;be&nbsp;drawn&nbsp;by&nbsp;this<br>
function.&nbsp;In&nbsp;particular,&nbsp;a&nbsp;font&nbsp;different&nbsp;from&nbsp;``wx.NORMAL_FONT``<br>
should&nbsp;be&nbsp;used&nbsp;as&nbsp;the&nbsp;it&nbsp;is&nbsp;not&nbsp;normally&nbsp;a&nbsp;TrueType<br>
font.&nbsp;``wx.SWISS_FONT``&nbsp;is&nbsp;an&nbsp;example&nbsp;of&nbsp;a&nbsp;font&nbsp;which&nbsp;is.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawRotatedTextPoint"><strong>DrawRotatedTextPoint</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawRotatedTextPoint">DrawRotatedTextPoint</a>(self,&nbsp;String&nbsp;text,&nbsp;Point&nbsp;pt,&nbsp;double&nbsp;angle)<br>
&nbsp;<br>
Draws&nbsp;the&nbsp;text&nbsp;rotated&nbsp;by&nbsp;*angle*&nbsp;degrees,&nbsp;if&nbsp;supported&nbsp;by&nbsp;the&nbsp;platform.<br>
&nbsp;<br>
**NOTE**:&nbsp;Under&nbsp;Win9x&nbsp;only&nbsp;TrueType&nbsp;fonts&nbsp;can&nbsp;be&nbsp;drawn&nbsp;by&nbsp;this<br>
function.&nbsp;In&nbsp;particular,&nbsp;a&nbsp;font&nbsp;different&nbsp;from&nbsp;``wx.NORMAL_FONT``<br>
should&nbsp;be&nbsp;used&nbsp;as&nbsp;the&nbsp;it&nbsp;is&nbsp;not&nbsp;normally&nbsp;a&nbsp;TrueType<br>
font.&nbsp;``wx.SWISS_FONT``&nbsp;is&nbsp;an&nbsp;example&nbsp;of&nbsp;a&nbsp;font&nbsp;which&nbsp;is.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawRoundedRectangle"><strong>DrawRoundedRectangle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawRoundedRectangle">DrawRoundedRectangle</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height,&nbsp;double&nbsp;radius)<br>
&nbsp;<br>
Draws&nbsp;a&nbsp;rectangle&nbsp;with&nbsp;the&nbsp;given&nbsp;top&nbsp;left&nbsp;corner,&nbsp;and&nbsp;with&nbsp;the&nbsp;given<br>
size.&nbsp;The&nbsp;corners&nbsp;are&nbsp;quarter-circles&nbsp;using&nbsp;the&nbsp;given&nbsp;radius.&nbsp;The<br>
current&nbsp;pen&nbsp;is&nbsp;used&nbsp;for&nbsp;the&nbsp;outline&nbsp;and&nbsp;the&nbsp;current&nbsp;brush&nbsp;for&nbsp;filling<br>
the&nbsp;shape.<br>
&nbsp;<br>
If&nbsp;radius&nbsp;is&nbsp;positive,&nbsp;the&nbsp;value&nbsp;is&nbsp;assumed&nbsp;to&nbsp;be&nbsp;the&nbsp;radius&nbsp;of&nbsp;the<br>
rounded&nbsp;corner.&nbsp;If&nbsp;radius&nbsp;is&nbsp;negative,&nbsp;the&nbsp;absolute&nbsp;value&nbsp;is&nbsp;assumed<br>
to&nbsp;be&nbsp;the&nbsp;proportion&nbsp;of&nbsp;the&nbsp;smallest&nbsp;dimension&nbsp;of&nbsp;the&nbsp;rectangle.&nbsp;This<br>
means&nbsp;that&nbsp;the&nbsp;corner&nbsp;can&nbsp;be&nbsp;a&nbsp;sensible&nbsp;size&nbsp;relative&nbsp;to&nbsp;the&nbsp;size&nbsp;of<br>
the&nbsp;rectangle,&nbsp;and&nbsp;also&nbsp;avoids&nbsp;the&nbsp;strange&nbsp;effects&nbsp;X&nbsp;produces&nbsp;when&nbsp;the<br>
corners&nbsp;are&nbsp;too&nbsp;big&nbsp;for&nbsp;the&nbsp;rectangle.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawRoundedRectanglePointSize"><strong>DrawRoundedRectanglePointSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawRoundedRectanglePointSize">DrawRoundedRectanglePointSize</a>(self,&nbsp;Point&nbsp;pt,&nbsp;Size&nbsp;sz,&nbsp;double&nbsp;radius)<br>
&nbsp;<br>
Draws&nbsp;a&nbsp;rectangle&nbsp;with&nbsp;the&nbsp;given&nbsp;top&nbsp;left&nbsp;corner,&nbsp;and&nbsp;with&nbsp;the&nbsp;given<br>
size.&nbsp;The&nbsp;corners&nbsp;are&nbsp;quarter-circles&nbsp;using&nbsp;the&nbsp;given&nbsp;radius.&nbsp;The<br>
current&nbsp;pen&nbsp;is&nbsp;used&nbsp;for&nbsp;the&nbsp;outline&nbsp;and&nbsp;the&nbsp;current&nbsp;brush&nbsp;for&nbsp;filling<br>
the&nbsp;shape.<br>
&nbsp;<br>
If&nbsp;radius&nbsp;is&nbsp;positive,&nbsp;the&nbsp;value&nbsp;is&nbsp;assumed&nbsp;to&nbsp;be&nbsp;the&nbsp;radius&nbsp;of&nbsp;the<br>
rounded&nbsp;corner.&nbsp;If&nbsp;radius&nbsp;is&nbsp;negative,&nbsp;the&nbsp;absolute&nbsp;value&nbsp;is&nbsp;assumed<br>
to&nbsp;be&nbsp;the&nbsp;proportion&nbsp;of&nbsp;the&nbsp;smallest&nbsp;dimension&nbsp;of&nbsp;the&nbsp;rectangle.&nbsp;This<br>
means&nbsp;that&nbsp;the&nbsp;corner&nbsp;can&nbsp;be&nbsp;a&nbsp;sensible&nbsp;size&nbsp;relative&nbsp;to&nbsp;the&nbsp;size&nbsp;of<br>
the&nbsp;rectangle,&nbsp;and&nbsp;also&nbsp;avoids&nbsp;the&nbsp;strange&nbsp;effects&nbsp;X&nbsp;produces&nbsp;when&nbsp;the<br>
corners&nbsp;are&nbsp;too&nbsp;big&nbsp;for&nbsp;the&nbsp;rectangle.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawRoundedRectangleRect"><strong>DrawRoundedRectangleRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawRoundedRectangleRect">DrawRoundedRectangleRect</a>(self,&nbsp;Rect&nbsp;r,&nbsp;double&nbsp;radius)<br>
&nbsp;<br>
Draws&nbsp;a&nbsp;rectangle&nbsp;with&nbsp;the&nbsp;given&nbsp;top&nbsp;left&nbsp;corner,&nbsp;and&nbsp;with&nbsp;the&nbsp;given<br>
size.&nbsp;The&nbsp;corners&nbsp;are&nbsp;quarter-circles&nbsp;using&nbsp;the&nbsp;given&nbsp;radius.&nbsp;The<br>
current&nbsp;pen&nbsp;is&nbsp;used&nbsp;for&nbsp;the&nbsp;outline&nbsp;and&nbsp;the&nbsp;current&nbsp;brush&nbsp;for&nbsp;filling<br>
the&nbsp;shape.<br>
&nbsp;<br>
If&nbsp;radius&nbsp;is&nbsp;positive,&nbsp;the&nbsp;value&nbsp;is&nbsp;assumed&nbsp;to&nbsp;be&nbsp;the&nbsp;radius&nbsp;of&nbsp;the<br>
rounded&nbsp;corner.&nbsp;If&nbsp;radius&nbsp;is&nbsp;negative,&nbsp;the&nbsp;absolute&nbsp;value&nbsp;is&nbsp;assumed<br>
to&nbsp;be&nbsp;the&nbsp;proportion&nbsp;of&nbsp;the&nbsp;smallest&nbsp;dimension&nbsp;of&nbsp;the&nbsp;rectangle.&nbsp;This<br>
means&nbsp;that&nbsp;the&nbsp;corner&nbsp;can&nbsp;be&nbsp;a&nbsp;sensible&nbsp;size&nbsp;relative&nbsp;to&nbsp;the&nbsp;size&nbsp;of<br>
the&nbsp;rectangle,&nbsp;and&nbsp;also&nbsp;avoids&nbsp;the&nbsp;strange&nbsp;effects&nbsp;X&nbsp;produces&nbsp;when&nbsp;the<br>
corners&nbsp;are&nbsp;too&nbsp;big&nbsp;for&nbsp;the&nbsp;rectangle.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawSpline"><strong>DrawSpline</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawSpline">DrawSpline</a>(self,&nbsp;List&nbsp;points)<br>
&nbsp;<br>
Draws&nbsp;a&nbsp;spline&nbsp;between&nbsp;all&nbsp;given&nbsp;control&nbsp;points,&nbsp;(a&nbsp;list&nbsp;of&nbsp;`wx.Point`<br>
objects)&nbsp;using&nbsp;the&nbsp;current&nbsp;pen.&nbsp;The&nbsp;spline&nbsp;is&nbsp;drawn&nbsp;using&nbsp;a&nbsp;series&nbsp;of<br>
lines,&nbsp;using&nbsp;an&nbsp;algorithm&nbsp;taken&nbsp;from&nbsp;the&nbsp;X&nbsp;drawing&nbsp;program&nbsp;'XFIG'.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawText"><strong>DrawText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawText">DrawText</a>(self,&nbsp;String&nbsp;text,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)<br>
&nbsp;<br>
Draws&nbsp;a&nbsp;text&nbsp;string&nbsp;at&nbsp;the&nbsp;specified&nbsp;point,&nbsp;using&nbsp;the&nbsp;current&nbsp;text<br>
font,&nbsp;and&nbsp;the&nbsp;current&nbsp;text&nbsp;foreground&nbsp;and&nbsp;background&nbsp;colours.<br>
&nbsp;<br>
The&nbsp;coordinates&nbsp;refer&nbsp;to&nbsp;the&nbsp;top-left&nbsp;corner&nbsp;of&nbsp;the&nbsp;rectangle&nbsp;bounding<br>
the&nbsp;string.&nbsp;See&nbsp;`GetTextExtent`&nbsp;for&nbsp;how&nbsp;to&nbsp;get&nbsp;the&nbsp;dimensions&nbsp;of&nbsp;a<br>
text&nbsp;string,&nbsp;which&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;position&nbsp;the&nbsp;text&nbsp;more&nbsp;precisely.<br>
&nbsp;<br>
**NOTE**:&nbsp;under&nbsp;wxGTK&nbsp;the&nbsp;current&nbsp;logical&nbsp;function&nbsp;is&nbsp;used&nbsp;by&nbsp;this<br>
function&nbsp;but&nbsp;it&nbsp;is&nbsp;ignored&nbsp;by&nbsp;wxMSW.&nbsp;Thus,&nbsp;you&nbsp;should&nbsp;avoid&nbsp;using<br>
logical&nbsp;functions&nbsp;with&nbsp;this&nbsp;function&nbsp;in&nbsp;portable&nbsp;programs.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawTextList"><strong>DrawTextList</strong></a>(self, textList, coords, foregrounds<font color="#909090">=None</font>, backgrounds<font color="#909090">=None</font>)</dt><dd><tt>Draw&nbsp;a&nbsp;list&nbsp;of&nbsp;strings&nbsp;using&nbsp;a&nbsp;list&nbsp;of&nbsp;coordinants&nbsp;for&nbsp;positioning&nbsp;each&nbsp;string.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;:param&nbsp;textList:&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;list&nbsp;of&nbsp;strings<br>
&nbsp;&nbsp;&nbsp;&nbsp;:param&nbsp;coords:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;list&nbsp;of&nbsp;(x,y)&nbsp;positions<br>
&nbsp;&nbsp;&nbsp;&nbsp;:param&nbsp;foregrounds:&nbsp;A&nbsp;list&nbsp;of&nbsp;`wx.Colour`&nbsp;objects&nbsp;to&nbsp;use&nbsp;for&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foregrounds&nbsp;of&nbsp;the&nbsp;strings.<br>
&nbsp;&nbsp;&nbsp;&nbsp;:param&nbsp;backgrounds:&nbsp;A&nbsp;list&nbsp;of&nbsp;`wx.Colour`&nbsp;objects&nbsp;to&nbsp;use&nbsp;for&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgrounds&nbsp;of&nbsp;the&nbsp;strings.<br>
&nbsp;<br>
NOTE:&nbsp;Make&nbsp;sure&nbsp;you&nbsp;set&nbsp;Background&nbsp;mode&nbsp;to&nbsp;wx.Solid&nbsp;(DC.SetBackgroundMode)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;you&nbsp;want&nbsp;backgrounds&nbsp;to&nbsp;do&nbsp;anything.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-DrawTextPoint"><strong>DrawTextPoint</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-DrawTextPoint">DrawTextPoint</a>(self,&nbsp;String&nbsp;text,&nbsp;Point&nbsp;pt)<br>
&nbsp;<br>
Draws&nbsp;a&nbsp;text&nbsp;string&nbsp;at&nbsp;the&nbsp;specified&nbsp;point,&nbsp;using&nbsp;the&nbsp;current&nbsp;text<br>
font,&nbsp;and&nbsp;the&nbsp;current&nbsp;text&nbsp;foreground&nbsp;and&nbsp;background&nbsp;colours.<br>
&nbsp;<br>
The&nbsp;coordinates&nbsp;refer&nbsp;to&nbsp;the&nbsp;top-left&nbsp;corner&nbsp;of&nbsp;the&nbsp;rectangle&nbsp;bounding<br>
the&nbsp;string.&nbsp;See&nbsp;`GetTextExtent`&nbsp;for&nbsp;how&nbsp;to&nbsp;get&nbsp;the&nbsp;dimensions&nbsp;of&nbsp;a<br>
text&nbsp;string,&nbsp;which&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;position&nbsp;the&nbsp;text&nbsp;more&nbsp;precisely.<br>
&nbsp;<br>
**NOTE**:&nbsp;under&nbsp;wxGTK&nbsp;the&nbsp;current&nbsp;logical&nbsp;function&nbsp;is&nbsp;used&nbsp;by&nbsp;this<br>
function&nbsp;but&nbsp;it&nbsp;is&nbsp;ignored&nbsp;by&nbsp;wxMSW.&nbsp;Thus,&nbsp;you&nbsp;should&nbsp;avoid&nbsp;using<br>
logical&nbsp;functions&nbsp;with&nbsp;this&nbsp;function&nbsp;in&nbsp;portable&nbsp;programs.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-EndDoc"><strong>EndDoc</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-EndDoc">EndDoc</a>(self)<br>
&nbsp;<br>
Ends&nbsp;a&nbsp;document&nbsp;(only&nbsp;relevant&nbsp;when&nbsp;outputting&nbsp;to&nbsp;a&nbsp;printer).</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-EndDrawing"><strong>EndDrawing</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-EndDrawing">EndDrawing</a>(self)<br>
&nbsp;<br>
Ends&nbsp;the&nbsp;group&nbsp;of&nbsp;drawing&nbsp;primitives&nbsp;started&nbsp;with&nbsp;`BeginDrawing`,&nbsp;and<br>
invokes&nbsp;whatever&nbsp;optimization&nbsp;is&nbsp;available&nbsp;for&nbsp;this&nbsp;DC&nbsp;type&nbsp;on&nbsp;the<br>
current&nbsp;platform.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-EndPage"><strong>EndPage</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-EndPage">EndPage</a>(self)<br>
&nbsp;<br>
Ends&nbsp;a&nbsp;document&nbsp;page&nbsp;(only&nbsp;relevant&nbsp;when&nbsp;outputting&nbsp;to&nbsp;a&nbsp;printer).</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-FloodFill"><strong>FloodFill</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-FloodFill">FloodFill</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;Colour&nbsp;col,&nbsp;int&nbsp;style=FLOOD_SURFACE)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Flood&nbsp;fills&nbsp;the&nbsp;device&nbsp;context&nbsp;starting&nbsp;from&nbsp;the&nbsp;given&nbsp;point,&nbsp;using<br>
the&nbsp;current&nbsp;brush&nbsp;colour,&nbsp;and&nbsp;using&nbsp;a&nbsp;style:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;**wxFLOOD_SURFACE**:&nbsp;the&nbsp;flooding&nbsp;occurs&nbsp;until&nbsp;a&nbsp;colour&nbsp;other&nbsp;than<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;given&nbsp;colour&nbsp;is&nbsp;encountered.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;**wxFLOOD_BORDER**:&nbsp;the&nbsp;area&nbsp;to&nbsp;be&nbsp;flooded&nbsp;is&nbsp;bounded&nbsp;by&nbsp;the&nbsp;given<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colour.<br>
&nbsp;<br>
Returns&nbsp;False&nbsp;if&nbsp;the&nbsp;operation&nbsp;failed.<br>
&nbsp;<br>
Note:&nbsp;The&nbsp;present&nbsp;implementation&nbsp;for&nbsp;non-Windows&nbsp;platforms&nbsp;may&nbsp;fail&nbsp;to<br>
find&nbsp;colour&nbsp;borders&nbsp;if&nbsp;the&nbsp;pixels&nbsp;do&nbsp;not&nbsp;match&nbsp;the&nbsp;colour<br>
exactly.&nbsp;However&nbsp;the&nbsp;function&nbsp;will&nbsp;still&nbsp;return&nbsp;true.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-FloodFillPoint"><strong>FloodFillPoint</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-FloodFillPoint">FloodFillPoint</a>(self,&nbsp;Point&nbsp;pt,&nbsp;Colour&nbsp;col,&nbsp;int&nbsp;style=FLOOD_SURFACE)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Flood&nbsp;fills&nbsp;the&nbsp;device&nbsp;context&nbsp;starting&nbsp;from&nbsp;the&nbsp;given&nbsp;point,&nbsp;using<br>
the&nbsp;current&nbsp;brush&nbsp;colour,&nbsp;and&nbsp;using&nbsp;a&nbsp;style:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;**wxFLOOD_SURFACE**:&nbsp;the&nbsp;flooding&nbsp;occurs&nbsp;until&nbsp;a&nbsp;colour&nbsp;other&nbsp;than<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;given&nbsp;colour&nbsp;is&nbsp;encountered.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;**wxFLOOD_BORDER**:&nbsp;the&nbsp;area&nbsp;to&nbsp;be&nbsp;flooded&nbsp;is&nbsp;bounded&nbsp;by&nbsp;the&nbsp;given<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colour.<br>
&nbsp;<br>
Returns&nbsp;False&nbsp;if&nbsp;the&nbsp;operation&nbsp;failed.<br>
&nbsp;<br>
Note:&nbsp;The&nbsp;present&nbsp;implementation&nbsp;for&nbsp;non-Windows&nbsp;platforms&nbsp;may&nbsp;fail&nbsp;to<br>
find&nbsp;colour&nbsp;borders&nbsp;if&nbsp;the&nbsp;pixels&nbsp;do&nbsp;not&nbsp;match&nbsp;the&nbsp;colour<br>
exactly.&nbsp;However&nbsp;the&nbsp;function&nbsp;will&nbsp;still&nbsp;return&nbsp;true.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetBackground"><strong>GetBackground</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetBackground">GetBackground</a>(self)&nbsp;-&gt;&nbsp;Brush<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;brush&nbsp;used&nbsp;for&nbsp;painting&nbsp;the&nbsp;background.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetBackgroundMode"><strong>GetBackgroundMode</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetBackgroundMode">GetBackgroundMode</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;current&nbsp;background&nbsp;mode,&nbsp;either&nbsp;``wx.SOLID``&nbsp;or<br>
``wx.TRANSPARENT``.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetBoundingBox"><strong>GetBoundingBox</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetBoundingBox">GetBoundingBox</a>()&nbsp;-&gt;&nbsp;(x1,y1,&nbsp;x2,y2)<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;min&nbsp;and&nbsp;max&nbsp;points&nbsp;used&nbsp;in&nbsp;drawing&nbsp;commands&nbsp;so&nbsp;far.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetBrush"><strong>GetBrush</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetBrush">GetBrush</a>(self)&nbsp;-&gt;&nbsp;Brush<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;current&nbsp;brush</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetCharHeight"><strong>GetCharHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetCharHeight">GetCharHeight</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;character&nbsp;height&nbsp;of&nbsp;the&nbsp;currently&nbsp;set&nbsp;font.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetCharWidth"><strong>GetCharWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetCharWidth">GetCharWidth</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;average&nbsp;character&nbsp;width&nbsp;of&nbsp;the&nbsp;currently&nbsp;set&nbsp;font.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetClippingBox"><strong>GetClippingBox</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetClippingBox">GetClippingBox</a>()&nbsp;-&gt;&nbsp;(x,&nbsp;y,&nbsp;width,&nbsp;height)<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;rectangle&nbsp;surrounding&nbsp;the&nbsp;current&nbsp;clipping&nbsp;region.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetClippingRect"><strong>GetClippingRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetClippingRect">GetClippingRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;rectangle&nbsp;surrounding&nbsp;the&nbsp;current&nbsp;clipping&nbsp;region.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetDepth"><strong>GetDepth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetDepth">GetDepth</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;colour&nbsp;depth&nbsp;of&nbsp;the&nbsp;DC.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetDeviceOrigin"><strong>GetDeviceOrigin</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetDeviceOrigin">GetDeviceOrigin</a>(self)&nbsp;-&gt;&nbsp;Point</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetDeviceOriginTuple"><strong>GetDeviceOriginTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetDeviceOriginTuple">GetDeviceOriginTuple</a>()&nbsp;-&gt;&nbsp;(x,y)</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetFont"><strong>GetFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetFont">GetFont</a>(self)&nbsp;-&gt;&nbsp;Font<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;current&nbsp;font</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetFullTextExtent"><strong>GetFullTextExtent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetFullTextExtent">GetFullTextExtent</a>(wxString&nbsp;string,&nbsp;Font&nbsp;font=None)&nbsp;-&gt;<br>
&nbsp;&nbsp;&nbsp;(width,&nbsp;height,&nbsp;descent,&nbsp;externalLeading)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;width,&nbsp;height,&nbsp;decent&nbsp;and&nbsp;leading&nbsp;of&nbsp;the&nbsp;text&nbsp;using&nbsp;the<br>
current&nbsp;or&nbsp;specified&nbsp;font.&nbsp;Only&nbsp;works&nbsp;for&nbsp;single&nbsp;line&nbsp;strings.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetLogicalFunction"><strong>GetLogicalFunction</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetLogicalFunction">GetLogicalFunction</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;current&nbsp;logical&nbsp;function&nbsp;(set&nbsp;by&nbsp;`SetLogicalFunction`).</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetLogicalOrigin"><strong>GetLogicalOrigin</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetLogicalOrigin">GetLogicalOrigin</a>(self)&nbsp;-&gt;&nbsp;Point</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetLogicalOriginTuple"><strong>GetLogicalOriginTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetLogicalOriginTuple">GetLogicalOriginTuple</a>()&nbsp;-&gt;&nbsp;(x,y)</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetLogicalScale"><strong>GetLogicalScale</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetLogicalScale">GetLogicalScale</a>()&nbsp;-&gt;&nbsp;(xScale,&nbsp;yScale)</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetMapMode"><strong>GetMapMode</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetMapMode">GetMapMode</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;current&nbsp;*mapping&nbsp;mode*&nbsp;for&nbsp;the&nbsp;device&nbsp;context</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetMultiLineTextExtent"><strong>GetMultiLineTextExtent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetMultiLineTextExtent">GetMultiLineTextExtent</a>(wxString&nbsp;string,&nbsp;Font&nbsp;font=None)&nbsp;-&gt;<br>
&nbsp;&nbsp;&nbsp;(width,&nbsp;height,&nbsp;descent,&nbsp;externalLeading)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;width,&nbsp;height,&nbsp;decent&nbsp;and&nbsp;leading&nbsp;of&nbsp;the&nbsp;text&nbsp;using&nbsp;the<br>
current&nbsp;or&nbsp;specified&nbsp;font.&nbsp;Works&nbsp;for&nbsp;single&nbsp;as&nbsp;well&nbsp;as&nbsp;multi-line<br>
strings.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetOptimization"><strong>GetOptimization</strong></a> = deprecatedWrapper(*args, **kwargs)</dt><dd><tt>&lt;function&nbsp;GetOptimization&nbsp;at&nbsp;0x2b90d8fb6398&gt;&nbsp;is&nbsp;deprecated</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetPPI"><strong>GetPPI</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetPPI">GetPPI</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Resolution&nbsp;in&nbsp;Pixels&nbsp;per&nbsp;inch</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetPartialTextExtents"><strong>GetPartialTextExtents</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetPartialTextExtents">GetPartialTextExtents</a>(self,&nbsp;text)&nbsp;-&gt;&nbsp;[widths]<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;list&nbsp;of&nbsp;integers&nbsp;such&nbsp;that&nbsp;each&nbsp;value&nbsp;is&nbsp;the&nbsp;distance&nbsp;in<br>
pixels&nbsp;from&nbsp;the&nbsp;begining&nbsp;of&nbsp;text&nbsp;to&nbsp;the&nbsp;coresponding&nbsp;character&nbsp;of<br>
*text*.&nbsp;The&nbsp;generic&nbsp;version&nbsp;simply&nbsp;builds&nbsp;a&nbsp;running&nbsp;total&nbsp;of&nbsp;the&nbsp;widths<br>
of&nbsp;each&nbsp;character&nbsp;using&nbsp;GetTextExtent,&nbsp;however&nbsp;if&nbsp;the&nbsp;various<br>
platforms&nbsp;have&nbsp;a&nbsp;native&nbsp;API&nbsp;function&nbsp;that&nbsp;is&nbsp;faster&nbsp;or&nbsp;more&nbsp;accurate<br>
than&nbsp;the&nbsp;generic&nbsp;implementation&nbsp;then&nbsp;it&nbsp;will&nbsp;be&nbsp;used&nbsp;instead.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetPen"><strong>GetPen</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetPen">GetPen</a>(self)&nbsp;-&gt;&nbsp;Pen<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;current&nbsp;pen</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetPixel"><strong>GetPixel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetPixel">GetPixel</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;Colour<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;colour&nbsp;at&nbsp;the&nbsp;specified&nbsp;location&nbsp;on&nbsp;the&nbsp;DC.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetPixelPoint"><strong>GetPixelPoint</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetPixelPoint">GetPixelPoint</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Colour</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetSize"><strong>GetSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetSize">GetSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;gets&nbsp;the&nbsp;horizontal&nbsp;and&nbsp;vertical&nbsp;resolution&nbsp;in&nbsp;device&nbsp;units.&nbsp;It<br>
can&nbsp;be&nbsp;used&nbsp;to&nbsp;scale&nbsp;graphics&nbsp;to&nbsp;fit&nbsp;the&nbsp;page.&nbsp;For&nbsp;example,&nbsp;if&nbsp;*maxX*<br>
and&nbsp;*maxY*&nbsp;represent&nbsp;the&nbsp;maximum&nbsp;horizontal&nbsp;and&nbsp;vertical&nbsp;'pixel'&nbsp;values<br>
used&nbsp;in&nbsp;your&nbsp;application,&nbsp;the&nbsp;following&nbsp;code&nbsp;will&nbsp;scale&nbsp;the&nbsp;graphic&nbsp;to<br>
fit&nbsp;on&nbsp;the&nbsp;printer&nbsp;page::<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w,&nbsp;h&nbsp;=&nbsp;dc.<a href="#GraphicsContextWx-GetSize">GetSize</a>()<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scaleX&nbsp;=&nbsp;maxX*1.0&nbsp;/&nbsp;w<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scaleY&nbsp;=&nbsp;maxY*1.0&nbsp;/&nbsp;h<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dc.<a href="#GraphicsContextWx-SetUserScale">SetUserScale</a>(min(scaleX,scaleY),min(scaleX,scaleY))</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetSizeMM"><strong>GetSizeMM</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetSizeMM">GetSizeMM</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Get&nbsp;the&nbsp;DC&nbsp;size&nbsp;in&nbsp;milimeters.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetSizeMMTuple"><strong>GetSizeMMTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetSizeMMTuple">GetSizeMMTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;DC&nbsp;size&nbsp;in&nbsp;milimeters.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetSizeTuple"><strong>GetSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetSizeTuple">GetSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
This&nbsp;gets&nbsp;the&nbsp;horizontal&nbsp;and&nbsp;vertical&nbsp;resolution&nbsp;in&nbsp;device&nbsp;units.&nbsp;It<br>
can&nbsp;be&nbsp;used&nbsp;to&nbsp;scale&nbsp;graphics&nbsp;to&nbsp;fit&nbsp;the&nbsp;page.&nbsp;For&nbsp;example,&nbsp;if&nbsp;*maxX*<br>
and&nbsp;*maxY*&nbsp;represent&nbsp;the&nbsp;maximum&nbsp;horizontal&nbsp;and&nbsp;vertical&nbsp;'pixel'&nbsp;values<br>
used&nbsp;in&nbsp;your&nbsp;application,&nbsp;the&nbsp;following&nbsp;code&nbsp;will&nbsp;scale&nbsp;the&nbsp;graphic&nbsp;to<br>
fit&nbsp;on&nbsp;the&nbsp;printer&nbsp;page::<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w,&nbsp;h&nbsp;=&nbsp;dc.<a href="#GraphicsContextWx-GetSize">GetSize</a>()<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scaleX&nbsp;=&nbsp;maxX*1.0&nbsp;/&nbsp;w<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scaleY&nbsp;=&nbsp;maxY*1.0&nbsp;/&nbsp;h<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dc.<a href="#GraphicsContextWx-SetUserScale">SetUserScale</a>(min(scaleX,scaleY),min(scaleX,scaleY))</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetTextBackground"><strong>GetTextBackground</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetTextBackground">GetTextBackground</a>(self)&nbsp;-&gt;&nbsp;Colour<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;current&nbsp;text&nbsp;background&nbsp;colour</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetTextExtent"><strong>GetTextExtent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetTextExtent">GetTextExtent</a>(wxString&nbsp;string)&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;width&nbsp;and&nbsp;height&nbsp;of&nbsp;the&nbsp;text&nbsp;using&nbsp;the&nbsp;current&nbsp;font.&nbsp;Only<br>
works&nbsp;for&nbsp;single&nbsp;line&nbsp;strings.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetTextForeground"><strong>GetTextForeground</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetTextForeground">GetTextForeground</a>(self)&nbsp;-&gt;&nbsp;Colour<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;current&nbsp;text&nbsp;foreground&nbsp;colour</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetUserScale"><strong>GetUserScale</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetUserScale">GetUserScale</a>(self)&nbsp;-&gt;&nbsp;(xScale,&nbsp;yScale)<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;current&nbsp;user&nbsp;scale&nbsp;factor&nbsp;(set&nbsp;by&nbsp;`SetUserScale`).</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-LogicalToDeviceX"><strong>LogicalToDeviceX</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-LogicalToDeviceX">LogicalToDeviceX</a>(self,&nbsp;int&nbsp;x)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Converts&nbsp;logical&nbsp;X&nbsp;coordinate&nbsp;to&nbsp;device&nbsp;coordinate,&nbsp;using&nbsp;the&nbsp;current<br>
mapping&nbsp;mode.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-LogicalToDeviceXRel"><strong>LogicalToDeviceXRel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-LogicalToDeviceXRel">LogicalToDeviceXRel</a>(self,&nbsp;int&nbsp;x)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Converts&nbsp;logical&nbsp;X&nbsp;coordinate&nbsp;to&nbsp;relative&nbsp;device&nbsp;coordinate,&nbsp;using&nbsp;the<br>
current&nbsp;mapping&nbsp;mode&nbsp;but&nbsp;ignoring&nbsp;the&nbsp;x&nbsp;axis&nbsp;orientation.&nbsp;Use&nbsp;this&nbsp;for<br>
converting&nbsp;a&nbsp;width,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-LogicalToDeviceY"><strong>LogicalToDeviceY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-LogicalToDeviceY">LogicalToDeviceY</a>(self,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Converts&nbsp;logical&nbsp;Y&nbsp;coordinate&nbsp;to&nbsp;device&nbsp;coordinate,&nbsp;using&nbsp;the&nbsp;current<br>
mapping&nbsp;mode.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-LogicalToDeviceYRel"><strong>LogicalToDeviceYRel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-LogicalToDeviceYRel">LogicalToDeviceYRel</a>(self,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Converts&nbsp;logical&nbsp;Y&nbsp;coordinate&nbsp;to&nbsp;relative&nbsp;device&nbsp;coordinate,&nbsp;using&nbsp;the<br>
current&nbsp;mapping&nbsp;mode&nbsp;but&nbsp;ignoring&nbsp;the&nbsp;y&nbsp;axis&nbsp;orientation.&nbsp;Use&nbsp;this&nbsp;for<br>
converting&nbsp;a&nbsp;height,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-MaxX"><strong>MaxX</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-MaxX">MaxX</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;maximum&nbsp;horizontal&nbsp;extent&nbsp;used&nbsp;in&nbsp;drawing&nbsp;commands&nbsp;so&nbsp;far.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-MaxY"><strong>MaxY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-MaxY">MaxY</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;maximum&nbsp;vertical&nbsp;extent&nbsp;used&nbsp;in&nbsp;drawing&nbsp;commands&nbsp;so&nbsp;far.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-MinX"><strong>MinX</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-MinX">MinX</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;minimum&nbsp;horizontal&nbsp;extent&nbsp;used&nbsp;in&nbsp;drawing&nbsp;commands&nbsp;so&nbsp;far.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-MinY"><strong>MinY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-MinY">MinY</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;minimum&nbsp;vertical&nbsp;extent&nbsp;used&nbsp;in&nbsp;drawing&nbsp;commands&nbsp;so&nbsp;far.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-Ok"><strong>Ok</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-Ok">Ok</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;DC&nbsp;is&nbsp;ok&nbsp;to&nbsp;use.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-ResetBoundingBox"><strong>ResetBoundingBox</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-ResetBoundingBox">ResetBoundingBox</a>(self)<br>
&nbsp;<br>
Resets&nbsp;the&nbsp;bounding&nbsp;box:&nbsp;after&nbsp;a&nbsp;call&nbsp;to&nbsp;this&nbsp;function,&nbsp;the&nbsp;bounding<br>
box&nbsp;doesn't&nbsp;contain&nbsp;anything.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-SetAxisOrientation"><strong>SetAxisOrientation</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-SetAxisOrientation">SetAxisOrientation</a>(self,&nbsp;bool&nbsp;xLeftRight,&nbsp;bool&nbsp;yBottomUp)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;axis&nbsp;orientation&nbsp;(i.e.,&nbsp;the&nbsp;direction&nbsp;from&nbsp;lowest&nbsp;to<br>
highest&nbsp;values&nbsp;on&nbsp;the&nbsp;axis).&nbsp;The&nbsp;default&nbsp;orientation&nbsp;is&nbsp;the&nbsp;natural<br>
orientation,&nbsp;e.g.&nbsp;x&nbsp;axis&nbsp;from&nbsp;left&nbsp;to&nbsp;right&nbsp;and&nbsp;y&nbsp;axis&nbsp;from&nbsp;bottom&nbsp;up.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-SetBackground"><strong>SetBackground</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-SetBackground">SetBackground</a>(self,&nbsp;Brush&nbsp;brush)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;current&nbsp;background&nbsp;brush&nbsp;for&nbsp;the&nbsp;DC.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-SetBackgroundMode"><strong>SetBackgroundMode</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-SetBackgroundMode">SetBackgroundMode</a>(self,&nbsp;int&nbsp;mode)<br>
&nbsp;<br>
*mode*&nbsp;may&nbsp;be&nbsp;one&nbsp;of&nbsp;``wx.SOLID``&nbsp;and&nbsp;``wx.TRANSPARENT``.&nbsp;This&nbsp;setting<br>
determines&nbsp;whether&nbsp;text&nbsp;will&nbsp;be&nbsp;drawn&nbsp;with&nbsp;a&nbsp;background&nbsp;colour&nbsp;or<br>
not.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-SetBrush"><strong>SetBrush</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-SetBrush">SetBrush</a>(self,&nbsp;Brush&nbsp;brush)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;current&nbsp;brush&nbsp;for&nbsp;the&nbsp;DC.<br>
&nbsp;<br>
If&nbsp;the&nbsp;argument&nbsp;is&nbsp;``wx.NullBrush``,&nbsp;the&nbsp;current&nbsp;brush&nbsp;is&nbsp;selected&nbsp;out<br>
of&nbsp;the&nbsp;device&nbsp;context,&nbsp;and&nbsp;the&nbsp;original&nbsp;brush&nbsp;restored,&nbsp;allowing&nbsp;the<br>
current&nbsp;brush&nbsp;to&nbsp;be&nbsp;destroyed&nbsp;safely.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-SetClippingRect"><strong>SetClippingRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-SetClippingRect">SetClippingRect</a>(self,&nbsp;Rect&nbsp;rect)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;clipping&nbsp;region&nbsp;for&nbsp;this&nbsp;device&nbsp;context&nbsp;to&nbsp;the&nbsp;intersection<br>
of&nbsp;the&nbsp;given&nbsp;region&nbsp;described&nbsp;by&nbsp;the&nbsp;parameters&nbsp;of&nbsp;this&nbsp;method&nbsp;and&nbsp;the<br>
previously&nbsp;set&nbsp;clipping&nbsp;region.&nbsp;You&nbsp;should&nbsp;call&nbsp;`DestroyClippingRegion`<br>
if&nbsp;you&nbsp;want&nbsp;to&nbsp;set&nbsp;the&nbsp;clipping&nbsp;region&nbsp;exactly&nbsp;to&nbsp;the&nbsp;region<br>
specified.<br>
&nbsp;<br>
The&nbsp;clipping&nbsp;region&nbsp;is&nbsp;an&nbsp;area&nbsp;to&nbsp;which&nbsp;drawing&nbsp;is<br>
restricted.&nbsp;Possible&nbsp;uses&nbsp;for&nbsp;the&nbsp;clipping&nbsp;region&nbsp;are&nbsp;for&nbsp;clipping<br>
text&nbsp;or&nbsp;for&nbsp;speeding&nbsp;up&nbsp;window&nbsp;redraws&nbsp;when&nbsp;only&nbsp;a&nbsp;known&nbsp;area&nbsp;of&nbsp;the<br>
screen&nbsp;is&nbsp;damaged.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-SetClippingRegion"><strong>SetClippingRegion</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-SetClippingRegion">SetClippingRegion</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;clipping&nbsp;region&nbsp;for&nbsp;this&nbsp;device&nbsp;context&nbsp;to&nbsp;the&nbsp;intersection<br>
of&nbsp;the&nbsp;given&nbsp;region&nbsp;described&nbsp;by&nbsp;the&nbsp;parameters&nbsp;of&nbsp;this&nbsp;method&nbsp;and&nbsp;the<br>
previously&nbsp;set&nbsp;clipping&nbsp;region.&nbsp;You&nbsp;should&nbsp;call&nbsp;`DestroyClippingRegion`<br>
if&nbsp;you&nbsp;want&nbsp;to&nbsp;set&nbsp;the&nbsp;clipping&nbsp;region&nbsp;exactly&nbsp;to&nbsp;the&nbsp;region<br>
specified.<br>
&nbsp;<br>
The&nbsp;clipping&nbsp;region&nbsp;is&nbsp;an&nbsp;area&nbsp;to&nbsp;which&nbsp;drawing&nbsp;is<br>
restricted.&nbsp;Possible&nbsp;uses&nbsp;for&nbsp;the&nbsp;clipping&nbsp;region&nbsp;are&nbsp;for&nbsp;clipping<br>
text&nbsp;or&nbsp;for&nbsp;speeding&nbsp;up&nbsp;window&nbsp;redraws&nbsp;when&nbsp;only&nbsp;a&nbsp;known&nbsp;area&nbsp;of&nbsp;the<br>
screen&nbsp;is&nbsp;damaged.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-SetClippingRegionAsRegion"><strong>SetClippingRegionAsRegion</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-SetClippingRegionAsRegion">SetClippingRegionAsRegion</a>(self,&nbsp;Region&nbsp;region)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;clipping&nbsp;region&nbsp;for&nbsp;this&nbsp;device&nbsp;context&nbsp;to&nbsp;the&nbsp;intersection<br>
of&nbsp;the&nbsp;given&nbsp;region&nbsp;described&nbsp;by&nbsp;the&nbsp;parameters&nbsp;of&nbsp;this&nbsp;method&nbsp;and&nbsp;the<br>
previously&nbsp;set&nbsp;clipping&nbsp;region.&nbsp;You&nbsp;should&nbsp;call&nbsp;`DestroyClippingRegion`<br>
if&nbsp;you&nbsp;want&nbsp;to&nbsp;set&nbsp;the&nbsp;clipping&nbsp;region&nbsp;exactly&nbsp;to&nbsp;the&nbsp;region<br>
specified.<br>
&nbsp;<br>
The&nbsp;clipping&nbsp;region&nbsp;is&nbsp;an&nbsp;area&nbsp;to&nbsp;which&nbsp;drawing&nbsp;is<br>
restricted.&nbsp;Possible&nbsp;uses&nbsp;for&nbsp;the&nbsp;clipping&nbsp;region&nbsp;are&nbsp;for&nbsp;clipping<br>
text&nbsp;or&nbsp;for&nbsp;speeding&nbsp;up&nbsp;window&nbsp;redraws&nbsp;when&nbsp;only&nbsp;a&nbsp;known&nbsp;area&nbsp;of&nbsp;the<br>
screen&nbsp;is&nbsp;damaged.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-SetClippingRegionPointSize"><strong>SetClippingRegionPointSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-SetClippingRegionPointSize">SetClippingRegionPointSize</a>(self,&nbsp;Point&nbsp;pt,&nbsp;Size&nbsp;sz)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;clipping&nbsp;region&nbsp;for&nbsp;this&nbsp;device&nbsp;context&nbsp;to&nbsp;the&nbsp;intersection<br>
of&nbsp;the&nbsp;given&nbsp;region&nbsp;described&nbsp;by&nbsp;the&nbsp;parameters&nbsp;of&nbsp;this&nbsp;method&nbsp;and&nbsp;the<br>
previously&nbsp;set&nbsp;clipping&nbsp;region.&nbsp;You&nbsp;should&nbsp;call&nbsp;`DestroyClippingRegion`<br>
if&nbsp;you&nbsp;want&nbsp;to&nbsp;set&nbsp;the&nbsp;clipping&nbsp;region&nbsp;exactly&nbsp;to&nbsp;the&nbsp;region<br>
specified.<br>
&nbsp;<br>
The&nbsp;clipping&nbsp;region&nbsp;is&nbsp;an&nbsp;area&nbsp;to&nbsp;which&nbsp;drawing&nbsp;is<br>
restricted.&nbsp;Possible&nbsp;uses&nbsp;for&nbsp;the&nbsp;clipping&nbsp;region&nbsp;are&nbsp;for&nbsp;clipping<br>
text&nbsp;or&nbsp;for&nbsp;speeding&nbsp;up&nbsp;window&nbsp;redraws&nbsp;when&nbsp;only&nbsp;a&nbsp;known&nbsp;area&nbsp;of&nbsp;the<br>
screen&nbsp;is&nbsp;damaged.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-SetDeviceOrigin"><strong>SetDeviceOrigin</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-SetDeviceOrigin">SetDeviceOrigin</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-SetDeviceOriginPoint"><strong>SetDeviceOriginPoint</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-SetDeviceOriginPoint">SetDeviceOriginPoint</a>(self,&nbsp;Point&nbsp;point)</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-SetFont"><strong>SetFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-SetFont">SetFont</a>(self,&nbsp;Font&nbsp;font)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;current&nbsp;font&nbsp;for&nbsp;the&nbsp;DC.&nbsp;It&nbsp;must&nbsp;be&nbsp;a&nbsp;valid&nbsp;font,&nbsp;in<br>
particular&nbsp;you&nbsp;should&nbsp;not&nbsp;pass&nbsp;``wx.NullFont``&nbsp;to&nbsp;this&nbsp;method.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-SetLogicalFunction"><strong>SetLogicalFunction</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-SetLogicalFunction">SetLogicalFunction</a>(self,&nbsp;int&nbsp;function)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;current&nbsp;logical&nbsp;function&nbsp;for&nbsp;the&nbsp;device&nbsp;context.&nbsp;This<br>
determines&nbsp;how&nbsp;a&nbsp;source&nbsp;pixel&nbsp;(from&nbsp;a&nbsp;pen&nbsp;or&nbsp;brush&nbsp;colour,&nbsp;or&nbsp;source<br>
device&nbsp;context&nbsp;if&nbsp;using&nbsp;`Blit`)&nbsp;combines&nbsp;with&nbsp;a&nbsp;destination&nbsp;pixel&nbsp;in<br>
the&nbsp;current&nbsp;device&nbsp;context.<br>
&nbsp;<br>
The&nbsp;possible&nbsp;values&nbsp;and&nbsp;their&nbsp;meaning&nbsp;in&nbsp;terms&nbsp;of&nbsp;source&nbsp;and<br>
destination&nbsp;pixel&nbsp;values&nbsp;are&nbsp;as&nbsp;follows:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;================&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;==========================<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.AND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;src&nbsp;AND&nbsp;dst<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.AND_INVERT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(NOT&nbsp;src)&nbsp;AND&nbsp;dst<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.AND_REVERSE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;src&nbsp;AND&nbsp;(NOT&nbsp;dst)<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.CLEAR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.COPY&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;src<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.EQUIV&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(NOT&nbsp;src)&nbsp;XOR&nbsp;dst<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.INVERT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NOT&nbsp;dst<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.NAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(NOT&nbsp;src)&nbsp;OR&nbsp;(NOT&nbsp;dst)<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.NOR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(NOT&nbsp;src)&nbsp;AND&nbsp;(NOT&nbsp;dst)<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.NO_OP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dst<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.OR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;src&nbsp;OR&nbsp;dst<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.OR_INVERT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(NOT&nbsp;src)&nbsp;OR&nbsp;dst<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.OR_REVERSE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;src&nbsp;OR&nbsp;(NOT&nbsp;dst)<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.SET&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.SRC_INVERT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NOT&nbsp;src<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.XOR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;src&nbsp;XOR&nbsp;dst<br>
&nbsp;&nbsp;&nbsp;&nbsp;================&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;==========================<br>
&nbsp;<br>
The&nbsp;default&nbsp;is&nbsp;wx.COPY,&nbsp;which&nbsp;simply&nbsp;draws&nbsp;with&nbsp;the&nbsp;current<br>
colour.&nbsp;The&nbsp;others&nbsp;combine&nbsp;the&nbsp;current&nbsp;colour&nbsp;and&nbsp;the&nbsp;background&nbsp;using<br>
a&nbsp;logical&nbsp;operation.&nbsp;wx.INVERT&nbsp;is&nbsp;commonly&nbsp;used&nbsp;for&nbsp;drawing&nbsp;rubber<br>
bands&nbsp;or&nbsp;moving&nbsp;outlines,&nbsp;since&nbsp;drawing&nbsp;twice&nbsp;reverts&nbsp;to&nbsp;the&nbsp;original<br>
colour.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-SetLogicalOrigin"><strong>SetLogicalOrigin</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-SetLogicalOrigin">SetLogicalOrigin</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-SetLogicalOriginPoint"><strong>SetLogicalOriginPoint</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-SetLogicalOriginPoint">SetLogicalOriginPoint</a>(self,&nbsp;Point&nbsp;point)</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-SetLogicalScale"><strong>SetLogicalScale</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-SetLogicalScale">SetLogicalScale</a>(self,&nbsp;double&nbsp;x,&nbsp;double&nbsp;y)</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-SetMapMode"><strong>SetMapMode</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-SetMapMode">SetMapMode</a>(self,&nbsp;int&nbsp;mode)<br>
&nbsp;<br>
The&nbsp;*mapping&nbsp;mode*&nbsp;of&nbsp;the&nbsp;device&nbsp;context&nbsp;defines&nbsp;the&nbsp;unit&nbsp;of<br>
measurement&nbsp;used&nbsp;to&nbsp;convert&nbsp;logical&nbsp;units&nbsp;to&nbsp;device&nbsp;units.&nbsp;&nbsp;The<br>
mapping&nbsp;mode&nbsp;can&nbsp;be&nbsp;one&nbsp;of&nbsp;the&nbsp;following:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;================&nbsp;&nbsp;&nbsp;&nbsp;=============================================<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.MM_TWIPS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Each&nbsp;logical&nbsp;unit&nbsp;is&nbsp;1/20&nbsp;of&nbsp;a&nbsp;point,&nbsp;or&nbsp;1/1440<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;an&nbsp;inch.<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.MM_POINTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Each&nbsp;logical&nbsp;unit&nbsp;is&nbsp;a&nbsp;point,&nbsp;or&nbsp;1/72&nbsp;of&nbsp;an&nbsp;inch.<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.MM_METRIC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Each&nbsp;logical&nbsp;unit&nbsp;is&nbsp;1&nbsp;mm.<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.MM_LOMETRIC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Each&nbsp;logical&nbsp;unit&nbsp;is&nbsp;1/10&nbsp;of&nbsp;a&nbsp;mm.<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.MM_TEXT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Each&nbsp;logical&nbsp;unit&nbsp;is&nbsp;1&nbsp;pixel.<br>
&nbsp;&nbsp;&nbsp;&nbsp;================&nbsp;&nbsp;&nbsp;&nbsp;=============================================</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-SetOptimization"><strong>SetOptimization</strong></a> = deprecatedWrapper(*args, **kwargs)</dt><dd><tt>&lt;function&nbsp;SetOptimization&nbsp;at&nbsp;0x2b90d8fb6320&gt;&nbsp;is&nbsp;deprecated</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-SetPalette"><strong>SetPalette</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-SetPalette">SetPalette</a>(self,&nbsp;Palette&nbsp;palette)<br>
&nbsp;<br>
If&nbsp;this&nbsp;is&nbsp;a&nbsp;window&nbsp;DC&nbsp;or&nbsp;memory&nbsp;DC,&nbsp;assigns&nbsp;the&nbsp;given&nbsp;palette&nbsp;to&nbsp;the<br>
window&nbsp;or&nbsp;bitmap&nbsp;associated&nbsp;with&nbsp;the&nbsp;DC.&nbsp;If&nbsp;the&nbsp;argument&nbsp;is<br>
``wx.NullPalette``,&nbsp;the&nbsp;current&nbsp;palette&nbsp;is&nbsp;selected&nbsp;out&nbsp;of&nbsp;the&nbsp;device<br>
context,&nbsp;and&nbsp;the&nbsp;original&nbsp;palette&nbsp;restored.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-SetPen"><strong>SetPen</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-SetPen">SetPen</a>(self,&nbsp;Pen&nbsp;pen)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;current&nbsp;pen&nbsp;for&nbsp;the&nbsp;DC.<br>
&nbsp;<br>
If&nbsp;the&nbsp;argument&nbsp;is&nbsp;``wx.NullPen``,&nbsp;the&nbsp;current&nbsp;pen&nbsp;is&nbsp;selected&nbsp;out&nbsp;of&nbsp;the<br>
device&nbsp;context,&nbsp;and&nbsp;the&nbsp;original&nbsp;pen&nbsp;restored.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-SetTextBackground"><strong>SetTextBackground</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-SetTextBackground">SetTextBackground</a>(self,&nbsp;Colour&nbsp;colour)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;current&nbsp;text&nbsp;background&nbsp;colour&nbsp;for&nbsp;the&nbsp;DC.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-SetTextForeground"><strong>SetTextForeground</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-SetTextForeground">SetTextForeground</a>(self,&nbsp;Colour&nbsp;colour)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;current&nbsp;text&nbsp;foreground&nbsp;colour&nbsp;for&nbsp;the&nbsp;DC.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-SetUserScale"><strong>SetUserScale</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-SetUserScale">SetUserScale</a>(self,&nbsp;double&nbsp;x,&nbsp;double&nbsp;y)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;user&nbsp;scaling&nbsp;factor,&nbsp;useful&nbsp;for&nbsp;applications&nbsp;which&nbsp;require<br>
'zooming'.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-StartDoc"><strong>StartDoc</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-StartDoc">StartDoc</a>(self,&nbsp;String&nbsp;message)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Starts&nbsp;a&nbsp;document&nbsp;(only&nbsp;relevant&nbsp;when&nbsp;outputting&nbsp;to&nbsp;a<br>
printer).&nbsp;*Message*&nbsp;is&nbsp;a&nbsp;message&nbsp;to&nbsp;show&nbsp;whilst&nbsp;printing.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-StartPage"><strong>StartPage</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-StartPage">StartPage</a>(self)<br>
&nbsp;<br>
Starts&nbsp;a&nbsp;document&nbsp;page&nbsp;(only&nbsp;relevant&nbsp;when&nbsp;outputting&nbsp;to&nbsp;a&nbsp;printer).</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-__del__"><strong>__del__</strong></a>(self, destroy<font color="#909090">=&lt;built-in function delete_DC&gt;</font>)</dt><dd><tt><a href="#GraphicsContextWx-__del__">__del__</a>(self)</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-__nonzero__"><strong>__nonzero__</strong></a>(self)</dt></dl>

<hr>
Methods inherited from <a href="wx._core.html#Object">wx._core.Object</a>:<br>
<dl><dt><a name="GraphicsContextWx-Destroy"><strong>Destroy</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-Destroy">Destroy</a>(self)<br>
&nbsp;<br>
Deletes&nbsp;the&nbsp;C++&nbsp;object&nbsp;this&nbsp;Python&nbsp;object&nbsp;is&nbsp;a&nbsp;proxy&nbsp;for.</tt></dd></dl>

<dl><dt><a name="GraphicsContextWx-GetClassName"><strong>GetClassName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#GraphicsContextWx-GetClassName">GetClassName</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;class&nbsp;name&nbsp;of&nbsp;the&nbsp;C++&nbsp;class&nbsp;using&nbsp;wxRTTI.</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="wx._core.html#Object">wx._core.Object</a>:<br>
<dl><dt><strong>__dict__</strong> = &lt;dictproxy object&gt;<dd><tt>dictionary&nbsp;for&nbsp;instance&nbsp;variables&nbsp;(if&nbsp;defined)</tt></dl>

<dl><dt><strong>__weakref__</strong> = &lt;attribute '__weakref__' of 'Object' objects&gt;<dd><tt>list&nbsp;of&nbsp;weak&nbsp;references&nbsp;to&nbsp;the&nbsp;object&nbsp;(if&nbsp;defined)</tt></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="MenuButtonWx">class <strong>MenuButtonWx</strong></a>(<a href="wx._controls.html#Button">wx._controls.Button</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>wxPython&nbsp;does&nbsp;not&nbsp;permit&nbsp;a&nbsp;menu&nbsp;to&nbsp;be&nbsp;incorporated&nbsp;directly&nbsp;into&nbsp;a&nbsp;toolbar.<br>
This&nbsp;class&nbsp;simulates&nbsp;the&nbsp;effect&nbsp;by&nbsp;associating&nbsp;a&nbsp;pop-up&nbsp;menu&nbsp;with&nbsp;a&nbsp;button<br>
in&nbsp;the&nbsp;toolbar,&nbsp;and&nbsp;managing&nbsp;this&nbsp;as&nbsp;though&nbsp;it&nbsp;were&nbsp;a&nbsp;menu.<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.backends.backend_wx.html#MenuButtonWx">MenuButtonWx</a></dd>
<dd><a href="wx._controls.html#Button">wx._controls.Button</a></dd>
<dd><a href="wx._core.html#Control">wx._core.Control</a></dd>
<dd><a href="wx._core.html#Window">wx._core.Window</a></dd>
<dd><a href="wx._core.html#EvtHandler">wx._core.EvtHandler</a></dd>
<dd><a href="wx._core.html#Object">wx._core.Object</a></dd>
<dd><a href="__builtin__.html#object">__builtin__.object</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="MenuButtonWx-Destroy"><strong>Destroy</strong></a>(self)</dt></dl>

<dl><dt><a name="MenuButtonWx-__init__"><strong>__init__</strong></a>(self, parent)</dt></dl>

<dl><dt><a name="MenuButtonWx-getActiveAxes"><strong>getActiveAxes</strong></a>(self)</dt><dd><tt>Return&nbsp;a&nbsp;list&nbsp;of&nbsp;the&nbsp;selected&nbsp;axes.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-updateAxes"><strong>updateAxes</strong></a>(self, maxAxis)</dt><dd><tt>Ensures&nbsp;that&nbsp;there&nbsp;are&nbsp;entries&nbsp;for&nbsp;max_axis&nbsp;axes&nbsp;in&nbsp;the&nbsp;menu<br>
(selected&nbsp;by&nbsp;default).</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-updateButtonText"><strong>updateButtonText</strong></a>(self, lst)</dt><dd><tt>Update&nbsp;the&nbsp;list&nbsp;of&nbsp;selected&nbsp;axes&nbsp;in&nbsp;the&nbsp;menu&nbsp;button</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._controls.html#Button">wx._controls.Button</a>:<br>
<dl><dt><a name="MenuButtonWx-Create"><strong>Create</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Create">Create</a>(self,&nbsp;Window&nbsp;parent,&nbsp;int&nbsp;id=-1,&nbsp;String&nbsp;label=EmptyString,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Point&nbsp;pos=DefaultPosition,&nbsp;Size&nbsp;size=DefaultSize,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;long&nbsp;style=0,&nbsp;Validator&nbsp;validator=DefaultValidator,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;name=ButtonNameStr)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Acutally&nbsp;create&nbsp;the&nbsp;GUI&nbsp;<a href="wx._controls.html#Button">Button</a>&nbsp;for&nbsp;2-phase&nbsp;creation.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetDefault"><strong>SetDefault</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetDefault">SetDefault</a>(self)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;button&nbsp;to&nbsp;be&nbsp;the&nbsp;default&nbsp;item&nbsp;for&nbsp;the&nbsp;panel&nbsp;or&nbsp;dialog&nbsp;box.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-__repr__"><strong>__repr__</strong></a>(self)</dt></dl>

<hr>
Static methods inherited from <a href="wx._controls.html#Button">wx._controls.Button</a>:<br>
<dl><dt><a name="MenuButtonWx-GetClassDefaultAttributes"><strong>GetClassDefaultAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetClassDefaultAttributes">GetClassDefaultAttributes</a>(int&nbsp;variant=WINDOW_VARIANT_NORMAL)&nbsp;-&gt;&nbsp;VisualAttributes<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;attributes&nbsp;for&nbsp;this&nbsp;class.&nbsp;&nbsp;This&nbsp;is&nbsp;useful&nbsp;if&nbsp;you&nbsp;want<br>
to&nbsp;use&nbsp;the&nbsp;same&nbsp;font&nbsp;or&nbsp;colour&nbsp;in&nbsp;your&nbsp;own&nbsp;control&nbsp;as&nbsp;in&nbsp;a&nbsp;standard<br>
control&nbsp;--&nbsp;which&nbsp;is&nbsp;a&nbsp;much&nbsp;better&nbsp;idea&nbsp;than&nbsp;hard&nbsp;coding&nbsp;specific<br>
colours&nbsp;or&nbsp;fonts&nbsp;which&nbsp;might&nbsp;look&nbsp;completely&nbsp;out&nbsp;of&nbsp;place&nbsp;on&nbsp;the<br>
user's&nbsp;system,&nbsp;especially&nbsp;if&nbsp;it&nbsp;uses&nbsp;themes.<br>
&nbsp;<br>
The&nbsp;variant&nbsp;parameter&nbsp;is&nbsp;only&nbsp;relevant&nbsp;under&nbsp;Mac&nbsp;currently&nbsp;and&nbsp;is<br>
ignore&nbsp;under&nbsp;other&nbsp;platforms.&nbsp;Under&nbsp;Mac,&nbsp;it&nbsp;will&nbsp;change&nbsp;the&nbsp;size&nbsp;of<br>
the&nbsp;returned&nbsp;font.&nbsp;See&nbsp;`wx.Window.SetWindowVariant`&nbsp;for&nbsp;more&nbsp;about<br>
this.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetDefaultSize"><strong>GetDefaultSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetDefaultSize">GetDefaultSize</a>()&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;default&nbsp;button&nbsp;size&nbsp;for&nbsp;this&nbsp;platform.</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#Control">wx._core.Control</a>:<br>
<dl><dt><a name="MenuButtonWx-Command"><strong>Command</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Command">Command</a>(self,&nbsp;CommandEvent&nbsp;event)<br>
&nbsp;<br>
Simulates&nbsp;the&nbsp;effect&nbsp;of&nbsp;the&nbsp;user&nbsp;issuing&nbsp;a&nbsp;command&nbsp;to&nbsp;the&nbsp;item.<br>
&nbsp;<br>
:see:&nbsp;`wx.CommandEvent`</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetLabel"><strong>GetLabel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetLabel">GetLabel</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Return&nbsp;a&nbsp;control's&nbsp;text.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetLabel"><strong>SetLabel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetLabel">SetLabel</a>(self,&nbsp;String&nbsp;label)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;item's&nbsp;text.</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#Window">wx._core.Window</a>:<br>
<dl><dt><a name="MenuButtonWx-AcceptsFocus"><strong>AcceptsFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-AcceptsFocus">AcceptsFocus</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Can&nbsp;this&nbsp;window&nbsp;have&nbsp;focus?</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-AcceptsFocusFromKeyboard"><strong>AcceptsFocusFromKeyboard</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-AcceptsFocusFromKeyboard">AcceptsFocusFromKeyboard</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Can&nbsp;this&nbsp;window&nbsp;be&nbsp;given&nbsp;focus&nbsp;by&nbsp;keyboard&nbsp;navigation?&nbsp;if&nbsp;not,&nbsp;the<br>
only&nbsp;way&nbsp;to&nbsp;give&nbsp;it&nbsp;focus&nbsp;(provided&nbsp;it&nbsp;accepts&nbsp;it&nbsp;at&nbsp;all)&nbsp;is&nbsp;to&nbsp;click<br>
it.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-AddChild"><strong>AddChild</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-AddChild">AddChild</a>(self,&nbsp;Window&nbsp;child)<br>
&nbsp;<br>
Adds&nbsp;a&nbsp;child&nbsp;window.&nbsp;This&nbsp;is&nbsp;called&nbsp;automatically&nbsp;by&nbsp;window&nbsp;creation<br>
functions&nbsp;so&nbsp;should&nbsp;not&nbsp;be&nbsp;required&nbsp;by&nbsp;the&nbsp;application&nbsp;programmer.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-AssociateHandle"><strong>AssociateHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-AssociateHandle">AssociateHandle</a>(self,&nbsp;long&nbsp;handle)<br>
&nbsp;<br>
Associate&nbsp;the&nbsp;window&nbsp;with&nbsp;a&nbsp;new&nbsp;native&nbsp;handle</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-CacheBestSize"><strong>CacheBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-CacheBestSize">CacheBestSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Cache&nbsp;the&nbsp;best&nbsp;size&nbsp;so&nbsp;it&nbsp;doesn't&nbsp;need&nbsp;to&nbsp;be&nbsp;calculated&nbsp;again,&nbsp;(at&nbsp;least&nbsp;until<br>
some&nbsp;properties&nbsp;of&nbsp;the&nbsp;window&nbsp;change.)</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-CaptureMouse"><strong>CaptureMouse</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-CaptureMouse">CaptureMouse</a>(self)<br>
&nbsp;<br>
Directs&nbsp;all&nbsp;mouse&nbsp;input&nbsp;to&nbsp;this&nbsp;window.&nbsp;Call&nbsp;wx.Window.ReleaseMouse&nbsp;to<br>
release&nbsp;the&nbsp;capture.<br>
&nbsp;<br>
Note&nbsp;that&nbsp;wxWindows&nbsp;maintains&nbsp;the&nbsp;stack&nbsp;of&nbsp;windows&nbsp;having&nbsp;captured&nbsp;the<br>
mouse&nbsp;and&nbsp;when&nbsp;the&nbsp;mouse&nbsp;is&nbsp;released&nbsp;the&nbsp;capture&nbsp;returns&nbsp;to&nbsp;the&nbsp;window<br>
which&nbsp;had&nbsp;had&nbsp;captured&nbsp;it&nbsp;previously&nbsp;and&nbsp;it&nbsp;is&nbsp;only&nbsp;really&nbsp;released&nbsp;if<br>
there&nbsp;were&nbsp;no&nbsp;previous&nbsp;window.&nbsp;In&nbsp;particular,&nbsp;this&nbsp;means&nbsp;that&nbsp;you&nbsp;must<br>
release&nbsp;the&nbsp;mouse&nbsp;as&nbsp;many&nbsp;times&nbsp;as&nbsp;you&nbsp;capture&nbsp;it.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-Center"><strong>Center</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Center">Center</a>(self,&nbsp;int&nbsp;direction=BOTH)<br>
&nbsp;<br>
Centers&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;parameter&nbsp;specifies&nbsp;the&nbsp;direction&nbsp;for<br>
cetering,&nbsp;and&nbsp;may&nbsp;be&nbsp;wx.HORIZONTAL,&nbsp;wx.VERTICAL&nbsp;or&nbsp;wx.BOTH.&nbsp;It&nbsp;may<br>
also&nbsp;include&nbsp;wx.CENTER_ON_SCREEN&nbsp;flag&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;center&nbsp;the&nbsp;window<br>
on&nbsp;the&nbsp;entire&nbsp;screen&nbsp;and&nbsp;not&nbsp;on&nbsp;its&nbsp;parent&nbsp;window.&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a<br>
top-level&nbsp;window&nbsp;and&nbsp;has&nbsp;no&nbsp;parent&nbsp;then&nbsp;it&nbsp;will&nbsp;always&nbsp;be&nbsp;centered<br>
relative&nbsp;to&nbsp;the&nbsp;screen.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-CenterOnParent"><strong>CenterOnParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-CenterOnParent">CenterOnParent</a>(self,&nbsp;int&nbsp;dir=BOTH)<br>
&nbsp;<br>
Center&nbsp;with&nbsp;respect&nbsp;to&nbsp;the&nbsp;the&nbsp;parent&nbsp;window</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-CenterOnScreen"><strong>CenterOnScreen</strong></a> = deprecatedWrapper(*args, **kwargs)</dt><dd><tt>&lt;function&nbsp;CenterOnScreen&nbsp;at&nbsp;0x2b90d8dbcf50&gt;&nbsp;is&nbsp;deprecated</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-Centre"><strong>Centre</strong></a> = Center(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Center">Center</a>(self,&nbsp;int&nbsp;direction=BOTH)<br>
&nbsp;<br>
Centers&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;parameter&nbsp;specifies&nbsp;the&nbsp;direction&nbsp;for<br>
cetering,&nbsp;and&nbsp;may&nbsp;be&nbsp;wx.HORIZONTAL,&nbsp;wx.VERTICAL&nbsp;or&nbsp;wx.BOTH.&nbsp;It&nbsp;may<br>
also&nbsp;include&nbsp;wx.CENTER_ON_SCREEN&nbsp;flag&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;center&nbsp;the&nbsp;window<br>
on&nbsp;the&nbsp;entire&nbsp;screen&nbsp;and&nbsp;not&nbsp;on&nbsp;its&nbsp;parent&nbsp;window.&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a<br>
top-level&nbsp;window&nbsp;and&nbsp;has&nbsp;no&nbsp;parent&nbsp;then&nbsp;it&nbsp;will&nbsp;always&nbsp;be&nbsp;centered<br>
relative&nbsp;to&nbsp;the&nbsp;screen.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-CentreOnParent"><strong>CentreOnParent</strong></a> = CenterOnParent(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-CenterOnParent">CenterOnParent</a>(self,&nbsp;int&nbsp;dir=BOTH)<br>
&nbsp;<br>
Center&nbsp;with&nbsp;respect&nbsp;to&nbsp;the&nbsp;the&nbsp;parent&nbsp;window</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-CentreOnScreen"><strong>CentreOnScreen</strong></a> = deprecatedWrapper(*args, **kwargs)</dt><dd><tt>&lt;function&nbsp;CenterOnScreen&nbsp;at&nbsp;0x2b90d8dbcf50&gt;&nbsp;is&nbsp;deprecated</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-ClearBackground"><strong>ClearBackground</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-ClearBackground">ClearBackground</a>(self)<br>
&nbsp;<br>
Clears&nbsp;the&nbsp;window&nbsp;by&nbsp;filling&nbsp;it&nbsp;with&nbsp;the&nbsp;current&nbsp;background<br>
colour.&nbsp;Does&nbsp;not&nbsp;cause&nbsp;an&nbsp;erase&nbsp;background&nbsp;event&nbsp;to&nbsp;be&nbsp;generated.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-ClientToScreen"><strong>ClientToScreen</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-ClientToScreen">ClientToScreen</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;to&nbsp;screen&nbsp;coordinates&nbsp;from&nbsp;coordinates&nbsp;relative&nbsp;to&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-ClientToScreenXY"><strong>ClientToScreenXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-ClientToScreenXY">ClientToScreenXY</a>(int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Converts&nbsp;to&nbsp;screen&nbsp;coordinates&nbsp;from&nbsp;coordinates&nbsp;relative&nbsp;to&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-Close"><strong>Close</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Close">Close</a>(self,&nbsp;bool&nbsp;force=False)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;function&nbsp;simply&nbsp;generates&nbsp;a&nbsp;EVT_CLOSE&nbsp;event&nbsp;whose&nbsp;handler&nbsp;usually<br>
tries&nbsp;to&nbsp;close&nbsp;the&nbsp;window.&nbsp;It&nbsp;doesn't&nbsp;close&nbsp;the&nbsp;window&nbsp;itself,<br>
however.&nbsp;&nbsp;If&nbsp;force&nbsp;is&nbsp;False&nbsp;(the&nbsp;default)&nbsp;then&nbsp;the&nbsp;window's&nbsp;close<br>
handler&nbsp;will&nbsp;be&nbsp;allowed&nbsp;to&nbsp;veto&nbsp;the&nbsp;destruction&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-ConvertDialogPointToPixels"><strong>ConvertDialogPointToPixels</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-ConvertDialogPointToPixels">ConvertDialogPointToPixels</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-ConvertDialogSizeToPixels"><strong>ConvertDialogSizeToPixels</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-ConvertDialogSizeToPixels">ConvertDialogSizeToPixels</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-ConvertPixelPointToDialog"><strong>ConvertPixelPointToDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-ConvertPixelPointToDialog">ConvertPixelPointToDialog</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-ConvertPixelSizeToDialog"><strong>ConvertPixelSizeToDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-ConvertPixelSizeToDialog">ConvertPixelSizeToDialog</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-DLG_PNT"><strong>DLG_PNT</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-DLG_PNT">DLG_PNT</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-DLG_SZE"><strong>DLG_SZE</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-DLG_SZE">DLG_SZE</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-DestroyChildren"><strong>DestroyChildren</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-DestroyChildren">DestroyChildren</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Destroys&nbsp;all&nbsp;children&nbsp;of&nbsp;a&nbsp;window.&nbsp;Called&nbsp;automatically&nbsp;by&nbsp;the<br>
destructor.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-Disable"><strong>Disable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Disable">Disable</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Disables&nbsp;the&nbsp;window,&nbsp;same&nbsp;as&nbsp;<a href="#MenuButtonWx-Enable">Enable</a>(false).</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-DissociateHandle"><strong>DissociateHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-DissociateHandle">DissociateHandle</a>(self)<br>
&nbsp;<br>
Dissociate&nbsp;the&nbsp;current&nbsp;native&nbsp;handle&nbsp;from&nbsp;the&nbsp;window</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-DragAcceptFiles"><strong>DragAcceptFiles</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-DragAcceptFiles">DragAcceptFiles</a>(self,&nbsp;bool&nbsp;accept)<br>
&nbsp;<br>
Enables&nbsp;or&nbsp;disables&nbsp;eligibility&nbsp;for&nbsp;drop&nbsp;file&nbsp;events,&nbsp;EVT_DROP_FILES.<br>
Only&nbsp;functional&nbsp;on&nbsp;Windows.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-Enable"><strong>Enable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Enable">Enable</a>(self,&nbsp;bool&nbsp;enable=True)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Enable&nbsp;or&nbsp;disable&nbsp;the&nbsp;window&nbsp;for&nbsp;user&nbsp;input.&nbsp;Note&nbsp;that&nbsp;when&nbsp;a&nbsp;parent<br>
window&nbsp;is&nbsp;disabled,&nbsp;all&nbsp;of&nbsp;its&nbsp;children&nbsp;are&nbsp;disabled&nbsp;as&nbsp;well&nbsp;and&nbsp;they<br>
are&nbsp;reenabled&nbsp;again&nbsp;when&nbsp;the&nbsp;parent&nbsp;is.&nbsp;&nbsp;Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window<br>
has&nbsp;been&nbsp;enabled&nbsp;or&nbsp;disabled,&nbsp;false&nbsp;if&nbsp;nothing&nbsp;was&nbsp;done,&nbsp;i.e.&nbsp;if&nbsp;the<br>
window&nbsp;had&nbsp;already&nbsp;been&nbsp;in&nbsp;the&nbsp;specified&nbsp;state.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-FindWindowById"><strong>FindWindowById</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-FindWindowById">FindWindowById</a>(self,&nbsp;long&nbsp;winid)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Find&nbsp;a&nbsp;chld&nbsp;of&nbsp;this&nbsp;window&nbsp;by&nbsp;window&nbsp;ID</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-FindWindowByName"><strong>FindWindowByName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-FindWindowByName">FindWindowByName</a>(self,&nbsp;String&nbsp;name)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Find&nbsp;a&nbsp;child&nbsp;of&nbsp;this&nbsp;window&nbsp;by&nbsp;name</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-Fit"><strong>Fit</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Fit">Fit</a>(self)<br>
&nbsp;<br>
Sizes&nbsp;the&nbsp;window&nbsp;so&nbsp;that&nbsp;it&nbsp;fits&nbsp;around&nbsp;its&nbsp;subwindows.&nbsp;This&nbsp;function<br>
won't&nbsp;do&nbsp;anything&nbsp;if&nbsp;there&nbsp;are&nbsp;no&nbsp;subwindows&nbsp;and&nbsp;will&nbsp;only&nbsp;really&nbsp;work<br>
correctly&nbsp;if&nbsp;sizers&nbsp;are&nbsp;used&nbsp;for&nbsp;the&nbsp;subwindows&nbsp;layout.&nbsp;Also,&nbsp;if&nbsp;the<br>
window&nbsp;has&nbsp;exactly&nbsp;one&nbsp;subwindow&nbsp;it&nbsp;is&nbsp;better&nbsp;(faster&nbsp;and&nbsp;the&nbsp;result<br>
is&nbsp;more&nbsp;precise&nbsp;as&nbsp;Fit&nbsp;adds&nbsp;some&nbsp;margin&nbsp;to&nbsp;account&nbsp;for&nbsp;fuzziness&nbsp;of<br>
its&nbsp;calculations)&nbsp;to&nbsp;call&nbsp;window.<a href="#MenuButtonWx-SetClientSize">SetClientSize</a>(child.<a href="#MenuButtonWx-GetSize">GetSize</a>())<br>
instead&nbsp;of&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-FitInside"><strong>FitInside</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-FitInside">FitInside</a>(self)<br>
&nbsp;<br>
Similar&nbsp;to&nbsp;Fit,&nbsp;but&nbsp;sizes&nbsp;the&nbsp;interior&nbsp;(virtual)&nbsp;size&nbsp;of&nbsp;a<br>
window.&nbsp;Mainly&nbsp;useful&nbsp;with&nbsp;scrolled&nbsp;windows&nbsp;to&nbsp;reset&nbsp;scrollbars&nbsp;after<br>
sizing&nbsp;changes&nbsp;that&nbsp;do&nbsp;not&nbsp;trigger&nbsp;a&nbsp;size&nbsp;event,&nbsp;and/or&nbsp;scrolled<br>
windows&nbsp;without&nbsp;an&nbsp;interior&nbsp;sizer.&nbsp;This&nbsp;function&nbsp;similarly&nbsp;won't&nbsp;do<br>
anything&nbsp;if&nbsp;there&nbsp;are&nbsp;no&nbsp;subwindows.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-Freeze"><strong>Freeze</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Freeze">Freeze</a>(self)<br>
&nbsp;<br>
Freezes&nbsp;the&nbsp;window&nbsp;or,&nbsp;in&nbsp;other&nbsp;words,&nbsp;prevents&nbsp;any&nbsp;updates&nbsp;from<br>
taking&nbsp;place&nbsp;on&nbsp;screen,&nbsp;the&nbsp;window&nbsp;is&nbsp;not&nbsp;redrawn&nbsp;at&nbsp;all.&nbsp;Thaw&nbsp;must&nbsp;be<br>
called&nbsp;to&nbsp;reenable&nbsp;window&nbsp;redrawing.&nbsp;&nbsp;Calls&nbsp;to&nbsp;Freeze/Thaw&nbsp;may&nbsp;be<br>
nested,&nbsp;with&nbsp;the&nbsp;actual&nbsp;Thaw&nbsp;being&nbsp;delayed&nbsp;until&nbsp;all&nbsp;the&nbsp;nesting&nbsp;has<br>
been&nbsp;undone.<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;useful&nbsp;for&nbsp;visual&nbsp;appearance&nbsp;optimization&nbsp;(for&nbsp;example,<br>
it&nbsp;is&nbsp;a&nbsp;good&nbsp;idea&nbsp;to&nbsp;use&nbsp;it&nbsp;before&nbsp;inserting&nbsp;large&nbsp;amount&nbsp;of&nbsp;text&nbsp;into<br>
a&nbsp;wxTextCtrl&nbsp;under&nbsp;wxGTK)&nbsp;but&nbsp;is&nbsp;not&nbsp;implemented&nbsp;on&nbsp;all&nbsp;platforms&nbsp;nor<br>
for&nbsp;all&nbsp;controls&nbsp;so&nbsp;it&nbsp;is&nbsp;mostly&nbsp;just&nbsp;a&nbsp;hint&nbsp;to&nbsp;wxWindows&nbsp;and&nbsp;not&nbsp;a<br>
mandatory&nbsp;directive.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetAcceleratorTable"><strong>GetAcceleratorTable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetAcceleratorTable">GetAcceleratorTable</a>(self)&nbsp;-&gt;&nbsp;AcceleratorTable<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;accelerator&nbsp;table&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetAdjustedBestSize"><strong>GetAdjustedBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetAdjustedBestSize">GetAdjustedBestSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;similar&nbsp;to&nbsp;GetBestSize,&nbsp;except&nbsp;in&nbsp;one<br>
thing.&nbsp;GetBestSize&nbsp;should&nbsp;return&nbsp;the&nbsp;minimum&nbsp;untruncated&nbsp;size&nbsp;of&nbsp;the<br>
window,&nbsp;while&nbsp;this&nbsp;method&nbsp;will&nbsp;return&nbsp;the&nbsp;largest&nbsp;of&nbsp;BestSize&nbsp;and&nbsp;any<br>
user&nbsp;specified&nbsp;minimum&nbsp;size.&nbsp;ie.&nbsp;it&nbsp;is&nbsp;the&nbsp;minimum&nbsp;size&nbsp;the&nbsp;window<br>
should&nbsp;currently&nbsp;be&nbsp;drawn&nbsp;at,&nbsp;not&nbsp;the&nbsp;minimal&nbsp;size&nbsp;it&nbsp;can&nbsp;possibly<br>
tolerate.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetAutoLayout"><strong>GetAutoLayout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetAutoLayout">GetAutoLayout</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;current&nbsp;autoLayout&nbsp;setting</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetBackgroundColour"><strong>GetBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetBackgroundColour">GetBackgroundColour</a>(self)&nbsp;-&gt;&nbsp;Colour<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetBackgroundStyle"><strong>GetBackgroundStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetBackgroundStyle">GetBackgroundStyle</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;style&nbsp;of&nbsp;the&nbsp;window.<br>
&nbsp;<br>
:see:&nbsp;`SetBackgroundStyle`</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetBestFittingSize"><strong>GetBestFittingSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetBestFittingSize">GetBestFittingSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;function&nbsp;will&nbsp;merge&nbsp;the&nbsp;window's&nbsp;best&nbsp;size&nbsp;into&nbsp;the&nbsp;window's<br>
minimum&nbsp;size,&nbsp;giving&nbsp;priority&nbsp;to&nbsp;the&nbsp;min&nbsp;size&nbsp;components,&nbsp;and&nbsp;returns<br>
the&nbsp;results.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetBestSize"><strong>GetBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetBestSize">GetBestSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;function&nbsp;returns&nbsp;the&nbsp;best&nbsp;acceptable&nbsp;minimal&nbsp;size&nbsp;for&nbsp;the<br>
window,&nbsp;if&nbsp;applicable.&nbsp;For&nbsp;example,&nbsp;for&nbsp;a&nbsp;static&nbsp;text&nbsp;control,&nbsp;it&nbsp;will<br>
be&nbsp;the&nbsp;minimal&nbsp;size&nbsp;such&nbsp;that&nbsp;the&nbsp;control&nbsp;label&nbsp;is&nbsp;not&nbsp;truncated.&nbsp;For<br>
windows&nbsp;containing&nbsp;subwindows&nbsp;(suzh&nbsp;aswx.<a href="wx._windows.html#Panel">Panel</a>),&nbsp;the&nbsp;size&nbsp;returned&nbsp;by<br>
this&nbsp;function&nbsp;will&nbsp;be&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;size&nbsp;the&nbsp;window&nbsp;would&nbsp;have&nbsp;had<br>
after&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetBestSizeTuple"><strong>GetBestSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetBestSizeTuple">GetBestSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
This&nbsp;function&nbsp;returns&nbsp;the&nbsp;best&nbsp;acceptable&nbsp;minimal&nbsp;size&nbsp;for&nbsp;the<br>
window,&nbsp;if&nbsp;applicable.&nbsp;For&nbsp;example,&nbsp;for&nbsp;a&nbsp;static&nbsp;text&nbsp;control,&nbsp;it&nbsp;will<br>
be&nbsp;the&nbsp;minimal&nbsp;size&nbsp;such&nbsp;that&nbsp;the&nbsp;control&nbsp;label&nbsp;is&nbsp;not&nbsp;truncated.&nbsp;For<br>
windows&nbsp;containing&nbsp;subwindows&nbsp;(suzh&nbsp;aswx.<a href="wx._windows.html#Panel">Panel</a>),&nbsp;the&nbsp;size&nbsp;returned&nbsp;by<br>
this&nbsp;function&nbsp;will&nbsp;be&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;size&nbsp;the&nbsp;window&nbsp;would&nbsp;have&nbsp;had<br>
after&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetBestVirtualSize"><strong>GetBestVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetBestVirtualSize">GetBestVirtualSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Return&nbsp;the&nbsp;largest&nbsp;of&nbsp;ClientSize&nbsp;and&nbsp;BestSize&nbsp;(as&nbsp;determined&nbsp;by&nbsp;a<br>
sizer,&nbsp;interior&nbsp;children,&nbsp;or&nbsp;other&nbsp;means)</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetBorder"><strong>GetBorder</strong></a>(*args)</dt><dd><tt><a href="#MenuButtonWx-GetBorder">GetBorder</a>(self,&nbsp;long&nbsp;flags)&nbsp;-&gt;&nbsp;int<br>
<a href="#MenuButtonWx-GetBorder">GetBorder</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;border&nbsp;for&nbsp;the&nbsp;flags&nbsp;of&nbsp;this&nbsp;window</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetCaret"><strong>GetCaret</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetCaret">GetCaret</a>(self)&nbsp;-&gt;&nbsp;Caret<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;caret&nbsp;associated&nbsp;with&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetCharHeight"><strong>GetCharHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetCharHeight">GetCharHeight</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;(average)&nbsp;character&nbsp;size&nbsp;for&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetCharWidth"><strong>GetCharWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetCharWidth">GetCharWidth</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;(average)&nbsp;character&nbsp;size&nbsp;for&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetChildren"><strong>GetChildren</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetChildren">GetChildren</a>(self)&nbsp;-&gt;&nbsp;PyObject<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;list&nbsp;of&nbsp;the&nbsp;window's&nbsp;children.&nbsp;&nbsp;NOTE:&nbsp;Currently&nbsp;this&nbsp;is&nbsp;a<br>
copy&nbsp;of&nbsp;the&nbsp;child&nbsp;window&nbsp;list&nbsp;maintained&nbsp;by&nbsp;the&nbsp;window,&nbsp;so&nbsp;the&nbsp;return<br>
value&nbsp;of&nbsp;this&nbsp;function&nbsp;is&nbsp;only&nbsp;valid&nbsp;as&nbsp;long&nbsp;as&nbsp;the&nbsp;window's&nbsp;children<br>
do&nbsp;not&nbsp;change.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetClientAreaOrigin"><strong>GetClientAreaOrigin</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetClientAreaOrigin">GetClientAreaOrigin</a>(self)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Get&nbsp;the&nbsp;origin&nbsp;of&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window&nbsp;relative&nbsp;to&nbsp;the<br>
window's&nbsp;top&nbsp;left&nbsp;corner&nbsp;(the&nbsp;client&nbsp;area&nbsp;may&nbsp;be&nbsp;shifted&nbsp;because&nbsp;of<br>
the&nbsp;borders,&nbsp;scrollbars,&nbsp;other&nbsp;decorations...)</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetClientRect"><strong>GetClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetClientRect">GetClientRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Get&nbsp;the&nbsp;client&nbsp;area&nbsp;position&nbsp;and&nbsp;size&nbsp;as&nbsp;a&nbsp;`wx.Rect`&nbsp;object.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetClientSize"><strong>GetClientSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetClientSize">GetClientSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;gets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window's&nbsp;'client&nbsp;area'&nbsp;in&nbsp;pixels.&nbsp;The&nbsp;client<br>
area&nbsp;is&nbsp;the&nbsp;area&nbsp;which&nbsp;may&nbsp;be&nbsp;drawn&nbsp;on&nbsp;by&nbsp;the&nbsp;programmer,&nbsp;excluding<br>
title&nbsp;bar,&nbsp;border,&nbsp;scrollbars,&nbsp;etc.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetClientSizeTuple"><strong>GetClientSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetClientSizeTuple">GetClientSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
This&nbsp;gets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window's&nbsp;'client&nbsp;area'&nbsp;in&nbsp;pixels.&nbsp;The&nbsp;client<br>
area&nbsp;is&nbsp;the&nbsp;area&nbsp;which&nbsp;may&nbsp;be&nbsp;drawn&nbsp;on&nbsp;by&nbsp;the&nbsp;programmer,&nbsp;excluding<br>
title&nbsp;bar,&nbsp;border,&nbsp;scrollbars,&nbsp;etc.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetConstraints"><strong>GetConstraints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetConstraints">GetConstraints</a>(self)&nbsp;-&gt;&nbsp;LayoutConstraints<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;pointer&nbsp;to&nbsp;the&nbsp;window's&nbsp;layout&nbsp;constraints,&nbsp;or&nbsp;None&nbsp;if&nbsp;there<br>
are&nbsp;none.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetContainingSizer"><strong>GetContainingSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetContainingSizer">GetContainingSizer</a>(self)&nbsp;-&gt;&nbsp;Sizer<br>
&nbsp;<br>
Return&nbsp;the&nbsp;sizer&nbsp;that&nbsp;this&nbsp;window&nbsp;is&nbsp;a&nbsp;member&nbsp;of,&nbsp;if&nbsp;any,&nbsp;otherwise&nbsp;None.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetCursor"><strong>GetCursor</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetCursor">GetCursor</a>(self)&nbsp;-&gt;&nbsp;Cursor<br>
&nbsp;<br>
Return&nbsp;the&nbsp;cursor&nbsp;associated&nbsp;with&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetDefaultAttributes"><strong>GetDefaultAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetDefaultAttributes">GetDefaultAttributes</a>(self)&nbsp;-&gt;&nbsp;VisualAttributes<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;attributes&nbsp;for&nbsp;an&nbsp;instance&nbsp;of&nbsp;this&nbsp;class.&nbsp;&nbsp;This&nbsp;is<br>
useful&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;use&nbsp;the&nbsp;same&nbsp;font&nbsp;or&nbsp;colour&nbsp;in&nbsp;your&nbsp;own&nbsp;control<br>
as&nbsp;in&nbsp;a&nbsp;standard&nbsp;control&nbsp;--&nbsp;which&nbsp;is&nbsp;a&nbsp;much&nbsp;better&nbsp;idea&nbsp;than&nbsp;hard<br>
coding&nbsp;specific&nbsp;colours&nbsp;or&nbsp;fonts&nbsp;which&nbsp;might&nbsp;look&nbsp;completely&nbsp;out&nbsp;of<br>
place&nbsp;on&nbsp;the&nbsp;user's&nbsp;system,&nbsp;especially&nbsp;if&nbsp;it&nbsp;uses&nbsp;themes.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetDefaultItem"><strong>GetDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetDefaultItem">GetDefaultItem</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;child&nbsp;of&nbsp;this&nbsp;parent,&nbsp;i.e.&nbsp;the&nbsp;one&nbsp;which&nbsp;is&nbsp;activated<br>
by&nbsp;pressing&nbsp;&lt;Enter&gt;&nbsp;such&nbsp;as&nbsp;the&nbsp;OK&nbsp;button&nbsp;on&nbsp;a&nbsp;wx.Dialog.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetDropTarget"><strong>GetDropTarget</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetDropTarget">GetDropTarget</a>(self)&nbsp;-&gt;&nbsp;DropTarget<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;associated&nbsp;drop&nbsp;target,&nbsp;which&nbsp;may&nbsp;be&nbsp;None.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetEventHandler"><strong>GetEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetEventHandler">GetEventHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;event&nbsp;handler&nbsp;for&nbsp;this&nbsp;window.&nbsp;By&nbsp;default,&nbsp;the&nbsp;window&nbsp;is<br>
its&nbsp;own&nbsp;event&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetExtraStyle"><strong>GetExtraStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetExtraStyle">GetExtraStyle</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;extra&nbsp;style&nbsp;bits&nbsp;for&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetFont"><strong>GetFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetFont">GetFont</a>(self)&nbsp;-&gt;&nbsp;Font<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;default&nbsp;font&nbsp;used&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetForegroundColour"><strong>GetForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetForegroundColour">GetForegroundColour</a>(self)&nbsp;-&gt;&nbsp;Colour<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;foreground&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;interpretation&nbsp;of<br>
foreground&nbsp;colour&nbsp;is&nbsp;dependent&nbsp;on&nbsp;the&nbsp;window&nbsp;class;&nbsp;it&nbsp;may&nbsp;be&nbsp;the&nbsp;text<br>
colour&nbsp;or&nbsp;other&nbsp;colour,&nbsp;or&nbsp;it&nbsp;may&nbsp;not&nbsp;be&nbsp;used&nbsp;at&nbsp;all.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetFullTextExtent"><strong>GetFullTextExtent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetFullTextExtent">GetFullTextExtent</a>(String&nbsp;string,&nbsp;Font&nbsp;font=None)&nbsp;-&gt;<br>
&nbsp;&nbsp;&nbsp;(width,&nbsp;height,&nbsp;descent,&nbsp;externalLeading)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;width,&nbsp;height,&nbsp;decent&nbsp;and&nbsp;leading&nbsp;of&nbsp;the&nbsp;text&nbsp;using&nbsp;the<br>
current&nbsp;or&nbsp;specified&nbsp;font.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetGrandParent"><strong>GetGrandParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetGrandParent">GetGrandParent</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;parent&nbsp;of&nbsp;the&nbsp;parent&nbsp;of&nbsp;this&nbsp;window,&nbsp;or&nbsp;None&nbsp;if&nbsp;there<br>
isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetHandle"><strong>GetHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetHandle">GetHandle</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;platform-specific&nbsp;handle&nbsp;(as&nbsp;a&nbsp;long&nbsp;integer)&nbsp;of&nbsp;the<br>
physical&nbsp;window.&nbsp;&nbsp;Currently&nbsp;on&nbsp;wxMac&nbsp;it&nbsp;returns&nbsp;the&nbsp;handle&nbsp;of&nbsp;the<br>
toplevel&nbsp;parent&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetHelpText"><strong>GetHelpText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetHelpText">GetHelpText</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;help&nbsp;text&nbsp;to&nbsp;be&nbsp;used&nbsp;as&nbsp;context-sensitive&nbsp;help&nbsp;for&nbsp;this<br>
window.&nbsp;&nbsp;Note&nbsp;that&nbsp;the&nbsp;text&nbsp;is&nbsp;actually&nbsp;stored&nbsp;by&nbsp;the&nbsp;current<br>
wxHelpProvider&nbsp;implementation,&nbsp;and&nbsp;not&nbsp;in&nbsp;the&nbsp;window&nbsp;object&nbsp;itself.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetId"><strong>GetId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetId">GetId</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;identifier&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Each&nbsp;window&nbsp;has&nbsp;an&nbsp;integer<br>
identifier.&nbsp;If&nbsp;the&nbsp;application&nbsp;has&nbsp;not&nbsp;provided&nbsp;one&nbsp;(or&nbsp;the&nbsp;default&nbsp;Id<br>
-1&nbsp;is&nbsp;used)&nbsp;then&nbsp;an&nbsp;unique&nbsp;identifier&nbsp;with&nbsp;a&nbsp;negative&nbsp;value&nbsp;will&nbsp;be<br>
generated.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetMaxHeight"><strong>GetMaxHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetMaxHeight">GetMaxHeight</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetMaxSize"><strong>GetMaxSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetMaxSize">GetMaxSize</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetMaxWidth"><strong>GetMaxWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetMaxWidth">GetMaxWidth</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetMinHeight"><strong>GetMinHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetMinHeight">GetMinHeight</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetMinSize"><strong>GetMinSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetMinSize">GetMinSize</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetMinWidth"><strong>GetMinWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetMinWidth">GetMinWidth</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetName"><strong>GetName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetName">GetName</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;windows&nbsp;name.&nbsp;&nbsp;This&nbsp;name&nbsp;is&nbsp;not&nbsp;guaranteed&nbsp;to&nbsp;be&nbsp;unique;<br>
it&nbsp;is&nbsp;up&nbsp;to&nbsp;the&nbsp;programmer&nbsp;to&nbsp;supply&nbsp;an&nbsp;appropriate&nbsp;name&nbsp;in&nbsp;the&nbsp;window<br>
constructor&nbsp;or&nbsp;via&nbsp;wx.Window.SetName.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetParent"><strong>GetParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetParent">GetParent</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;parent&nbsp;window&nbsp;of&nbsp;this&nbsp;window,&nbsp;or&nbsp;None&nbsp;if&nbsp;there&nbsp;isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetPosition"><strong>GetPosition</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetPosition">GetPosition</a>(self)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window's&nbsp;position.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetPositionTuple"><strong>GetPositionTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetPositionTuple">GetPositionTuple</a>()&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window's&nbsp;position.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetRect"><strong>GetRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetRect">GetRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;size&nbsp;and&nbsp;position&nbsp;of&nbsp;the&nbsp;window&nbsp;as&nbsp;a&nbsp;wx.Rect&nbsp;object.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetScrollPos"><strong>GetScrollPos</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetScrollPos">GetScrollPos</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;position.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetScrollRange"><strong>GetScrollRange</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetScrollRange">GetScrollRange</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;range.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetScrollThumb"><strong>GetScrollThumb</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetScrollThumb">GetScrollThumb</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;thumb&nbsp;size.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetSize"><strong>GetSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetSize">GetSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetSizeTuple"><strong>GetSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetSizeTuple">GetSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetSizer"><strong>GetSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetSizer">GetSizer</a>(self)&nbsp;-&gt;&nbsp;Sizer<br>
&nbsp;<br>
Return&nbsp;the&nbsp;sizer&nbsp;associated&nbsp;with&nbsp;the&nbsp;window&nbsp;by&nbsp;a&nbsp;previous&nbsp;call&nbsp;to<br>
SetSizer&nbsp;or&nbsp;None&nbsp;if&nbsp;there&nbsp;isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetTextExtent"><strong>GetTextExtent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetTextExtent">GetTextExtent</a>(String&nbsp;string)&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;width&nbsp;and&nbsp;height&nbsp;of&nbsp;the&nbsp;text&nbsp;using&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetThemeEnabled"><strong>GetThemeEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetThemeEnabled">GetThemeEnabled</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Return&nbsp;the&nbsp;themeEnabled&nbsp;flag.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetTitle"><strong>GetTitle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetTitle">GetTitle</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window's&nbsp;title.&nbsp;Applicable&nbsp;only&nbsp;to&nbsp;frames&nbsp;and&nbsp;dialogs.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetToolTip"><strong>GetToolTip</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetToolTip">GetToolTip</a>(self)&nbsp;-&gt;&nbsp;ToolTip<br>
&nbsp;<br>
get&nbsp;the&nbsp;associated&nbsp;tooltip&nbsp;or&nbsp;None&nbsp;if&nbsp;none</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetUpdateClientRect"><strong>GetUpdateClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetUpdateClientRect">GetUpdateClientRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Get&nbsp;the&nbsp;update&nbsp;rectangle&nbsp;region&nbsp;bounding&nbsp;box&nbsp;in&nbsp;client&nbsp;coords.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetUpdateRegion"><strong>GetUpdateRegion</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetUpdateRegion">GetUpdateRegion</a>(self)&nbsp;-&gt;&nbsp;Region<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;region&nbsp;specifying&nbsp;which&nbsp;parts&nbsp;of&nbsp;the&nbsp;window&nbsp;have&nbsp;been<br>
damaged.&nbsp;Should&nbsp;only&nbsp;be&nbsp;called&nbsp;within&nbsp;an&nbsp;EVT_PAINT&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetValidator"><strong>GetValidator</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetValidator">GetValidator</a>(self)&nbsp;-&gt;&nbsp;Validator<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;pointer&nbsp;to&nbsp;the&nbsp;current&nbsp;validator&nbsp;for&nbsp;the&nbsp;window,&nbsp;or&nbsp;None&nbsp;if<br>
there&nbsp;is&nbsp;none.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetVirtualSize"><strong>GetVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetVirtualSize">GetVirtualSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Get&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows<br>
this&nbsp;is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetVirtualSizeTuple"><strong>GetVirtualSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetVirtualSizeTuple">GetVirtualSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows<br>
this&nbsp;is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetWindowStyle"><strong>GetWindowStyle</strong></a> = GetWindowStyleFlag(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetWindowStyleFlag">GetWindowStyleFlag</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window&nbsp;style&nbsp;that&nbsp;was&nbsp;passed&nbsp;to&nbsp;the&nbsp;constructor&nbsp;or&nbsp;Create<br>
method.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetWindowStyleFlag"><strong>GetWindowStyleFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetWindowStyleFlag">GetWindowStyleFlag</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window&nbsp;style&nbsp;that&nbsp;was&nbsp;passed&nbsp;to&nbsp;the&nbsp;constructor&nbsp;or&nbsp;Create<br>
method.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetWindowVariant"><strong>GetWindowVariant</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetWindowVariant">GetWindowVariant</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-HasCapture"><strong>HasCapture</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-HasCapture">HasCapture</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;this&nbsp;window&nbsp;has&nbsp;the&nbsp;current&nbsp;mouse&nbsp;capture.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-HasFlag"><strong>HasFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-HasFlag">HasFlag</a>(self,&nbsp;int&nbsp;flag)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Test&nbsp;if&nbsp;the&nbsp;given&nbsp;style&nbsp;is&nbsp;set&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-HasScrollbar"><strong>HasScrollbar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-HasScrollbar">HasScrollbar</a>(self,&nbsp;int&nbsp;orient)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Does&nbsp;the&nbsp;window&nbsp;have&nbsp;the&nbsp;scrollbar&nbsp;for&nbsp;this&nbsp;orientation?</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-HasTransparentBackground"><strong>HasTransparentBackground</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-HasTransparentBackground">HasTransparentBackground</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;True&nbsp;if&nbsp;this&nbsp;window's&nbsp;background&nbsp;is&nbsp;transparent&nbsp;(as,&nbsp;for<br>
example,&nbsp;for&nbsp;`wx.StaticText`)&nbsp;and&nbsp;should&nbsp;show&nbsp;the&nbsp;parent&nbsp;window's<br>
background.<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;mostly&nbsp;used&nbsp;internally&nbsp;by&nbsp;the&nbsp;library&nbsp;itself&nbsp;and&nbsp;you<br>
normally&nbsp;shouldn't&nbsp;have&nbsp;to&nbsp;call&nbsp;it.&nbsp;You&nbsp;may,&nbsp;however,&nbsp;have&nbsp;to&nbsp;override<br>
it&nbsp;in&nbsp;your&nbsp;custom&nbsp;control&nbsp;classes&nbsp;to&nbsp;ensure&nbsp;that&nbsp;background&nbsp;is&nbsp;painted<br>
correctly.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-Hide"><strong>Hide</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Hide">Hide</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Equivalent&nbsp;to&nbsp;calling&nbsp;<a href="#MenuButtonWx-Show">Show</a>(False).</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-HitTest"><strong>HitTest</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-HitTest">HitTest</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Test&nbsp;where&nbsp;the&nbsp;given&nbsp;(in&nbsp;client&nbsp;coords)&nbsp;point&nbsp;lies</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-HitTestXY"><strong>HitTestXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-HitTestXY">HitTestXY</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Test&nbsp;where&nbsp;the&nbsp;given&nbsp;(in&nbsp;client&nbsp;coords)&nbsp;point&nbsp;lies</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-InheritAttributes"><strong>InheritAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-InheritAttributes">InheritAttributes</a>(self)<br>
&nbsp;<br>
This&nbsp;function&nbsp;is&nbsp;(or&nbsp;should&nbsp;be,&nbsp;in&nbsp;case&nbsp;of&nbsp;custom&nbsp;controls)&nbsp;called<br>
during&nbsp;window&nbsp;creation&nbsp;to&nbsp;intelligently&nbsp;set&nbsp;up&nbsp;the&nbsp;window&nbsp;visual<br>
attributes,&nbsp;that&nbsp;is&nbsp;the&nbsp;font&nbsp;and&nbsp;the&nbsp;foreground&nbsp;and&nbsp;background<br>
colours.<br>
&nbsp;<br>
By&nbsp;'intelligently'&nbsp;the&nbsp;following&nbsp;is&nbsp;meant:&nbsp;by&nbsp;default,&nbsp;all&nbsp;windows&nbsp;use<br>
their&nbsp;own&nbsp;default&nbsp;attributes.&nbsp;However&nbsp;if&nbsp;some&nbsp;of&nbsp;the&nbsp;parent's<br>
attributes&nbsp;are&nbsp;explicitly&nbsp;changed&nbsp;(that&nbsp;is,&nbsp;using&nbsp;SetFont&nbsp;and&nbsp;not<br>
SetOwnFont)&nbsp;and&nbsp;if&nbsp;the&nbsp;corresponding&nbsp;attribute&nbsp;hadn't&nbsp;been<br>
explicitly&nbsp;set&nbsp;for&nbsp;this&nbsp;window&nbsp;itself,&nbsp;then&nbsp;this&nbsp;window&nbsp;takes&nbsp;the&nbsp;same<br>
value&nbsp;as&nbsp;used&nbsp;by&nbsp;the&nbsp;parent.&nbsp;In&nbsp;addition,&nbsp;if&nbsp;the&nbsp;window&nbsp;overrides<br>
ShouldInheritColours&nbsp;to&nbsp;return&nbsp;false,&nbsp;the&nbsp;colours&nbsp;will&nbsp;not&nbsp;be&nbsp;changed<br>
no&nbsp;matter&nbsp;what&nbsp;and&nbsp;only&nbsp;the&nbsp;font&nbsp;might.<br>
&nbsp;<br>
This&nbsp;rather&nbsp;complicated&nbsp;logic&nbsp;is&nbsp;necessary&nbsp;in&nbsp;order&nbsp;to&nbsp;accommodate&nbsp;the<br>
different&nbsp;usage&nbsp;scenarios.&nbsp;The&nbsp;most&nbsp;common&nbsp;one&nbsp;is&nbsp;when&nbsp;all&nbsp;default<br>
attributes&nbsp;are&nbsp;used&nbsp;and&nbsp;in&nbsp;this&nbsp;case,&nbsp;nothing&nbsp;should&nbsp;be&nbsp;inherited&nbsp;as<br>
in&nbsp;modern&nbsp;GUIs&nbsp;different&nbsp;controls&nbsp;use&nbsp;different&nbsp;fonts&nbsp;(and&nbsp;colours)<br>
than&nbsp;their&nbsp;siblings&nbsp;so&nbsp;they&nbsp;can't&nbsp;inherit&nbsp;the&nbsp;same&nbsp;value&nbsp;from&nbsp;the<br>
parent.&nbsp;However&nbsp;it&nbsp;was&nbsp;also&nbsp;deemed&nbsp;desirable&nbsp;to&nbsp;allow&nbsp;to&nbsp;simply&nbsp;change<br>
the&nbsp;attributes&nbsp;of&nbsp;all&nbsp;children&nbsp;at&nbsp;once&nbsp;by&nbsp;just&nbsp;changing&nbsp;the&nbsp;font&nbsp;or<br>
colour&nbsp;of&nbsp;their&nbsp;common&nbsp;parent,&nbsp;hence&nbsp;in&nbsp;this&nbsp;case&nbsp;we&nbsp;do&nbsp;inherit&nbsp;the<br>
parents&nbsp;attributes.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-InheritsBackgroundColour"><strong>InheritsBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-InheritsBackgroundColour">InheritsBackgroundColour</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-InitDialog"><strong>InitDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-InitDialog">InitDialog</a>(self)<br>
&nbsp;<br>
Sends&nbsp;an&nbsp;EVT_INIT_DIALOG&nbsp;event,&nbsp;whose&nbsp;handler&nbsp;usually&nbsp;transfers&nbsp;data<br>
to&nbsp;the&nbsp;dialog&nbsp;via&nbsp;validators.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-InvalidateBestSize"><strong>InvalidateBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-InvalidateBestSize">InvalidateBestSize</a>(self)<br>
&nbsp;<br>
Reset&nbsp;the&nbsp;cached&nbsp;best&nbsp;size&nbsp;value&nbsp;so&nbsp;it&nbsp;will&nbsp;be&nbsp;recalculated&nbsp;the&nbsp;next<br>
time&nbsp;it&nbsp;is&nbsp;needed.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-IsBeingDeleted"><strong>IsBeingDeleted</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-IsBeingDeleted">IsBeingDeleted</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Is&nbsp;the&nbsp;window&nbsp;in&nbsp;the&nbsp;process&nbsp;of&nbsp;being&nbsp;deleted?</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-IsEnabled"><strong>IsEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-IsEnabled">IsEnabled</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;enabled&nbsp;for&nbsp;input,&nbsp;false&nbsp;otherwise.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-IsExposed"><strong>IsExposed</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-IsExposed">IsExposed</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;w=1,&nbsp;int&nbsp;h=1)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-IsExposedPoint"><strong>IsExposedPoint</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-IsExposedPoint">IsExposedPoint</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-IsExposedRect"><strong>IsExposedRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-IsExposedRect">IsExposedRect</a>(self,&nbsp;Rect&nbsp;rect)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-IsRetained"><strong>IsRetained</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-IsRetained">IsRetained</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;retained,&nbsp;false&nbsp;otherwise.&nbsp;&nbsp;Retained<br>
windows&nbsp;are&nbsp;only&nbsp;available&nbsp;on&nbsp;X&nbsp;platforms.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-IsShown"><strong>IsShown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-IsShown">IsShown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;shown,&nbsp;false&nbsp;if&nbsp;it&nbsp;has&nbsp;been&nbsp;hidden.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-IsTopLevel"><strong>IsTopLevel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-IsTopLevel">IsTopLevel</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;window&nbsp;is&nbsp;a&nbsp;top-level&nbsp;one.&nbsp;Currently&nbsp;all<br>
frames&nbsp;and&nbsp;dialogs&nbsp;are&nbsp;always&nbsp;considered&nbsp;to&nbsp;be&nbsp;top-level&nbsp;windows&nbsp;(even<br>
if&nbsp;they&nbsp;have&nbsp;a&nbsp;parent&nbsp;window).</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-Layout"><strong>Layout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Layout">Layout</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Invokes&nbsp;the&nbsp;constraint-based&nbsp;layout&nbsp;algorithm&nbsp;or&nbsp;the&nbsp;sizer-based<br>
algorithm&nbsp;for&nbsp;this&nbsp;window.&nbsp;&nbsp;See&nbsp;SetAutoLayout:&nbsp;when&nbsp;auto&nbsp;layout&nbsp;is&nbsp;on,<br>
this&nbsp;function&nbsp;gets&nbsp;called&nbsp;automatically&nbsp;by&nbsp;the&nbsp;default&nbsp;EVT_SIZE<br>
handler&nbsp;when&nbsp;the&nbsp;window&nbsp;is&nbsp;resized.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-LineDown"><strong>LineDown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-LineDown">LineDown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#MenuButtonWx-ScrollLines">ScrollLines</a>(1).</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-LineUp"><strong>LineUp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-LineUp">LineUp</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#MenuButtonWx-ScrollLines">ScrollLines</a>(-1).</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-Lower"><strong>Lower</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Lower">Lower</a>(self)<br>
&nbsp;<br>
Lowers&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;bottom&nbsp;of&nbsp;the&nbsp;window&nbsp;hierarchy.&nbsp;&nbsp;In&nbsp;current<br>
version&nbsp;of&nbsp;wxWidgets&nbsp;this&nbsp;works&nbsp;both&nbsp;for&nbsp;manage&nbsp;and&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-MakeModal"><strong>MakeModal</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-MakeModal">MakeModal</a>(self,&nbsp;bool&nbsp;modal=True)<br>
&nbsp;<br>
Disables&nbsp;all&nbsp;other&nbsp;windows&nbsp;in&nbsp;the&nbsp;application&nbsp;so&nbsp;that&nbsp;the&nbsp;user&nbsp;can<br>
only&nbsp;interact&nbsp;with&nbsp;this&nbsp;window.&nbsp;&nbsp;Passing&nbsp;False&nbsp;will&nbsp;reverse&nbsp;this<br>
effect.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-Move"><strong>Move</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Move">Move</a>(self,&nbsp;Point&nbsp;pt,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-MoveAfterInTabOrder"><strong>MoveAfterInTabOrder</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-MoveAfterInTabOrder">MoveAfterInTabOrder</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Moves&nbsp;this&nbsp;window&nbsp;in&nbsp;the&nbsp;tab&nbsp;navigation&nbsp;order&nbsp;after&nbsp;the&nbsp;specified<br>
sibling&nbsp;window.&nbsp;&nbsp;This&nbsp;means&nbsp;that&nbsp;when&nbsp;the&nbsp;user&nbsp;presses&nbsp;the&nbsp;TAB&nbsp;key&nbsp;on<br>
that&nbsp;other&nbsp;window,&nbsp;the&nbsp;focus&nbsp;switches&nbsp;to&nbsp;this&nbsp;window.<br>
&nbsp;<br>
The&nbsp;default&nbsp;tab&nbsp;order&nbsp;is&nbsp;the&nbsp;same&nbsp;as&nbsp;creation&nbsp;order.&nbsp;&nbsp;This&nbsp;function<br>
and&nbsp;`MoveBeforeInTabOrder`&nbsp;allow&nbsp;to&nbsp;change&nbsp;it&nbsp;after&nbsp;creating&nbsp;all&nbsp;the<br>
windows.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-MoveBeforeInTabOrder"><strong>MoveBeforeInTabOrder</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-MoveBeforeInTabOrder">MoveBeforeInTabOrder</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Same&nbsp;as&nbsp;`MoveAfterInTabOrder`&nbsp;except&nbsp;that&nbsp;it&nbsp;inserts&nbsp;this&nbsp;window&nbsp;just<br>
before&nbsp;win&nbsp;instead&nbsp;of&nbsp;putting&nbsp;it&nbsp;right&nbsp;after&nbsp;it.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-MoveXY"><strong>MoveXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-MoveXY">MoveXY</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-Navigate"><strong>Navigate</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Navigate">Navigate</a>(self,&nbsp;int&nbsp;flags=NavigationKeyEvent.IsForward)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Does&nbsp;keyboard&nbsp;navigation&nbsp;from&nbsp;this&nbsp;window&nbsp;to&nbsp;another,&nbsp;by&nbsp;sending&nbsp;a<br>
`wx.NavigationKeyEvent`.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-PageDown"><strong>PageDown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-PageDown">PageDown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#MenuButtonWx-ScrollPages">ScrollPages</a>(1).</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-PageUp"><strong>PageUp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-PageUp">PageUp</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#MenuButtonWx-ScrollPages">ScrollPages</a>(-1).</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-PopEventHandler"><strong>PopEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-PopEventHandler">PopEventHandler</a>(self,&nbsp;bool&nbsp;deleteHandler=False)&nbsp;-&gt;&nbsp;EvtHandler<br>
&nbsp;<br>
Removes&nbsp;and&nbsp;returns&nbsp;the&nbsp;top-most&nbsp;event&nbsp;handler&nbsp;on&nbsp;the&nbsp;event&nbsp;handler<br>
stack.&nbsp;&nbsp;If&nbsp;deleteHandler&nbsp;is&nbsp;True&nbsp;then&nbsp;the&nbsp;wx.EvtHandler&nbsp;object&nbsp;will&nbsp;be<br>
destroyed&nbsp;after&nbsp;it&nbsp;is&nbsp;popped.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-PopupMenu"><strong>PopupMenu</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-PopupMenu">PopupMenu</a>(self,&nbsp;Menu&nbsp;menu,&nbsp;Point&nbsp;pos=DefaultPosition)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Pops&nbsp;up&nbsp;the&nbsp;given&nbsp;menu&nbsp;at&nbsp;the&nbsp;specified&nbsp;coordinates,&nbsp;relative&nbsp;to&nbsp;this&nbsp;window,<br>
and&nbsp;returns&nbsp;control&nbsp;when&nbsp;the&nbsp;user&nbsp;has&nbsp;dismissed&nbsp;the&nbsp;menu.&nbsp;If&nbsp;a&nbsp;menu&nbsp;item&nbsp;is<br>
selected,&nbsp;the&nbsp;corresponding&nbsp;menu&nbsp;event&nbsp;is&nbsp;generated&nbsp;and&nbsp;will&nbsp;be&nbsp;processed&nbsp;as<br>
usual.&nbsp;&nbsp;If&nbsp;the&nbsp;default&nbsp;position&nbsp;is&nbsp;given&nbsp;then&nbsp;the&nbsp;current&nbsp;position&nbsp;of&nbsp;the<br>
mouse&nbsp;cursor&nbsp;will&nbsp;be&nbsp;used.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-PopupMenuXY"><strong>PopupMenuXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-PopupMenuXY">PopupMenuXY</a>(self,&nbsp;Menu&nbsp;menu,&nbsp;int&nbsp;x=-1,&nbsp;int&nbsp;y=-1)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Pops&nbsp;up&nbsp;the&nbsp;given&nbsp;menu&nbsp;at&nbsp;the&nbsp;specified&nbsp;coordinates,&nbsp;relative&nbsp;to&nbsp;this&nbsp;window,<br>
and&nbsp;returns&nbsp;control&nbsp;when&nbsp;the&nbsp;user&nbsp;has&nbsp;dismissed&nbsp;the&nbsp;menu.&nbsp;If&nbsp;a&nbsp;menu&nbsp;item&nbsp;is<br>
selected,&nbsp;the&nbsp;corresponding&nbsp;menu&nbsp;event&nbsp;is&nbsp;generated&nbsp;and&nbsp;will&nbsp;be&nbsp;processed&nbsp;as<br>
usual.&nbsp;&nbsp;If&nbsp;the&nbsp;default&nbsp;position&nbsp;is&nbsp;given&nbsp;then&nbsp;the&nbsp;current&nbsp;position&nbsp;of&nbsp;the<br>
mouse&nbsp;cursor&nbsp;will&nbsp;be&nbsp;used.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-PostCreate"><strong>PostCreate</strong></a>(self, pre)</dt><dd><tt>Phase&nbsp;3&nbsp;of&nbsp;the&nbsp;2-phase&nbsp;create&nbsp;&lt;wink!&gt;<br>
Call&nbsp;this&nbsp;method&nbsp;after&nbsp;precreating&nbsp;the&nbsp;window&nbsp;with&nbsp;the&nbsp;2-phase&nbsp;create&nbsp;method.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-PrepareDC"><strong>PrepareDC</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-PrepareDC">PrepareDC</a>(self,&nbsp;DC&nbsp;dc)<br>
&nbsp;<br>
Call&nbsp;this&nbsp;function&nbsp;to&nbsp;prepare&nbsp;the&nbsp;device&nbsp;context&nbsp;for&nbsp;drawing&nbsp;a<br>
scrolled&nbsp;image.&nbsp;It&nbsp;sets&nbsp;the&nbsp;device&nbsp;origin&nbsp;according&nbsp;to&nbsp;the&nbsp;current<br>
scroll&nbsp;position.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-PushEventHandler"><strong>PushEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-PushEventHandler">PushEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)<br>
&nbsp;<br>
Pushes&nbsp;this&nbsp;event&nbsp;handler&nbsp;onto&nbsp;the&nbsp;event&nbsp;handler&nbsp;stack&nbsp;for&nbsp;the&nbsp;window.<br>
An&nbsp;event&nbsp;handler&nbsp;is&nbsp;an&nbsp;object&nbsp;that&nbsp;is&nbsp;capable&nbsp;of&nbsp;processing&nbsp;the&nbsp;events<br>
sent&nbsp;to&nbsp;a&nbsp;window.&nbsp;By&nbsp;default,&nbsp;the&nbsp;window&nbsp;is&nbsp;its&nbsp;own&nbsp;event&nbsp;handler,&nbsp;but<br>
an&nbsp;application&nbsp;may&nbsp;wish&nbsp;to&nbsp;substitute&nbsp;another,&nbsp;for&nbsp;example&nbsp;to&nbsp;allow<br>
central&nbsp;implementation&nbsp;of&nbsp;event-handling&nbsp;for&nbsp;a&nbsp;variety&nbsp;of&nbsp;different<br>
window&nbsp;classes.<br>
&nbsp;<br>
wx.Window.PushEventHandler&nbsp;allows&nbsp;an&nbsp;application&nbsp;to&nbsp;set&nbsp;up&nbsp;a&nbsp;chain&nbsp;of<br>
event&nbsp;handlers,&nbsp;where&nbsp;an&nbsp;event&nbsp;not&nbsp;handled&nbsp;by&nbsp;one&nbsp;event&nbsp;handler&nbsp;is<br>
handed&nbsp;to&nbsp;the&nbsp;next&nbsp;one&nbsp;in&nbsp;the&nbsp;chain.&nbsp;Use&nbsp;`wx.Window.PopEventHandler`&nbsp;to<br>
remove&nbsp;the&nbsp;event&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-Raise"><strong>Raise</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Raise">Raise</a>(self)<br>
&nbsp;<br>
Raises&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;top&nbsp;of&nbsp;the&nbsp;window&nbsp;hierarchy.&nbsp;&nbsp;In&nbsp;current<br>
version&nbsp;of&nbsp;wxWidgets&nbsp;this&nbsp;works&nbsp;both&nbsp;for&nbsp;manage&nbsp;and&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-Refresh"><strong>Refresh</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Refresh">Refresh</a>(self,&nbsp;bool&nbsp;eraseBackground=True,&nbsp;Rect&nbsp;rect=None)<br>
&nbsp;<br>
Mark&nbsp;the&nbsp;specified&nbsp;rectangle&nbsp;(or&nbsp;the&nbsp;whole&nbsp;window)&nbsp;as&nbsp;"dirty"&nbsp;so&nbsp;it<br>
will&nbsp;be&nbsp;repainted.&nbsp;&nbsp;Causes&nbsp;an&nbsp;EVT_PAINT&nbsp;event&nbsp;to&nbsp;be&nbsp;generated&nbsp;and&nbsp;sent<br>
to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-RefreshRect"><strong>RefreshRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-RefreshRect">RefreshRect</a>(self,&nbsp;Rect&nbsp;rect,&nbsp;bool&nbsp;eraseBackground=True)<br>
&nbsp;<br>
Redraws&nbsp;the&nbsp;contents&nbsp;of&nbsp;the&nbsp;given&nbsp;rectangle:&nbsp;the&nbsp;area&nbsp;inside&nbsp;it&nbsp;will<br>
be&nbsp;repainted.&nbsp;&nbsp;This&nbsp;is&nbsp;the&nbsp;same&nbsp;as&nbsp;Refresh&nbsp;but&nbsp;has&nbsp;a&nbsp;nicer&nbsp;syntax.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-RegisterHotKey"><strong>RegisterHotKey</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-RegisterHotKey">RegisterHotKey</a>(self,&nbsp;int&nbsp;hotkeyId,&nbsp;int&nbsp;modifiers,&nbsp;int&nbsp;keycode)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Registers&nbsp;a&nbsp;system&nbsp;wide&nbsp;hotkey.&nbsp;Every&nbsp;time&nbsp;the&nbsp;user&nbsp;presses&nbsp;the&nbsp;hotkey<br>
registered&nbsp;here,&nbsp;this&nbsp;window&nbsp;will&nbsp;receive&nbsp;a&nbsp;hotkey&nbsp;event.&nbsp;It&nbsp;will<br>
receive&nbsp;the&nbsp;event&nbsp;even&nbsp;if&nbsp;the&nbsp;application&nbsp;is&nbsp;in&nbsp;the&nbsp;background&nbsp;and<br>
does&nbsp;not&nbsp;have&nbsp;the&nbsp;input&nbsp;focus&nbsp;because&nbsp;the&nbsp;user&nbsp;is&nbsp;working&nbsp;with&nbsp;some<br>
other&nbsp;application.&nbsp;&nbsp;To&nbsp;bind&nbsp;an&nbsp;event&nbsp;handler&nbsp;function&nbsp;to&nbsp;this&nbsp;hotkey<br>
use&nbsp;EVT_HOTKEY&nbsp;with&nbsp;an&nbsp;id&nbsp;equal&nbsp;to&nbsp;hotkeyId.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the<br>
hotkey&nbsp;was&nbsp;registered&nbsp;successfully.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-ReleaseMouse"><strong>ReleaseMouse</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-ReleaseMouse">ReleaseMouse</a>(self)<br>
&nbsp;<br>
Releases&nbsp;mouse&nbsp;input&nbsp;captured&nbsp;with&nbsp;wx.Window.CaptureMouse.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-RemoveChild"><strong>RemoveChild</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-RemoveChild">RemoveChild</a>(self,&nbsp;Window&nbsp;child)<br>
&nbsp;<br>
Removes&nbsp;a&nbsp;child&nbsp;window.&nbsp;This&nbsp;is&nbsp;called&nbsp;automatically&nbsp;by&nbsp;window<br>
deletion&nbsp;functions&nbsp;so&nbsp;should&nbsp;not&nbsp;be&nbsp;required&nbsp;by&nbsp;the&nbsp;application<br>
programmer.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-RemoveEventHandler"><strong>RemoveEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-RemoveEventHandler">RemoveEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Find&nbsp;the&nbsp;given&nbsp;handler&nbsp;in&nbsp;the&nbsp;event&nbsp;handler&nbsp;chain&nbsp;and&nbsp;remove&nbsp;(but&nbsp;not<br>
delete)&nbsp;it&nbsp;from&nbsp;the&nbsp;event&nbsp;handler&nbsp;chain,&nbsp;return&nbsp;True&nbsp;if&nbsp;it&nbsp;was&nbsp;found<br>
and&nbsp;False&nbsp;otherwise&nbsp;(this&nbsp;also&nbsp;results&nbsp;in&nbsp;an&nbsp;assert&nbsp;failure&nbsp;so&nbsp;this<br>
function&nbsp;should&nbsp;only&nbsp;be&nbsp;called&nbsp;when&nbsp;the&nbsp;handler&nbsp;is&nbsp;supposed&nbsp;to&nbsp;be<br>
there.)</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-Reparent"><strong>Reparent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Reparent">Reparent</a>(self,&nbsp;Window&nbsp;newParent)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Reparents&nbsp;the&nbsp;window,&nbsp;i.e&nbsp;the&nbsp;window&nbsp;will&nbsp;be&nbsp;removed&nbsp;from&nbsp;its&nbsp;current<br>
parent&nbsp;window&nbsp;(e.g.&nbsp;a&nbsp;non-standard&nbsp;toolbar&nbsp;in&nbsp;a&nbsp;wxFrame)&nbsp;and&nbsp;then<br>
re-inserted&nbsp;into&nbsp;another.&nbsp;Available&nbsp;on&nbsp;Windows&nbsp;and&nbsp;GTK.&nbsp;&nbsp;Returns&nbsp;True<br>
if&nbsp;the&nbsp;parent&nbsp;was&nbsp;changed,&nbsp;False&nbsp;otherwise&nbsp;(error&nbsp;or&nbsp;newParent&nbsp;==<br>
oldParent)</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-ScreenToClient"><strong>ScreenToClient</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-ScreenToClient">ScreenToClient</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;from&nbsp;screen&nbsp;to&nbsp;client&nbsp;window&nbsp;coordinates.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-ScreenToClientXY"><strong>ScreenToClientXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-ScreenToClientXY">ScreenToClientXY</a>(int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Converts&nbsp;from&nbsp;screen&nbsp;to&nbsp;client&nbsp;window&nbsp;coordinates.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-ScrollLines"><strong>ScrollLines</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-ScrollLines">ScrollLines</a>(self,&nbsp;int&nbsp;lines)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
If&nbsp;the&nbsp;platform&nbsp;and&nbsp;window&nbsp;class&nbsp;supports&nbsp;it,&nbsp;scrolls&nbsp;the&nbsp;window&nbsp;by<br>
the&nbsp;given&nbsp;number&nbsp;of&nbsp;lines&nbsp;down,&nbsp;if&nbsp;lines&nbsp;is&nbsp;positive,&nbsp;or&nbsp;up&nbsp;if&nbsp;lines<br>
is&nbsp;negative.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;window&nbsp;was&nbsp;scrolled,&nbsp;False&nbsp;if&nbsp;it&nbsp;was<br>
already&nbsp;on&nbsp;top/bottom&nbsp;and&nbsp;nothing&nbsp;was&nbsp;done.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-ScrollPages"><strong>ScrollPages</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-ScrollPages">ScrollPages</a>(self,&nbsp;int&nbsp;pages)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
If&nbsp;the&nbsp;platform&nbsp;and&nbsp;window&nbsp;class&nbsp;supports&nbsp;it,&nbsp;scrolls&nbsp;the&nbsp;window&nbsp;by<br>
the&nbsp;given&nbsp;number&nbsp;of&nbsp;pages&nbsp;down,&nbsp;if&nbsp;pages&nbsp;is&nbsp;positive,&nbsp;or&nbsp;up&nbsp;if&nbsp;pages<br>
is&nbsp;negative.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;window&nbsp;was&nbsp;scrolled,&nbsp;False&nbsp;if&nbsp;it&nbsp;was<br>
already&nbsp;on&nbsp;top/bottom&nbsp;and&nbsp;nothing&nbsp;was&nbsp;done.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-ScrollWindow"><strong>ScrollWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-ScrollWindow">ScrollWindow</a>(self,&nbsp;int&nbsp;dx,&nbsp;int&nbsp;dy,&nbsp;Rect&nbsp;rect=None)<br>
&nbsp;<br>
Physically&nbsp;scrolls&nbsp;the&nbsp;pixels&nbsp;in&nbsp;the&nbsp;window&nbsp;and&nbsp;move&nbsp;child&nbsp;windows<br>
accordingly.&nbsp;&nbsp;Use&nbsp;this&nbsp;function&nbsp;to&nbsp;optimise&nbsp;your&nbsp;scrolling<br>
implementations,&nbsp;to&nbsp;minimise&nbsp;the&nbsp;area&nbsp;that&nbsp;must&nbsp;be&nbsp;redrawn.&nbsp;Note&nbsp;that<br>
it&nbsp;is&nbsp;rarely&nbsp;required&nbsp;to&nbsp;call&nbsp;this&nbsp;function&nbsp;from&nbsp;a&nbsp;user&nbsp;program.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SendSizeEvent"><strong>SendSizeEvent</strong></a>(self)</dt></dl>

<dl><dt><a name="MenuButtonWx-SetAcceleratorTable"><strong>SetAcceleratorTable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetAcceleratorTable">SetAcceleratorTable</a>(self,&nbsp;AcceleratorTable&nbsp;accel)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;accelerator&nbsp;table&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetAutoLayout"><strong>SetAutoLayout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetAutoLayout">SetAutoLayout</a>(self,&nbsp;bool&nbsp;autoLayout)<br>
&nbsp;<br>
Determines&nbsp;whether&nbsp;the&nbsp;Layout&nbsp;function&nbsp;will&nbsp;be&nbsp;called&nbsp;automatically<br>
when&nbsp;the&nbsp;window&nbsp;is&nbsp;resized.&nbsp;&nbsp;It&nbsp;is&nbsp;called&nbsp;implicitly&nbsp;by&nbsp;SetSizer&nbsp;but<br>
if&nbsp;you&nbsp;use&nbsp;SetConstraints&nbsp;you&nbsp;should&nbsp;call&nbsp;it&nbsp;manually&nbsp;or&nbsp;otherwise&nbsp;the<br>
window&nbsp;layout&nbsp;won't&nbsp;be&nbsp;correctly&nbsp;updated&nbsp;when&nbsp;its&nbsp;size&nbsp;changes.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetBackgroundColour"><strong>SetBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetBackgroundColour">SetBackgroundColour</a>(self,&nbsp;Colour&nbsp;colour)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;background&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;colour<br>
was&nbsp;changed.&nbsp;&nbsp;The&nbsp;background&nbsp;colour&nbsp;is&nbsp;usually&nbsp;painted&nbsp;by&nbsp;the&nbsp;default<br>
EVT_ERASE_BACKGROUND&nbsp;event&nbsp;handler&nbsp;function&nbsp;under&nbsp;Windows&nbsp;and<br>
automatically&nbsp;under&nbsp;GTK.&nbsp;&nbsp;Using&nbsp;`wx.NullColour`&nbsp;will&nbsp;reset&nbsp;the&nbsp;window<br>
to&nbsp;the&nbsp;default&nbsp;background&nbsp;colour.<br>
&nbsp;<br>
Note&nbsp;that&nbsp;setting&nbsp;the&nbsp;background&nbsp;colour&nbsp;may&nbsp;not&nbsp;cause&nbsp;an&nbsp;immediate<br>
refresh,&nbsp;so&nbsp;you&nbsp;may&nbsp;wish&nbsp;to&nbsp;call&nbsp;`ClearBackground`&nbsp;or&nbsp;`Refresh`&nbsp;after<br>
calling&nbsp;this&nbsp;function.<br>
&nbsp;<br>
Using&nbsp;this&nbsp;function&nbsp;will&nbsp;disable&nbsp;attempts&nbsp;to&nbsp;use&nbsp;themes&nbsp;for&nbsp;this<br>
window,&nbsp;if&nbsp;the&nbsp;system&nbsp;supports&nbsp;them.&nbsp;&nbsp;Use&nbsp;with&nbsp;care&nbsp;since&nbsp;usually&nbsp;the<br>
themes&nbsp;represent&nbsp;the&nbsp;appearance&nbsp;chosen&nbsp;by&nbsp;the&nbsp;user&nbsp;to&nbsp;be&nbsp;used&nbsp;for&nbsp;all<br>
applications&nbsp;on&nbsp;the&nbsp;system.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetBackgroundStyle"><strong>SetBackgroundStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetBackgroundStyle">SetBackgroundStyle</a>(self,&nbsp;int&nbsp;style)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;The&nbsp;background&nbsp;style<br>
indicates&nbsp;how&nbsp;the&nbsp;background&nbsp;of&nbsp;the&nbsp;window&nbsp;is&nbsp;drawn.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;======================&nbsp;&nbsp;========================================<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_SYSTEM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;colour&nbsp;or&nbsp;pattern&nbsp;should<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;be&nbsp;determined&nbsp;by&nbsp;the&nbsp;system<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_COLOUR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;should&nbsp;be&nbsp;a&nbsp;solid&nbsp;colour<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_CUSTOM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;will&nbsp;be&nbsp;implemented&nbsp;by&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;application.<br>
&nbsp;&nbsp;&nbsp;&nbsp;======================&nbsp;&nbsp;========================================<br>
&nbsp;<br>
On&nbsp;GTK+,&nbsp;use&nbsp;of&nbsp;wx.BG_STYLE_CUSTOM&nbsp;allows&nbsp;the&nbsp;flicker-free&nbsp;drawing&nbsp;of<br>
a&nbsp;custom&nbsp;background,&nbsp;such&nbsp;as&nbsp;a&nbsp;tiled&nbsp;bitmap.&nbsp;Currently&nbsp;the&nbsp;style&nbsp;has<br>
no&nbsp;effect&nbsp;on&nbsp;other&nbsp;platforms.<br>
&nbsp;<br>
:see:&nbsp;`GetBackgroundStyle`,&nbsp;`SetBackgroundColour`</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetBestFittingSize"><strong>SetBestFittingSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetBestFittingSize">SetBestFittingSize</a>(self,&nbsp;Size&nbsp;size=DefaultSize)<br>
&nbsp;<br>
A&nbsp;'Smart'&nbsp;SetSize&nbsp;that&nbsp;will&nbsp;fill&nbsp;in&nbsp;default&nbsp;size&nbsp;components&nbsp;with&nbsp;the<br>
window's&nbsp;*best&nbsp;size*&nbsp;values.&nbsp;&nbsp;Also&nbsp;set's&nbsp;the&nbsp;minsize&nbsp;for&nbsp;use&nbsp;with&nbsp;sizers.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetCaret"><strong>SetCaret</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetCaret">SetCaret</a>(self,&nbsp;Caret&nbsp;caret)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;caret&nbsp;associated&nbsp;with&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetClientRect"><strong>SetClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetClientRect">SetClientRect</a>(self,&nbsp;Rect&nbsp;rect)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetClientSize"><strong>SetClientSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetClientSize">SetClientSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetClientSizeWH"><strong>SetClientSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetClientSizeWH">SetClientSizeWH</a>(self,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetConstraints"><strong>SetConstraints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetConstraints">SetConstraints</a>(self,&nbsp;LayoutConstraints&nbsp;constraints)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window&nbsp;to&nbsp;have&nbsp;the&nbsp;given&nbsp;layout&nbsp;constraints.&nbsp;If&nbsp;an&nbsp;existing<br>
layout&nbsp;constraints&nbsp;object&nbsp;is&nbsp;already&nbsp;owned&nbsp;by&nbsp;the&nbsp;window,&nbsp;it&nbsp;will&nbsp;be<br>
deleted.&nbsp;&nbsp;Pass&nbsp;None&nbsp;to&nbsp;disassociate&nbsp;and&nbsp;delete&nbsp;the&nbsp;window's&nbsp;current<br>
constraints.<br>
&nbsp;<br>
You&nbsp;must&nbsp;call&nbsp;SetAutoLayout&nbsp;to&nbsp;tell&nbsp;a&nbsp;window&nbsp;to&nbsp;use&nbsp;the&nbsp;constraints<br>
automatically&nbsp;in&nbsp;its&nbsp;default&nbsp;EVT_SIZE&nbsp;handler;&nbsp;otherwise,&nbsp;you&nbsp;must<br>
handle&nbsp;EVT_SIZE&nbsp;yourself&nbsp;and&nbsp;call&nbsp;<a href="#MenuButtonWx-Layout">Layout</a>()&nbsp;explicitly.&nbsp;When&nbsp;setting<br>
both&nbsp;a&nbsp;wx.LayoutConstraints&nbsp;and&nbsp;a&nbsp;wx.Sizer,&nbsp;only&nbsp;the&nbsp;sizer&nbsp;will&nbsp;have<br>
effect.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetContainingSizer"><strong>SetContainingSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetContainingSizer">SetContainingSizer</a>(self,&nbsp;Sizer&nbsp;sizer)<br>
&nbsp;<br>
This&nbsp;normally&nbsp;does&nbsp;not&nbsp;need&nbsp;to&nbsp;be&nbsp;called&nbsp;by&nbsp;application&nbsp;code.&nbsp;It&nbsp;is<br>
called&nbsp;internally&nbsp;when&nbsp;a&nbsp;window&nbsp;is&nbsp;added&nbsp;to&nbsp;a&nbsp;sizer,&nbsp;and&nbsp;is&nbsp;used&nbsp;so<br>
the&nbsp;window&nbsp;can&nbsp;remove&nbsp;itself&nbsp;from&nbsp;the&nbsp;sizer&nbsp;when&nbsp;it&nbsp;is&nbsp;destroyed.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetCursor"><strong>SetCursor</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetCursor">SetCursor</a>(self,&nbsp;Cursor&nbsp;cursor)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;cursor.&nbsp;Notice&nbsp;that&nbsp;the&nbsp;window&nbsp;cursor&nbsp;also&nbsp;sets&nbsp;it<br>
for&nbsp;the&nbsp;children&nbsp;of&nbsp;the&nbsp;window&nbsp;implicitly.<br>
&nbsp;<br>
The&nbsp;cursor&nbsp;may&nbsp;be&nbsp;wx.NullCursor&nbsp;in&nbsp;which&nbsp;case&nbsp;the&nbsp;window&nbsp;cursor&nbsp;will<br>
be&nbsp;reset&nbsp;back&nbsp;to&nbsp;default.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetDefaultItem"><strong>SetDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetDefaultItem">SetDefaultItem</a>(self,&nbsp;Window&nbsp;child)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Set&nbsp;this&nbsp;child&nbsp;as&nbsp;default,&nbsp;return&nbsp;the&nbsp;old&nbsp;default.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetDimensions"><strong>SetDimensions</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetDimensions">SetDimensions</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height,&nbsp;int&nbsp;sizeFlags=SIZE_AUTO)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;and&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;The&nbsp;sizeFlags<br>
parameter&nbsp;indicates&nbsp;the&nbsp;interpretation&nbsp;of&nbsp;the&nbsp;other&nbsp;params&nbsp;if&nbsp;they&nbsp;are<br>
equal&nbsp;to&nbsp;-1.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;========================&nbsp;&nbsp;======================================<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.SIZE_AUTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;-1&nbsp;indicates&nbsp;that&nbsp;a&nbsp;class-specific<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;should&nbsp;be&nbsp;used.<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.SIZE_USE_EXISTING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Axisting&nbsp;dimensions&nbsp;should&nbsp;be&nbsp;used&nbsp;if<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;values&nbsp;are&nbsp;supplied.<br>
&nbsp;&nbsp;&nbsp;&nbsp;wxSIZE_ALLOW_MINUS_ONE&nbsp;&nbsp;&nbsp;&nbsp;Allow&nbsp;dimensions&nbsp;of&nbsp;-1&nbsp;and&nbsp;less&nbsp;to&nbsp;be<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interpreted&nbsp;as&nbsp;real&nbsp;dimensions,&nbsp;not<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;values.<br>
&nbsp;&nbsp;&nbsp;&nbsp;========================&nbsp;&nbsp;======================================</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetDropTarget"><strong>SetDropTarget</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetDropTarget">SetDropTarget</a>(self,&nbsp;DropTarget&nbsp;dropTarget)<br>
&nbsp;<br>
Associates&nbsp;a&nbsp;drop&nbsp;target&nbsp;with&nbsp;this&nbsp;window.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;already&nbsp;has<br>
a&nbsp;drop&nbsp;target,&nbsp;it&nbsp;is&nbsp;deleted.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetEventHandler"><strong>SetEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetEventHandler">SetEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;event&nbsp;handler&nbsp;for&nbsp;this&nbsp;window.&nbsp;&nbsp;An&nbsp;event&nbsp;handler&nbsp;is&nbsp;an&nbsp;object<br>
that&nbsp;is&nbsp;capable&nbsp;of&nbsp;processing&nbsp;the&nbsp;events&nbsp;sent&nbsp;to&nbsp;a&nbsp;window.&nbsp;By&nbsp;default,<br>
the&nbsp;window&nbsp;is&nbsp;its&nbsp;own&nbsp;event&nbsp;handler,&nbsp;but&nbsp;an&nbsp;application&nbsp;may&nbsp;wish&nbsp;to<br>
substitute&nbsp;another,&nbsp;for&nbsp;example&nbsp;to&nbsp;allow&nbsp;central&nbsp;implementation&nbsp;of<br>
event-handling&nbsp;for&nbsp;a&nbsp;variety&nbsp;of&nbsp;different&nbsp;window&nbsp;classes.<br>
&nbsp;<br>
It&nbsp;is&nbsp;usually&nbsp;better&nbsp;to&nbsp;use&nbsp;`wx.Window.PushEventHandler`&nbsp;since&nbsp;this&nbsp;sets<br>
up&nbsp;a&nbsp;chain&nbsp;of&nbsp;event&nbsp;handlers,&nbsp;where&nbsp;an&nbsp;event&nbsp;not&nbsp;handled&nbsp;by&nbsp;one&nbsp;event<br>
handler&nbsp;is&nbsp;handed&nbsp;to&nbsp;the&nbsp;next&nbsp;one&nbsp;in&nbsp;the&nbsp;chain.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetExtraStyle"><strong>SetExtraStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetExtraStyle">SetExtraStyle</a>(self,&nbsp;long&nbsp;exStyle)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;extra&nbsp;style&nbsp;bits&nbsp;for&nbsp;the&nbsp;window.&nbsp;&nbsp;Extra&nbsp;styles&nbsp;are&nbsp;the&nbsp;less<br>
often&nbsp;used&nbsp;style&nbsp;bits&nbsp;which&nbsp;can't&nbsp;be&nbsp;set&nbsp;with&nbsp;the&nbsp;constructor&nbsp;or&nbsp;with<br>
<a href="#MenuButtonWx-SetWindowStyleFlag">SetWindowStyleFlag</a>()</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetFocus"><strong>SetFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetFocus">SetFocus</a>(self)<br>
&nbsp;<br>
Set's&nbsp;the&nbsp;focus&nbsp;to&nbsp;this&nbsp;window,&nbsp;allowing&nbsp;it&nbsp;to&nbsp;receive&nbsp;keyboard&nbsp;input.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetFocusFromKbd"><strong>SetFocusFromKbd</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetFocusFromKbd">SetFocusFromKbd</a>(self)<br>
&nbsp;<br>
Set&nbsp;focus&nbsp;to&nbsp;this&nbsp;window&nbsp;as&nbsp;the&nbsp;result&nbsp;of&nbsp;a&nbsp;keyboard&nbsp;action.&nbsp;&nbsp;Normally<br>
only&nbsp;called&nbsp;internally.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetFont"><strong>SetFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetFont">SetFont</a>(self,&nbsp;Font&nbsp;font)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;font&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetForegroundColour"><strong>SetForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetForegroundColour">SetForegroundColour</a>(self,&nbsp;Colour&nbsp;colour)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;foreground&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Returns&nbsp;True&nbsp;is&nbsp;the&nbsp;colour<br>
was&nbsp;changed.&nbsp;&nbsp;The&nbsp;interpretation&nbsp;of&nbsp;foreground&nbsp;colour&nbsp;is&nbsp;dependent&nbsp;on<br>
the&nbsp;window&nbsp;class;&nbsp;it&nbsp;may&nbsp;be&nbsp;the&nbsp;text&nbsp;colour&nbsp;or&nbsp;other&nbsp;colour,&nbsp;or&nbsp;it&nbsp;may<br>
not&nbsp;be&nbsp;used&nbsp;at&nbsp;all.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetHelpText"><strong>SetHelpText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetHelpText">SetHelpText</a>(self,&nbsp;String&nbsp;text)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;help&nbsp;text&nbsp;to&nbsp;be&nbsp;used&nbsp;as&nbsp;context-sensitive&nbsp;help&nbsp;for&nbsp;this<br>
window.&nbsp;&nbsp;Note&nbsp;that&nbsp;the&nbsp;text&nbsp;is&nbsp;actually&nbsp;stored&nbsp;by&nbsp;the&nbsp;current<br>
wxHelpProvider&nbsp;implementation,&nbsp;and&nbsp;not&nbsp;in&nbsp;the&nbsp;window&nbsp;object&nbsp;itself.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetHelpTextForId"><strong>SetHelpTextForId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetHelpTextForId">SetHelpTextForId</a>(self,&nbsp;String&nbsp;text)<br>
&nbsp;<br>
Associate&nbsp;this&nbsp;help&nbsp;text&nbsp;with&nbsp;all&nbsp;windows&nbsp;with&nbsp;the&nbsp;same&nbsp;id&nbsp;as&nbsp;this<br>
one.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetId"><strong>SetId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetId">SetId</a>(self,&nbsp;int&nbsp;winid)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;identifier&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Each&nbsp;window&nbsp;has&nbsp;an&nbsp;integer<br>
identifier.&nbsp;If&nbsp;the&nbsp;application&nbsp;has&nbsp;not&nbsp;provided&nbsp;one,&nbsp;an&nbsp;identifier<br>
will&nbsp;be&nbsp;generated.&nbsp;Normally,&nbsp;the&nbsp;identifier&nbsp;should&nbsp;be&nbsp;provided&nbsp;on<br>
creation&nbsp;and&nbsp;should&nbsp;not&nbsp;be&nbsp;modified&nbsp;subsequently.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetMaxSize"><strong>SetMaxSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetMaxSize">SetMaxSize</a>(self,&nbsp;Size&nbsp;maxSize)<br>
&nbsp;<br>
A&nbsp;more&nbsp;convenient&nbsp;method&nbsp;than&nbsp;`SetSizeHints`&nbsp;for&nbsp;setting&nbsp;just&nbsp;the<br>
max&nbsp;size.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetMinSize"><strong>SetMinSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetMinSize">SetMinSize</a>(self,&nbsp;Size&nbsp;minSize)<br>
&nbsp;<br>
A&nbsp;more&nbsp;convenient&nbsp;method&nbsp;than&nbsp;`SetSizeHints`&nbsp;for&nbsp;setting&nbsp;just&nbsp;the<br>
min&nbsp;size.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetName"><strong>SetName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetName">SetName</a>(self,&nbsp;String&nbsp;name)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;name.&nbsp;&nbsp;The&nbsp;window&nbsp;name&nbsp;is&nbsp;used&nbsp;for&nbsp;ressource&nbsp;setting<br>
in&nbsp;X,&nbsp;it&nbsp;is&nbsp;not&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;window&nbsp;title/label</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetOwnBackgroundColour"><strong>SetOwnBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetOwnBackgroundColour">SetOwnBackgroundColour</a>(self,&nbsp;Colour&nbsp;colour)</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetOwnFont"><strong>SetOwnFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetOwnFont">SetOwnFont</a>(self,&nbsp;Font&nbsp;font)</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetOwnForegroundColour"><strong>SetOwnForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetOwnForegroundColour">SetOwnForegroundColour</a>(self,&nbsp;Colour&nbsp;colour)</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetPosition"><strong>SetPosition</strong></a> = Move(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Move">Move</a>(self,&nbsp;Point&nbsp;pt,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetRect"><strong>SetRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetRect">SetRect</a>(self,&nbsp;Rect&nbsp;rect,&nbsp;int&nbsp;sizeFlags=SIZE_AUTO)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;and&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels&nbsp;using&nbsp;a&nbsp;wx.Rect.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetScrollPos"><strong>SetScrollPos</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetScrollPos">SetScrollPos</a>(self,&nbsp;int&nbsp;orientation,&nbsp;int&nbsp;pos,&nbsp;bool&nbsp;refresh=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;of&nbsp;one&nbsp;of&nbsp;the&nbsp;built-in&nbsp;scrollbars.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetScrollbar"><strong>SetScrollbar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetScrollbar">SetScrollbar</a>(self,&nbsp;int&nbsp;orientation,&nbsp;int&nbsp;position,&nbsp;int&nbsp;thumbSize,&nbsp;int&nbsp;range,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;refresh=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;scrollbar&nbsp;properties&nbsp;of&nbsp;a&nbsp;built-in&nbsp;scrollbar.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetSize"><strong>SetSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetSize">SetSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetSizeHints"><strong>SetSizeHints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetSizeHints">SetSizeHints</a>(self,&nbsp;int&nbsp;minW,&nbsp;int&nbsp;minH,&nbsp;int&nbsp;maxW=-1,&nbsp;int&nbsp;maxH=-1,&nbsp;int&nbsp;incW=-1,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;incH=-1)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;window&nbsp;sizes,&nbsp;and&nbsp;window<br>
size&nbsp;increments.&nbsp;If&nbsp;a&nbsp;pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the<br>
default&nbsp;values&nbsp;will&nbsp;be&nbsp;used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user<br>
will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds&nbsp;(if&nbsp;it&nbsp;is<br>
a&nbsp;top-level&nbsp;window.)&nbsp;&nbsp;Sizers&nbsp;will&nbsp;also&nbsp;inspect&nbsp;the&nbsp;minimum&nbsp;window&nbsp;size<br>
and&nbsp;will&nbsp;use&nbsp;that&nbsp;value&nbsp;if&nbsp;set&nbsp;when&nbsp;calculating&nbsp;layout.<br>
&nbsp;<br>
The&nbsp;resizing&nbsp;increments&nbsp;are&nbsp;only&nbsp;significant&nbsp;under&nbsp;Motif&nbsp;or&nbsp;Xt.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetSizeHintsSz"><strong>SetSizeHintsSz</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetSizeHintsSz">SetSizeHintsSz</a>(self,&nbsp;Size&nbsp;minSize,&nbsp;Size&nbsp;maxSize=DefaultSize,&nbsp;Size&nbsp;incSize=DefaultSize)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;window&nbsp;sizes,&nbsp;and&nbsp;window<br>
size&nbsp;increments.&nbsp;If&nbsp;a&nbsp;pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the<br>
default&nbsp;values&nbsp;will&nbsp;be&nbsp;used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user<br>
will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds&nbsp;(if&nbsp;it&nbsp;is<br>
a&nbsp;top-level&nbsp;window.)&nbsp;&nbsp;Sizers&nbsp;will&nbsp;also&nbsp;inspect&nbsp;the&nbsp;minimum&nbsp;window&nbsp;size<br>
and&nbsp;will&nbsp;use&nbsp;that&nbsp;value&nbsp;if&nbsp;set&nbsp;when&nbsp;calculating&nbsp;layout.<br>
&nbsp;<br>
The&nbsp;resizing&nbsp;increments&nbsp;are&nbsp;only&nbsp;significant&nbsp;under&nbsp;Motif&nbsp;or&nbsp;Xt.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetSizeWH"><strong>SetSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetSizeWH">SetSizeWH</a>(self,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetSizer"><strong>SetSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetSizer">SetSizer</a>(self,&nbsp;Sizer&nbsp;sizer,&nbsp;bool&nbsp;deleteOld=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window&nbsp;to&nbsp;have&nbsp;the&nbsp;given&nbsp;layout&nbsp;sizer.&nbsp;The&nbsp;window&nbsp;will&nbsp;then<br>
own&nbsp;the&nbsp;object,&nbsp;and&nbsp;will&nbsp;take&nbsp;care&nbsp;of&nbsp;its&nbsp;deletion.&nbsp;If&nbsp;an&nbsp;existing<br>
layout&nbsp;sizer&nbsp;object&nbsp;is&nbsp;already&nbsp;owned&nbsp;by&nbsp;the&nbsp;window,&nbsp;it&nbsp;will&nbsp;be&nbsp;deleted<br>
if&nbsp;the&nbsp;deleteOld&nbsp;parameter&nbsp;is&nbsp;true.&nbsp;Note&nbsp;that&nbsp;this&nbsp;function&nbsp;will&nbsp;also<br>
call&nbsp;SetAutoLayout&nbsp;implicitly&nbsp;with&nbsp;a&nbsp;True&nbsp;parameter&nbsp;if&nbsp;the&nbsp;sizer&nbsp;is<br>
non-None,&nbsp;and&nbsp;False&nbsp;otherwise.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetSizerAndFit"><strong>SetSizerAndFit</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetSizerAndFit">SetSizerAndFit</a>(self,&nbsp;Sizer&nbsp;sizer,&nbsp;bool&nbsp;deleteOld=True)<br>
&nbsp;<br>
The&nbsp;same&nbsp;as&nbsp;SetSizer,&nbsp;except&nbsp;it&nbsp;also&nbsp;sets&nbsp;the&nbsp;size&nbsp;hints&nbsp;for&nbsp;the<br>
window&nbsp;based&nbsp;on&nbsp;the&nbsp;sizer's&nbsp;minimum&nbsp;size.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetThemeEnabled"><strong>SetThemeEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetThemeEnabled">SetThemeEnabled</a>(self,&nbsp;bool&nbsp;enableTheme)<br>
&nbsp;<br>
This&nbsp;function&nbsp;tells&nbsp;a&nbsp;window&nbsp;if&nbsp;it&nbsp;should&nbsp;use&nbsp;the&nbsp;system's&nbsp;"theme"<br>
&nbsp;code&nbsp;to&nbsp;draw&nbsp;the&nbsp;windows'&nbsp;background&nbsp;instead&nbsp;if&nbsp;its&nbsp;own&nbsp;background<br>
&nbsp;drawing&nbsp;code.&nbsp;This&nbsp;will&nbsp;only&nbsp;have&nbsp;an&nbsp;effect&nbsp;on&nbsp;platforms&nbsp;that&nbsp;support<br>
&nbsp;the&nbsp;notion&nbsp;of&nbsp;themes&nbsp;in&nbsp;user&nbsp;defined&nbsp;windows.&nbsp;One&nbsp;such&nbsp;platform&nbsp;is<br>
&nbsp;GTK+&nbsp;where&nbsp;windows&nbsp;can&nbsp;have&nbsp;(very&nbsp;colourful)&nbsp;backgrounds&nbsp;defined&nbsp;by&nbsp;a<br>
&nbsp;user's&nbsp;selected&nbsp;theme.<br>
&nbsp;<br>
Dialogs,&nbsp;notebook&nbsp;pages&nbsp;and&nbsp;the&nbsp;status&nbsp;bar&nbsp;have&nbsp;this&nbsp;flag&nbsp;set&nbsp;to&nbsp;true<br>
by&nbsp;default&nbsp;so&nbsp;that&nbsp;the&nbsp;default&nbsp;look&nbsp;and&nbsp;feel&nbsp;is&nbsp;simulated&nbsp;best.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetTitle"><strong>SetTitle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetTitle">SetTitle</a>(self,&nbsp;String&nbsp;title)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;title.&nbsp;Applicable&nbsp;only&nbsp;to&nbsp;frames&nbsp;and&nbsp;dialogs.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetTmpDefaultItem"><strong>SetTmpDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetTmpDefaultItem">SetTmpDefaultItem</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Set&nbsp;this&nbsp;child&nbsp;as&nbsp;temporary&nbsp;default</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetToolTip"><strong>SetToolTip</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetToolTip">SetToolTip</a>(self,&nbsp;ToolTip&nbsp;tip)<br>
&nbsp;<br>
Attach&nbsp;a&nbsp;tooltip&nbsp;to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetToolTipString"><strong>SetToolTipString</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetToolTipString">SetToolTipString</a>(self,&nbsp;String&nbsp;tip)<br>
&nbsp;<br>
Attach&nbsp;a&nbsp;tooltip&nbsp;to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetValidator"><strong>SetValidator</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetValidator">SetValidator</a>(self,&nbsp;Validator&nbsp;validator)<br>
&nbsp;<br>
Deletes&nbsp;the&nbsp;current&nbsp;validator&nbsp;(if&nbsp;any)&nbsp;and&nbsp;sets&nbsp;the&nbsp;window&nbsp;validator,<br>
having&nbsp;called&nbsp;wx.Validator.Clone&nbsp;to&nbsp;create&nbsp;a&nbsp;new&nbsp;validator&nbsp;of&nbsp;this<br>
type.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetVirtualSize"><strong>SetVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetVirtualSize">SetVirtualSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;a&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows&nbsp;this<br>
is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetVirtualSizeHints"><strong>SetVirtualSizeHints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetVirtualSizeHints">SetVirtualSizeHints</a>(self,&nbsp;int&nbsp;minW,&nbsp;int&nbsp;minH,&nbsp;int&nbsp;maxW=-1,&nbsp;int&nbsp;maxH=-1)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;virtual&nbsp;window&nbsp;sizes.&nbsp;If&nbsp;a<br>
pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the&nbsp;default&nbsp;values&nbsp;will&nbsp;be<br>
used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user&nbsp;will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size<br>
the&nbsp;virtual&nbsp;area&nbsp;of&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetVirtualSizeHintsSz"><strong>SetVirtualSizeHintsSz</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetVirtualSizeHintsSz">SetVirtualSizeHintsSz</a>(self,&nbsp;Size&nbsp;minSize,&nbsp;Size&nbsp;maxSize=DefaultSize)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;virtual&nbsp;window&nbsp;sizes.&nbsp;If&nbsp;a<br>
pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the&nbsp;default&nbsp;values&nbsp;will&nbsp;be<br>
used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user&nbsp;will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size<br>
the&nbsp;virtual&nbsp;area&nbsp;of&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetVirtualSizeWH"><strong>SetVirtualSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetVirtualSizeWH">SetVirtualSizeWH</a>(self,&nbsp;int&nbsp;w,&nbsp;int&nbsp;h)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;a&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows&nbsp;this<br>
is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetWindowStyle"><strong>SetWindowStyle</strong></a> = SetWindowStyleFlag(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetWindowStyleFlag">SetWindowStyleFlag</a>(self,&nbsp;long&nbsp;style)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;Please&nbsp;note&nbsp;that&nbsp;some&nbsp;styles&nbsp;cannot&nbsp;be<br>
changed&nbsp;after&nbsp;the&nbsp;window&nbsp;creation&nbsp;and&nbsp;that&nbsp;<a href="#MenuButtonWx-Refresh">Refresh</a>()&nbsp;might&nbsp;need&nbsp;to&nbsp;be<br>
called&nbsp;after&nbsp;changing&nbsp;the&nbsp;others&nbsp;for&nbsp;the&nbsp;change&nbsp;to&nbsp;take&nbsp;place<br>
immediately.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetWindowStyleFlag"><strong>SetWindowStyleFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetWindowStyleFlag">SetWindowStyleFlag</a>(self,&nbsp;long&nbsp;style)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;Please&nbsp;note&nbsp;that&nbsp;some&nbsp;styles&nbsp;cannot&nbsp;be<br>
changed&nbsp;after&nbsp;the&nbsp;window&nbsp;creation&nbsp;and&nbsp;that&nbsp;<a href="#MenuButtonWx-Refresh">Refresh</a>()&nbsp;might&nbsp;need&nbsp;to&nbsp;be<br>
called&nbsp;after&nbsp;changing&nbsp;the&nbsp;others&nbsp;for&nbsp;the&nbsp;change&nbsp;to&nbsp;take&nbsp;place<br>
immediately.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetWindowVariant"><strong>SetWindowVariant</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetWindowVariant">SetWindowVariant</a>(self,&nbsp;int&nbsp;variant)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;variant&nbsp;of&nbsp;the&nbsp;window/font&nbsp;size&nbsp;to&nbsp;use&nbsp;for&nbsp;this&nbsp;window,&nbsp;if<br>
the&nbsp;platform&nbsp;supports&nbsp;variants,&nbsp;for&nbsp;example,&nbsp;wxMac.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-ShouldInheritColours"><strong>ShouldInheritColours</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-ShouldInheritColours">ShouldInheritColours</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Return&nbsp;true&nbsp;from&nbsp;here&nbsp;to&nbsp;allow&nbsp;the&nbsp;colours&nbsp;of&nbsp;this&nbsp;window&nbsp;to&nbsp;be<br>
changed&nbsp;by&nbsp;InheritAttributes,&nbsp;returning&nbsp;false&nbsp;forbids&nbsp;inheriting&nbsp;them<br>
from&nbsp;the&nbsp;parent&nbsp;window.<br>
&nbsp;<br>
The&nbsp;base&nbsp;class&nbsp;version&nbsp;returns&nbsp;false,&nbsp;but&nbsp;this&nbsp;method&nbsp;is&nbsp;overridden&nbsp;in<br>
wxControl&nbsp;where&nbsp;it&nbsp;returns&nbsp;true.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-Show"><strong>Show</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Show">Show</a>(self,&nbsp;bool&nbsp;show=True)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Shows&nbsp;or&nbsp;hides&nbsp;the&nbsp;window.&nbsp;You&nbsp;may&nbsp;need&nbsp;to&nbsp;call&nbsp;Raise&nbsp;for&nbsp;a&nbsp;top&nbsp;level<br>
window&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;bring&nbsp;it&nbsp;to&nbsp;top,&nbsp;although&nbsp;this&nbsp;is&nbsp;not&nbsp;needed&nbsp;if<br>
Show&nbsp;is&nbsp;called&nbsp;immediately&nbsp;after&nbsp;the&nbsp;frame&nbsp;creation.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if<br>
the&nbsp;window&nbsp;has&nbsp;been&nbsp;shown&nbsp;or&nbsp;hidden&nbsp;or&nbsp;False&nbsp;if&nbsp;nothing&nbsp;was&nbsp;done<br>
because&nbsp;it&nbsp;already&nbsp;was&nbsp;in&nbsp;the&nbsp;requested&nbsp;state.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-Thaw"><strong>Thaw</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Thaw">Thaw</a>(self)<br>
&nbsp;<br>
Reenables&nbsp;window&nbsp;updating&nbsp;after&nbsp;a&nbsp;previous&nbsp;call&nbsp;to&nbsp;Freeze.&nbsp;&nbsp;Calls&nbsp;to<br>
Freeze/Thaw&nbsp;may&nbsp;be&nbsp;nested,&nbsp;so&nbsp;Thaw&nbsp;must&nbsp;be&nbsp;called&nbsp;the&nbsp;same&nbsp;number&nbsp;of<br>
times&nbsp;that&nbsp;Freeze&nbsp;was&nbsp;before&nbsp;the&nbsp;window&nbsp;will&nbsp;be&nbsp;updated.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-TransferDataFromWindow"><strong>TransferDataFromWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-TransferDataFromWindow">TransferDataFromWindow</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Transfers&nbsp;values&nbsp;from&nbsp;child&nbsp;controls&nbsp;to&nbsp;data&nbsp;areas&nbsp;specified&nbsp;by&nbsp;their<br>
validators.&nbsp;Returns&nbsp;false&nbsp;if&nbsp;a&nbsp;transfer&nbsp;failed.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has<br>
wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra&nbsp;style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will<br>
also&nbsp;call&nbsp;<a href="#MenuButtonWx-TransferDataFromWindow">TransferDataFromWindow</a>()&nbsp;of&nbsp;all&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-TransferDataToWindow"><strong>TransferDataToWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-TransferDataToWindow">TransferDataToWindow</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Transfers&nbsp;values&nbsp;to&nbsp;child&nbsp;controls&nbsp;from&nbsp;data&nbsp;areas&nbsp;specified&nbsp;by&nbsp;their<br>
validators.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has&nbsp;wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra<br>
style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will&nbsp;also&nbsp;call&nbsp;<a href="#MenuButtonWx-TransferDataToWindow">TransferDataToWindow</a>()&nbsp;of<br>
all&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-UnregisterHotKey"><strong>UnregisterHotKey</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-UnregisterHotKey">UnregisterHotKey</a>(self,&nbsp;int&nbsp;hotkeyId)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Unregisters&nbsp;a&nbsp;system&nbsp;wide&nbsp;hotkey.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-Update"><strong>Update</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Update">Update</a>(self)<br>
&nbsp;<br>
Calling&nbsp;this&nbsp;method&nbsp;immediately&nbsp;repaints&nbsp;the&nbsp;invalidated&nbsp;area&nbsp;of&nbsp;the<br>
window&nbsp;instead&nbsp;of&nbsp;waiting&nbsp;for&nbsp;the&nbsp;EVT_PAINT&nbsp;event&nbsp;to&nbsp;happen,&nbsp;(normally<br>
this&nbsp;would&nbsp;usually&nbsp;only&nbsp;happen&nbsp;when&nbsp;the&nbsp;flow&nbsp;of&nbsp;control&nbsp;returns&nbsp;to&nbsp;the<br>
event&nbsp;loop.)&nbsp;&nbsp;Notice&nbsp;that&nbsp;this&nbsp;function&nbsp;doesn't&nbsp;refresh&nbsp;the&nbsp;window&nbsp;and<br>
does&nbsp;nothing&nbsp;if&nbsp;the&nbsp;window&nbsp;has&nbsp;been&nbsp;already&nbsp;repainted.&nbsp;&nbsp;Use&nbsp;Refresh<br>
first&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;immediately&nbsp;redraw&nbsp;the&nbsp;window&nbsp;(or&nbsp;some&nbsp;portion&nbsp;of<br>
it)&nbsp;unconditionally.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-UpdateWindowUI"><strong>UpdateWindowUI</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-UpdateWindowUI">UpdateWindowUI</a>(self,&nbsp;long&nbsp;flags=UPDATE_UI_NONE)<br>
&nbsp;<br>
This&nbsp;function&nbsp;sends&nbsp;EVT_UPDATE_UI&nbsp;events&nbsp;to&nbsp;the&nbsp;window.&nbsp;The&nbsp;particular<br>
implementation&nbsp;depends&nbsp;on&nbsp;the&nbsp;window;&nbsp;for&nbsp;example&nbsp;a&nbsp;wx.<a href="wx._controls.html#ToolBar">ToolBar</a>&nbsp;will<br>
send&nbsp;an&nbsp;update&nbsp;UI&nbsp;event&nbsp;for&nbsp;each&nbsp;toolbar&nbsp;button,&nbsp;and&nbsp;a&nbsp;wx.<a href="wx._windows.html#Frame">Frame</a>&nbsp;will<br>
send&nbsp;an&nbsp;update&nbsp;UI&nbsp;event&nbsp;for&nbsp;each&nbsp;menubar&nbsp;menu&nbsp;item.&nbsp;You&nbsp;can&nbsp;call&nbsp;this<br>
function&nbsp;from&nbsp;your&nbsp;application&nbsp;to&nbsp;ensure&nbsp;that&nbsp;your&nbsp;UI&nbsp;is&nbsp;up-to-date&nbsp;at<br>
a&nbsp;particular&nbsp;point&nbsp;in&nbsp;time&nbsp;(as&nbsp;far&nbsp;as&nbsp;your&nbsp;EVT_UPDATE_UI&nbsp;handlers&nbsp;are<br>
concerned).&nbsp;This&nbsp;may&nbsp;be&nbsp;necessary&nbsp;if&nbsp;you&nbsp;have&nbsp;called<br>
`wx.UpdateUIEvent.SetMode`&nbsp;or&nbsp;`wx.UpdateUIEvent.SetUpdateInterval`&nbsp;to<br>
limit&nbsp;the&nbsp;overhead&nbsp;that&nbsp;wxWindows&nbsp;incurs&nbsp;by&nbsp;sending&nbsp;update&nbsp;UI&nbsp;events<br>
in&nbsp;idle&nbsp;time.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-UseBgCol"><strong>UseBgCol</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-UseBgCol">UseBgCol</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-Validate"><strong>Validate</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Validate">Validate</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Validates&nbsp;the&nbsp;current&nbsp;values&nbsp;of&nbsp;the&nbsp;child&nbsp;controls&nbsp;using&nbsp;their<br>
validators.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has&nbsp;wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra<br>
style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will&nbsp;also&nbsp;call&nbsp;<a href="#MenuButtonWx-Validate">Validate</a>()&nbsp;of&nbsp;all&nbsp;child<br>
windows.&nbsp;&nbsp;Returns&nbsp;false&nbsp;if&nbsp;any&nbsp;of&nbsp;the&nbsp;validations&nbsp;failed.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-WarpPointer"><strong>WarpPointer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-WarpPointer">WarpPointer</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;pointer&nbsp;to&nbsp;the&nbsp;given&nbsp;position&nbsp;on&nbsp;the&nbsp;window.<br>
&nbsp;<br>
NOTE:&nbsp;This&nbsp;function&nbsp;is&nbsp;not&nbsp;supported&nbsp;under&nbsp;Mac&nbsp;because&nbsp;Apple&nbsp;Human<br>
Interface&nbsp;Guidelines&nbsp;forbid&nbsp;moving&nbsp;the&nbsp;mouse&nbsp;cursor&nbsp;programmatically.</tt></dd></dl>

<hr>
Static methods inherited from <a href="wx._core.html#Window">wx._core.Window</a>:<br>
<dl><dt><a name="MenuButtonWx-FindFocus"><strong>FindFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-FindFocus">FindFocus</a>()&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;window&nbsp;or&nbsp;control&nbsp;that&nbsp;currently&nbsp;has&nbsp;the&nbsp;keyboard&nbsp;focus,<br>
or&nbsp;None.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetCapture"><strong>GetCapture</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetCapture">GetCapture</a>()&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;window&nbsp;which&nbsp;currently&nbsp;captures&nbsp;the&nbsp;mouse&nbsp;or&nbsp;None</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-NewControlId"><strong>NewControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-NewControlId">NewControlId</a>()&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Generate&nbsp;a&nbsp;control&nbsp;id&nbsp;for&nbsp;the&nbsp;controls&nbsp;which&nbsp;were&nbsp;not&nbsp;given&nbsp;one.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-NextControlId"><strong>NextControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-NextControlId">NextControlId</a>(int&nbsp;winid)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;id&nbsp;of&nbsp;the&nbsp;control&nbsp;following&nbsp;the&nbsp;one&nbsp;with&nbsp;the&nbsp;given<br>
autogenerated)&nbsp;id</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-PrevControlId"><strong>PrevControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-PrevControlId">PrevControlId</a>(int&nbsp;winid)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;id&nbsp;of&nbsp;the&nbsp;control&nbsp;preceding&nbsp;the&nbsp;one&nbsp;with&nbsp;the&nbsp;given<br>
autogenerated)&nbsp;id</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#EvtHandler">wx._core.EvtHandler</a>:<br>
<dl><dt><a name="MenuButtonWx-AddPendingEvent"><strong>AddPendingEvent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-AddPendingEvent">AddPendingEvent</a>(self,&nbsp;Event&nbsp;event)</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-Bind"><strong>Bind</strong></a>(self, event, handler, source<font color="#909090">=None</font>, id<font color="#909090">=-1</font>, id2<font color="#909090">=-1</font>)</dt><dd><tt>Bind&nbsp;an&nbsp;event&nbsp;to&nbsp;an&nbsp;event&nbsp;handler.<br>
&nbsp;<br>
:param&nbsp;event:&nbsp;One&nbsp;of&nbsp;the&nbsp;EVT_*&nbsp;objects&nbsp;that&nbsp;specifies&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type&nbsp;of&nbsp;event&nbsp;to&nbsp;bind,<br>
&nbsp;<br>
:param&nbsp;handler:&nbsp;A&nbsp;callable&nbsp;object&nbsp;to&nbsp;be&nbsp;invoked&nbsp;when&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event&nbsp;is&nbsp;delivered&nbsp;to&nbsp;self.&nbsp;&nbsp;Pass&nbsp;None&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;disconnect&nbsp;an&nbsp;event&nbsp;handler.<br>
&nbsp;<br>
:param&nbsp;source:&nbsp;Sometimes&nbsp;the&nbsp;event&nbsp;originates&nbsp;from&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;different&nbsp;window&nbsp;than&nbsp;self,&nbsp;but&nbsp;you&nbsp;still<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;want&nbsp;to&nbsp;catch&nbsp;it&nbsp;in&nbsp;self.&nbsp;&nbsp;(For&nbsp;example,&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button&nbsp;event&nbsp;delivered&nbsp;to&nbsp;a&nbsp;frame.)&nbsp;&nbsp;By<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;passing&nbsp;the&nbsp;source&nbsp;of&nbsp;the&nbsp;event,&nbsp;the&nbsp;event<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handling&nbsp;system&nbsp;is&nbsp;able&nbsp;to&nbsp;differentiate<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;between&nbsp;the&nbsp;same&nbsp;event&nbsp;type&nbsp;from&nbsp;different<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controls.<br>
&nbsp;<br>
:param&nbsp;id:&nbsp;Used&nbsp;to&nbsp;spcify&nbsp;the&nbsp;event&nbsp;source&nbsp;by&nbsp;ID&nbsp;instead<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;instance.<br>
&nbsp;<br>
:param&nbsp;id2:&nbsp;Used&nbsp;when&nbsp;it&nbsp;is&nbsp;desirable&nbsp;to&nbsp;bind&nbsp;a&nbsp;handler<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;a&nbsp;range&nbsp;of&nbsp;IDs,&nbsp;such&nbsp;as&nbsp;with&nbsp;EVT_MENU_RANGE.</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-Connect"><strong>Connect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Connect">Connect</a>(self,&nbsp;int&nbsp;id,&nbsp;int&nbsp;lastId,&nbsp;int&nbsp;eventType,&nbsp;PyObject&nbsp;func)</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-Disconnect"><strong>Disconnect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-Disconnect">Disconnect</a>(self,&nbsp;int&nbsp;id,&nbsp;int&nbsp;lastId=-1,&nbsp;wxEventType&nbsp;eventType=wxEVT_NULL)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetEvtHandlerEnabled"><strong>GetEvtHandlerEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetEvtHandlerEnabled">GetEvtHandlerEnabled</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetNextHandler"><strong>GetNextHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetNextHandler">GetNextHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-GetPreviousHandler"><strong>GetPreviousHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetPreviousHandler">GetPreviousHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-ProcessEvent"><strong>ProcessEvent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-ProcessEvent">ProcessEvent</a>(self,&nbsp;Event&nbsp;event)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-ProcessPendingEvents"><strong>ProcessPendingEvents</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-ProcessPendingEvents">ProcessPendingEvents</a>(self)</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetEvtHandlerEnabled"><strong>SetEvtHandlerEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetEvtHandlerEnabled">SetEvtHandlerEnabled</a>(self,&nbsp;bool&nbsp;enabled)</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetNextHandler"><strong>SetNextHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetNextHandler">SetNextHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-SetPreviousHandler"><strong>SetPreviousHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-SetPreviousHandler">SetPreviousHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)</tt></dd></dl>

<dl><dt><a name="MenuButtonWx-Unbind"><strong>Unbind</strong></a>(self, event, source<font color="#909090">=None</font>, id<font color="#909090">=-1</font>, id2<font color="#909090">=-1</font>)</dt><dd><tt>Disconencts&nbsp;the&nbsp;event&nbsp;handler&nbsp;binding&nbsp;for&nbsp;event&nbsp;from&nbsp;self.<br>
Returns&nbsp;True&nbsp;if&nbsp;successful.</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#Object">wx._core.Object</a>:<br>
<dl><dt><a name="MenuButtonWx-GetClassName"><strong>GetClassName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#MenuButtonWx-GetClassName">GetClassName</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;class&nbsp;name&nbsp;of&nbsp;the&nbsp;C++&nbsp;class&nbsp;using&nbsp;wxRTTI.</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="wx._core.html#Object">wx._core.Object</a>:<br>
<dl><dt><strong>__dict__</strong> = &lt;dictproxy object&gt;<dd><tt>dictionary&nbsp;for&nbsp;instance&nbsp;variables&nbsp;(if&nbsp;defined)</tt></dl>

<dl><dt><strong>__weakref__</strong> = &lt;attribute '__weakref__' of 'Object' objects&gt;<dd><tt>list&nbsp;of&nbsp;weak&nbsp;references&nbsp;to&nbsp;the&nbsp;object&nbsp;(if&nbsp;defined)</tt></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="NavigationToolbar2Wx">class <strong>NavigationToolbar2Wx</strong></a>(<a href="matplotlib.backend_bases.html#NavigationToolbar2">matplotlib.backend_bases.NavigationToolbar2</a>, <a href="wx._controls.html#ToolBar">wx._controls.ToolBar</a>)</font></td></tr>
    
<tr><td bgcolor="#ffc8d8"><tt>&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.backends.backend_wx.html#NavigationToolbar2Wx">NavigationToolbar2Wx</a></dd>
<dd><a href="matplotlib.backend_bases.html#NavigationToolbar2">matplotlib.backend_bases.NavigationToolbar2</a></dd>
<dd><a href="wx._controls.html#ToolBar">wx._controls.ToolBar</a></dd>
<dd><a href="wx._controls.html#ToolBarBase">wx._controls.ToolBarBase</a></dd>
<dd><a href="wx._core.html#Control">wx._core.Control</a></dd>
<dd><a href="wx._core.html#Window">wx._core.Window</a></dd>
<dd><a href="wx._core.html#EvtHandler">wx._core.EvtHandler</a></dd>
<dd><a href="wx._core.html#Object">wx._core.Object</a></dd>
<dd><a href="__builtin__.html#object">__builtin__.object</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="NavigationToolbar2Wx-__init__"><strong>__init__</strong></a>(self, canvas)</dt></dl>

<dl><dt><a name="NavigationToolbar2Wx-configure_subplot"><strong>configure_subplot</strong></a>(self, evt)</dt></dl>

<dl><dt><a name="NavigationToolbar2Wx-draw_rubberband"><strong>draw_rubberband</strong></a>(self, event, x0, y0, x1, y1)</dt><dd><tt>adapted&nbsp;from&nbsp;<a href="http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/189744">http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/189744</a></tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-dynamic_update"><strong>dynamic_update</strong></a>(self)</dt></dl>

<dl><dt><a name="NavigationToolbar2Wx-get_canvas"><strong>get_canvas</strong></a>(self, frame, fig)</dt></dl>

<dl><dt><a name="NavigationToolbar2Wx-pan"><strong>pan</strong></a>(self, *args)</dt></dl>

<dl><dt><a name="NavigationToolbar2Wx-release"><strong>release</strong></a>(self, event)</dt></dl>

<dl><dt><a name="NavigationToolbar2Wx-save"><strong>save</strong></a>(self, evt)</dt></dl>

<dl><dt><a name="NavigationToolbar2Wx-set_cursor"><strong>set_cursor</strong></a>(self, cursor)</dt></dl>

<dl><dt><a name="NavigationToolbar2Wx-set_history_buttons"><strong>set_history_buttons</strong></a>(self)</dt></dl>

<dl><dt><a name="NavigationToolbar2Wx-set_message"><strong>set_message</strong></a>(self, s)</dt></dl>

<dl><dt><a name="NavigationToolbar2Wx-set_status_bar"><strong>set_status_bar</strong></a>(self, statbar)</dt></dl>

<dl><dt><a name="NavigationToolbar2Wx-zoom"><strong>zoom</strong></a>(self, *args)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.backend_bases.html#NavigationToolbar2">matplotlib.backend_bases.NavigationToolbar2</a>:<br>
<dl><dt><a name="NavigationToolbar2Wx-back"><strong>back</strong></a>(self, *args)</dt><dd><tt>move&nbsp;back&nbsp;up&nbsp;the&nbsp;view&nbsp;lim&nbsp;stack</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-drag_pan"><strong>drag_pan</strong></a>(self, event)</dt><dd><tt>the&nbsp;drag&nbsp;callback&nbsp;in&nbsp;pan/zoom&nbsp;mode</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-draw"><strong>draw</strong></a>(self)</dt><dd><tt>redraw&nbsp;the&nbsp;canvases,&nbsp;update&nbsp;the&nbsp;locators</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-forward"><strong>forward</strong></a>(self, *args)</dt><dd><tt>move&nbsp;forward&nbsp;in&nbsp;the&nbsp;view&nbsp;lim&nbsp;stack</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-home"><strong>home</strong></a>(self, *args)</dt><dd><tt>restore&nbsp;the&nbsp;original&nbsp;view</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-mouse_move"><strong>mouse_move</strong></a>(self, event)</dt></dl>

<dl><dt><a name="NavigationToolbar2Wx-press"><strong>press</strong></a>(self, event)</dt><dd><tt>this&nbsp;will&nbsp;be&nbsp;called&nbsp;whenver&nbsp;a&nbsp;mouse&nbsp;button&nbsp;is&nbsp;pressed</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-press_pan"><strong>press_pan</strong></a>(self, event)</dt><dd><tt>the&nbsp;press&nbsp;mouse&nbsp;button&nbsp;in&nbsp;pan/zoom&nbsp;mode&nbsp;callback</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-press_zoom"><strong>press_zoom</strong></a>(self, event)</dt><dd><tt>the&nbsp;press&nbsp;mouse&nbsp;button&nbsp;in&nbsp;zoom&nbsp;to&nbsp;rect&nbsp;mode&nbsp;callback</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-push_current"><strong>push_current</strong></a>(self)</dt><dd><tt>push&nbsp;the&nbsp;current&nbsp;view&nbsp;limits&nbsp;and&nbsp;position&nbsp;onto&nbsp;the&nbsp;stack</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-release_pan"><strong>release_pan</strong></a>(self, event)</dt><dd><tt>the&nbsp;release&nbsp;mouse&nbsp;button&nbsp;callback&nbsp;in&nbsp;pan/zoom&nbsp;mode</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-release_zoom"><strong>release_zoom</strong></a>(self, event)</dt><dd><tt>the&nbsp;release&nbsp;mouse&nbsp;button&nbsp;callback&nbsp;in&nbsp;zoom&nbsp;to&nbsp;rect&nbsp;mode</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-save_figure"><strong>save_figure</strong></a>(self, *args)</dt><dd><tt>save&nbsp;the&nbsp;current&nbsp;figure</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-update"><strong>update</strong></a>(self)</dt><dd><tt>reset&nbsp;the&nbsp;axes&nbsp;stack</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._controls.html#ToolBar">wx._controls.ToolBar</a>:<br>
<dl><dt><a name="NavigationToolbar2Wx-Create"><strong>Create</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Create">Create</a>(self,&nbsp;Window&nbsp;parent,&nbsp;int&nbsp;id=-1,&nbsp;Point&nbsp;pos=DefaultPosition,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Size&nbsp;size=DefaultSize,&nbsp;long&nbsp;style=wxNO_BORDER|wxTB_HORIZONTAL,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;name=wxPyToolBarNameStr)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-FindToolForPosition"><strong>FindToolForPosition</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-FindToolForPosition">FindToolForPosition</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-__repr__"><strong>__repr__</strong></a>(self)</dt></dl>

<hr>
Static methods inherited from <a href="wx._controls.html#ToolBar">wx._controls.ToolBar</a>:<br>
<dl><dt><a name="NavigationToolbar2Wx-GetClassDefaultAttributes"><strong>GetClassDefaultAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetClassDefaultAttributes">GetClassDefaultAttributes</a>(int&nbsp;variant=WINDOW_VARIANT_NORMAL)&nbsp;-&gt;&nbsp;VisualAttributes<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;attributes&nbsp;for&nbsp;this&nbsp;class.&nbsp;&nbsp;This&nbsp;is&nbsp;useful&nbsp;if&nbsp;you&nbsp;want<br>
to&nbsp;use&nbsp;the&nbsp;same&nbsp;font&nbsp;or&nbsp;colour&nbsp;in&nbsp;your&nbsp;own&nbsp;control&nbsp;as&nbsp;in&nbsp;a&nbsp;standard<br>
control&nbsp;--&nbsp;which&nbsp;is&nbsp;a&nbsp;much&nbsp;better&nbsp;idea&nbsp;than&nbsp;hard&nbsp;coding&nbsp;specific<br>
colours&nbsp;or&nbsp;fonts&nbsp;which&nbsp;might&nbsp;look&nbsp;completely&nbsp;out&nbsp;of&nbsp;place&nbsp;on&nbsp;the<br>
user's&nbsp;system,&nbsp;especially&nbsp;if&nbsp;it&nbsp;uses&nbsp;themes.<br>
&nbsp;<br>
The&nbsp;variant&nbsp;parameter&nbsp;is&nbsp;only&nbsp;relevant&nbsp;under&nbsp;Mac&nbsp;currently&nbsp;and&nbsp;is<br>
ignore&nbsp;under&nbsp;other&nbsp;platforms.&nbsp;Under&nbsp;Mac,&nbsp;it&nbsp;will&nbsp;change&nbsp;the&nbsp;size&nbsp;of<br>
the&nbsp;returned&nbsp;font.&nbsp;See&nbsp;`wx.Window.SetWindowVariant`&nbsp;for&nbsp;more&nbsp;about<br>
this.</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._controls.html#ToolBarBase">wx._controls.ToolBarBase</a>:<br>
<dl><dt><a name="NavigationToolbar2Wx-AddCheckLabelTool"><strong>AddCheckLabelTool</strong></a>(self, id, label, bitmap, bmpDisabled<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, shortHelp<font color="#909090">=''</font>, longHelp<font color="#909090">=''</font>, clientData<font color="#909090">=None</font>)</dt><dd><tt>Add&nbsp;a&nbsp;check&nbsp;tool,&nbsp;i.e.&nbsp;a&nbsp;tool&nbsp;which&nbsp;can&nbsp;be&nbsp;toggled</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-AddCheckTool"><strong>AddCheckTool</strong></a>(self, id, bitmap, bmpDisabled<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, shortHelp<font color="#909090">=''</font>, longHelp<font color="#909090">=''</font>, clientData<font color="#909090">=None</font>)</dt><dd><tt>Add&nbsp;a&nbsp;check&nbsp;tool,&nbsp;i.e.&nbsp;a&nbsp;tool&nbsp;which&nbsp;can&nbsp;be&nbsp;toggled</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-AddControl"><strong>AddControl</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-AddControl">AddControl</a>(self,&nbsp;Control&nbsp;control)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-AddLabelTool"><strong>AddLabelTool</strong></a>(self, id, label, bitmap, bmpDisabled<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, kind<font color="#909090">=0</font>, shortHelp<font color="#909090">=''</font>, longHelp<font color="#909090">=''</font>, clientData<font color="#909090">=None</font>)</dt><dd><tt>The&nbsp;full&nbsp;<a href="#NavigationToolbar2Wx-AddTool">AddTool</a>()&nbsp;function.<br>
&nbsp;<br>
If&nbsp;bmpDisabled&nbsp;is&nbsp;wx.NullBitmap,&nbsp;a&nbsp;shadowed&nbsp;version&nbsp;of&nbsp;the&nbsp;normal&nbsp;bitmap<br>
is&nbsp;created&nbsp;and&nbsp;used&nbsp;as&nbsp;the&nbsp;disabled&nbsp;image.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-AddRadioLabelTool"><strong>AddRadioLabelTool</strong></a>(self, id, label, bitmap, bmpDisabled<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, shortHelp<font color="#909090">=''</font>, longHelp<font color="#909090">=''</font>, clientData<font color="#909090">=None</font>)</dt><dd><tt>Add&nbsp;a&nbsp;radio&nbsp;tool,&nbsp;i.e.&nbsp;a&nbsp;tool&nbsp;which&nbsp;can&nbsp;be&nbsp;toggled&nbsp;and&nbsp;releases&nbsp;any<br>
other&nbsp;toggled&nbsp;radio&nbsp;tools&nbsp;in&nbsp;the&nbsp;same&nbsp;group&nbsp;when&nbsp;it&nbsp;happens</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-AddRadioTool"><strong>AddRadioTool</strong></a>(self, id, bitmap, bmpDisabled<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, shortHelp<font color="#909090">=''</font>, longHelp<font color="#909090">=''</font>, clientData<font color="#909090">=None</font>)</dt><dd><tt>Add&nbsp;a&nbsp;radio&nbsp;tool,&nbsp;i.e.&nbsp;a&nbsp;tool&nbsp;which&nbsp;can&nbsp;be&nbsp;toggled&nbsp;and&nbsp;releases&nbsp;any<br>
other&nbsp;toggled&nbsp;radio&nbsp;tools&nbsp;in&nbsp;the&nbsp;same&nbsp;group&nbsp;when&nbsp;it&nbsp;happens</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-AddSeparator"><strong>AddSeparator</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-AddSeparator">AddSeparator</a>(self)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-AddSimpleTool"><strong>AddSimpleTool</strong></a>(self, id, bitmap, shortHelpString<font color="#909090">=''</font>, longHelpString<font color="#909090">=''</font>, isToggle<font color="#909090">=0</font>)</dt><dd><tt>Old&nbsp;style&nbsp;method&nbsp;to&nbsp;add&nbsp;a&nbsp;tool&nbsp;to&nbsp;the&nbsp;toolbar.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-AddTool"><strong>AddTool</strong></a>(self, id, bitmap, pushedBitmap<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, isToggle<font color="#909090">=0</font>, clientData<font color="#909090">=None</font>, shortHelpString<font color="#909090">=''</font>, longHelpString<font color="#909090">=''</font>)</dt><dd><tt>Old&nbsp;style&nbsp;method&nbsp;to&nbsp;add&nbsp;a&nbsp;tool&nbsp;to&nbsp;the&nbsp;toolbar.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-AddToolItem"><strong>AddToolItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-AddToolItem">AddToolItem</a>(self,&nbsp;ToolBarToolBase&nbsp;tool)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-ClearTools"><strong>ClearTools</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-ClearTools">ClearTools</a>(self)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-DeleteTool"><strong>DeleteTool</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-DeleteTool">DeleteTool</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-DeleteToolByPos"><strong>DeleteToolByPos</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-DeleteToolByPos">DeleteToolByPos</a>(self,&nbsp;size_t&nbsp;pos)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-DoAddTool"><strong>DoAddTool</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-DoAddTool">DoAddTool</a>(self,&nbsp;int&nbsp;id,&nbsp;String&nbsp;label,&nbsp;Bitmap&nbsp;bitmap,&nbsp;Bitmap&nbsp;bmpDisabled=wxNullBitmap,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;kind=ITEM_NORMAL,&nbsp;String&nbsp;shortHelp=EmptyString,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;longHelp=EmptyString,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;PyObject&nbsp;clientData=None)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-DoInsertTool"><strong>DoInsertTool</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-DoInsertTool">DoInsertTool</a>(self,&nbsp;size_t&nbsp;pos,&nbsp;int&nbsp;id,&nbsp;String&nbsp;label,&nbsp;Bitmap&nbsp;bitmap,&nbsp;Bitmap&nbsp;bmpDisabled=wxNullBitmap,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;kind=ITEM_NORMAL,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;shortHelp=EmptyString,&nbsp;String&nbsp;longHelp=EmptyString,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;PyObject&nbsp;clientData=None)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-EnableTool"><strong>EnableTool</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-EnableTool">EnableTool</a>(self,&nbsp;int&nbsp;id,&nbsp;bool&nbsp;enable)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-FindById"><strong>FindById</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-FindById">FindById</a>(self,&nbsp;int&nbsp;toolid)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-FindControl"><strong>FindControl</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-FindControl">FindControl</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;Control</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetMargins"><strong>GetMargins</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetMargins">GetMargins</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetMaxCols"><strong>GetMaxCols</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetMaxCols">GetMaxCols</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetMaxRows"><strong>GetMaxRows</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetMaxRows">GetMaxRows</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetToolBitmapSize"><strong>GetToolBitmapSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetToolBitmapSize">GetToolBitmapSize</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetToolClientData"><strong>GetToolClientData</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetToolClientData">GetToolClientData</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;PyObject</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetToolEnabled"><strong>GetToolEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetToolEnabled">GetToolEnabled</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetToolLongHelp"><strong>GetToolLongHelp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetToolLongHelp">GetToolLongHelp</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;String</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetToolMargins"><strong>GetToolMargins</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetToolMargins">GetToolMargins</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetToolPacking"><strong>GetToolPacking</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetToolPacking">GetToolPacking</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetToolPos"><strong>GetToolPos</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetToolPos">GetToolPos</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetToolSeparation"><strong>GetToolSeparation</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetToolSeparation">GetToolSeparation</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetToolShortHelp"><strong>GetToolShortHelp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetToolShortHelp">GetToolShortHelp</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;String</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetToolSize"><strong>GetToolSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetToolSize">GetToolSize</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetToolState"><strong>GetToolState</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetToolState">GetToolState</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetToolsCount"><strong>GetToolsCount</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetToolsCount">GetToolsCount</a>(self)&nbsp;-&gt;&nbsp;size_t</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-InsertControl"><strong>InsertControl</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-InsertControl">InsertControl</a>(self,&nbsp;size_t&nbsp;pos,&nbsp;Control&nbsp;control)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-InsertLabelTool"><strong>InsertLabelTool</strong></a>(self, pos, id, label, bitmap, bmpDisabled<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, kind<font color="#909090">=0</font>, shortHelp<font color="#909090">=''</font>, longHelp<font color="#909090">=''</font>, clientData<font color="#909090">=None</font>)</dt><dd><tt>Insert&nbsp;the&nbsp;new&nbsp;tool&nbsp;at&nbsp;the&nbsp;given&nbsp;position,&nbsp;if&nbsp;pos&nbsp;==&nbsp;<a href="#NavigationToolbar2Wx-GetToolsCount">GetToolsCount</a>(),&nbsp;it<br>
is&nbsp;equivalent&nbsp;to&nbsp;<a href="#NavigationToolbar2Wx-AddTool">AddTool</a>()</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-InsertSeparator"><strong>InsertSeparator</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-InsertSeparator">InsertSeparator</a>(self,&nbsp;size_t&nbsp;pos)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-InsertSimpleTool"><strong>InsertSimpleTool</strong></a>(self, pos, id, bitmap, shortHelpString<font color="#909090">=''</font>, longHelpString<font color="#909090">=''</font>, isToggle<font color="#909090">=0</font>)</dt><dd><tt>Old&nbsp;style&nbsp;method&nbsp;to&nbsp;insert&nbsp;a&nbsp;tool&nbsp;in&nbsp;the&nbsp;toolbar.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-InsertTool"><strong>InsertTool</strong></a>(self, pos, id, bitmap, pushedBitmap<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, isToggle<font color="#909090">=0</font>, clientData<font color="#909090">=None</font>, shortHelpString<font color="#909090">=''</font>, longHelpString<font color="#909090">=''</font>)</dt><dd><tt>Old&nbsp;style&nbsp;method&nbsp;to&nbsp;insert&nbsp;a&nbsp;tool&nbsp;in&nbsp;the&nbsp;toolbar.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-InsertToolItem"><strong>InsertToolItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-InsertToolItem">InsertToolItem</a>(self,&nbsp;size_t&nbsp;pos,&nbsp;ToolBarToolBase&nbsp;tool)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-IsVertical"><strong>IsVertical</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-IsVertical">IsVertical</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Realize"><strong>Realize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Realize">Realize</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-RemoveTool"><strong>RemoveTool</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-RemoveTool">RemoveTool</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetMargins"><strong>SetMargins</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetMargins">SetMargins</a>(self,&nbsp;Size&nbsp;size)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetMarginsXY"><strong>SetMarginsXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetMarginsXY">SetMarginsXY</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetMaxRowsCols"><strong>SetMaxRowsCols</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetMaxRowsCols">SetMaxRowsCols</a>(self,&nbsp;int&nbsp;rows,&nbsp;int&nbsp;cols)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetRows"><strong>SetRows</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetRows">SetRows</a>(self,&nbsp;int&nbsp;nRows)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetToggle"><strong>SetToggle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetToggle">SetToggle</a>(self,&nbsp;int&nbsp;id,&nbsp;bool&nbsp;toggle)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetToolBitmapSize"><strong>SetToolBitmapSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetToolBitmapSize">SetToolBitmapSize</a>(self,&nbsp;Size&nbsp;size)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetToolClientData"><strong>SetToolClientData</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetToolClientData">SetToolClientData</a>(self,&nbsp;int&nbsp;id,&nbsp;PyObject&nbsp;clientData)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetToolLongHelp"><strong>SetToolLongHelp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetToolLongHelp">SetToolLongHelp</a>(self,&nbsp;int&nbsp;id,&nbsp;String&nbsp;helpString)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetToolPacking"><strong>SetToolPacking</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetToolPacking">SetToolPacking</a>(self,&nbsp;int&nbsp;packing)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetToolSeparation"><strong>SetToolSeparation</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetToolSeparation">SetToolSeparation</a>(self,&nbsp;int&nbsp;separation)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetToolShortHelp"><strong>SetToolShortHelp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetToolShortHelp">SetToolShortHelp</a>(self,&nbsp;int&nbsp;id,&nbsp;String&nbsp;helpString)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-ToggleTool"><strong>ToggleTool</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-ToggleTool">ToggleTool</a>(self,&nbsp;int&nbsp;id,&nbsp;bool&nbsp;toggle)</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#Control">wx._core.Control</a>:<br>
<dl><dt><a name="NavigationToolbar2Wx-Command"><strong>Command</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Command">Command</a>(self,&nbsp;CommandEvent&nbsp;event)<br>
&nbsp;<br>
Simulates&nbsp;the&nbsp;effect&nbsp;of&nbsp;the&nbsp;user&nbsp;issuing&nbsp;a&nbsp;command&nbsp;to&nbsp;the&nbsp;item.<br>
&nbsp;<br>
:see:&nbsp;`wx.CommandEvent`</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetLabel"><strong>GetLabel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetLabel">GetLabel</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Return&nbsp;a&nbsp;control's&nbsp;text.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetLabel"><strong>SetLabel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetLabel">SetLabel</a>(self,&nbsp;String&nbsp;label)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;item's&nbsp;text.</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#Window">wx._core.Window</a>:<br>
<dl><dt><a name="NavigationToolbar2Wx-AcceptsFocus"><strong>AcceptsFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-AcceptsFocus">AcceptsFocus</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Can&nbsp;this&nbsp;window&nbsp;have&nbsp;focus?</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-AcceptsFocusFromKeyboard"><strong>AcceptsFocusFromKeyboard</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-AcceptsFocusFromKeyboard">AcceptsFocusFromKeyboard</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Can&nbsp;this&nbsp;window&nbsp;be&nbsp;given&nbsp;focus&nbsp;by&nbsp;keyboard&nbsp;navigation?&nbsp;if&nbsp;not,&nbsp;the<br>
only&nbsp;way&nbsp;to&nbsp;give&nbsp;it&nbsp;focus&nbsp;(provided&nbsp;it&nbsp;accepts&nbsp;it&nbsp;at&nbsp;all)&nbsp;is&nbsp;to&nbsp;click<br>
it.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-AddChild"><strong>AddChild</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-AddChild">AddChild</a>(self,&nbsp;Window&nbsp;child)<br>
&nbsp;<br>
Adds&nbsp;a&nbsp;child&nbsp;window.&nbsp;This&nbsp;is&nbsp;called&nbsp;automatically&nbsp;by&nbsp;window&nbsp;creation<br>
functions&nbsp;so&nbsp;should&nbsp;not&nbsp;be&nbsp;required&nbsp;by&nbsp;the&nbsp;application&nbsp;programmer.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-AssociateHandle"><strong>AssociateHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-AssociateHandle">AssociateHandle</a>(self,&nbsp;long&nbsp;handle)<br>
&nbsp;<br>
Associate&nbsp;the&nbsp;window&nbsp;with&nbsp;a&nbsp;new&nbsp;native&nbsp;handle</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-CacheBestSize"><strong>CacheBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-CacheBestSize">CacheBestSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Cache&nbsp;the&nbsp;best&nbsp;size&nbsp;so&nbsp;it&nbsp;doesn't&nbsp;need&nbsp;to&nbsp;be&nbsp;calculated&nbsp;again,&nbsp;(at&nbsp;least&nbsp;until<br>
some&nbsp;properties&nbsp;of&nbsp;the&nbsp;window&nbsp;change.)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-CaptureMouse"><strong>CaptureMouse</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-CaptureMouse">CaptureMouse</a>(self)<br>
&nbsp;<br>
Directs&nbsp;all&nbsp;mouse&nbsp;input&nbsp;to&nbsp;this&nbsp;window.&nbsp;Call&nbsp;wx.Window.ReleaseMouse&nbsp;to<br>
release&nbsp;the&nbsp;capture.<br>
&nbsp;<br>
Note&nbsp;that&nbsp;wxWindows&nbsp;maintains&nbsp;the&nbsp;stack&nbsp;of&nbsp;windows&nbsp;having&nbsp;captured&nbsp;the<br>
mouse&nbsp;and&nbsp;when&nbsp;the&nbsp;mouse&nbsp;is&nbsp;released&nbsp;the&nbsp;capture&nbsp;returns&nbsp;to&nbsp;the&nbsp;window<br>
which&nbsp;had&nbsp;had&nbsp;captured&nbsp;it&nbsp;previously&nbsp;and&nbsp;it&nbsp;is&nbsp;only&nbsp;really&nbsp;released&nbsp;if<br>
there&nbsp;were&nbsp;no&nbsp;previous&nbsp;window.&nbsp;In&nbsp;particular,&nbsp;this&nbsp;means&nbsp;that&nbsp;you&nbsp;must<br>
release&nbsp;the&nbsp;mouse&nbsp;as&nbsp;many&nbsp;times&nbsp;as&nbsp;you&nbsp;capture&nbsp;it.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Center"><strong>Center</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Center">Center</a>(self,&nbsp;int&nbsp;direction=BOTH)<br>
&nbsp;<br>
Centers&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;parameter&nbsp;specifies&nbsp;the&nbsp;direction&nbsp;for<br>
cetering,&nbsp;and&nbsp;may&nbsp;be&nbsp;wx.HORIZONTAL,&nbsp;wx.VERTICAL&nbsp;or&nbsp;wx.BOTH.&nbsp;It&nbsp;may<br>
also&nbsp;include&nbsp;wx.CENTER_ON_SCREEN&nbsp;flag&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;center&nbsp;the&nbsp;window<br>
on&nbsp;the&nbsp;entire&nbsp;screen&nbsp;and&nbsp;not&nbsp;on&nbsp;its&nbsp;parent&nbsp;window.&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a<br>
top-level&nbsp;window&nbsp;and&nbsp;has&nbsp;no&nbsp;parent&nbsp;then&nbsp;it&nbsp;will&nbsp;always&nbsp;be&nbsp;centered<br>
relative&nbsp;to&nbsp;the&nbsp;screen.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-CenterOnParent"><strong>CenterOnParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-CenterOnParent">CenterOnParent</a>(self,&nbsp;int&nbsp;dir=BOTH)<br>
&nbsp;<br>
Center&nbsp;with&nbsp;respect&nbsp;to&nbsp;the&nbsp;the&nbsp;parent&nbsp;window</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-CenterOnScreen"><strong>CenterOnScreen</strong></a> = deprecatedWrapper(*args, **kwargs)</dt><dd><tt>&lt;function&nbsp;CenterOnScreen&nbsp;at&nbsp;0x2b90d8dbcf50&gt;&nbsp;is&nbsp;deprecated</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Centre"><strong>Centre</strong></a> = Center(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Center">Center</a>(self,&nbsp;int&nbsp;direction=BOTH)<br>
&nbsp;<br>
Centers&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;parameter&nbsp;specifies&nbsp;the&nbsp;direction&nbsp;for<br>
cetering,&nbsp;and&nbsp;may&nbsp;be&nbsp;wx.HORIZONTAL,&nbsp;wx.VERTICAL&nbsp;or&nbsp;wx.BOTH.&nbsp;It&nbsp;may<br>
also&nbsp;include&nbsp;wx.CENTER_ON_SCREEN&nbsp;flag&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;center&nbsp;the&nbsp;window<br>
on&nbsp;the&nbsp;entire&nbsp;screen&nbsp;and&nbsp;not&nbsp;on&nbsp;its&nbsp;parent&nbsp;window.&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a<br>
top-level&nbsp;window&nbsp;and&nbsp;has&nbsp;no&nbsp;parent&nbsp;then&nbsp;it&nbsp;will&nbsp;always&nbsp;be&nbsp;centered<br>
relative&nbsp;to&nbsp;the&nbsp;screen.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-CentreOnParent"><strong>CentreOnParent</strong></a> = CenterOnParent(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-CenterOnParent">CenterOnParent</a>(self,&nbsp;int&nbsp;dir=BOTH)<br>
&nbsp;<br>
Center&nbsp;with&nbsp;respect&nbsp;to&nbsp;the&nbsp;the&nbsp;parent&nbsp;window</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-CentreOnScreen"><strong>CentreOnScreen</strong></a> = deprecatedWrapper(*args, **kwargs)</dt><dd><tt>&lt;function&nbsp;CenterOnScreen&nbsp;at&nbsp;0x2b90d8dbcf50&gt;&nbsp;is&nbsp;deprecated</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-ClearBackground"><strong>ClearBackground</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-ClearBackground">ClearBackground</a>(self)<br>
&nbsp;<br>
Clears&nbsp;the&nbsp;window&nbsp;by&nbsp;filling&nbsp;it&nbsp;with&nbsp;the&nbsp;current&nbsp;background<br>
colour.&nbsp;Does&nbsp;not&nbsp;cause&nbsp;an&nbsp;erase&nbsp;background&nbsp;event&nbsp;to&nbsp;be&nbsp;generated.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-ClientToScreen"><strong>ClientToScreen</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-ClientToScreen">ClientToScreen</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;to&nbsp;screen&nbsp;coordinates&nbsp;from&nbsp;coordinates&nbsp;relative&nbsp;to&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-ClientToScreenXY"><strong>ClientToScreenXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-ClientToScreenXY">ClientToScreenXY</a>(int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Converts&nbsp;to&nbsp;screen&nbsp;coordinates&nbsp;from&nbsp;coordinates&nbsp;relative&nbsp;to&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Close"><strong>Close</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Close">Close</a>(self,&nbsp;bool&nbsp;force=False)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;function&nbsp;simply&nbsp;generates&nbsp;a&nbsp;EVT_CLOSE&nbsp;event&nbsp;whose&nbsp;handler&nbsp;usually<br>
tries&nbsp;to&nbsp;close&nbsp;the&nbsp;window.&nbsp;It&nbsp;doesn't&nbsp;close&nbsp;the&nbsp;window&nbsp;itself,<br>
however.&nbsp;&nbsp;If&nbsp;force&nbsp;is&nbsp;False&nbsp;(the&nbsp;default)&nbsp;then&nbsp;the&nbsp;window's&nbsp;close<br>
handler&nbsp;will&nbsp;be&nbsp;allowed&nbsp;to&nbsp;veto&nbsp;the&nbsp;destruction&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-ConvertDialogPointToPixels"><strong>ConvertDialogPointToPixels</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-ConvertDialogPointToPixels">ConvertDialogPointToPixels</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-ConvertDialogSizeToPixels"><strong>ConvertDialogSizeToPixels</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-ConvertDialogSizeToPixels">ConvertDialogSizeToPixels</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-ConvertPixelPointToDialog"><strong>ConvertPixelPointToDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-ConvertPixelPointToDialog">ConvertPixelPointToDialog</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-ConvertPixelSizeToDialog"><strong>ConvertPixelSizeToDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-ConvertPixelSizeToDialog">ConvertPixelSizeToDialog</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-DLG_PNT"><strong>DLG_PNT</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-DLG_PNT">DLG_PNT</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-DLG_SZE"><strong>DLG_SZE</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-DLG_SZE">DLG_SZE</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Destroy"><strong>Destroy</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Destroy">Destroy</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Destroys&nbsp;the&nbsp;window&nbsp;safely.&nbsp;&nbsp;Frames&nbsp;and&nbsp;dialogs&nbsp;are&nbsp;not&nbsp;destroyed<br>
immediately&nbsp;when&nbsp;this&nbsp;function&nbsp;is&nbsp;called&nbsp;--&nbsp;they&nbsp;are&nbsp;added&nbsp;to&nbsp;a&nbsp;list<br>
of&nbsp;windows&nbsp;to&nbsp;be&nbsp;deleted&nbsp;on&nbsp;idle&nbsp;time,&nbsp;when&nbsp;all&nbsp;the&nbsp;window's&nbsp;events<br>
have&nbsp;been&nbsp;processed.&nbsp;This&nbsp;prevents&nbsp;problems&nbsp;with&nbsp;events&nbsp;being&nbsp;sent&nbsp;to<br>
non-existent&nbsp;windows.<br>
&nbsp;<br>
Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;window&nbsp;has&nbsp;either&nbsp;been&nbsp;successfully&nbsp;deleted,&nbsp;or&nbsp;it<br>
has&nbsp;been&nbsp;added&nbsp;to&nbsp;the&nbsp;list&nbsp;of&nbsp;windows&nbsp;pending&nbsp;real&nbsp;deletion.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-DestroyChildren"><strong>DestroyChildren</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-DestroyChildren">DestroyChildren</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Destroys&nbsp;all&nbsp;children&nbsp;of&nbsp;a&nbsp;window.&nbsp;Called&nbsp;automatically&nbsp;by&nbsp;the<br>
destructor.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Disable"><strong>Disable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Disable">Disable</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Disables&nbsp;the&nbsp;window,&nbsp;same&nbsp;as&nbsp;<a href="#NavigationToolbar2Wx-Enable">Enable</a>(false).</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-DissociateHandle"><strong>DissociateHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-DissociateHandle">DissociateHandle</a>(self)<br>
&nbsp;<br>
Dissociate&nbsp;the&nbsp;current&nbsp;native&nbsp;handle&nbsp;from&nbsp;the&nbsp;window</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-DragAcceptFiles"><strong>DragAcceptFiles</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-DragAcceptFiles">DragAcceptFiles</a>(self,&nbsp;bool&nbsp;accept)<br>
&nbsp;<br>
Enables&nbsp;or&nbsp;disables&nbsp;eligibility&nbsp;for&nbsp;drop&nbsp;file&nbsp;events,&nbsp;EVT_DROP_FILES.<br>
Only&nbsp;functional&nbsp;on&nbsp;Windows.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Enable"><strong>Enable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Enable">Enable</a>(self,&nbsp;bool&nbsp;enable=True)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Enable&nbsp;or&nbsp;disable&nbsp;the&nbsp;window&nbsp;for&nbsp;user&nbsp;input.&nbsp;Note&nbsp;that&nbsp;when&nbsp;a&nbsp;parent<br>
window&nbsp;is&nbsp;disabled,&nbsp;all&nbsp;of&nbsp;its&nbsp;children&nbsp;are&nbsp;disabled&nbsp;as&nbsp;well&nbsp;and&nbsp;they<br>
are&nbsp;reenabled&nbsp;again&nbsp;when&nbsp;the&nbsp;parent&nbsp;is.&nbsp;&nbsp;Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window<br>
has&nbsp;been&nbsp;enabled&nbsp;or&nbsp;disabled,&nbsp;false&nbsp;if&nbsp;nothing&nbsp;was&nbsp;done,&nbsp;i.e.&nbsp;if&nbsp;the<br>
window&nbsp;had&nbsp;already&nbsp;been&nbsp;in&nbsp;the&nbsp;specified&nbsp;state.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-FindWindowById"><strong>FindWindowById</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-FindWindowById">FindWindowById</a>(self,&nbsp;long&nbsp;winid)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Find&nbsp;a&nbsp;chld&nbsp;of&nbsp;this&nbsp;window&nbsp;by&nbsp;window&nbsp;ID</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-FindWindowByName"><strong>FindWindowByName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-FindWindowByName">FindWindowByName</a>(self,&nbsp;String&nbsp;name)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Find&nbsp;a&nbsp;child&nbsp;of&nbsp;this&nbsp;window&nbsp;by&nbsp;name</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Fit"><strong>Fit</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Fit">Fit</a>(self)<br>
&nbsp;<br>
Sizes&nbsp;the&nbsp;window&nbsp;so&nbsp;that&nbsp;it&nbsp;fits&nbsp;around&nbsp;its&nbsp;subwindows.&nbsp;This&nbsp;function<br>
won't&nbsp;do&nbsp;anything&nbsp;if&nbsp;there&nbsp;are&nbsp;no&nbsp;subwindows&nbsp;and&nbsp;will&nbsp;only&nbsp;really&nbsp;work<br>
correctly&nbsp;if&nbsp;sizers&nbsp;are&nbsp;used&nbsp;for&nbsp;the&nbsp;subwindows&nbsp;layout.&nbsp;Also,&nbsp;if&nbsp;the<br>
window&nbsp;has&nbsp;exactly&nbsp;one&nbsp;subwindow&nbsp;it&nbsp;is&nbsp;better&nbsp;(faster&nbsp;and&nbsp;the&nbsp;result<br>
is&nbsp;more&nbsp;precise&nbsp;as&nbsp;Fit&nbsp;adds&nbsp;some&nbsp;margin&nbsp;to&nbsp;account&nbsp;for&nbsp;fuzziness&nbsp;of<br>
its&nbsp;calculations)&nbsp;to&nbsp;call&nbsp;window.<a href="#NavigationToolbar2Wx-SetClientSize">SetClientSize</a>(child.<a href="#NavigationToolbar2Wx-GetSize">GetSize</a>())<br>
instead&nbsp;of&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-FitInside"><strong>FitInside</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-FitInside">FitInside</a>(self)<br>
&nbsp;<br>
Similar&nbsp;to&nbsp;Fit,&nbsp;but&nbsp;sizes&nbsp;the&nbsp;interior&nbsp;(virtual)&nbsp;size&nbsp;of&nbsp;a<br>
window.&nbsp;Mainly&nbsp;useful&nbsp;with&nbsp;scrolled&nbsp;windows&nbsp;to&nbsp;reset&nbsp;scrollbars&nbsp;after<br>
sizing&nbsp;changes&nbsp;that&nbsp;do&nbsp;not&nbsp;trigger&nbsp;a&nbsp;size&nbsp;event,&nbsp;and/or&nbsp;scrolled<br>
windows&nbsp;without&nbsp;an&nbsp;interior&nbsp;sizer.&nbsp;This&nbsp;function&nbsp;similarly&nbsp;won't&nbsp;do<br>
anything&nbsp;if&nbsp;there&nbsp;are&nbsp;no&nbsp;subwindows.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Freeze"><strong>Freeze</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Freeze">Freeze</a>(self)<br>
&nbsp;<br>
Freezes&nbsp;the&nbsp;window&nbsp;or,&nbsp;in&nbsp;other&nbsp;words,&nbsp;prevents&nbsp;any&nbsp;updates&nbsp;from<br>
taking&nbsp;place&nbsp;on&nbsp;screen,&nbsp;the&nbsp;window&nbsp;is&nbsp;not&nbsp;redrawn&nbsp;at&nbsp;all.&nbsp;Thaw&nbsp;must&nbsp;be<br>
called&nbsp;to&nbsp;reenable&nbsp;window&nbsp;redrawing.&nbsp;&nbsp;Calls&nbsp;to&nbsp;Freeze/Thaw&nbsp;may&nbsp;be<br>
nested,&nbsp;with&nbsp;the&nbsp;actual&nbsp;Thaw&nbsp;being&nbsp;delayed&nbsp;until&nbsp;all&nbsp;the&nbsp;nesting&nbsp;has<br>
been&nbsp;undone.<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;useful&nbsp;for&nbsp;visual&nbsp;appearance&nbsp;optimization&nbsp;(for&nbsp;example,<br>
it&nbsp;is&nbsp;a&nbsp;good&nbsp;idea&nbsp;to&nbsp;use&nbsp;it&nbsp;before&nbsp;inserting&nbsp;large&nbsp;amount&nbsp;of&nbsp;text&nbsp;into<br>
a&nbsp;wxTextCtrl&nbsp;under&nbsp;wxGTK)&nbsp;but&nbsp;is&nbsp;not&nbsp;implemented&nbsp;on&nbsp;all&nbsp;platforms&nbsp;nor<br>
for&nbsp;all&nbsp;controls&nbsp;so&nbsp;it&nbsp;is&nbsp;mostly&nbsp;just&nbsp;a&nbsp;hint&nbsp;to&nbsp;wxWindows&nbsp;and&nbsp;not&nbsp;a<br>
mandatory&nbsp;directive.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetAcceleratorTable"><strong>GetAcceleratorTable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetAcceleratorTable">GetAcceleratorTable</a>(self)&nbsp;-&gt;&nbsp;AcceleratorTable<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;accelerator&nbsp;table&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetAdjustedBestSize"><strong>GetAdjustedBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetAdjustedBestSize">GetAdjustedBestSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;similar&nbsp;to&nbsp;GetBestSize,&nbsp;except&nbsp;in&nbsp;one<br>
thing.&nbsp;GetBestSize&nbsp;should&nbsp;return&nbsp;the&nbsp;minimum&nbsp;untruncated&nbsp;size&nbsp;of&nbsp;the<br>
window,&nbsp;while&nbsp;this&nbsp;method&nbsp;will&nbsp;return&nbsp;the&nbsp;largest&nbsp;of&nbsp;BestSize&nbsp;and&nbsp;any<br>
user&nbsp;specified&nbsp;minimum&nbsp;size.&nbsp;ie.&nbsp;it&nbsp;is&nbsp;the&nbsp;minimum&nbsp;size&nbsp;the&nbsp;window<br>
should&nbsp;currently&nbsp;be&nbsp;drawn&nbsp;at,&nbsp;not&nbsp;the&nbsp;minimal&nbsp;size&nbsp;it&nbsp;can&nbsp;possibly<br>
tolerate.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetAutoLayout"><strong>GetAutoLayout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetAutoLayout">GetAutoLayout</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;current&nbsp;autoLayout&nbsp;setting</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetBackgroundColour"><strong>GetBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetBackgroundColour">GetBackgroundColour</a>(self)&nbsp;-&gt;&nbsp;Colour<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetBackgroundStyle"><strong>GetBackgroundStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetBackgroundStyle">GetBackgroundStyle</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;style&nbsp;of&nbsp;the&nbsp;window.<br>
&nbsp;<br>
:see:&nbsp;`SetBackgroundStyle`</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetBestFittingSize"><strong>GetBestFittingSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetBestFittingSize">GetBestFittingSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;function&nbsp;will&nbsp;merge&nbsp;the&nbsp;window's&nbsp;best&nbsp;size&nbsp;into&nbsp;the&nbsp;window's<br>
minimum&nbsp;size,&nbsp;giving&nbsp;priority&nbsp;to&nbsp;the&nbsp;min&nbsp;size&nbsp;components,&nbsp;and&nbsp;returns<br>
the&nbsp;results.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetBestSize"><strong>GetBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetBestSize">GetBestSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;function&nbsp;returns&nbsp;the&nbsp;best&nbsp;acceptable&nbsp;minimal&nbsp;size&nbsp;for&nbsp;the<br>
window,&nbsp;if&nbsp;applicable.&nbsp;For&nbsp;example,&nbsp;for&nbsp;a&nbsp;static&nbsp;text&nbsp;control,&nbsp;it&nbsp;will<br>
be&nbsp;the&nbsp;minimal&nbsp;size&nbsp;such&nbsp;that&nbsp;the&nbsp;control&nbsp;label&nbsp;is&nbsp;not&nbsp;truncated.&nbsp;For<br>
windows&nbsp;containing&nbsp;subwindows&nbsp;(suzh&nbsp;aswx.<a href="wx._windows.html#Panel">Panel</a>),&nbsp;the&nbsp;size&nbsp;returned&nbsp;by<br>
this&nbsp;function&nbsp;will&nbsp;be&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;size&nbsp;the&nbsp;window&nbsp;would&nbsp;have&nbsp;had<br>
after&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetBestSizeTuple"><strong>GetBestSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetBestSizeTuple">GetBestSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
This&nbsp;function&nbsp;returns&nbsp;the&nbsp;best&nbsp;acceptable&nbsp;minimal&nbsp;size&nbsp;for&nbsp;the<br>
window,&nbsp;if&nbsp;applicable.&nbsp;For&nbsp;example,&nbsp;for&nbsp;a&nbsp;static&nbsp;text&nbsp;control,&nbsp;it&nbsp;will<br>
be&nbsp;the&nbsp;minimal&nbsp;size&nbsp;such&nbsp;that&nbsp;the&nbsp;control&nbsp;label&nbsp;is&nbsp;not&nbsp;truncated.&nbsp;For<br>
windows&nbsp;containing&nbsp;subwindows&nbsp;(suzh&nbsp;aswx.<a href="wx._windows.html#Panel">Panel</a>),&nbsp;the&nbsp;size&nbsp;returned&nbsp;by<br>
this&nbsp;function&nbsp;will&nbsp;be&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;size&nbsp;the&nbsp;window&nbsp;would&nbsp;have&nbsp;had<br>
after&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetBestVirtualSize"><strong>GetBestVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetBestVirtualSize">GetBestVirtualSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Return&nbsp;the&nbsp;largest&nbsp;of&nbsp;ClientSize&nbsp;and&nbsp;BestSize&nbsp;(as&nbsp;determined&nbsp;by&nbsp;a<br>
sizer,&nbsp;interior&nbsp;children,&nbsp;or&nbsp;other&nbsp;means)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetBorder"><strong>GetBorder</strong></a>(*args)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetBorder">GetBorder</a>(self,&nbsp;long&nbsp;flags)&nbsp;-&gt;&nbsp;int<br>
<a href="#NavigationToolbar2Wx-GetBorder">GetBorder</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;border&nbsp;for&nbsp;the&nbsp;flags&nbsp;of&nbsp;this&nbsp;window</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetCaret"><strong>GetCaret</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetCaret">GetCaret</a>(self)&nbsp;-&gt;&nbsp;Caret<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;caret&nbsp;associated&nbsp;with&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetCharHeight"><strong>GetCharHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetCharHeight">GetCharHeight</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;(average)&nbsp;character&nbsp;size&nbsp;for&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetCharWidth"><strong>GetCharWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetCharWidth">GetCharWidth</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;(average)&nbsp;character&nbsp;size&nbsp;for&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetChildren"><strong>GetChildren</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetChildren">GetChildren</a>(self)&nbsp;-&gt;&nbsp;PyObject<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;list&nbsp;of&nbsp;the&nbsp;window's&nbsp;children.&nbsp;&nbsp;NOTE:&nbsp;Currently&nbsp;this&nbsp;is&nbsp;a<br>
copy&nbsp;of&nbsp;the&nbsp;child&nbsp;window&nbsp;list&nbsp;maintained&nbsp;by&nbsp;the&nbsp;window,&nbsp;so&nbsp;the&nbsp;return<br>
value&nbsp;of&nbsp;this&nbsp;function&nbsp;is&nbsp;only&nbsp;valid&nbsp;as&nbsp;long&nbsp;as&nbsp;the&nbsp;window's&nbsp;children<br>
do&nbsp;not&nbsp;change.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetClientAreaOrigin"><strong>GetClientAreaOrigin</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetClientAreaOrigin">GetClientAreaOrigin</a>(self)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Get&nbsp;the&nbsp;origin&nbsp;of&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window&nbsp;relative&nbsp;to&nbsp;the<br>
window's&nbsp;top&nbsp;left&nbsp;corner&nbsp;(the&nbsp;client&nbsp;area&nbsp;may&nbsp;be&nbsp;shifted&nbsp;because&nbsp;of<br>
the&nbsp;borders,&nbsp;scrollbars,&nbsp;other&nbsp;decorations...)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetClientRect"><strong>GetClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetClientRect">GetClientRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Get&nbsp;the&nbsp;client&nbsp;area&nbsp;position&nbsp;and&nbsp;size&nbsp;as&nbsp;a&nbsp;`wx.Rect`&nbsp;object.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetClientSize"><strong>GetClientSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetClientSize">GetClientSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;gets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window's&nbsp;'client&nbsp;area'&nbsp;in&nbsp;pixels.&nbsp;The&nbsp;client<br>
area&nbsp;is&nbsp;the&nbsp;area&nbsp;which&nbsp;may&nbsp;be&nbsp;drawn&nbsp;on&nbsp;by&nbsp;the&nbsp;programmer,&nbsp;excluding<br>
title&nbsp;bar,&nbsp;border,&nbsp;scrollbars,&nbsp;etc.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetClientSizeTuple"><strong>GetClientSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetClientSizeTuple">GetClientSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
This&nbsp;gets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window's&nbsp;'client&nbsp;area'&nbsp;in&nbsp;pixels.&nbsp;The&nbsp;client<br>
area&nbsp;is&nbsp;the&nbsp;area&nbsp;which&nbsp;may&nbsp;be&nbsp;drawn&nbsp;on&nbsp;by&nbsp;the&nbsp;programmer,&nbsp;excluding<br>
title&nbsp;bar,&nbsp;border,&nbsp;scrollbars,&nbsp;etc.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetConstraints"><strong>GetConstraints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetConstraints">GetConstraints</a>(self)&nbsp;-&gt;&nbsp;LayoutConstraints<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;pointer&nbsp;to&nbsp;the&nbsp;window's&nbsp;layout&nbsp;constraints,&nbsp;or&nbsp;None&nbsp;if&nbsp;there<br>
are&nbsp;none.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetContainingSizer"><strong>GetContainingSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetContainingSizer">GetContainingSizer</a>(self)&nbsp;-&gt;&nbsp;Sizer<br>
&nbsp;<br>
Return&nbsp;the&nbsp;sizer&nbsp;that&nbsp;this&nbsp;window&nbsp;is&nbsp;a&nbsp;member&nbsp;of,&nbsp;if&nbsp;any,&nbsp;otherwise&nbsp;None.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetCursor"><strong>GetCursor</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetCursor">GetCursor</a>(self)&nbsp;-&gt;&nbsp;Cursor<br>
&nbsp;<br>
Return&nbsp;the&nbsp;cursor&nbsp;associated&nbsp;with&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetDefaultAttributes"><strong>GetDefaultAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetDefaultAttributes">GetDefaultAttributes</a>(self)&nbsp;-&gt;&nbsp;VisualAttributes<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;attributes&nbsp;for&nbsp;an&nbsp;instance&nbsp;of&nbsp;this&nbsp;class.&nbsp;&nbsp;This&nbsp;is<br>
useful&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;use&nbsp;the&nbsp;same&nbsp;font&nbsp;or&nbsp;colour&nbsp;in&nbsp;your&nbsp;own&nbsp;control<br>
as&nbsp;in&nbsp;a&nbsp;standard&nbsp;control&nbsp;--&nbsp;which&nbsp;is&nbsp;a&nbsp;much&nbsp;better&nbsp;idea&nbsp;than&nbsp;hard<br>
coding&nbsp;specific&nbsp;colours&nbsp;or&nbsp;fonts&nbsp;which&nbsp;might&nbsp;look&nbsp;completely&nbsp;out&nbsp;of<br>
place&nbsp;on&nbsp;the&nbsp;user's&nbsp;system,&nbsp;especially&nbsp;if&nbsp;it&nbsp;uses&nbsp;themes.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetDefaultItem"><strong>GetDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetDefaultItem">GetDefaultItem</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;child&nbsp;of&nbsp;this&nbsp;parent,&nbsp;i.e.&nbsp;the&nbsp;one&nbsp;which&nbsp;is&nbsp;activated<br>
by&nbsp;pressing&nbsp;&lt;Enter&gt;&nbsp;such&nbsp;as&nbsp;the&nbsp;OK&nbsp;button&nbsp;on&nbsp;a&nbsp;wx.Dialog.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetDropTarget"><strong>GetDropTarget</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetDropTarget">GetDropTarget</a>(self)&nbsp;-&gt;&nbsp;DropTarget<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;associated&nbsp;drop&nbsp;target,&nbsp;which&nbsp;may&nbsp;be&nbsp;None.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetEventHandler"><strong>GetEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetEventHandler">GetEventHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;event&nbsp;handler&nbsp;for&nbsp;this&nbsp;window.&nbsp;By&nbsp;default,&nbsp;the&nbsp;window&nbsp;is<br>
its&nbsp;own&nbsp;event&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetExtraStyle"><strong>GetExtraStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetExtraStyle">GetExtraStyle</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;extra&nbsp;style&nbsp;bits&nbsp;for&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetFont"><strong>GetFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetFont">GetFont</a>(self)&nbsp;-&gt;&nbsp;Font<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;default&nbsp;font&nbsp;used&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetForegroundColour"><strong>GetForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetForegroundColour">GetForegroundColour</a>(self)&nbsp;-&gt;&nbsp;Colour<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;foreground&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;interpretation&nbsp;of<br>
foreground&nbsp;colour&nbsp;is&nbsp;dependent&nbsp;on&nbsp;the&nbsp;window&nbsp;class;&nbsp;it&nbsp;may&nbsp;be&nbsp;the&nbsp;text<br>
colour&nbsp;or&nbsp;other&nbsp;colour,&nbsp;or&nbsp;it&nbsp;may&nbsp;not&nbsp;be&nbsp;used&nbsp;at&nbsp;all.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetFullTextExtent"><strong>GetFullTextExtent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetFullTextExtent">GetFullTextExtent</a>(String&nbsp;string,&nbsp;Font&nbsp;font=None)&nbsp;-&gt;<br>
&nbsp;&nbsp;&nbsp;(width,&nbsp;height,&nbsp;descent,&nbsp;externalLeading)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;width,&nbsp;height,&nbsp;decent&nbsp;and&nbsp;leading&nbsp;of&nbsp;the&nbsp;text&nbsp;using&nbsp;the<br>
current&nbsp;or&nbsp;specified&nbsp;font.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetGrandParent"><strong>GetGrandParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetGrandParent">GetGrandParent</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;parent&nbsp;of&nbsp;the&nbsp;parent&nbsp;of&nbsp;this&nbsp;window,&nbsp;or&nbsp;None&nbsp;if&nbsp;there<br>
isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetHandle"><strong>GetHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetHandle">GetHandle</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;platform-specific&nbsp;handle&nbsp;(as&nbsp;a&nbsp;long&nbsp;integer)&nbsp;of&nbsp;the<br>
physical&nbsp;window.&nbsp;&nbsp;Currently&nbsp;on&nbsp;wxMac&nbsp;it&nbsp;returns&nbsp;the&nbsp;handle&nbsp;of&nbsp;the<br>
toplevel&nbsp;parent&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetHelpText"><strong>GetHelpText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetHelpText">GetHelpText</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;help&nbsp;text&nbsp;to&nbsp;be&nbsp;used&nbsp;as&nbsp;context-sensitive&nbsp;help&nbsp;for&nbsp;this<br>
window.&nbsp;&nbsp;Note&nbsp;that&nbsp;the&nbsp;text&nbsp;is&nbsp;actually&nbsp;stored&nbsp;by&nbsp;the&nbsp;current<br>
wxHelpProvider&nbsp;implementation,&nbsp;and&nbsp;not&nbsp;in&nbsp;the&nbsp;window&nbsp;object&nbsp;itself.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetId"><strong>GetId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetId">GetId</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;identifier&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Each&nbsp;window&nbsp;has&nbsp;an&nbsp;integer<br>
identifier.&nbsp;If&nbsp;the&nbsp;application&nbsp;has&nbsp;not&nbsp;provided&nbsp;one&nbsp;(or&nbsp;the&nbsp;default&nbsp;Id<br>
-1&nbsp;is&nbsp;used)&nbsp;then&nbsp;an&nbsp;unique&nbsp;identifier&nbsp;with&nbsp;a&nbsp;negative&nbsp;value&nbsp;will&nbsp;be<br>
generated.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetMaxHeight"><strong>GetMaxHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetMaxHeight">GetMaxHeight</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetMaxSize"><strong>GetMaxSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetMaxSize">GetMaxSize</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetMaxWidth"><strong>GetMaxWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetMaxWidth">GetMaxWidth</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetMinHeight"><strong>GetMinHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetMinHeight">GetMinHeight</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetMinSize"><strong>GetMinSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetMinSize">GetMinSize</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetMinWidth"><strong>GetMinWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetMinWidth">GetMinWidth</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetName"><strong>GetName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetName">GetName</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;windows&nbsp;name.&nbsp;&nbsp;This&nbsp;name&nbsp;is&nbsp;not&nbsp;guaranteed&nbsp;to&nbsp;be&nbsp;unique;<br>
it&nbsp;is&nbsp;up&nbsp;to&nbsp;the&nbsp;programmer&nbsp;to&nbsp;supply&nbsp;an&nbsp;appropriate&nbsp;name&nbsp;in&nbsp;the&nbsp;window<br>
constructor&nbsp;or&nbsp;via&nbsp;wx.Window.SetName.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetParent"><strong>GetParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetParent">GetParent</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;parent&nbsp;window&nbsp;of&nbsp;this&nbsp;window,&nbsp;or&nbsp;None&nbsp;if&nbsp;there&nbsp;isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetPosition"><strong>GetPosition</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetPosition">GetPosition</a>(self)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window's&nbsp;position.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetPositionTuple"><strong>GetPositionTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetPositionTuple">GetPositionTuple</a>()&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window's&nbsp;position.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetRect"><strong>GetRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetRect">GetRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;size&nbsp;and&nbsp;position&nbsp;of&nbsp;the&nbsp;window&nbsp;as&nbsp;a&nbsp;wx.Rect&nbsp;object.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetScrollPos"><strong>GetScrollPos</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetScrollPos">GetScrollPos</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;position.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetScrollRange"><strong>GetScrollRange</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetScrollRange">GetScrollRange</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;range.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetScrollThumb"><strong>GetScrollThumb</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetScrollThumb">GetScrollThumb</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;thumb&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetSize"><strong>GetSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetSize">GetSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetSizeTuple"><strong>GetSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetSizeTuple">GetSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetSizer"><strong>GetSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetSizer">GetSizer</a>(self)&nbsp;-&gt;&nbsp;Sizer<br>
&nbsp;<br>
Return&nbsp;the&nbsp;sizer&nbsp;associated&nbsp;with&nbsp;the&nbsp;window&nbsp;by&nbsp;a&nbsp;previous&nbsp;call&nbsp;to<br>
SetSizer&nbsp;or&nbsp;None&nbsp;if&nbsp;there&nbsp;isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetTextExtent"><strong>GetTextExtent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetTextExtent">GetTextExtent</a>(String&nbsp;string)&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;width&nbsp;and&nbsp;height&nbsp;of&nbsp;the&nbsp;text&nbsp;using&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetThemeEnabled"><strong>GetThemeEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetThemeEnabled">GetThemeEnabled</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Return&nbsp;the&nbsp;themeEnabled&nbsp;flag.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetTitle"><strong>GetTitle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetTitle">GetTitle</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window's&nbsp;title.&nbsp;Applicable&nbsp;only&nbsp;to&nbsp;frames&nbsp;and&nbsp;dialogs.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetToolTip"><strong>GetToolTip</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetToolTip">GetToolTip</a>(self)&nbsp;-&gt;&nbsp;ToolTip<br>
&nbsp;<br>
get&nbsp;the&nbsp;associated&nbsp;tooltip&nbsp;or&nbsp;None&nbsp;if&nbsp;none</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetUpdateClientRect"><strong>GetUpdateClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetUpdateClientRect">GetUpdateClientRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Get&nbsp;the&nbsp;update&nbsp;rectangle&nbsp;region&nbsp;bounding&nbsp;box&nbsp;in&nbsp;client&nbsp;coords.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetUpdateRegion"><strong>GetUpdateRegion</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetUpdateRegion">GetUpdateRegion</a>(self)&nbsp;-&gt;&nbsp;Region<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;region&nbsp;specifying&nbsp;which&nbsp;parts&nbsp;of&nbsp;the&nbsp;window&nbsp;have&nbsp;been<br>
damaged.&nbsp;Should&nbsp;only&nbsp;be&nbsp;called&nbsp;within&nbsp;an&nbsp;EVT_PAINT&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetValidator"><strong>GetValidator</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetValidator">GetValidator</a>(self)&nbsp;-&gt;&nbsp;Validator<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;pointer&nbsp;to&nbsp;the&nbsp;current&nbsp;validator&nbsp;for&nbsp;the&nbsp;window,&nbsp;or&nbsp;None&nbsp;if<br>
there&nbsp;is&nbsp;none.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetVirtualSize"><strong>GetVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetVirtualSize">GetVirtualSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Get&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows<br>
this&nbsp;is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetVirtualSizeTuple"><strong>GetVirtualSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetVirtualSizeTuple">GetVirtualSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows<br>
this&nbsp;is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetWindowStyle"><strong>GetWindowStyle</strong></a> = GetWindowStyleFlag(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetWindowStyleFlag">GetWindowStyleFlag</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window&nbsp;style&nbsp;that&nbsp;was&nbsp;passed&nbsp;to&nbsp;the&nbsp;constructor&nbsp;or&nbsp;Create<br>
method.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetWindowStyleFlag"><strong>GetWindowStyleFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetWindowStyleFlag">GetWindowStyleFlag</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window&nbsp;style&nbsp;that&nbsp;was&nbsp;passed&nbsp;to&nbsp;the&nbsp;constructor&nbsp;or&nbsp;Create<br>
method.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetWindowVariant"><strong>GetWindowVariant</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetWindowVariant">GetWindowVariant</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-HasCapture"><strong>HasCapture</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-HasCapture">HasCapture</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;this&nbsp;window&nbsp;has&nbsp;the&nbsp;current&nbsp;mouse&nbsp;capture.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-HasFlag"><strong>HasFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-HasFlag">HasFlag</a>(self,&nbsp;int&nbsp;flag)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Test&nbsp;if&nbsp;the&nbsp;given&nbsp;style&nbsp;is&nbsp;set&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-HasScrollbar"><strong>HasScrollbar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-HasScrollbar">HasScrollbar</a>(self,&nbsp;int&nbsp;orient)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Does&nbsp;the&nbsp;window&nbsp;have&nbsp;the&nbsp;scrollbar&nbsp;for&nbsp;this&nbsp;orientation?</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-HasTransparentBackground"><strong>HasTransparentBackground</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-HasTransparentBackground">HasTransparentBackground</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;True&nbsp;if&nbsp;this&nbsp;window's&nbsp;background&nbsp;is&nbsp;transparent&nbsp;(as,&nbsp;for<br>
example,&nbsp;for&nbsp;`wx.StaticText`)&nbsp;and&nbsp;should&nbsp;show&nbsp;the&nbsp;parent&nbsp;window's<br>
background.<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;mostly&nbsp;used&nbsp;internally&nbsp;by&nbsp;the&nbsp;library&nbsp;itself&nbsp;and&nbsp;you<br>
normally&nbsp;shouldn't&nbsp;have&nbsp;to&nbsp;call&nbsp;it.&nbsp;You&nbsp;may,&nbsp;however,&nbsp;have&nbsp;to&nbsp;override<br>
it&nbsp;in&nbsp;your&nbsp;custom&nbsp;control&nbsp;classes&nbsp;to&nbsp;ensure&nbsp;that&nbsp;background&nbsp;is&nbsp;painted<br>
correctly.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Hide"><strong>Hide</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Hide">Hide</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Equivalent&nbsp;to&nbsp;calling&nbsp;<a href="#NavigationToolbar2Wx-Show">Show</a>(False).</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-HitTest"><strong>HitTest</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-HitTest">HitTest</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Test&nbsp;where&nbsp;the&nbsp;given&nbsp;(in&nbsp;client&nbsp;coords)&nbsp;point&nbsp;lies</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-HitTestXY"><strong>HitTestXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-HitTestXY">HitTestXY</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Test&nbsp;where&nbsp;the&nbsp;given&nbsp;(in&nbsp;client&nbsp;coords)&nbsp;point&nbsp;lies</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-InheritAttributes"><strong>InheritAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-InheritAttributes">InheritAttributes</a>(self)<br>
&nbsp;<br>
This&nbsp;function&nbsp;is&nbsp;(or&nbsp;should&nbsp;be,&nbsp;in&nbsp;case&nbsp;of&nbsp;custom&nbsp;controls)&nbsp;called<br>
during&nbsp;window&nbsp;creation&nbsp;to&nbsp;intelligently&nbsp;set&nbsp;up&nbsp;the&nbsp;window&nbsp;visual<br>
attributes,&nbsp;that&nbsp;is&nbsp;the&nbsp;font&nbsp;and&nbsp;the&nbsp;foreground&nbsp;and&nbsp;background<br>
colours.<br>
&nbsp;<br>
By&nbsp;'intelligently'&nbsp;the&nbsp;following&nbsp;is&nbsp;meant:&nbsp;by&nbsp;default,&nbsp;all&nbsp;windows&nbsp;use<br>
their&nbsp;own&nbsp;default&nbsp;attributes.&nbsp;However&nbsp;if&nbsp;some&nbsp;of&nbsp;the&nbsp;parent's<br>
attributes&nbsp;are&nbsp;explicitly&nbsp;changed&nbsp;(that&nbsp;is,&nbsp;using&nbsp;SetFont&nbsp;and&nbsp;not<br>
SetOwnFont)&nbsp;and&nbsp;if&nbsp;the&nbsp;corresponding&nbsp;attribute&nbsp;hadn't&nbsp;been<br>
explicitly&nbsp;set&nbsp;for&nbsp;this&nbsp;window&nbsp;itself,&nbsp;then&nbsp;this&nbsp;window&nbsp;takes&nbsp;the&nbsp;same<br>
value&nbsp;as&nbsp;used&nbsp;by&nbsp;the&nbsp;parent.&nbsp;In&nbsp;addition,&nbsp;if&nbsp;the&nbsp;window&nbsp;overrides<br>
ShouldInheritColours&nbsp;to&nbsp;return&nbsp;false,&nbsp;the&nbsp;colours&nbsp;will&nbsp;not&nbsp;be&nbsp;changed<br>
no&nbsp;matter&nbsp;what&nbsp;and&nbsp;only&nbsp;the&nbsp;font&nbsp;might.<br>
&nbsp;<br>
This&nbsp;rather&nbsp;complicated&nbsp;logic&nbsp;is&nbsp;necessary&nbsp;in&nbsp;order&nbsp;to&nbsp;accommodate&nbsp;the<br>
different&nbsp;usage&nbsp;scenarios.&nbsp;The&nbsp;most&nbsp;common&nbsp;one&nbsp;is&nbsp;when&nbsp;all&nbsp;default<br>
attributes&nbsp;are&nbsp;used&nbsp;and&nbsp;in&nbsp;this&nbsp;case,&nbsp;nothing&nbsp;should&nbsp;be&nbsp;inherited&nbsp;as<br>
in&nbsp;modern&nbsp;GUIs&nbsp;different&nbsp;controls&nbsp;use&nbsp;different&nbsp;fonts&nbsp;(and&nbsp;colours)<br>
than&nbsp;their&nbsp;siblings&nbsp;so&nbsp;they&nbsp;can't&nbsp;inherit&nbsp;the&nbsp;same&nbsp;value&nbsp;from&nbsp;the<br>
parent.&nbsp;However&nbsp;it&nbsp;was&nbsp;also&nbsp;deemed&nbsp;desirable&nbsp;to&nbsp;allow&nbsp;to&nbsp;simply&nbsp;change<br>
the&nbsp;attributes&nbsp;of&nbsp;all&nbsp;children&nbsp;at&nbsp;once&nbsp;by&nbsp;just&nbsp;changing&nbsp;the&nbsp;font&nbsp;or<br>
colour&nbsp;of&nbsp;their&nbsp;common&nbsp;parent,&nbsp;hence&nbsp;in&nbsp;this&nbsp;case&nbsp;we&nbsp;do&nbsp;inherit&nbsp;the<br>
parents&nbsp;attributes.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-InheritsBackgroundColour"><strong>InheritsBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-InheritsBackgroundColour">InheritsBackgroundColour</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-InitDialog"><strong>InitDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-InitDialog">InitDialog</a>(self)<br>
&nbsp;<br>
Sends&nbsp;an&nbsp;EVT_INIT_DIALOG&nbsp;event,&nbsp;whose&nbsp;handler&nbsp;usually&nbsp;transfers&nbsp;data<br>
to&nbsp;the&nbsp;dialog&nbsp;via&nbsp;validators.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-InvalidateBestSize"><strong>InvalidateBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-InvalidateBestSize">InvalidateBestSize</a>(self)<br>
&nbsp;<br>
Reset&nbsp;the&nbsp;cached&nbsp;best&nbsp;size&nbsp;value&nbsp;so&nbsp;it&nbsp;will&nbsp;be&nbsp;recalculated&nbsp;the&nbsp;next<br>
time&nbsp;it&nbsp;is&nbsp;needed.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-IsBeingDeleted"><strong>IsBeingDeleted</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-IsBeingDeleted">IsBeingDeleted</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Is&nbsp;the&nbsp;window&nbsp;in&nbsp;the&nbsp;process&nbsp;of&nbsp;being&nbsp;deleted?</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-IsEnabled"><strong>IsEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-IsEnabled">IsEnabled</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;enabled&nbsp;for&nbsp;input,&nbsp;false&nbsp;otherwise.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-IsExposed"><strong>IsExposed</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-IsExposed">IsExposed</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;w=1,&nbsp;int&nbsp;h=1)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-IsExposedPoint"><strong>IsExposedPoint</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-IsExposedPoint">IsExposedPoint</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-IsExposedRect"><strong>IsExposedRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-IsExposedRect">IsExposedRect</a>(self,&nbsp;Rect&nbsp;rect)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-IsRetained"><strong>IsRetained</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-IsRetained">IsRetained</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;retained,&nbsp;false&nbsp;otherwise.&nbsp;&nbsp;Retained<br>
windows&nbsp;are&nbsp;only&nbsp;available&nbsp;on&nbsp;X&nbsp;platforms.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-IsShown"><strong>IsShown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-IsShown">IsShown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;shown,&nbsp;false&nbsp;if&nbsp;it&nbsp;has&nbsp;been&nbsp;hidden.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-IsTopLevel"><strong>IsTopLevel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-IsTopLevel">IsTopLevel</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;window&nbsp;is&nbsp;a&nbsp;top-level&nbsp;one.&nbsp;Currently&nbsp;all<br>
frames&nbsp;and&nbsp;dialogs&nbsp;are&nbsp;always&nbsp;considered&nbsp;to&nbsp;be&nbsp;top-level&nbsp;windows&nbsp;(even<br>
if&nbsp;they&nbsp;have&nbsp;a&nbsp;parent&nbsp;window).</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Layout"><strong>Layout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Layout">Layout</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Invokes&nbsp;the&nbsp;constraint-based&nbsp;layout&nbsp;algorithm&nbsp;or&nbsp;the&nbsp;sizer-based<br>
algorithm&nbsp;for&nbsp;this&nbsp;window.&nbsp;&nbsp;See&nbsp;SetAutoLayout:&nbsp;when&nbsp;auto&nbsp;layout&nbsp;is&nbsp;on,<br>
this&nbsp;function&nbsp;gets&nbsp;called&nbsp;automatically&nbsp;by&nbsp;the&nbsp;default&nbsp;EVT_SIZE<br>
handler&nbsp;when&nbsp;the&nbsp;window&nbsp;is&nbsp;resized.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-LineDown"><strong>LineDown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-LineDown">LineDown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#NavigationToolbar2Wx-ScrollLines">ScrollLines</a>(1).</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-LineUp"><strong>LineUp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-LineUp">LineUp</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#NavigationToolbar2Wx-ScrollLines">ScrollLines</a>(-1).</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Lower"><strong>Lower</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Lower">Lower</a>(self)<br>
&nbsp;<br>
Lowers&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;bottom&nbsp;of&nbsp;the&nbsp;window&nbsp;hierarchy.&nbsp;&nbsp;In&nbsp;current<br>
version&nbsp;of&nbsp;wxWidgets&nbsp;this&nbsp;works&nbsp;both&nbsp;for&nbsp;manage&nbsp;and&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-MakeModal"><strong>MakeModal</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-MakeModal">MakeModal</a>(self,&nbsp;bool&nbsp;modal=True)<br>
&nbsp;<br>
Disables&nbsp;all&nbsp;other&nbsp;windows&nbsp;in&nbsp;the&nbsp;application&nbsp;so&nbsp;that&nbsp;the&nbsp;user&nbsp;can<br>
only&nbsp;interact&nbsp;with&nbsp;this&nbsp;window.&nbsp;&nbsp;Passing&nbsp;False&nbsp;will&nbsp;reverse&nbsp;this<br>
effect.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Move"><strong>Move</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Move">Move</a>(self,&nbsp;Point&nbsp;pt,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-MoveAfterInTabOrder"><strong>MoveAfterInTabOrder</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-MoveAfterInTabOrder">MoveAfterInTabOrder</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Moves&nbsp;this&nbsp;window&nbsp;in&nbsp;the&nbsp;tab&nbsp;navigation&nbsp;order&nbsp;after&nbsp;the&nbsp;specified<br>
sibling&nbsp;window.&nbsp;&nbsp;This&nbsp;means&nbsp;that&nbsp;when&nbsp;the&nbsp;user&nbsp;presses&nbsp;the&nbsp;TAB&nbsp;key&nbsp;on<br>
that&nbsp;other&nbsp;window,&nbsp;the&nbsp;focus&nbsp;switches&nbsp;to&nbsp;this&nbsp;window.<br>
&nbsp;<br>
The&nbsp;default&nbsp;tab&nbsp;order&nbsp;is&nbsp;the&nbsp;same&nbsp;as&nbsp;creation&nbsp;order.&nbsp;&nbsp;This&nbsp;function<br>
and&nbsp;`MoveBeforeInTabOrder`&nbsp;allow&nbsp;to&nbsp;change&nbsp;it&nbsp;after&nbsp;creating&nbsp;all&nbsp;the<br>
windows.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-MoveBeforeInTabOrder"><strong>MoveBeforeInTabOrder</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-MoveBeforeInTabOrder">MoveBeforeInTabOrder</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Same&nbsp;as&nbsp;`MoveAfterInTabOrder`&nbsp;except&nbsp;that&nbsp;it&nbsp;inserts&nbsp;this&nbsp;window&nbsp;just<br>
before&nbsp;win&nbsp;instead&nbsp;of&nbsp;putting&nbsp;it&nbsp;right&nbsp;after&nbsp;it.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-MoveXY"><strong>MoveXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-MoveXY">MoveXY</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Navigate"><strong>Navigate</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Navigate">Navigate</a>(self,&nbsp;int&nbsp;flags=NavigationKeyEvent.IsForward)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Does&nbsp;keyboard&nbsp;navigation&nbsp;from&nbsp;this&nbsp;window&nbsp;to&nbsp;another,&nbsp;by&nbsp;sending&nbsp;a<br>
`wx.NavigationKeyEvent`.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-PageDown"><strong>PageDown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-PageDown">PageDown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#NavigationToolbar2Wx-ScrollPages">ScrollPages</a>(1).</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-PageUp"><strong>PageUp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-PageUp">PageUp</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#NavigationToolbar2Wx-ScrollPages">ScrollPages</a>(-1).</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-PopEventHandler"><strong>PopEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-PopEventHandler">PopEventHandler</a>(self,&nbsp;bool&nbsp;deleteHandler=False)&nbsp;-&gt;&nbsp;EvtHandler<br>
&nbsp;<br>
Removes&nbsp;and&nbsp;returns&nbsp;the&nbsp;top-most&nbsp;event&nbsp;handler&nbsp;on&nbsp;the&nbsp;event&nbsp;handler<br>
stack.&nbsp;&nbsp;If&nbsp;deleteHandler&nbsp;is&nbsp;True&nbsp;then&nbsp;the&nbsp;wx.EvtHandler&nbsp;object&nbsp;will&nbsp;be<br>
destroyed&nbsp;after&nbsp;it&nbsp;is&nbsp;popped.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-PopupMenu"><strong>PopupMenu</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-PopupMenu">PopupMenu</a>(self,&nbsp;Menu&nbsp;menu,&nbsp;Point&nbsp;pos=DefaultPosition)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Pops&nbsp;up&nbsp;the&nbsp;given&nbsp;menu&nbsp;at&nbsp;the&nbsp;specified&nbsp;coordinates,&nbsp;relative&nbsp;to&nbsp;this&nbsp;window,<br>
and&nbsp;returns&nbsp;control&nbsp;when&nbsp;the&nbsp;user&nbsp;has&nbsp;dismissed&nbsp;the&nbsp;menu.&nbsp;If&nbsp;a&nbsp;menu&nbsp;item&nbsp;is<br>
selected,&nbsp;the&nbsp;corresponding&nbsp;menu&nbsp;event&nbsp;is&nbsp;generated&nbsp;and&nbsp;will&nbsp;be&nbsp;processed&nbsp;as<br>
usual.&nbsp;&nbsp;If&nbsp;the&nbsp;default&nbsp;position&nbsp;is&nbsp;given&nbsp;then&nbsp;the&nbsp;current&nbsp;position&nbsp;of&nbsp;the<br>
mouse&nbsp;cursor&nbsp;will&nbsp;be&nbsp;used.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-PopupMenuXY"><strong>PopupMenuXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-PopupMenuXY">PopupMenuXY</a>(self,&nbsp;Menu&nbsp;menu,&nbsp;int&nbsp;x=-1,&nbsp;int&nbsp;y=-1)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Pops&nbsp;up&nbsp;the&nbsp;given&nbsp;menu&nbsp;at&nbsp;the&nbsp;specified&nbsp;coordinates,&nbsp;relative&nbsp;to&nbsp;this&nbsp;window,<br>
and&nbsp;returns&nbsp;control&nbsp;when&nbsp;the&nbsp;user&nbsp;has&nbsp;dismissed&nbsp;the&nbsp;menu.&nbsp;If&nbsp;a&nbsp;menu&nbsp;item&nbsp;is<br>
selected,&nbsp;the&nbsp;corresponding&nbsp;menu&nbsp;event&nbsp;is&nbsp;generated&nbsp;and&nbsp;will&nbsp;be&nbsp;processed&nbsp;as<br>
usual.&nbsp;&nbsp;If&nbsp;the&nbsp;default&nbsp;position&nbsp;is&nbsp;given&nbsp;then&nbsp;the&nbsp;current&nbsp;position&nbsp;of&nbsp;the<br>
mouse&nbsp;cursor&nbsp;will&nbsp;be&nbsp;used.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-PostCreate"><strong>PostCreate</strong></a>(self, pre)</dt><dd><tt>Phase&nbsp;3&nbsp;of&nbsp;the&nbsp;2-phase&nbsp;create&nbsp;&lt;wink!&gt;<br>
Call&nbsp;this&nbsp;method&nbsp;after&nbsp;precreating&nbsp;the&nbsp;window&nbsp;with&nbsp;the&nbsp;2-phase&nbsp;create&nbsp;method.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-PrepareDC"><strong>PrepareDC</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-PrepareDC">PrepareDC</a>(self,&nbsp;DC&nbsp;dc)<br>
&nbsp;<br>
Call&nbsp;this&nbsp;function&nbsp;to&nbsp;prepare&nbsp;the&nbsp;device&nbsp;context&nbsp;for&nbsp;drawing&nbsp;a<br>
scrolled&nbsp;image.&nbsp;It&nbsp;sets&nbsp;the&nbsp;device&nbsp;origin&nbsp;according&nbsp;to&nbsp;the&nbsp;current<br>
scroll&nbsp;position.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-PushEventHandler"><strong>PushEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-PushEventHandler">PushEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)<br>
&nbsp;<br>
Pushes&nbsp;this&nbsp;event&nbsp;handler&nbsp;onto&nbsp;the&nbsp;event&nbsp;handler&nbsp;stack&nbsp;for&nbsp;the&nbsp;window.<br>
An&nbsp;event&nbsp;handler&nbsp;is&nbsp;an&nbsp;object&nbsp;that&nbsp;is&nbsp;capable&nbsp;of&nbsp;processing&nbsp;the&nbsp;events<br>
sent&nbsp;to&nbsp;a&nbsp;window.&nbsp;By&nbsp;default,&nbsp;the&nbsp;window&nbsp;is&nbsp;its&nbsp;own&nbsp;event&nbsp;handler,&nbsp;but<br>
an&nbsp;application&nbsp;may&nbsp;wish&nbsp;to&nbsp;substitute&nbsp;another,&nbsp;for&nbsp;example&nbsp;to&nbsp;allow<br>
central&nbsp;implementation&nbsp;of&nbsp;event-handling&nbsp;for&nbsp;a&nbsp;variety&nbsp;of&nbsp;different<br>
window&nbsp;classes.<br>
&nbsp;<br>
wx.Window.PushEventHandler&nbsp;allows&nbsp;an&nbsp;application&nbsp;to&nbsp;set&nbsp;up&nbsp;a&nbsp;chain&nbsp;of<br>
event&nbsp;handlers,&nbsp;where&nbsp;an&nbsp;event&nbsp;not&nbsp;handled&nbsp;by&nbsp;one&nbsp;event&nbsp;handler&nbsp;is<br>
handed&nbsp;to&nbsp;the&nbsp;next&nbsp;one&nbsp;in&nbsp;the&nbsp;chain.&nbsp;Use&nbsp;`wx.Window.PopEventHandler`&nbsp;to<br>
remove&nbsp;the&nbsp;event&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Raise"><strong>Raise</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Raise">Raise</a>(self)<br>
&nbsp;<br>
Raises&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;top&nbsp;of&nbsp;the&nbsp;window&nbsp;hierarchy.&nbsp;&nbsp;In&nbsp;current<br>
version&nbsp;of&nbsp;wxWidgets&nbsp;this&nbsp;works&nbsp;both&nbsp;for&nbsp;manage&nbsp;and&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Refresh"><strong>Refresh</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Refresh">Refresh</a>(self,&nbsp;bool&nbsp;eraseBackground=True,&nbsp;Rect&nbsp;rect=None)<br>
&nbsp;<br>
Mark&nbsp;the&nbsp;specified&nbsp;rectangle&nbsp;(or&nbsp;the&nbsp;whole&nbsp;window)&nbsp;as&nbsp;"dirty"&nbsp;so&nbsp;it<br>
will&nbsp;be&nbsp;repainted.&nbsp;&nbsp;Causes&nbsp;an&nbsp;EVT_PAINT&nbsp;event&nbsp;to&nbsp;be&nbsp;generated&nbsp;and&nbsp;sent<br>
to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-RefreshRect"><strong>RefreshRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-RefreshRect">RefreshRect</a>(self,&nbsp;Rect&nbsp;rect,&nbsp;bool&nbsp;eraseBackground=True)<br>
&nbsp;<br>
Redraws&nbsp;the&nbsp;contents&nbsp;of&nbsp;the&nbsp;given&nbsp;rectangle:&nbsp;the&nbsp;area&nbsp;inside&nbsp;it&nbsp;will<br>
be&nbsp;repainted.&nbsp;&nbsp;This&nbsp;is&nbsp;the&nbsp;same&nbsp;as&nbsp;Refresh&nbsp;but&nbsp;has&nbsp;a&nbsp;nicer&nbsp;syntax.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-RegisterHotKey"><strong>RegisterHotKey</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-RegisterHotKey">RegisterHotKey</a>(self,&nbsp;int&nbsp;hotkeyId,&nbsp;int&nbsp;modifiers,&nbsp;int&nbsp;keycode)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Registers&nbsp;a&nbsp;system&nbsp;wide&nbsp;hotkey.&nbsp;Every&nbsp;time&nbsp;the&nbsp;user&nbsp;presses&nbsp;the&nbsp;hotkey<br>
registered&nbsp;here,&nbsp;this&nbsp;window&nbsp;will&nbsp;receive&nbsp;a&nbsp;hotkey&nbsp;event.&nbsp;It&nbsp;will<br>
receive&nbsp;the&nbsp;event&nbsp;even&nbsp;if&nbsp;the&nbsp;application&nbsp;is&nbsp;in&nbsp;the&nbsp;background&nbsp;and<br>
does&nbsp;not&nbsp;have&nbsp;the&nbsp;input&nbsp;focus&nbsp;because&nbsp;the&nbsp;user&nbsp;is&nbsp;working&nbsp;with&nbsp;some<br>
other&nbsp;application.&nbsp;&nbsp;To&nbsp;bind&nbsp;an&nbsp;event&nbsp;handler&nbsp;function&nbsp;to&nbsp;this&nbsp;hotkey<br>
use&nbsp;EVT_HOTKEY&nbsp;with&nbsp;an&nbsp;id&nbsp;equal&nbsp;to&nbsp;hotkeyId.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the<br>
hotkey&nbsp;was&nbsp;registered&nbsp;successfully.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-ReleaseMouse"><strong>ReleaseMouse</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-ReleaseMouse">ReleaseMouse</a>(self)<br>
&nbsp;<br>
Releases&nbsp;mouse&nbsp;input&nbsp;captured&nbsp;with&nbsp;wx.Window.CaptureMouse.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-RemoveChild"><strong>RemoveChild</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-RemoveChild">RemoveChild</a>(self,&nbsp;Window&nbsp;child)<br>
&nbsp;<br>
Removes&nbsp;a&nbsp;child&nbsp;window.&nbsp;This&nbsp;is&nbsp;called&nbsp;automatically&nbsp;by&nbsp;window<br>
deletion&nbsp;functions&nbsp;so&nbsp;should&nbsp;not&nbsp;be&nbsp;required&nbsp;by&nbsp;the&nbsp;application<br>
programmer.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-RemoveEventHandler"><strong>RemoveEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-RemoveEventHandler">RemoveEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Find&nbsp;the&nbsp;given&nbsp;handler&nbsp;in&nbsp;the&nbsp;event&nbsp;handler&nbsp;chain&nbsp;and&nbsp;remove&nbsp;(but&nbsp;not<br>
delete)&nbsp;it&nbsp;from&nbsp;the&nbsp;event&nbsp;handler&nbsp;chain,&nbsp;return&nbsp;True&nbsp;if&nbsp;it&nbsp;was&nbsp;found<br>
and&nbsp;False&nbsp;otherwise&nbsp;(this&nbsp;also&nbsp;results&nbsp;in&nbsp;an&nbsp;assert&nbsp;failure&nbsp;so&nbsp;this<br>
function&nbsp;should&nbsp;only&nbsp;be&nbsp;called&nbsp;when&nbsp;the&nbsp;handler&nbsp;is&nbsp;supposed&nbsp;to&nbsp;be<br>
there.)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Reparent"><strong>Reparent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Reparent">Reparent</a>(self,&nbsp;Window&nbsp;newParent)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Reparents&nbsp;the&nbsp;window,&nbsp;i.e&nbsp;the&nbsp;window&nbsp;will&nbsp;be&nbsp;removed&nbsp;from&nbsp;its&nbsp;current<br>
parent&nbsp;window&nbsp;(e.g.&nbsp;a&nbsp;non-standard&nbsp;toolbar&nbsp;in&nbsp;a&nbsp;wxFrame)&nbsp;and&nbsp;then<br>
re-inserted&nbsp;into&nbsp;another.&nbsp;Available&nbsp;on&nbsp;Windows&nbsp;and&nbsp;GTK.&nbsp;&nbsp;Returns&nbsp;True<br>
if&nbsp;the&nbsp;parent&nbsp;was&nbsp;changed,&nbsp;False&nbsp;otherwise&nbsp;(error&nbsp;or&nbsp;newParent&nbsp;==<br>
oldParent)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-ScreenToClient"><strong>ScreenToClient</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-ScreenToClient">ScreenToClient</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;from&nbsp;screen&nbsp;to&nbsp;client&nbsp;window&nbsp;coordinates.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-ScreenToClientXY"><strong>ScreenToClientXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-ScreenToClientXY">ScreenToClientXY</a>(int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Converts&nbsp;from&nbsp;screen&nbsp;to&nbsp;client&nbsp;window&nbsp;coordinates.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-ScrollLines"><strong>ScrollLines</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-ScrollLines">ScrollLines</a>(self,&nbsp;int&nbsp;lines)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
If&nbsp;the&nbsp;platform&nbsp;and&nbsp;window&nbsp;class&nbsp;supports&nbsp;it,&nbsp;scrolls&nbsp;the&nbsp;window&nbsp;by<br>
the&nbsp;given&nbsp;number&nbsp;of&nbsp;lines&nbsp;down,&nbsp;if&nbsp;lines&nbsp;is&nbsp;positive,&nbsp;or&nbsp;up&nbsp;if&nbsp;lines<br>
is&nbsp;negative.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;window&nbsp;was&nbsp;scrolled,&nbsp;False&nbsp;if&nbsp;it&nbsp;was<br>
already&nbsp;on&nbsp;top/bottom&nbsp;and&nbsp;nothing&nbsp;was&nbsp;done.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-ScrollPages"><strong>ScrollPages</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-ScrollPages">ScrollPages</a>(self,&nbsp;int&nbsp;pages)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
If&nbsp;the&nbsp;platform&nbsp;and&nbsp;window&nbsp;class&nbsp;supports&nbsp;it,&nbsp;scrolls&nbsp;the&nbsp;window&nbsp;by<br>
the&nbsp;given&nbsp;number&nbsp;of&nbsp;pages&nbsp;down,&nbsp;if&nbsp;pages&nbsp;is&nbsp;positive,&nbsp;or&nbsp;up&nbsp;if&nbsp;pages<br>
is&nbsp;negative.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;window&nbsp;was&nbsp;scrolled,&nbsp;False&nbsp;if&nbsp;it&nbsp;was<br>
already&nbsp;on&nbsp;top/bottom&nbsp;and&nbsp;nothing&nbsp;was&nbsp;done.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-ScrollWindow"><strong>ScrollWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-ScrollWindow">ScrollWindow</a>(self,&nbsp;int&nbsp;dx,&nbsp;int&nbsp;dy,&nbsp;Rect&nbsp;rect=None)<br>
&nbsp;<br>
Physically&nbsp;scrolls&nbsp;the&nbsp;pixels&nbsp;in&nbsp;the&nbsp;window&nbsp;and&nbsp;move&nbsp;child&nbsp;windows<br>
accordingly.&nbsp;&nbsp;Use&nbsp;this&nbsp;function&nbsp;to&nbsp;optimise&nbsp;your&nbsp;scrolling<br>
implementations,&nbsp;to&nbsp;minimise&nbsp;the&nbsp;area&nbsp;that&nbsp;must&nbsp;be&nbsp;redrawn.&nbsp;Note&nbsp;that<br>
it&nbsp;is&nbsp;rarely&nbsp;required&nbsp;to&nbsp;call&nbsp;this&nbsp;function&nbsp;from&nbsp;a&nbsp;user&nbsp;program.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SendSizeEvent"><strong>SendSizeEvent</strong></a>(self)</dt></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetAcceleratorTable"><strong>SetAcceleratorTable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetAcceleratorTable">SetAcceleratorTable</a>(self,&nbsp;AcceleratorTable&nbsp;accel)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;accelerator&nbsp;table&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetAutoLayout"><strong>SetAutoLayout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetAutoLayout">SetAutoLayout</a>(self,&nbsp;bool&nbsp;autoLayout)<br>
&nbsp;<br>
Determines&nbsp;whether&nbsp;the&nbsp;Layout&nbsp;function&nbsp;will&nbsp;be&nbsp;called&nbsp;automatically<br>
when&nbsp;the&nbsp;window&nbsp;is&nbsp;resized.&nbsp;&nbsp;It&nbsp;is&nbsp;called&nbsp;implicitly&nbsp;by&nbsp;SetSizer&nbsp;but<br>
if&nbsp;you&nbsp;use&nbsp;SetConstraints&nbsp;you&nbsp;should&nbsp;call&nbsp;it&nbsp;manually&nbsp;or&nbsp;otherwise&nbsp;the<br>
window&nbsp;layout&nbsp;won't&nbsp;be&nbsp;correctly&nbsp;updated&nbsp;when&nbsp;its&nbsp;size&nbsp;changes.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetBackgroundColour"><strong>SetBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetBackgroundColour">SetBackgroundColour</a>(self,&nbsp;Colour&nbsp;colour)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;background&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;colour<br>
was&nbsp;changed.&nbsp;&nbsp;The&nbsp;background&nbsp;colour&nbsp;is&nbsp;usually&nbsp;painted&nbsp;by&nbsp;the&nbsp;default<br>
EVT_ERASE_BACKGROUND&nbsp;event&nbsp;handler&nbsp;function&nbsp;under&nbsp;Windows&nbsp;and<br>
automatically&nbsp;under&nbsp;GTK.&nbsp;&nbsp;Using&nbsp;`wx.NullColour`&nbsp;will&nbsp;reset&nbsp;the&nbsp;window<br>
to&nbsp;the&nbsp;default&nbsp;background&nbsp;colour.<br>
&nbsp;<br>
Note&nbsp;that&nbsp;setting&nbsp;the&nbsp;background&nbsp;colour&nbsp;may&nbsp;not&nbsp;cause&nbsp;an&nbsp;immediate<br>
refresh,&nbsp;so&nbsp;you&nbsp;may&nbsp;wish&nbsp;to&nbsp;call&nbsp;`ClearBackground`&nbsp;or&nbsp;`Refresh`&nbsp;after<br>
calling&nbsp;this&nbsp;function.<br>
&nbsp;<br>
Using&nbsp;this&nbsp;function&nbsp;will&nbsp;disable&nbsp;attempts&nbsp;to&nbsp;use&nbsp;themes&nbsp;for&nbsp;this<br>
window,&nbsp;if&nbsp;the&nbsp;system&nbsp;supports&nbsp;them.&nbsp;&nbsp;Use&nbsp;with&nbsp;care&nbsp;since&nbsp;usually&nbsp;the<br>
themes&nbsp;represent&nbsp;the&nbsp;appearance&nbsp;chosen&nbsp;by&nbsp;the&nbsp;user&nbsp;to&nbsp;be&nbsp;used&nbsp;for&nbsp;all<br>
applications&nbsp;on&nbsp;the&nbsp;system.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetBackgroundStyle"><strong>SetBackgroundStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetBackgroundStyle">SetBackgroundStyle</a>(self,&nbsp;int&nbsp;style)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;The&nbsp;background&nbsp;style<br>
indicates&nbsp;how&nbsp;the&nbsp;background&nbsp;of&nbsp;the&nbsp;window&nbsp;is&nbsp;drawn.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;======================&nbsp;&nbsp;========================================<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_SYSTEM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;colour&nbsp;or&nbsp;pattern&nbsp;should<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;be&nbsp;determined&nbsp;by&nbsp;the&nbsp;system<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_COLOUR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;should&nbsp;be&nbsp;a&nbsp;solid&nbsp;colour<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_CUSTOM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;will&nbsp;be&nbsp;implemented&nbsp;by&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;application.<br>
&nbsp;&nbsp;&nbsp;&nbsp;======================&nbsp;&nbsp;========================================<br>
&nbsp;<br>
On&nbsp;GTK+,&nbsp;use&nbsp;of&nbsp;wx.BG_STYLE_CUSTOM&nbsp;allows&nbsp;the&nbsp;flicker-free&nbsp;drawing&nbsp;of<br>
a&nbsp;custom&nbsp;background,&nbsp;such&nbsp;as&nbsp;a&nbsp;tiled&nbsp;bitmap.&nbsp;Currently&nbsp;the&nbsp;style&nbsp;has<br>
no&nbsp;effect&nbsp;on&nbsp;other&nbsp;platforms.<br>
&nbsp;<br>
:see:&nbsp;`GetBackgroundStyle`,&nbsp;`SetBackgroundColour`</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetBestFittingSize"><strong>SetBestFittingSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetBestFittingSize">SetBestFittingSize</a>(self,&nbsp;Size&nbsp;size=DefaultSize)<br>
&nbsp;<br>
A&nbsp;'Smart'&nbsp;SetSize&nbsp;that&nbsp;will&nbsp;fill&nbsp;in&nbsp;default&nbsp;size&nbsp;components&nbsp;with&nbsp;the<br>
window's&nbsp;*best&nbsp;size*&nbsp;values.&nbsp;&nbsp;Also&nbsp;set's&nbsp;the&nbsp;minsize&nbsp;for&nbsp;use&nbsp;with&nbsp;sizers.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetCaret"><strong>SetCaret</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetCaret">SetCaret</a>(self,&nbsp;Caret&nbsp;caret)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;caret&nbsp;associated&nbsp;with&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetClientRect"><strong>SetClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetClientRect">SetClientRect</a>(self,&nbsp;Rect&nbsp;rect)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetClientSize"><strong>SetClientSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetClientSize">SetClientSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetClientSizeWH"><strong>SetClientSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetClientSizeWH">SetClientSizeWH</a>(self,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetConstraints"><strong>SetConstraints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetConstraints">SetConstraints</a>(self,&nbsp;LayoutConstraints&nbsp;constraints)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window&nbsp;to&nbsp;have&nbsp;the&nbsp;given&nbsp;layout&nbsp;constraints.&nbsp;If&nbsp;an&nbsp;existing<br>
layout&nbsp;constraints&nbsp;object&nbsp;is&nbsp;already&nbsp;owned&nbsp;by&nbsp;the&nbsp;window,&nbsp;it&nbsp;will&nbsp;be<br>
deleted.&nbsp;&nbsp;Pass&nbsp;None&nbsp;to&nbsp;disassociate&nbsp;and&nbsp;delete&nbsp;the&nbsp;window's&nbsp;current<br>
constraints.<br>
&nbsp;<br>
You&nbsp;must&nbsp;call&nbsp;SetAutoLayout&nbsp;to&nbsp;tell&nbsp;a&nbsp;window&nbsp;to&nbsp;use&nbsp;the&nbsp;constraints<br>
automatically&nbsp;in&nbsp;its&nbsp;default&nbsp;EVT_SIZE&nbsp;handler;&nbsp;otherwise,&nbsp;you&nbsp;must<br>
handle&nbsp;EVT_SIZE&nbsp;yourself&nbsp;and&nbsp;call&nbsp;<a href="#NavigationToolbar2Wx-Layout">Layout</a>()&nbsp;explicitly.&nbsp;When&nbsp;setting<br>
both&nbsp;a&nbsp;wx.LayoutConstraints&nbsp;and&nbsp;a&nbsp;wx.Sizer,&nbsp;only&nbsp;the&nbsp;sizer&nbsp;will&nbsp;have<br>
effect.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetContainingSizer"><strong>SetContainingSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetContainingSizer">SetContainingSizer</a>(self,&nbsp;Sizer&nbsp;sizer)<br>
&nbsp;<br>
This&nbsp;normally&nbsp;does&nbsp;not&nbsp;need&nbsp;to&nbsp;be&nbsp;called&nbsp;by&nbsp;application&nbsp;code.&nbsp;It&nbsp;is<br>
called&nbsp;internally&nbsp;when&nbsp;a&nbsp;window&nbsp;is&nbsp;added&nbsp;to&nbsp;a&nbsp;sizer,&nbsp;and&nbsp;is&nbsp;used&nbsp;so<br>
the&nbsp;window&nbsp;can&nbsp;remove&nbsp;itself&nbsp;from&nbsp;the&nbsp;sizer&nbsp;when&nbsp;it&nbsp;is&nbsp;destroyed.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetCursor"><strong>SetCursor</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetCursor">SetCursor</a>(self,&nbsp;Cursor&nbsp;cursor)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;cursor.&nbsp;Notice&nbsp;that&nbsp;the&nbsp;window&nbsp;cursor&nbsp;also&nbsp;sets&nbsp;it<br>
for&nbsp;the&nbsp;children&nbsp;of&nbsp;the&nbsp;window&nbsp;implicitly.<br>
&nbsp;<br>
The&nbsp;cursor&nbsp;may&nbsp;be&nbsp;wx.NullCursor&nbsp;in&nbsp;which&nbsp;case&nbsp;the&nbsp;window&nbsp;cursor&nbsp;will<br>
be&nbsp;reset&nbsp;back&nbsp;to&nbsp;default.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetDefaultItem"><strong>SetDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetDefaultItem">SetDefaultItem</a>(self,&nbsp;Window&nbsp;child)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Set&nbsp;this&nbsp;child&nbsp;as&nbsp;default,&nbsp;return&nbsp;the&nbsp;old&nbsp;default.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetDimensions"><strong>SetDimensions</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetDimensions">SetDimensions</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height,&nbsp;int&nbsp;sizeFlags=SIZE_AUTO)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;and&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;The&nbsp;sizeFlags<br>
parameter&nbsp;indicates&nbsp;the&nbsp;interpretation&nbsp;of&nbsp;the&nbsp;other&nbsp;params&nbsp;if&nbsp;they&nbsp;are<br>
equal&nbsp;to&nbsp;-1.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;========================&nbsp;&nbsp;======================================<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.SIZE_AUTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;-1&nbsp;indicates&nbsp;that&nbsp;a&nbsp;class-specific<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;should&nbsp;be&nbsp;used.<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.SIZE_USE_EXISTING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Axisting&nbsp;dimensions&nbsp;should&nbsp;be&nbsp;used&nbsp;if<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;values&nbsp;are&nbsp;supplied.<br>
&nbsp;&nbsp;&nbsp;&nbsp;wxSIZE_ALLOW_MINUS_ONE&nbsp;&nbsp;&nbsp;&nbsp;Allow&nbsp;dimensions&nbsp;of&nbsp;-1&nbsp;and&nbsp;less&nbsp;to&nbsp;be<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interpreted&nbsp;as&nbsp;real&nbsp;dimensions,&nbsp;not<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;values.<br>
&nbsp;&nbsp;&nbsp;&nbsp;========================&nbsp;&nbsp;======================================</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetDropTarget"><strong>SetDropTarget</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetDropTarget">SetDropTarget</a>(self,&nbsp;DropTarget&nbsp;dropTarget)<br>
&nbsp;<br>
Associates&nbsp;a&nbsp;drop&nbsp;target&nbsp;with&nbsp;this&nbsp;window.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;already&nbsp;has<br>
a&nbsp;drop&nbsp;target,&nbsp;it&nbsp;is&nbsp;deleted.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetEventHandler"><strong>SetEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetEventHandler">SetEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;event&nbsp;handler&nbsp;for&nbsp;this&nbsp;window.&nbsp;&nbsp;An&nbsp;event&nbsp;handler&nbsp;is&nbsp;an&nbsp;object<br>
that&nbsp;is&nbsp;capable&nbsp;of&nbsp;processing&nbsp;the&nbsp;events&nbsp;sent&nbsp;to&nbsp;a&nbsp;window.&nbsp;By&nbsp;default,<br>
the&nbsp;window&nbsp;is&nbsp;its&nbsp;own&nbsp;event&nbsp;handler,&nbsp;but&nbsp;an&nbsp;application&nbsp;may&nbsp;wish&nbsp;to<br>
substitute&nbsp;another,&nbsp;for&nbsp;example&nbsp;to&nbsp;allow&nbsp;central&nbsp;implementation&nbsp;of<br>
event-handling&nbsp;for&nbsp;a&nbsp;variety&nbsp;of&nbsp;different&nbsp;window&nbsp;classes.<br>
&nbsp;<br>
It&nbsp;is&nbsp;usually&nbsp;better&nbsp;to&nbsp;use&nbsp;`wx.Window.PushEventHandler`&nbsp;since&nbsp;this&nbsp;sets<br>
up&nbsp;a&nbsp;chain&nbsp;of&nbsp;event&nbsp;handlers,&nbsp;where&nbsp;an&nbsp;event&nbsp;not&nbsp;handled&nbsp;by&nbsp;one&nbsp;event<br>
handler&nbsp;is&nbsp;handed&nbsp;to&nbsp;the&nbsp;next&nbsp;one&nbsp;in&nbsp;the&nbsp;chain.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetExtraStyle"><strong>SetExtraStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetExtraStyle">SetExtraStyle</a>(self,&nbsp;long&nbsp;exStyle)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;extra&nbsp;style&nbsp;bits&nbsp;for&nbsp;the&nbsp;window.&nbsp;&nbsp;Extra&nbsp;styles&nbsp;are&nbsp;the&nbsp;less<br>
often&nbsp;used&nbsp;style&nbsp;bits&nbsp;which&nbsp;can't&nbsp;be&nbsp;set&nbsp;with&nbsp;the&nbsp;constructor&nbsp;or&nbsp;with<br>
<a href="#NavigationToolbar2Wx-SetWindowStyleFlag">SetWindowStyleFlag</a>()</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetFocus"><strong>SetFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetFocus">SetFocus</a>(self)<br>
&nbsp;<br>
Set's&nbsp;the&nbsp;focus&nbsp;to&nbsp;this&nbsp;window,&nbsp;allowing&nbsp;it&nbsp;to&nbsp;receive&nbsp;keyboard&nbsp;input.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetFocusFromKbd"><strong>SetFocusFromKbd</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetFocusFromKbd">SetFocusFromKbd</a>(self)<br>
&nbsp;<br>
Set&nbsp;focus&nbsp;to&nbsp;this&nbsp;window&nbsp;as&nbsp;the&nbsp;result&nbsp;of&nbsp;a&nbsp;keyboard&nbsp;action.&nbsp;&nbsp;Normally<br>
only&nbsp;called&nbsp;internally.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetFont"><strong>SetFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetFont">SetFont</a>(self,&nbsp;Font&nbsp;font)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;font&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetForegroundColour"><strong>SetForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetForegroundColour">SetForegroundColour</a>(self,&nbsp;Colour&nbsp;colour)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;foreground&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Returns&nbsp;True&nbsp;is&nbsp;the&nbsp;colour<br>
was&nbsp;changed.&nbsp;&nbsp;The&nbsp;interpretation&nbsp;of&nbsp;foreground&nbsp;colour&nbsp;is&nbsp;dependent&nbsp;on<br>
the&nbsp;window&nbsp;class;&nbsp;it&nbsp;may&nbsp;be&nbsp;the&nbsp;text&nbsp;colour&nbsp;or&nbsp;other&nbsp;colour,&nbsp;or&nbsp;it&nbsp;may<br>
not&nbsp;be&nbsp;used&nbsp;at&nbsp;all.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetHelpText"><strong>SetHelpText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetHelpText">SetHelpText</a>(self,&nbsp;String&nbsp;text)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;help&nbsp;text&nbsp;to&nbsp;be&nbsp;used&nbsp;as&nbsp;context-sensitive&nbsp;help&nbsp;for&nbsp;this<br>
window.&nbsp;&nbsp;Note&nbsp;that&nbsp;the&nbsp;text&nbsp;is&nbsp;actually&nbsp;stored&nbsp;by&nbsp;the&nbsp;current<br>
wxHelpProvider&nbsp;implementation,&nbsp;and&nbsp;not&nbsp;in&nbsp;the&nbsp;window&nbsp;object&nbsp;itself.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetHelpTextForId"><strong>SetHelpTextForId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetHelpTextForId">SetHelpTextForId</a>(self,&nbsp;String&nbsp;text)<br>
&nbsp;<br>
Associate&nbsp;this&nbsp;help&nbsp;text&nbsp;with&nbsp;all&nbsp;windows&nbsp;with&nbsp;the&nbsp;same&nbsp;id&nbsp;as&nbsp;this<br>
one.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetId"><strong>SetId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetId">SetId</a>(self,&nbsp;int&nbsp;winid)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;identifier&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Each&nbsp;window&nbsp;has&nbsp;an&nbsp;integer<br>
identifier.&nbsp;If&nbsp;the&nbsp;application&nbsp;has&nbsp;not&nbsp;provided&nbsp;one,&nbsp;an&nbsp;identifier<br>
will&nbsp;be&nbsp;generated.&nbsp;Normally,&nbsp;the&nbsp;identifier&nbsp;should&nbsp;be&nbsp;provided&nbsp;on<br>
creation&nbsp;and&nbsp;should&nbsp;not&nbsp;be&nbsp;modified&nbsp;subsequently.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetMaxSize"><strong>SetMaxSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetMaxSize">SetMaxSize</a>(self,&nbsp;Size&nbsp;maxSize)<br>
&nbsp;<br>
A&nbsp;more&nbsp;convenient&nbsp;method&nbsp;than&nbsp;`SetSizeHints`&nbsp;for&nbsp;setting&nbsp;just&nbsp;the<br>
max&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetMinSize"><strong>SetMinSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetMinSize">SetMinSize</a>(self,&nbsp;Size&nbsp;minSize)<br>
&nbsp;<br>
A&nbsp;more&nbsp;convenient&nbsp;method&nbsp;than&nbsp;`SetSizeHints`&nbsp;for&nbsp;setting&nbsp;just&nbsp;the<br>
min&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetName"><strong>SetName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetName">SetName</a>(self,&nbsp;String&nbsp;name)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;name.&nbsp;&nbsp;The&nbsp;window&nbsp;name&nbsp;is&nbsp;used&nbsp;for&nbsp;ressource&nbsp;setting<br>
in&nbsp;X,&nbsp;it&nbsp;is&nbsp;not&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;window&nbsp;title/label</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetOwnBackgroundColour"><strong>SetOwnBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetOwnBackgroundColour">SetOwnBackgroundColour</a>(self,&nbsp;Colour&nbsp;colour)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetOwnFont"><strong>SetOwnFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetOwnFont">SetOwnFont</a>(self,&nbsp;Font&nbsp;font)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetOwnForegroundColour"><strong>SetOwnForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetOwnForegroundColour">SetOwnForegroundColour</a>(self,&nbsp;Colour&nbsp;colour)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetPosition"><strong>SetPosition</strong></a> = Move(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Move">Move</a>(self,&nbsp;Point&nbsp;pt,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetRect"><strong>SetRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetRect">SetRect</a>(self,&nbsp;Rect&nbsp;rect,&nbsp;int&nbsp;sizeFlags=SIZE_AUTO)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;and&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels&nbsp;using&nbsp;a&nbsp;wx.Rect.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetScrollPos"><strong>SetScrollPos</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetScrollPos">SetScrollPos</a>(self,&nbsp;int&nbsp;orientation,&nbsp;int&nbsp;pos,&nbsp;bool&nbsp;refresh=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;of&nbsp;one&nbsp;of&nbsp;the&nbsp;built-in&nbsp;scrollbars.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetScrollbar"><strong>SetScrollbar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetScrollbar">SetScrollbar</a>(self,&nbsp;int&nbsp;orientation,&nbsp;int&nbsp;position,&nbsp;int&nbsp;thumbSize,&nbsp;int&nbsp;range,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;refresh=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;scrollbar&nbsp;properties&nbsp;of&nbsp;a&nbsp;built-in&nbsp;scrollbar.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetSize"><strong>SetSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetSize">SetSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetSizeHints"><strong>SetSizeHints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetSizeHints">SetSizeHints</a>(self,&nbsp;int&nbsp;minW,&nbsp;int&nbsp;minH,&nbsp;int&nbsp;maxW=-1,&nbsp;int&nbsp;maxH=-1,&nbsp;int&nbsp;incW=-1,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;incH=-1)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;window&nbsp;sizes,&nbsp;and&nbsp;window<br>
size&nbsp;increments.&nbsp;If&nbsp;a&nbsp;pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the<br>
default&nbsp;values&nbsp;will&nbsp;be&nbsp;used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user<br>
will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds&nbsp;(if&nbsp;it&nbsp;is<br>
a&nbsp;top-level&nbsp;window.)&nbsp;&nbsp;Sizers&nbsp;will&nbsp;also&nbsp;inspect&nbsp;the&nbsp;minimum&nbsp;window&nbsp;size<br>
and&nbsp;will&nbsp;use&nbsp;that&nbsp;value&nbsp;if&nbsp;set&nbsp;when&nbsp;calculating&nbsp;layout.<br>
&nbsp;<br>
The&nbsp;resizing&nbsp;increments&nbsp;are&nbsp;only&nbsp;significant&nbsp;under&nbsp;Motif&nbsp;or&nbsp;Xt.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetSizeHintsSz"><strong>SetSizeHintsSz</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetSizeHintsSz">SetSizeHintsSz</a>(self,&nbsp;Size&nbsp;minSize,&nbsp;Size&nbsp;maxSize=DefaultSize,&nbsp;Size&nbsp;incSize=DefaultSize)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;window&nbsp;sizes,&nbsp;and&nbsp;window<br>
size&nbsp;increments.&nbsp;If&nbsp;a&nbsp;pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the<br>
default&nbsp;values&nbsp;will&nbsp;be&nbsp;used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user<br>
will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds&nbsp;(if&nbsp;it&nbsp;is<br>
a&nbsp;top-level&nbsp;window.)&nbsp;&nbsp;Sizers&nbsp;will&nbsp;also&nbsp;inspect&nbsp;the&nbsp;minimum&nbsp;window&nbsp;size<br>
and&nbsp;will&nbsp;use&nbsp;that&nbsp;value&nbsp;if&nbsp;set&nbsp;when&nbsp;calculating&nbsp;layout.<br>
&nbsp;<br>
The&nbsp;resizing&nbsp;increments&nbsp;are&nbsp;only&nbsp;significant&nbsp;under&nbsp;Motif&nbsp;or&nbsp;Xt.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetSizeWH"><strong>SetSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetSizeWH">SetSizeWH</a>(self,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetSizer"><strong>SetSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetSizer">SetSizer</a>(self,&nbsp;Sizer&nbsp;sizer,&nbsp;bool&nbsp;deleteOld=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window&nbsp;to&nbsp;have&nbsp;the&nbsp;given&nbsp;layout&nbsp;sizer.&nbsp;The&nbsp;window&nbsp;will&nbsp;then<br>
own&nbsp;the&nbsp;object,&nbsp;and&nbsp;will&nbsp;take&nbsp;care&nbsp;of&nbsp;its&nbsp;deletion.&nbsp;If&nbsp;an&nbsp;existing<br>
layout&nbsp;sizer&nbsp;object&nbsp;is&nbsp;already&nbsp;owned&nbsp;by&nbsp;the&nbsp;window,&nbsp;it&nbsp;will&nbsp;be&nbsp;deleted<br>
if&nbsp;the&nbsp;deleteOld&nbsp;parameter&nbsp;is&nbsp;true.&nbsp;Note&nbsp;that&nbsp;this&nbsp;function&nbsp;will&nbsp;also<br>
call&nbsp;SetAutoLayout&nbsp;implicitly&nbsp;with&nbsp;a&nbsp;True&nbsp;parameter&nbsp;if&nbsp;the&nbsp;sizer&nbsp;is<br>
non-None,&nbsp;and&nbsp;False&nbsp;otherwise.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetSizerAndFit"><strong>SetSizerAndFit</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetSizerAndFit">SetSizerAndFit</a>(self,&nbsp;Sizer&nbsp;sizer,&nbsp;bool&nbsp;deleteOld=True)<br>
&nbsp;<br>
The&nbsp;same&nbsp;as&nbsp;SetSizer,&nbsp;except&nbsp;it&nbsp;also&nbsp;sets&nbsp;the&nbsp;size&nbsp;hints&nbsp;for&nbsp;the<br>
window&nbsp;based&nbsp;on&nbsp;the&nbsp;sizer's&nbsp;minimum&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetThemeEnabled"><strong>SetThemeEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetThemeEnabled">SetThemeEnabled</a>(self,&nbsp;bool&nbsp;enableTheme)<br>
&nbsp;<br>
This&nbsp;function&nbsp;tells&nbsp;a&nbsp;window&nbsp;if&nbsp;it&nbsp;should&nbsp;use&nbsp;the&nbsp;system's&nbsp;"theme"<br>
&nbsp;code&nbsp;to&nbsp;draw&nbsp;the&nbsp;windows'&nbsp;background&nbsp;instead&nbsp;if&nbsp;its&nbsp;own&nbsp;background<br>
&nbsp;drawing&nbsp;code.&nbsp;This&nbsp;will&nbsp;only&nbsp;have&nbsp;an&nbsp;effect&nbsp;on&nbsp;platforms&nbsp;that&nbsp;support<br>
&nbsp;the&nbsp;notion&nbsp;of&nbsp;themes&nbsp;in&nbsp;user&nbsp;defined&nbsp;windows.&nbsp;One&nbsp;such&nbsp;platform&nbsp;is<br>
&nbsp;GTK+&nbsp;where&nbsp;windows&nbsp;can&nbsp;have&nbsp;(very&nbsp;colourful)&nbsp;backgrounds&nbsp;defined&nbsp;by&nbsp;a<br>
&nbsp;user's&nbsp;selected&nbsp;theme.<br>
&nbsp;<br>
Dialogs,&nbsp;notebook&nbsp;pages&nbsp;and&nbsp;the&nbsp;status&nbsp;bar&nbsp;have&nbsp;this&nbsp;flag&nbsp;set&nbsp;to&nbsp;true<br>
by&nbsp;default&nbsp;so&nbsp;that&nbsp;the&nbsp;default&nbsp;look&nbsp;and&nbsp;feel&nbsp;is&nbsp;simulated&nbsp;best.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetTitle"><strong>SetTitle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetTitle">SetTitle</a>(self,&nbsp;String&nbsp;title)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;title.&nbsp;Applicable&nbsp;only&nbsp;to&nbsp;frames&nbsp;and&nbsp;dialogs.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetTmpDefaultItem"><strong>SetTmpDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetTmpDefaultItem">SetTmpDefaultItem</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Set&nbsp;this&nbsp;child&nbsp;as&nbsp;temporary&nbsp;default</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetToolTip"><strong>SetToolTip</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetToolTip">SetToolTip</a>(self,&nbsp;ToolTip&nbsp;tip)<br>
&nbsp;<br>
Attach&nbsp;a&nbsp;tooltip&nbsp;to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetToolTipString"><strong>SetToolTipString</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetToolTipString">SetToolTipString</a>(self,&nbsp;String&nbsp;tip)<br>
&nbsp;<br>
Attach&nbsp;a&nbsp;tooltip&nbsp;to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetValidator"><strong>SetValidator</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetValidator">SetValidator</a>(self,&nbsp;Validator&nbsp;validator)<br>
&nbsp;<br>
Deletes&nbsp;the&nbsp;current&nbsp;validator&nbsp;(if&nbsp;any)&nbsp;and&nbsp;sets&nbsp;the&nbsp;window&nbsp;validator,<br>
having&nbsp;called&nbsp;wx.Validator.Clone&nbsp;to&nbsp;create&nbsp;a&nbsp;new&nbsp;validator&nbsp;of&nbsp;this<br>
type.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetVirtualSize"><strong>SetVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetVirtualSize">SetVirtualSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;a&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows&nbsp;this<br>
is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetVirtualSizeHints"><strong>SetVirtualSizeHints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetVirtualSizeHints">SetVirtualSizeHints</a>(self,&nbsp;int&nbsp;minW,&nbsp;int&nbsp;minH,&nbsp;int&nbsp;maxW=-1,&nbsp;int&nbsp;maxH=-1)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;virtual&nbsp;window&nbsp;sizes.&nbsp;If&nbsp;a<br>
pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the&nbsp;default&nbsp;values&nbsp;will&nbsp;be<br>
used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user&nbsp;will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size<br>
the&nbsp;virtual&nbsp;area&nbsp;of&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetVirtualSizeHintsSz"><strong>SetVirtualSizeHintsSz</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetVirtualSizeHintsSz">SetVirtualSizeHintsSz</a>(self,&nbsp;Size&nbsp;minSize,&nbsp;Size&nbsp;maxSize=DefaultSize)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;virtual&nbsp;window&nbsp;sizes.&nbsp;If&nbsp;a<br>
pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the&nbsp;default&nbsp;values&nbsp;will&nbsp;be<br>
used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user&nbsp;will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size<br>
the&nbsp;virtual&nbsp;area&nbsp;of&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetVirtualSizeWH"><strong>SetVirtualSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetVirtualSizeWH">SetVirtualSizeWH</a>(self,&nbsp;int&nbsp;w,&nbsp;int&nbsp;h)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;a&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows&nbsp;this<br>
is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetWindowStyle"><strong>SetWindowStyle</strong></a> = SetWindowStyleFlag(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetWindowStyleFlag">SetWindowStyleFlag</a>(self,&nbsp;long&nbsp;style)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;Please&nbsp;note&nbsp;that&nbsp;some&nbsp;styles&nbsp;cannot&nbsp;be<br>
changed&nbsp;after&nbsp;the&nbsp;window&nbsp;creation&nbsp;and&nbsp;that&nbsp;<a href="#NavigationToolbar2Wx-Refresh">Refresh</a>()&nbsp;might&nbsp;need&nbsp;to&nbsp;be<br>
called&nbsp;after&nbsp;changing&nbsp;the&nbsp;others&nbsp;for&nbsp;the&nbsp;change&nbsp;to&nbsp;take&nbsp;place<br>
immediately.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetWindowStyleFlag"><strong>SetWindowStyleFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetWindowStyleFlag">SetWindowStyleFlag</a>(self,&nbsp;long&nbsp;style)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;Please&nbsp;note&nbsp;that&nbsp;some&nbsp;styles&nbsp;cannot&nbsp;be<br>
changed&nbsp;after&nbsp;the&nbsp;window&nbsp;creation&nbsp;and&nbsp;that&nbsp;<a href="#NavigationToolbar2Wx-Refresh">Refresh</a>()&nbsp;might&nbsp;need&nbsp;to&nbsp;be<br>
called&nbsp;after&nbsp;changing&nbsp;the&nbsp;others&nbsp;for&nbsp;the&nbsp;change&nbsp;to&nbsp;take&nbsp;place<br>
immediately.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetWindowVariant"><strong>SetWindowVariant</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetWindowVariant">SetWindowVariant</a>(self,&nbsp;int&nbsp;variant)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;variant&nbsp;of&nbsp;the&nbsp;window/font&nbsp;size&nbsp;to&nbsp;use&nbsp;for&nbsp;this&nbsp;window,&nbsp;if<br>
the&nbsp;platform&nbsp;supports&nbsp;variants,&nbsp;for&nbsp;example,&nbsp;wxMac.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-ShouldInheritColours"><strong>ShouldInheritColours</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-ShouldInheritColours">ShouldInheritColours</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Return&nbsp;true&nbsp;from&nbsp;here&nbsp;to&nbsp;allow&nbsp;the&nbsp;colours&nbsp;of&nbsp;this&nbsp;window&nbsp;to&nbsp;be<br>
changed&nbsp;by&nbsp;InheritAttributes,&nbsp;returning&nbsp;false&nbsp;forbids&nbsp;inheriting&nbsp;them<br>
from&nbsp;the&nbsp;parent&nbsp;window.<br>
&nbsp;<br>
The&nbsp;base&nbsp;class&nbsp;version&nbsp;returns&nbsp;false,&nbsp;but&nbsp;this&nbsp;method&nbsp;is&nbsp;overridden&nbsp;in<br>
wxControl&nbsp;where&nbsp;it&nbsp;returns&nbsp;true.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Show"><strong>Show</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Show">Show</a>(self,&nbsp;bool&nbsp;show=True)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Shows&nbsp;or&nbsp;hides&nbsp;the&nbsp;window.&nbsp;You&nbsp;may&nbsp;need&nbsp;to&nbsp;call&nbsp;Raise&nbsp;for&nbsp;a&nbsp;top&nbsp;level<br>
window&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;bring&nbsp;it&nbsp;to&nbsp;top,&nbsp;although&nbsp;this&nbsp;is&nbsp;not&nbsp;needed&nbsp;if<br>
Show&nbsp;is&nbsp;called&nbsp;immediately&nbsp;after&nbsp;the&nbsp;frame&nbsp;creation.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if<br>
the&nbsp;window&nbsp;has&nbsp;been&nbsp;shown&nbsp;or&nbsp;hidden&nbsp;or&nbsp;False&nbsp;if&nbsp;nothing&nbsp;was&nbsp;done<br>
because&nbsp;it&nbsp;already&nbsp;was&nbsp;in&nbsp;the&nbsp;requested&nbsp;state.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Thaw"><strong>Thaw</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Thaw">Thaw</a>(self)<br>
&nbsp;<br>
Reenables&nbsp;window&nbsp;updating&nbsp;after&nbsp;a&nbsp;previous&nbsp;call&nbsp;to&nbsp;Freeze.&nbsp;&nbsp;Calls&nbsp;to<br>
Freeze/Thaw&nbsp;may&nbsp;be&nbsp;nested,&nbsp;so&nbsp;Thaw&nbsp;must&nbsp;be&nbsp;called&nbsp;the&nbsp;same&nbsp;number&nbsp;of<br>
times&nbsp;that&nbsp;Freeze&nbsp;was&nbsp;before&nbsp;the&nbsp;window&nbsp;will&nbsp;be&nbsp;updated.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-TransferDataFromWindow"><strong>TransferDataFromWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-TransferDataFromWindow">TransferDataFromWindow</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Transfers&nbsp;values&nbsp;from&nbsp;child&nbsp;controls&nbsp;to&nbsp;data&nbsp;areas&nbsp;specified&nbsp;by&nbsp;their<br>
validators.&nbsp;Returns&nbsp;false&nbsp;if&nbsp;a&nbsp;transfer&nbsp;failed.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has<br>
wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra&nbsp;style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will<br>
also&nbsp;call&nbsp;<a href="#NavigationToolbar2Wx-TransferDataFromWindow">TransferDataFromWindow</a>()&nbsp;of&nbsp;all&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-TransferDataToWindow"><strong>TransferDataToWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-TransferDataToWindow">TransferDataToWindow</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Transfers&nbsp;values&nbsp;to&nbsp;child&nbsp;controls&nbsp;from&nbsp;data&nbsp;areas&nbsp;specified&nbsp;by&nbsp;their<br>
validators.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has&nbsp;wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra<br>
style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will&nbsp;also&nbsp;call&nbsp;<a href="#NavigationToolbar2Wx-TransferDataToWindow">TransferDataToWindow</a>()&nbsp;of<br>
all&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-UnregisterHotKey"><strong>UnregisterHotKey</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-UnregisterHotKey">UnregisterHotKey</a>(self,&nbsp;int&nbsp;hotkeyId)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Unregisters&nbsp;a&nbsp;system&nbsp;wide&nbsp;hotkey.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Update"><strong>Update</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Update">Update</a>(self)<br>
&nbsp;<br>
Calling&nbsp;this&nbsp;method&nbsp;immediately&nbsp;repaints&nbsp;the&nbsp;invalidated&nbsp;area&nbsp;of&nbsp;the<br>
window&nbsp;instead&nbsp;of&nbsp;waiting&nbsp;for&nbsp;the&nbsp;EVT_PAINT&nbsp;event&nbsp;to&nbsp;happen,&nbsp;(normally<br>
this&nbsp;would&nbsp;usually&nbsp;only&nbsp;happen&nbsp;when&nbsp;the&nbsp;flow&nbsp;of&nbsp;control&nbsp;returns&nbsp;to&nbsp;the<br>
event&nbsp;loop.)&nbsp;&nbsp;Notice&nbsp;that&nbsp;this&nbsp;function&nbsp;doesn't&nbsp;refresh&nbsp;the&nbsp;window&nbsp;and<br>
does&nbsp;nothing&nbsp;if&nbsp;the&nbsp;window&nbsp;has&nbsp;been&nbsp;already&nbsp;repainted.&nbsp;&nbsp;Use&nbsp;Refresh<br>
first&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;immediately&nbsp;redraw&nbsp;the&nbsp;window&nbsp;(or&nbsp;some&nbsp;portion&nbsp;of<br>
it)&nbsp;unconditionally.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-UpdateWindowUI"><strong>UpdateWindowUI</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-UpdateWindowUI">UpdateWindowUI</a>(self,&nbsp;long&nbsp;flags=UPDATE_UI_NONE)<br>
&nbsp;<br>
This&nbsp;function&nbsp;sends&nbsp;EVT_UPDATE_UI&nbsp;events&nbsp;to&nbsp;the&nbsp;window.&nbsp;The&nbsp;particular<br>
implementation&nbsp;depends&nbsp;on&nbsp;the&nbsp;window;&nbsp;for&nbsp;example&nbsp;a&nbsp;wx.<a href="wx._controls.html#ToolBar">ToolBar</a>&nbsp;will<br>
send&nbsp;an&nbsp;update&nbsp;UI&nbsp;event&nbsp;for&nbsp;each&nbsp;toolbar&nbsp;button,&nbsp;and&nbsp;a&nbsp;wx.<a href="wx._windows.html#Frame">Frame</a>&nbsp;will<br>
send&nbsp;an&nbsp;update&nbsp;UI&nbsp;event&nbsp;for&nbsp;each&nbsp;menubar&nbsp;menu&nbsp;item.&nbsp;You&nbsp;can&nbsp;call&nbsp;this<br>
function&nbsp;from&nbsp;your&nbsp;application&nbsp;to&nbsp;ensure&nbsp;that&nbsp;your&nbsp;UI&nbsp;is&nbsp;up-to-date&nbsp;at<br>
a&nbsp;particular&nbsp;point&nbsp;in&nbsp;time&nbsp;(as&nbsp;far&nbsp;as&nbsp;your&nbsp;EVT_UPDATE_UI&nbsp;handlers&nbsp;are<br>
concerned).&nbsp;This&nbsp;may&nbsp;be&nbsp;necessary&nbsp;if&nbsp;you&nbsp;have&nbsp;called<br>
`wx.UpdateUIEvent.SetMode`&nbsp;or&nbsp;`wx.UpdateUIEvent.SetUpdateInterval`&nbsp;to<br>
limit&nbsp;the&nbsp;overhead&nbsp;that&nbsp;wxWindows&nbsp;incurs&nbsp;by&nbsp;sending&nbsp;update&nbsp;UI&nbsp;events<br>
in&nbsp;idle&nbsp;time.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-UseBgCol"><strong>UseBgCol</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-UseBgCol">UseBgCol</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Validate"><strong>Validate</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Validate">Validate</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Validates&nbsp;the&nbsp;current&nbsp;values&nbsp;of&nbsp;the&nbsp;child&nbsp;controls&nbsp;using&nbsp;their<br>
validators.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has&nbsp;wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra<br>
style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will&nbsp;also&nbsp;call&nbsp;<a href="#NavigationToolbar2Wx-Validate">Validate</a>()&nbsp;of&nbsp;all&nbsp;child<br>
windows.&nbsp;&nbsp;Returns&nbsp;false&nbsp;if&nbsp;any&nbsp;of&nbsp;the&nbsp;validations&nbsp;failed.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-WarpPointer"><strong>WarpPointer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-WarpPointer">WarpPointer</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;pointer&nbsp;to&nbsp;the&nbsp;given&nbsp;position&nbsp;on&nbsp;the&nbsp;window.<br>
&nbsp;<br>
NOTE:&nbsp;This&nbsp;function&nbsp;is&nbsp;not&nbsp;supported&nbsp;under&nbsp;Mac&nbsp;because&nbsp;Apple&nbsp;Human<br>
Interface&nbsp;Guidelines&nbsp;forbid&nbsp;moving&nbsp;the&nbsp;mouse&nbsp;cursor&nbsp;programmatically.</tt></dd></dl>

<hr>
Static methods inherited from <a href="wx._core.html#Window">wx._core.Window</a>:<br>
<dl><dt><a name="NavigationToolbar2Wx-FindFocus"><strong>FindFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-FindFocus">FindFocus</a>()&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;window&nbsp;or&nbsp;control&nbsp;that&nbsp;currently&nbsp;has&nbsp;the&nbsp;keyboard&nbsp;focus,<br>
or&nbsp;None.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetCapture"><strong>GetCapture</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetCapture">GetCapture</a>()&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;window&nbsp;which&nbsp;currently&nbsp;captures&nbsp;the&nbsp;mouse&nbsp;or&nbsp;None</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-NewControlId"><strong>NewControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-NewControlId">NewControlId</a>()&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Generate&nbsp;a&nbsp;control&nbsp;id&nbsp;for&nbsp;the&nbsp;controls&nbsp;which&nbsp;were&nbsp;not&nbsp;given&nbsp;one.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-NextControlId"><strong>NextControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-NextControlId">NextControlId</a>(int&nbsp;winid)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;id&nbsp;of&nbsp;the&nbsp;control&nbsp;following&nbsp;the&nbsp;one&nbsp;with&nbsp;the&nbsp;given<br>
autogenerated)&nbsp;id</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-PrevControlId"><strong>PrevControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-PrevControlId">PrevControlId</a>(int&nbsp;winid)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;id&nbsp;of&nbsp;the&nbsp;control&nbsp;preceding&nbsp;the&nbsp;one&nbsp;with&nbsp;the&nbsp;given<br>
autogenerated)&nbsp;id</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#EvtHandler">wx._core.EvtHandler</a>:<br>
<dl><dt><a name="NavigationToolbar2Wx-AddPendingEvent"><strong>AddPendingEvent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-AddPendingEvent">AddPendingEvent</a>(self,&nbsp;Event&nbsp;event)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Bind"><strong>Bind</strong></a>(self, event, handler, source<font color="#909090">=None</font>, id<font color="#909090">=-1</font>, id2<font color="#909090">=-1</font>)</dt><dd><tt>Bind&nbsp;an&nbsp;event&nbsp;to&nbsp;an&nbsp;event&nbsp;handler.<br>
&nbsp;<br>
:param&nbsp;event:&nbsp;One&nbsp;of&nbsp;the&nbsp;EVT_*&nbsp;objects&nbsp;that&nbsp;specifies&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type&nbsp;of&nbsp;event&nbsp;to&nbsp;bind,<br>
&nbsp;<br>
:param&nbsp;handler:&nbsp;A&nbsp;callable&nbsp;object&nbsp;to&nbsp;be&nbsp;invoked&nbsp;when&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event&nbsp;is&nbsp;delivered&nbsp;to&nbsp;self.&nbsp;&nbsp;Pass&nbsp;None&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;disconnect&nbsp;an&nbsp;event&nbsp;handler.<br>
&nbsp;<br>
:param&nbsp;source:&nbsp;Sometimes&nbsp;the&nbsp;event&nbsp;originates&nbsp;from&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;different&nbsp;window&nbsp;than&nbsp;self,&nbsp;but&nbsp;you&nbsp;still<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;want&nbsp;to&nbsp;catch&nbsp;it&nbsp;in&nbsp;self.&nbsp;&nbsp;(For&nbsp;example,&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button&nbsp;event&nbsp;delivered&nbsp;to&nbsp;a&nbsp;frame.)&nbsp;&nbsp;By<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;passing&nbsp;the&nbsp;source&nbsp;of&nbsp;the&nbsp;event,&nbsp;the&nbsp;event<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handling&nbsp;system&nbsp;is&nbsp;able&nbsp;to&nbsp;differentiate<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;between&nbsp;the&nbsp;same&nbsp;event&nbsp;type&nbsp;from&nbsp;different<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controls.<br>
&nbsp;<br>
:param&nbsp;id:&nbsp;Used&nbsp;to&nbsp;spcify&nbsp;the&nbsp;event&nbsp;source&nbsp;by&nbsp;ID&nbsp;instead<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;instance.<br>
&nbsp;<br>
:param&nbsp;id2:&nbsp;Used&nbsp;when&nbsp;it&nbsp;is&nbsp;desirable&nbsp;to&nbsp;bind&nbsp;a&nbsp;handler<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;a&nbsp;range&nbsp;of&nbsp;IDs,&nbsp;such&nbsp;as&nbsp;with&nbsp;EVT_MENU_RANGE.</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Connect"><strong>Connect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Connect">Connect</a>(self,&nbsp;int&nbsp;id,&nbsp;int&nbsp;lastId,&nbsp;int&nbsp;eventType,&nbsp;PyObject&nbsp;func)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Disconnect"><strong>Disconnect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-Disconnect">Disconnect</a>(self,&nbsp;int&nbsp;id,&nbsp;int&nbsp;lastId=-1,&nbsp;wxEventType&nbsp;eventType=wxEVT_NULL)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetEvtHandlerEnabled"><strong>GetEvtHandlerEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetEvtHandlerEnabled">GetEvtHandlerEnabled</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetNextHandler"><strong>GetNextHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetNextHandler">GetNextHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-GetPreviousHandler"><strong>GetPreviousHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetPreviousHandler">GetPreviousHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-ProcessEvent"><strong>ProcessEvent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-ProcessEvent">ProcessEvent</a>(self,&nbsp;Event&nbsp;event)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-ProcessPendingEvents"><strong>ProcessPendingEvents</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-ProcessPendingEvents">ProcessPendingEvents</a>(self)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetEvtHandlerEnabled"><strong>SetEvtHandlerEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetEvtHandlerEnabled">SetEvtHandlerEnabled</a>(self,&nbsp;bool&nbsp;enabled)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetNextHandler"><strong>SetNextHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetNextHandler">SetNextHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-SetPreviousHandler"><strong>SetPreviousHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-SetPreviousHandler">SetPreviousHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)</tt></dd></dl>

<dl><dt><a name="NavigationToolbar2Wx-Unbind"><strong>Unbind</strong></a>(self, event, source<font color="#909090">=None</font>, id<font color="#909090">=-1</font>, id2<font color="#909090">=-1</font>)</dt><dd><tt>Disconencts&nbsp;the&nbsp;event&nbsp;handler&nbsp;binding&nbsp;for&nbsp;event&nbsp;from&nbsp;self.<br>
Returns&nbsp;True&nbsp;if&nbsp;successful.</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#Object">wx._core.Object</a>:<br>
<dl><dt><a name="NavigationToolbar2Wx-GetClassName"><strong>GetClassName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbar2Wx-GetClassName">GetClassName</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;class&nbsp;name&nbsp;of&nbsp;the&nbsp;C++&nbsp;class&nbsp;using&nbsp;wxRTTI.</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="wx._core.html#Object">wx._core.Object</a>:<br>
<dl><dt><strong>__dict__</strong> = &lt;dictproxy object&gt;<dd><tt>dictionary&nbsp;for&nbsp;instance&nbsp;variables&nbsp;(if&nbsp;defined)</tt></dl>

<dl><dt><strong>__weakref__</strong> = &lt;attribute '__weakref__' of 'Object' objects&gt;<dd><tt>list&nbsp;of&nbsp;weak&nbsp;references&nbsp;to&nbsp;the&nbsp;object&nbsp;(if&nbsp;defined)</tt></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="NavigationToolbarWx">class <strong>NavigationToolbarWx</strong></a>(<a href="wx._controls.html#ToolBar">wx._controls.ToolBar</a>)</font></td></tr>
    
<tr><td bgcolor="#ffc8d8"><tt>&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.backends.backend_wx.html#NavigationToolbarWx">NavigationToolbarWx</a></dd>
<dd><a href="wx._controls.html#ToolBar">wx._controls.ToolBar</a></dd>
<dd><a href="wx._controls.html#ToolBarBase">wx._controls.ToolBarBase</a></dd>
<dd><a href="wx._core.html#Control">wx._core.Control</a></dd>
<dd><a href="wx._core.html#Window">wx._core.Window</a></dd>
<dd><a href="wx._core.html#EvtHandler">wx._core.EvtHandler</a></dd>
<dd><a href="wx._core.html#Object">wx._core.Object</a></dd>
<dd><a href="__builtin__.html#object">__builtin__.object</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="NavigationToolbarWx-__init__"><strong>__init__</strong></a>(self, canvas, can_kill<font color="#909090">=False</font>)</dt><dd><tt>figure&nbsp;is&nbsp;the&nbsp;Figure&nbsp;instance&nbsp;that&nbsp;the&nbsp;toolboar&nbsp;controls<br>
&nbsp;<br>
win,&nbsp;if&nbsp;not&nbsp;None,&nbsp;is&nbsp;the&nbsp;wxWindow&nbsp;the&nbsp;Figure&nbsp;is&nbsp;embedded&nbsp;in</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-get_last_control"><strong>get_last_control</strong></a>(self)</dt><dd><tt>Returns&nbsp;the&nbsp;identity&nbsp;of&nbsp;the&nbsp;last&nbsp;toolbar&nbsp;button&nbsp;pressed.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-panx"><strong>panx</strong></a>(self, direction)</dt></dl>

<dl><dt><a name="NavigationToolbarWx-pany"><strong>pany</strong></a>(self, direction)</dt></dl>

<dl><dt><a name="NavigationToolbarWx-set_active"><strong>set_active</strong></a>(self, ind)</dt><dd><tt>ind&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;index&nbsp;numbers&nbsp;for&nbsp;the&nbsp;axes&nbsp;which&nbsp;are&nbsp;to&nbsp;be&nbsp;made&nbsp;active</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-update"><strong>update</strong></a>(self)</dt><dd><tt>Update&nbsp;the&nbsp;toolbar&nbsp;menu&nbsp;-&nbsp;called&nbsp;when&nbsp;(e.g.)&nbsp;a&nbsp;new&nbsp;subplot&nbsp;or&nbsp;axes&nbsp;are&nbsp;added</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-zoomx"><strong>zoomx</strong></a>(self, in_out)</dt></dl>

<dl><dt><a name="NavigationToolbarWx-zoomy"><strong>zoomy</strong></a>(self, in_out)</dt></dl>

<hr>
Methods inherited from <a href="wx._controls.html#ToolBar">wx._controls.ToolBar</a>:<br>
<dl><dt><a name="NavigationToolbarWx-Create"><strong>Create</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Create">Create</a>(self,&nbsp;Window&nbsp;parent,&nbsp;int&nbsp;id=-1,&nbsp;Point&nbsp;pos=DefaultPosition,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Size&nbsp;size=DefaultSize,&nbsp;long&nbsp;style=wxNO_BORDER|wxTB_HORIZONTAL,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;name=wxPyToolBarNameStr)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-FindToolForPosition"><strong>FindToolForPosition</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-FindToolForPosition">FindToolForPosition</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-__repr__"><strong>__repr__</strong></a>(self)</dt></dl>

<hr>
Static methods inherited from <a href="wx._controls.html#ToolBar">wx._controls.ToolBar</a>:<br>
<dl><dt><a name="NavigationToolbarWx-GetClassDefaultAttributes"><strong>GetClassDefaultAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetClassDefaultAttributes">GetClassDefaultAttributes</a>(int&nbsp;variant=WINDOW_VARIANT_NORMAL)&nbsp;-&gt;&nbsp;VisualAttributes<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;attributes&nbsp;for&nbsp;this&nbsp;class.&nbsp;&nbsp;This&nbsp;is&nbsp;useful&nbsp;if&nbsp;you&nbsp;want<br>
to&nbsp;use&nbsp;the&nbsp;same&nbsp;font&nbsp;or&nbsp;colour&nbsp;in&nbsp;your&nbsp;own&nbsp;control&nbsp;as&nbsp;in&nbsp;a&nbsp;standard<br>
control&nbsp;--&nbsp;which&nbsp;is&nbsp;a&nbsp;much&nbsp;better&nbsp;idea&nbsp;than&nbsp;hard&nbsp;coding&nbsp;specific<br>
colours&nbsp;or&nbsp;fonts&nbsp;which&nbsp;might&nbsp;look&nbsp;completely&nbsp;out&nbsp;of&nbsp;place&nbsp;on&nbsp;the<br>
user's&nbsp;system,&nbsp;especially&nbsp;if&nbsp;it&nbsp;uses&nbsp;themes.<br>
&nbsp;<br>
The&nbsp;variant&nbsp;parameter&nbsp;is&nbsp;only&nbsp;relevant&nbsp;under&nbsp;Mac&nbsp;currently&nbsp;and&nbsp;is<br>
ignore&nbsp;under&nbsp;other&nbsp;platforms.&nbsp;Under&nbsp;Mac,&nbsp;it&nbsp;will&nbsp;change&nbsp;the&nbsp;size&nbsp;of<br>
the&nbsp;returned&nbsp;font.&nbsp;See&nbsp;`wx.Window.SetWindowVariant`&nbsp;for&nbsp;more&nbsp;about<br>
this.</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._controls.html#ToolBarBase">wx._controls.ToolBarBase</a>:<br>
<dl><dt><a name="NavigationToolbarWx-AddCheckLabelTool"><strong>AddCheckLabelTool</strong></a>(self, id, label, bitmap, bmpDisabled<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, shortHelp<font color="#909090">=''</font>, longHelp<font color="#909090">=''</font>, clientData<font color="#909090">=None</font>)</dt><dd><tt>Add&nbsp;a&nbsp;check&nbsp;tool,&nbsp;i.e.&nbsp;a&nbsp;tool&nbsp;which&nbsp;can&nbsp;be&nbsp;toggled</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AddCheckTool"><strong>AddCheckTool</strong></a>(self, id, bitmap, bmpDisabled<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, shortHelp<font color="#909090">=''</font>, longHelp<font color="#909090">=''</font>, clientData<font color="#909090">=None</font>)</dt><dd><tt>Add&nbsp;a&nbsp;check&nbsp;tool,&nbsp;i.e.&nbsp;a&nbsp;tool&nbsp;which&nbsp;can&nbsp;be&nbsp;toggled</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AddControl"><strong>AddControl</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-AddControl">AddControl</a>(self,&nbsp;Control&nbsp;control)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AddLabelTool"><strong>AddLabelTool</strong></a>(self, id, label, bitmap, bmpDisabled<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, kind<font color="#909090">=0</font>, shortHelp<font color="#909090">=''</font>, longHelp<font color="#909090">=''</font>, clientData<font color="#909090">=None</font>)</dt><dd><tt>The&nbsp;full&nbsp;<a href="#NavigationToolbarWx-AddTool">AddTool</a>()&nbsp;function.<br>
&nbsp;<br>
If&nbsp;bmpDisabled&nbsp;is&nbsp;wx.NullBitmap,&nbsp;a&nbsp;shadowed&nbsp;version&nbsp;of&nbsp;the&nbsp;normal&nbsp;bitmap<br>
is&nbsp;created&nbsp;and&nbsp;used&nbsp;as&nbsp;the&nbsp;disabled&nbsp;image.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AddRadioLabelTool"><strong>AddRadioLabelTool</strong></a>(self, id, label, bitmap, bmpDisabled<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, shortHelp<font color="#909090">=''</font>, longHelp<font color="#909090">=''</font>, clientData<font color="#909090">=None</font>)</dt><dd><tt>Add&nbsp;a&nbsp;radio&nbsp;tool,&nbsp;i.e.&nbsp;a&nbsp;tool&nbsp;which&nbsp;can&nbsp;be&nbsp;toggled&nbsp;and&nbsp;releases&nbsp;any<br>
other&nbsp;toggled&nbsp;radio&nbsp;tools&nbsp;in&nbsp;the&nbsp;same&nbsp;group&nbsp;when&nbsp;it&nbsp;happens</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AddRadioTool"><strong>AddRadioTool</strong></a>(self, id, bitmap, bmpDisabled<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, shortHelp<font color="#909090">=''</font>, longHelp<font color="#909090">=''</font>, clientData<font color="#909090">=None</font>)</dt><dd><tt>Add&nbsp;a&nbsp;radio&nbsp;tool,&nbsp;i.e.&nbsp;a&nbsp;tool&nbsp;which&nbsp;can&nbsp;be&nbsp;toggled&nbsp;and&nbsp;releases&nbsp;any<br>
other&nbsp;toggled&nbsp;radio&nbsp;tools&nbsp;in&nbsp;the&nbsp;same&nbsp;group&nbsp;when&nbsp;it&nbsp;happens</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AddSeparator"><strong>AddSeparator</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-AddSeparator">AddSeparator</a>(self)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AddSimpleTool"><strong>AddSimpleTool</strong></a>(self, id, bitmap, shortHelpString<font color="#909090">=''</font>, longHelpString<font color="#909090">=''</font>, isToggle<font color="#909090">=0</font>)</dt><dd><tt>Old&nbsp;style&nbsp;method&nbsp;to&nbsp;add&nbsp;a&nbsp;tool&nbsp;to&nbsp;the&nbsp;toolbar.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AddTool"><strong>AddTool</strong></a>(self, id, bitmap, pushedBitmap<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, isToggle<font color="#909090">=0</font>, clientData<font color="#909090">=None</font>, shortHelpString<font color="#909090">=''</font>, longHelpString<font color="#909090">=''</font>)</dt><dd><tt>Old&nbsp;style&nbsp;method&nbsp;to&nbsp;add&nbsp;a&nbsp;tool&nbsp;to&nbsp;the&nbsp;toolbar.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AddToolItem"><strong>AddToolItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-AddToolItem">AddToolItem</a>(self,&nbsp;ToolBarToolBase&nbsp;tool)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ClearTools"><strong>ClearTools</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-ClearTools">ClearTools</a>(self)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-DeleteTool"><strong>DeleteTool</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-DeleteTool">DeleteTool</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-DeleteToolByPos"><strong>DeleteToolByPos</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-DeleteToolByPos">DeleteToolByPos</a>(self,&nbsp;size_t&nbsp;pos)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-DoAddTool"><strong>DoAddTool</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-DoAddTool">DoAddTool</a>(self,&nbsp;int&nbsp;id,&nbsp;String&nbsp;label,&nbsp;Bitmap&nbsp;bitmap,&nbsp;Bitmap&nbsp;bmpDisabled=wxNullBitmap,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;kind=ITEM_NORMAL,&nbsp;String&nbsp;shortHelp=EmptyString,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;longHelp=EmptyString,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;PyObject&nbsp;clientData=None)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-DoInsertTool"><strong>DoInsertTool</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-DoInsertTool">DoInsertTool</a>(self,&nbsp;size_t&nbsp;pos,&nbsp;int&nbsp;id,&nbsp;String&nbsp;label,&nbsp;Bitmap&nbsp;bitmap,&nbsp;Bitmap&nbsp;bmpDisabled=wxNullBitmap,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;kind=ITEM_NORMAL,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;shortHelp=EmptyString,&nbsp;String&nbsp;longHelp=EmptyString,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;PyObject&nbsp;clientData=None)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-EnableTool"><strong>EnableTool</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-EnableTool">EnableTool</a>(self,&nbsp;int&nbsp;id,&nbsp;bool&nbsp;enable)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-FindById"><strong>FindById</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-FindById">FindById</a>(self,&nbsp;int&nbsp;toolid)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-FindControl"><strong>FindControl</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-FindControl">FindControl</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;Control</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetMargins"><strong>GetMargins</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetMargins">GetMargins</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetMaxCols"><strong>GetMaxCols</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetMaxCols">GetMaxCols</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetMaxRows"><strong>GetMaxRows</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetMaxRows">GetMaxRows</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolBitmapSize"><strong>GetToolBitmapSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetToolBitmapSize">GetToolBitmapSize</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolClientData"><strong>GetToolClientData</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetToolClientData">GetToolClientData</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;PyObject</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolEnabled"><strong>GetToolEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetToolEnabled">GetToolEnabled</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolLongHelp"><strong>GetToolLongHelp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetToolLongHelp">GetToolLongHelp</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;String</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolMargins"><strong>GetToolMargins</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetToolMargins">GetToolMargins</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolPacking"><strong>GetToolPacking</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetToolPacking">GetToolPacking</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolPos"><strong>GetToolPos</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetToolPos">GetToolPos</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolSeparation"><strong>GetToolSeparation</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetToolSeparation">GetToolSeparation</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolShortHelp"><strong>GetToolShortHelp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetToolShortHelp">GetToolShortHelp</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;String</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolSize"><strong>GetToolSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetToolSize">GetToolSize</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolState"><strong>GetToolState</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetToolState">GetToolState</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolsCount"><strong>GetToolsCount</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetToolsCount">GetToolsCount</a>(self)&nbsp;-&gt;&nbsp;size_t</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-InsertControl"><strong>InsertControl</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-InsertControl">InsertControl</a>(self,&nbsp;size_t&nbsp;pos,&nbsp;Control&nbsp;control)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-InsertLabelTool"><strong>InsertLabelTool</strong></a>(self, pos, id, label, bitmap, bmpDisabled<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, kind<font color="#909090">=0</font>, shortHelp<font color="#909090">=''</font>, longHelp<font color="#909090">=''</font>, clientData<font color="#909090">=None</font>)</dt><dd><tt>Insert&nbsp;the&nbsp;new&nbsp;tool&nbsp;at&nbsp;the&nbsp;given&nbsp;position,&nbsp;if&nbsp;pos&nbsp;==&nbsp;<a href="#NavigationToolbarWx-GetToolsCount">GetToolsCount</a>(),&nbsp;it<br>
is&nbsp;equivalent&nbsp;to&nbsp;<a href="#NavigationToolbarWx-AddTool">AddTool</a>()</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-InsertSeparator"><strong>InsertSeparator</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-InsertSeparator">InsertSeparator</a>(self,&nbsp;size_t&nbsp;pos)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-InsertSimpleTool"><strong>InsertSimpleTool</strong></a>(self, pos, id, bitmap, shortHelpString<font color="#909090">=''</font>, longHelpString<font color="#909090">=''</font>, isToggle<font color="#909090">=0</font>)</dt><dd><tt>Old&nbsp;style&nbsp;method&nbsp;to&nbsp;insert&nbsp;a&nbsp;tool&nbsp;in&nbsp;the&nbsp;toolbar.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-InsertTool"><strong>InsertTool</strong></a>(self, pos, id, bitmap, pushedBitmap<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, isToggle<font color="#909090">=0</font>, clientData<font color="#909090">=None</font>, shortHelpString<font color="#909090">=''</font>, longHelpString<font color="#909090">=''</font>)</dt><dd><tt>Old&nbsp;style&nbsp;method&nbsp;to&nbsp;insert&nbsp;a&nbsp;tool&nbsp;in&nbsp;the&nbsp;toolbar.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-InsertToolItem"><strong>InsertToolItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-InsertToolItem">InsertToolItem</a>(self,&nbsp;size_t&nbsp;pos,&nbsp;ToolBarToolBase&nbsp;tool)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-IsVertical"><strong>IsVertical</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-IsVertical">IsVertical</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Realize"><strong>Realize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Realize">Realize</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-RemoveTool"><strong>RemoveTool</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-RemoveTool">RemoveTool</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetMargins"><strong>SetMargins</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetMargins">SetMargins</a>(self,&nbsp;Size&nbsp;size)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetMarginsXY"><strong>SetMarginsXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetMarginsXY">SetMarginsXY</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetMaxRowsCols"><strong>SetMaxRowsCols</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetMaxRowsCols">SetMaxRowsCols</a>(self,&nbsp;int&nbsp;rows,&nbsp;int&nbsp;cols)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetRows"><strong>SetRows</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetRows">SetRows</a>(self,&nbsp;int&nbsp;nRows)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetToggle"><strong>SetToggle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetToggle">SetToggle</a>(self,&nbsp;int&nbsp;id,&nbsp;bool&nbsp;toggle)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetToolBitmapSize"><strong>SetToolBitmapSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetToolBitmapSize">SetToolBitmapSize</a>(self,&nbsp;Size&nbsp;size)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetToolClientData"><strong>SetToolClientData</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetToolClientData">SetToolClientData</a>(self,&nbsp;int&nbsp;id,&nbsp;PyObject&nbsp;clientData)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetToolLongHelp"><strong>SetToolLongHelp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetToolLongHelp">SetToolLongHelp</a>(self,&nbsp;int&nbsp;id,&nbsp;String&nbsp;helpString)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetToolPacking"><strong>SetToolPacking</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetToolPacking">SetToolPacking</a>(self,&nbsp;int&nbsp;packing)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetToolSeparation"><strong>SetToolSeparation</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetToolSeparation">SetToolSeparation</a>(self,&nbsp;int&nbsp;separation)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetToolShortHelp"><strong>SetToolShortHelp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetToolShortHelp">SetToolShortHelp</a>(self,&nbsp;int&nbsp;id,&nbsp;String&nbsp;helpString)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ToggleTool"><strong>ToggleTool</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-ToggleTool">ToggleTool</a>(self,&nbsp;int&nbsp;id,&nbsp;bool&nbsp;toggle)</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#Control">wx._core.Control</a>:<br>
<dl><dt><a name="NavigationToolbarWx-Command"><strong>Command</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Command">Command</a>(self,&nbsp;CommandEvent&nbsp;event)<br>
&nbsp;<br>
Simulates&nbsp;the&nbsp;effect&nbsp;of&nbsp;the&nbsp;user&nbsp;issuing&nbsp;a&nbsp;command&nbsp;to&nbsp;the&nbsp;item.<br>
&nbsp;<br>
:see:&nbsp;`wx.CommandEvent`</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetLabel"><strong>GetLabel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetLabel">GetLabel</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Return&nbsp;a&nbsp;control's&nbsp;text.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetLabel"><strong>SetLabel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetLabel">SetLabel</a>(self,&nbsp;String&nbsp;label)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;item's&nbsp;text.</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#Window">wx._core.Window</a>:<br>
<dl><dt><a name="NavigationToolbarWx-AcceptsFocus"><strong>AcceptsFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-AcceptsFocus">AcceptsFocus</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Can&nbsp;this&nbsp;window&nbsp;have&nbsp;focus?</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AcceptsFocusFromKeyboard"><strong>AcceptsFocusFromKeyboard</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-AcceptsFocusFromKeyboard">AcceptsFocusFromKeyboard</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Can&nbsp;this&nbsp;window&nbsp;be&nbsp;given&nbsp;focus&nbsp;by&nbsp;keyboard&nbsp;navigation?&nbsp;if&nbsp;not,&nbsp;the<br>
only&nbsp;way&nbsp;to&nbsp;give&nbsp;it&nbsp;focus&nbsp;(provided&nbsp;it&nbsp;accepts&nbsp;it&nbsp;at&nbsp;all)&nbsp;is&nbsp;to&nbsp;click<br>
it.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AddChild"><strong>AddChild</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-AddChild">AddChild</a>(self,&nbsp;Window&nbsp;child)<br>
&nbsp;<br>
Adds&nbsp;a&nbsp;child&nbsp;window.&nbsp;This&nbsp;is&nbsp;called&nbsp;automatically&nbsp;by&nbsp;window&nbsp;creation<br>
functions&nbsp;so&nbsp;should&nbsp;not&nbsp;be&nbsp;required&nbsp;by&nbsp;the&nbsp;application&nbsp;programmer.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AssociateHandle"><strong>AssociateHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-AssociateHandle">AssociateHandle</a>(self,&nbsp;long&nbsp;handle)<br>
&nbsp;<br>
Associate&nbsp;the&nbsp;window&nbsp;with&nbsp;a&nbsp;new&nbsp;native&nbsp;handle</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-CacheBestSize"><strong>CacheBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-CacheBestSize">CacheBestSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Cache&nbsp;the&nbsp;best&nbsp;size&nbsp;so&nbsp;it&nbsp;doesn't&nbsp;need&nbsp;to&nbsp;be&nbsp;calculated&nbsp;again,&nbsp;(at&nbsp;least&nbsp;until<br>
some&nbsp;properties&nbsp;of&nbsp;the&nbsp;window&nbsp;change.)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-CaptureMouse"><strong>CaptureMouse</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-CaptureMouse">CaptureMouse</a>(self)<br>
&nbsp;<br>
Directs&nbsp;all&nbsp;mouse&nbsp;input&nbsp;to&nbsp;this&nbsp;window.&nbsp;Call&nbsp;wx.Window.ReleaseMouse&nbsp;to<br>
release&nbsp;the&nbsp;capture.<br>
&nbsp;<br>
Note&nbsp;that&nbsp;wxWindows&nbsp;maintains&nbsp;the&nbsp;stack&nbsp;of&nbsp;windows&nbsp;having&nbsp;captured&nbsp;the<br>
mouse&nbsp;and&nbsp;when&nbsp;the&nbsp;mouse&nbsp;is&nbsp;released&nbsp;the&nbsp;capture&nbsp;returns&nbsp;to&nbsp;the&nbsp;window<br>
which&nbsp;had&nbsp;had&nbsp;captured&nbsp;it&nbsp;previously&nbsp;and&nbsp;it&nbsp;is&nbsp;only&nbsp;really&nbsp;released&nbsp;if<br>
there&nbsp;were&nbsp;no&nbsp;previous&nbsp;window.&nbsp;In&nbsp;particular,&nbsp;this&nbsp;means&nbsp;that&nbsp;you&nbsp;must<br>
release&nbsp;the&nbsp;mouse&nbsp;as&nbsp;many&nbsp;times&nbsp;as&nbsp;you&nbsp;capture&nbsp;it.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Center"><strong>Center</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Center">Center</a>(self,&nbsp;int&nbsp;direction=BOTH)<br>
&nbsp;<br>
Centers&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;parameter&nbsp;specifies&nbsp;the&nbsp;direction&nbsp;for<br>
cetering,&nbsp;and&nbsp;may&nbsp;be&nbsp;wx.HORIZONTAL,&nbsp;wx.VERTICAL&nbsp;or&nbsp;wx.BOTH.&nbsp;It&nbsp;may<br>
also&nbsp;include&nbsp;wx.CENTER_ON_SCREEN&nbsp;flag&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;center&nbsp;the&nbsp;window<br>
on&nbsp;the&nbsp;entire&nbsp;screen&nbsp;and&nbsp;not&nbsp;on&nbsp;its&nbsp;parent&nbsp;window.&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a<br>
top-level&nbsp;window&nbsp;and&nbsp;has&nbsp;no&nbsp;parent&nbsp;then&nbsp;it&nbsp;will&nbsp;always&nbsp;be&nbsp;centered<br>
relative&nbsp;to&nbsp;the&nbsp;screen.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-CenterOnParent"><strong>CenterOnParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-CenterOnParent">CenterOnParent</a>(self,&nbsp;int&nbsp;dir=BOTH)<br>
&nbsp;<br>
Center&nbsp;with&nbsp;respect&nbsp;to&nbsp;the&nbsp;the&nbsp;parent&nbsp;window</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-CenterOnScreen"><strong>CenterOnScreen</strong></a> = deprecatedWrapper(*args, **kwargs)</dt><dd><tt>&lt;function&nbsp;CenterOnScreen&nbsp;at&nbsp;0x2b90d8dbcf50&gt;&nbsp;is&nbsp;deprecated</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Centre"><strong>Centre</strong></a> = Center(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Center">Center</a>(self,&nbsp;int&nbsp;direction=BOTH)<br>
&nbsp;<br>
Centers&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;parameter&nbsp;specifies&nbsp;the&nbsp;direction&nbsp;for<br>
cetering,&nbsp;and&nbsp;may&nbsp;be&nbsp;wx.HORIZONTAL,&nbsp;wx.VERTICAL&nbsp;or&nbsp;wx.BOTH.&nbsp;It&nbsp;may<br>
also&nbsp;include&nbsp;wx.CENTER_ON_SCREEN&nbsp;flag&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;center&nbsp;the&nbsp;window<br>
on&nbsp;the&nbsp;entire&nbsp;screen&nbsp;and&nbsp;not&nbsp;on&nbsp;its&nbsp;parent&nbsp;window.&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a<br>
top-level&nbsp;window&nbsp;and&nbsp;has&nbsp;no&nbsp;parent&nbsp;then&nbsp;it&nbsp;will&nbsp;always&nbsp;be&nbsp;centered<br>
relative&nbsp;to&nbsp;the&nbsp;screen.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-CentreOnParent"><strong>CentreOnParent</strong></a> = CenterOnParent(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-CenterOnParent">CenterOnParent</a>(self,&nbsp;int&nbsp;dir=BOTH)<br>
&nbsp;<br>
Center&nbsp;with&nbsp;respect&nbsp;to&nbsp;the&nbsp;the&nbsp;parent&nbsp;window</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-CentreOnScreen"><strong>CentreOnScreen</strong></a> = deprecatedWrapper(*args, **kwargs)</dt><dd><tt>&lt;function&nbsp;CenterOnScreen&nbsp;at&nbsp;0x2b90d8dbcf50&gt;&nbsp;is&nbsp;deprecated</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ClearBackground"><strong>ClearBackground</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-ClearBackground">ClearBackground</a>(self)<br>
&nbsp;<br>
Clears&nbsp;the&nbsp;window&nbsp;by&nbsp;filling&nbsp;it&nbsp;with&nbsp;the&nbsp;current&nbsp;background<br>
colour.&nbsp;Does&nbsp;not&nbsp;cause&nbsp;an&nbsp;erase&nbsp;background&nbsp;event&nbsp;to&nbsp;be&nbsp;generated.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ClientToScreen"><strong>ClientToScreen</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-ClientToScreen">ClientToScreen</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;to&nbsp;screen&nbsp;coordinates&nbsp;from&nbsp;coordinates&nbsp;relative&nbsp;to&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ClientToScreenXY"><strong>ClientToScreenXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-ClientToScreenXY">ClientToScreenXY</a>(int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Converts&nbsp;to&nbsp;screen&nbsp;coordinates&nbsp;from&nbsp;coordinates&nbsp;relative&nbsp;to&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Close"><strong>Close</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Close">Close</a>(self,&nbsp;bool&nbsp;force=False)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;function&nbsp;simply&nbsp;generates&nbsp;a&nbsp;EVT_CLOSE&nbsp;event&nbsp;whose&nbsp;handler&nbsp;usually<br>
tries&nbsp;to&nbsp;close&nbsp;the&nbsp;window.&nbsp;It&nbsp;doesn't&nbsp;close&nbsp;the&nbsp;window&nbsp;itself,<br>
however.&nbsp;&nbsp;If&nbsp;force&nbsp;is&nbsp;False&nbsp;(the&nbsp;default)&nbsp;then&nbsp;the&nbsp;window's&nbsp;close<br>
handler&nbsp;will&nbsp;be&nbsp;allowed&nbsp;to&nbsp;veto&nbsp;the&nbsp;destruction&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ConvertDialogPointToPixels"><strong>ConvertDialogPointToPixels</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-ConvertDialogPointToPixels">ConvertDialogPointToPixels</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ConvertDialogSizeToPixels"><strong>ConvertDialogSizeToPixels</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-ConvertDialogSizeToPixels">ConvertDialogSizeToPixels</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ConvertPixelPointToDialog"><strong>ConvertPixelPointToDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-ConvertPixelPointToDialog">ConvertPixelPointToDialog</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ConvertPixelSizeToDialog"><strong>ConvertPixelSizeToDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-ConvertPixelSizeToDialog">ConvertPixelSizeToDialog</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-DLG_PNT"><strong>DLG_PNT</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-DLG_PNT">DLG_PNT</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-DLG_SZE"><strong>DLG_SZE</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-DLG_SZE">DLG_SZE</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Destroy"><strong>Destroy</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Destroy">Destroy</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Destroys&nbsp;the&nbsp;window&nbsp;safely.&nbsp;&nbsp;Frames&nbsp;and&nbsp;dialogs&nbsp;are&nbsp;not&nbsp;destroyed<br>
immediately&nbsp;when&nbsp;this&nbsp;function&nbsp;is&nbsp;called&nbsp;--&nbsp;they&nbsp;are&nbsp;added&nbsp;to&nbsp;a&nbsp;list<br>
of&nbsp;windows&nbsp;to&nbsp;be&nbsp;deleted&nbsp;on&nbsp;idle&nbsp;time,&nbsp;when&nbsp;all&nbsp;the&nbsp;window's&nbsp;events<br>
have&nbsp;been&nbsp;processed.&nbsp;This&nbsp;prevents&nbsp;problems&nbsp;with&nbsp;events&nbsp;being&nbsp;sent&nbsp;to<br>
non-existent&nbsp;windows.<br>
&nbsp;<br>
Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;window&nbsp;has&nbsp;either&nbsp;been&nbsp;successfully&nbsp;deleted,&nbsp;or&nbsp;it<br>
has&nbsp;been&nbsp;added&nbsp;to&nbsp;the&nbsp;list&nbsp;of&nbsp;windows&nbsp;pending&nbsp;real&nbsp;deletion.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-DestroyChildren"><strong>DestroyChildren</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-DestroyChildren">DestroyChildren</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Destroys&nbsp;all&nbsp;children&nbsp;of&nbsp;a&nbsp;window.&nbsp;Called&nbsp;automatically&nbsp;by&nbsp;the<br>
destructor.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Disable"><strong>Disable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Disable">Disable</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Disables&nbsp;the&nbsp;window,&nbsp;same&nbsp;as&nbsp;<a href="#NavigationToolbarWx-Enable">Enable</a>(false).</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-DissociateHandle"><strong>DissociateHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-DissociateHandle">DissociateHandle</a>(self)<br>
&nbsp;<br>
Dissociate&nbsp;the&nbsp;current&nbsp;native&nbsp;handle&nbsp;from&nbsp;the&nbsp;window</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-DragAcceptFiles"><strong>DragAcceptFiles</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-DragAcceptFiles">DragAcceptFiles</a>(self,&nbsp;bool&nbsp;accept)<br>
&nbsp;<br>
Enables&nbsp;or&nbsp;disables&nbsp;eligibility&nbsp;for&nbsp;drop&nbsp;file&nbsp;events,&nbsp;EVT_DROP_FILES.<br>
Only&nbsp;functional&nbsp;on&nbsp;Windows.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Enable"><strong>Enable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Enable">Enable</a>(self,&nbsp;bool&nbsp;enable=True)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Enable&nbsp;or&nbsp;disable&nbsp;the&nbsp;window&nbsp;for&nbsp;user&nbsp;input.&nbsp;Note&nbsp;that&nbsp;when&nbsp;a&nbsp;parent<br>
window&nbsp;is&nbsp;disabled,&nbsp;all&nbsp;of&nbsp;its&nbsp;children&nbsp;are&nbsp;disabled&nbsp;as&nbsp;well&nbsp;and&nbsp;they<br>
are&nbsp;reenabled&nbsp;again&nbsp;when&nbsp;the&nbsp;parent&nbsp;is.&nbsp;&nbsp;Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window<br>
has&nbsp;been&nbsp;enabled&nbsp;or&nbsp;disabled,&nbsp;false&nbsp;if&nbsp;nothing&nbsp;was&nbsp;done,&nbsp;i.e.&nbsp;if&nbsp;the<br>
window&nbsp;had&nbsp;already&nbsp;been&nbsp;in&nbsp;the&nbsp;specified&nbsp;state.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-FindWindowById"><strong>FindWindowById</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-FindWindowById">FindWindowById</a>(self,&nbsp;long&nbsp;winid)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Find&nbsp;a&nbsp;chld&nbsp;of&nbsp;this&nbsp;window&nbsp;by&nbsp;window&nbsp;ID</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-FindWindowByName"><strong>FindWindowByName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-FindWindowByName">FindWindowByName</a>(self,&nbsp;String&nbsp;name)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Find&nbsp;a&nbsp;child&nbsp;of&nbsp;this&nbsp;window&nbsp;by&nbsp;name</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Fit"><strong>Fit</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Fit">Fit</a>(self)<br>
&nbsp;<br>
Sizes&nbsp;the&nbsp;window&nbsp;so&nbsp;that&nbsp;it&nbsp;fits&nbsp;around&nbsp;its&nbsp;subwindows.&nbsp;This&nbsp;function<br>
won't&nbsp;do&nbsp;anything&nbsp;if&nbsp;there&nbsp;are&nbsp;no&nbsp;subwindows&nbsp;and&nbsp;will&nbsp;only&nbsp;really&nbsp;work<br>
correctly&nbsp;if&nbsp;sizers&nbsp;are&nbsp;used&nbsp;for&nbsp;the&nbsp;subwindows&nbsp;layout.&nbsp;Also,&nbsp;if&nbsp;the<br>
window&nbsp;has&nbsp;exactly&nbsp;one&nbsp;subwindow&nbsp;it&nbsp;is&nbsp;better&nbsp;(faster&nbsp;and&nbsp;the&nbsp;result<br>
is&nbsp;more&nbsp;precise&nbsp;as&nbsp;Fit&nbsp;adds&nbsp;some&nbsp;margin&nbsp;to&nbsp;account&nbsp;for&nbsp;fuzziness&nbsp;of<br>
its&nbsp;calculations)&nbsp;to&nbsp;call&nbsp;window.<a href="#NavigationToolbarWx-SetClientSize">SetClientSize</a>(child.<a href="#NavigationToolbarWx-GetSize">GetSize</a>())<br>
instead&nbsp;of&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-FitInside"><strong>FitInside</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-FitInside">FitInside</a>(self)<br>
&nbsp;<br>
Similar&nbsp;to&nbsp;Fit,&nbsp;but&nbsp;sizes&nbsp;the&nbsp;interior&nbsp;(virtual)&nbsp;size&nbsp;of&nbsp;a<br>
window.&nbsp;Mainly&nbsp;useful&nbsp;with&nbsp;scrolled&nbsp;windows&nbsp;to&nbsp;reset&nbsp;scrollbars&nbsp;after<br>
sizing&nbsp;changes&nbsp;that&nbsp;do&nbsp;not&nbsp;trigger&nbsp;a&nbsp;size&nbsp;event,&nbsp;and/or&nbsp;scrolled<br>
windows&nbsp;without&nbsp;an&nbsp;interior&nbsp;sizer.&nbsp;This&nbsp;function&nbsp;similarly&nbsp;won't&nbsp;do<br>
anything&nbsp;if&nbsp;there&nbsp;are&nbsp;no&nbsp;subwindows.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Freeze"><strong>Freeze</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Freeze">Freeze</a>(self)<br>
&nbsp;<br>
Freezes&nbsp;the&nbsp;window&nbsp;or,&nbsp;in&nbsp;other&nbsp;words,&nbsp;prevents&nbsp;any&nbsp;updates&nbsp;from<br>
taking&nbsp;place&nbsp;on&nbsp;screen,&nbsp;the&nbsp;window&nbsp;is&nbsp;not&nbsp;redrawn&nbsp;at&nbsp;all.&nbsp;Thaw&nbsp;must&nbsp;be<br>
called&nbsp;to&nbsp;reenable&nbsp;window&nbsp;redrawing.&nbsp;&nbsp;Calls&nbsp;to&nbsp;Freeze/Thaw&nbsp;may&nbsp;be<br>
nested,&nbsp;with&nbsp;the&nbsp;actual&nbsp;Thaw&nbsp;being&nbsp;delayed&nbsp;until&nbsp;all&nbsp;the&nbsp;nesting&nbsp;has<br>
been&nbsp;undone.<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;useful&nbsp;for&nbsp;visual&nbsp;appearance&nbsp;optimization&nbsp;(for&nbsp;example,<br>
it&nbsp;is&nbsp;a&nbsp;good&nbsp;idea&nbsp;to&nbsp;use&nbsp;it&nbsp;before&nbsp;inserting&nbsp;large&nbsp;amount&nbsp;of&nbsp;text&nbsp;into<br>
a&nbsp;wxTextCtrl&nbsp;under&nbsp;wxGTK)&nbsp;but&nbsp;is&nbsp;not&nbsp;implemented&nbsp;on&nbsp;all&nbsp;platforms&nbsp;nor<br>
for&nbsp;all&nbsp;controls&nbsp;so&nbsp;it&nbsp;is&nbsp;mostly&nbsp;just&nbsp;a&nbsp;hint&nbsp;to&nbsp;wxWindows&nbsp;and&nbsp;not&nbsp;a<br>
mandatory&nbsp;directive.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetAcceleratorTable"><strong>GetAcceleratorTable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetAcceleratorTable">GetAcceleratorTable</a>(self)&nbsp;-&gt;&nbsp;AcceleratorTable<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;accelerator&nbsp;table&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetAdjustedBestSize"><strong>GetAdjustedBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetAdjustedBestSize">GetAdjustedBestSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;similar&nbsp;to&nbsp;GetBestSize,&nbsp;except&nbsp;in&nbsp;one<br>
thing.&nbsp;GetBestSize&nbsp;should&nbsp;return&nbsp;the&nbsp;minimum&nbsp;untruncated&nbsp;size&nbsp;of&nbsp;the<br>
window,&nbsp;while&nbsp;this&nbsp;method&nbsp;will&nbsp;return&nbsp;the&nbsp;largest&nbsp;of&nbsp;BestSize&nbsp;and&nbsp;any<br>
user&nbsp;specified&nbsp;minimum&nbsp;size.&nbsp;ie.&nbsp;it&nbsp;is&nbsp;the&nbsp;minimum&nbsp;size&nbsp;the&nbsp;window<br>
should&nbsp;currently&nbsp;be&nbsp;drawn&nbsp;at,&nbsp;not&nbsp;the&nbsp;minimal&nbsp;size&nbsp;it&nbsp;can&nbsp;possibly<br>
tolerate.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetAutoLayout"><strong>GetAutoLayout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetAutoLayout">GetAutoLayout</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;current&nbsp;autoLayout&nbsp;setting</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetBackgroundColour"><strong>GetBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetBackgroundColour">GetBackgroundColour</a>(self)&nbsp;-&gt;&nbsp;Colour<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetBackgroundStyle"><strong>GetBackgroundStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetBackgroundStyle">GetBackgroundStyle</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;style&nbsp;of&nbsp;the&nbsp;window.<br>
&nbsp;<br>
:see:&nbsp;`SetBackgroundStyle`</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetBestFittingSize"><strong>GetBestFittingSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetBestFittingSize">GetBestFittingSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;function&nbsp;will&nbsp;merge&nbsp;the&nbsp;window's&nbsp;best&nbsp;size&nbsp;into&nbsp;the&nbsp;window's<br>
minimum&nbsp;size,&nbsp;giving&nbsp;priority&nbsp;to&nbsp;the&nbsp;min&nbsp;size&nbsp;components,&nbsp;and&nbsp;returns<br>
the&nbsp;results.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetBestSize"><strong>GetBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetBestSize">GetBestSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;function&nbsp;returns&nbsp;the&nbsp;best&nbsp;acceptable&nbsp;minimal&nbsp;size&nbsp;for&nbsp;the<br>
window,&nbsp;if&nbsp;applicable.&nbsp;For&nbsp;example,&nbsp;for&nbsp;a&nbsp;static&nbsp;text&nbsp;control,&nbsp;it&nbsp;will<br>
be&nbsp;the&nbsp;minimal&nbsp;size&nbsp;such&nbsp;that&nbsp;the&nbsp;control&nbsp;label&nbsp;is&nbsp;not&nbsp;truncated.&nbsp;For<br>
windows&nbsp;containing&nbsp;subwindows&nbsp;(suzh&nbsp;aswx.<a href="wx._windows.html#Panel">Panel</a>),&nbsp;the&nbsp;size&nbsp;returned&nbsp;by<br>
this&nbsp;function&nbsp;will&nbsp;be&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;size&nbsp;the&nbsp;window&nbsp;would&nbsp;have&nbsp;had<br>
after&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetBestSizeTuple"><strong>GetBestSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetBestSizeTuple">GetBestSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
This&nbsp;function&nbsp;returns&nbsp;the&nbsp;best&nbsp;acceptable&nbsp;minimal&nbsp;size&nbsp;for&nbsp;the<br>
window,&nbsp;if&nbsp;applicable.&nbsp;For&nbsp;example,&nbsp;for&nbsp;a&nbsp;static&nbsp;text&nbsp;control,&nbsp;it&nbsp;will<br>
be&nbsp;the&nbsp;minimal&nbsp;size&nbsp;such&nbsp;that&nbsp;the&nbsp;control&nbsp;label&nbsp;is&nbsp;not&nbsp;truncated.&nbsp;For<br>
windows&nbsp;containing&nbsp;subwindows&nbsp;(suzh&nbsp;aswx.<a href="wx._windows.html#Panel">Panel</a>),&nbsp;the&nbsp;size&nbsp;returned&nbsp;by<br>
this&nbsp;function&nbsp;will&nbsp;be&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;size&nbsp;the&nbsp;window&nbsp;would&nbsp;have&nbsp;had<br>
after&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetBestVirtualSize"><strong>GetBestVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetBestVirtualSize">GetBestVirtualSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Return&nbsp;the&nbsp;largest&nbsp;of&nbsp;ClientSize&nbsp;and&nbsp;BestSize&nbsp;(as&nbsp;determined&nbsp;by&nbsp;a<br>
sizer,&nbsp;interior&nbsp;children,&nbsp;or&nbsp;other&nbsp;means)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetBorder"><strong>GetBorder</strong></a>(*args)</dt><dd><tt><a href="#NavigationToolbarWx-GetBorder">GetBorder</a>(self,&nbsp;long&nbsp;flags)&nbsp;-&gt;&nbsp;int<br>
<a href="#NavigationToolbarWx-GetBorder">GetBorder</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;border&nbsp;for&nbsp;the&nbsp;flags&nbsp;of&nbsp;this&nbsp;window</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetCaret"><strong>GetCaret</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetCaret">GetCaret</a>(self)&nbsp;-&gt;&nbsp;Caret<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;caret&nbsp;associated&nbsp;with&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetCharHeight"><strong>GetCharHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetCharHeight">GetCharHeight</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;(average)&nbsp;character&nbsp;size&nbsp;for&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetCharWidth"><strong>GetCharWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetCharWidth">GetCharWidth</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;(average)&nbsp;character&nbsp;size&nbsp;for&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetChildren"><strong>GetChildren</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetChildren">GetChildren</a>(self)&nbsp;-&gt;&nbsp;PyObject<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;list&nbsp;of&nbsp;the&nbsp;window's&nbsp;children.&nbsp;&nbsp;NOTE:&nbsp;Currently&nbsp;this&nbsp;is&nbsp;a<br>
copy&nbsp;of&nbsp;the&nbsp;child&nbsp;window&nbsp;list&nbsp;maintained&nbsp;by&nbsp;the&nbsp;window,&nbsp;so&nbsp;the&nbsp;return<br>
value&nbsp;of&nbsp;this&nbsp;function&nbsp;is&nbsp;only&nbsp;valid&nbsp;as&nbsp;long&nbsp;as&nbsp;the&nbsp;window's&nbsp;children<br>
do&nbsp;not&nbsp;change.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetClientAreaOrigin"><strong>GetClientAreaOrigin</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetClientAreaOrigin">GetClientAreaOrigin</a>(self)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Get&nbsp;the&nbsp;origin&nbsp;of&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window&nbsp;relative&nbsp;to&nbsp;the<br>
window's&nbsp;top&nbsp;left&nbsp;corner&nbsp;(the&nbsp;client&nbsp;area&nbsp;may&nbsp;be&nbsp;shifted&nbsp;because&nbsp;of<br>
the&nbsp;borders,&nbsp;scrollbars,&nbsp;other&nbsp;decorations...)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetClientRect"><strong>GetClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetClientRect">GetClientRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Get&nbsp;the&nbsp;client&nbsp;area&nbsp;position&nbsp;and&nbsp;size&nbsp;as&nbsp;a&nbsp;`wx.Rect`&nbsp;object.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetClientSize"><strong>GetClientSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetClientSize">GetClientSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;gets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window's&nbsp;'client&nbsp;area'&nbsp;in&nbsp;pixels.&nbsp;The&nbsp;client<br>
area&nbsp;is&nbsp;the&nbsp;area&nbsp;which&nbsp;may&nbsp;be&nbsp;drawn&nbsp;on&nbsp;by&nbsp;the&nbsp;programmer,&nbsp;excluding<br>
title&nbsp;bar,&nbsp;border,&nbsp;scrollbars,&nbsp;etc.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetClientSizeTuple"><strong>GetClientSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetClientSizeTuple">GetClientSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
This&nbsp;gets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window's&nbsp;'client&nbsp;area'&nbsp;in&nbsp;pixels.&nbsp;The&nbsp;client<br>
area&nbsp;is&nbsp;the&nbsp;area&nbsp;which&nbsp;may&nbsp;be&nbsp;drawn&nbsp;on&nbsp;by&nbsp;the&nbsp;programmer,&nbsp;excluding<br>
title&nbsp;bar,&nbsp;border,&nbsp;scrollbars,&nbsp;etc.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetConstraints"><strong>GetConstraints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetConstraints">GetConstraints</a>(self)&nbsp;-&gt;&nbsp;LayoutConstraints<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;pointer&nbsp;to&nbsp;the&nbsp;window's&nbsp;layout&nbsp;constraints,&nbsp;or&nbsp;None&nbsp;if&nbsp;there<br>
are&nbsp;none.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetContainingSizer"><strong>GetContainingSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetContainingSizer">GetContainingSizer</a>(self)&nbsp;-&gt;&nbsp;Sizer<br>
&nbsp;<br>
Return&nbsp;the&nbsp;sizer&nbsp;that&nbsp;this&nbsp;window&nbsp;is&nbsp;a&nbsp;member&nbsp;of,&nbsp;if&nbsp;any,&nbsp;otherwise&nbsp;None.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetCursor"><strong>GetCursor</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetCursor">GetCursor</a>(self)&nbsp;-&gt;&nbsp;Cursor<br>
&nbsp;<br>
Return&nbsp;the&nbsp;cursor&nbsp;associated&nbsp;with&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetDefaultAttributes"><strong>GetDefaultAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetDefaultAttributes">GetDefaultAttributes</a>(self)&nbsp;-&gt;&nbsp;VisualAttributes<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;attributes&nbsp;for&nbsp;an&nbsp;instance&nbsp;of&nbsp;this&nbsp;class.&nbsp;&nbsp;This&nbsp;is<br>
useful&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;use&nbsp;the&nbsp;same&nbsp;font&nbsp;or&nbsp;colour&nbsp;in&nbsp;your&nbsp;own&nbsp;control<br>
as&nbsp;in&nbsp;a&nbsp;standard&nbsp;control&nbsp;--&nbsp;which&nbsp;is&nbsp;a&nbsp;much&nbsp;better&nbsp;idea&nbsp;than&nbsp;hard<br>
coding&nbsp;specific&nbsp;colours&nbsp;or&nbsp;fonts&nbsp;which&nbsp;might&nbsp;look&nbsp;completely&nbsp;out&nbsp;of<br>
place&nbsp;on&nbsp;the&nbsp;user's&nbsp;system,&nbsp;especially&nbsp;if&nbsp;it&nbsp;uses&nbsp;themes.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetDefaultItem"><strong>GetDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetDefaultItem">GetDefaultItem</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;child&nbsp;of&nbsp;this&nbsp;parent,&nbsp;i.e.&nbsp;the&nbsp;one&nbsp;which&nbsp;is&nbsp;activated<br>
by&nbsp;pressing&nbsp;&lt;Enter&gt;&nbsp;such&nbsp;as&nbsp;the&nbsp;OK&nbsp;button&nbsp;on&nbsp;a&nbsp;wx.Dialog.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetDropTarget"><strong>GetDropTarget</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetDropTarget">GetDropTarget</a>(self)&nbsp;-&gt;&nbsp;DropTarget<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;associated&nbsp;drop&nbsp;target,&nbsp;which&nbsp;may&nbsp;be&nbsp;None.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetEventHandler"><strong>GetEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetEventHandler">GetEventHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;event&nbsp;handler&nbsp;for&nbsp;this&nbsp;window.&nbsp;By&nbsp;default,&nbsp;the&nbsp;window&nbsp;is<br>
its&nbsp;own&nbsp;event&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetExtraStyle"><strong>GetExtraStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetExtraStyle">GetExtraStyle</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;extra&nbsp;style&nbsp;bits&nbsp;for&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetFont"><strong>GetFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetFont">GetFont</a>(self)&nbsp;-&gt;&nbsp;Font<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;default&nbsp;font&nbsp;used&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetForegroundColour"><strong>GetForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetForegroundColour">GetForegroundColour</a>(self)&nbsp;-&gt;&nbsp;Colour<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;foreground&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;interpretation&nbsp;of<br>
foreground&nbsp;colour&nbsp;is&nbsp;dependent&nbsp;on&nbsp;the&nbsp;window&nbsp;class;&nbsp;it&nbsp;may&nbsp;be&nbsp;the&nbsp;text<br>
colour&nbsp;or&nbsp;other&nbsp;colour,&nbsp;or&nbsp;it&nbsp;may&nbsp;not&nbsp;be&nbsp;used&nbsp;at&nbsp;all.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetFullTextExtent"><strong>GetFullTextExtent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetFullTextExtent">GetFullTextExtent</a>(String&nbsp;string,&nbsp;Font&nbsp;font=None)&nbsp;-&gt;<br>
&nbsp;&nbsp;&nbsp;(width,&nbsp;height,&nbsp;descent,&nbsp;externalLeading)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;width,&nbsp;height,&nbsp;decent&nbsp;and&nbsp;leading&nbsp;of&nbsp;the&nbsp;text&nbsp;using&nbsp;the<br>
current&nbsp;or&nbsp;specified&nbsp;font.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetGrandParent"><strong>GetGrandParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetGrandParent">GetGrandParent</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;parent&nbsp;of&nbsp;the&nbsp;parent&nbsp;of&nbsp;this&nbsp;window,&nbsp;or&nbsp;None&nbsp;if&nbsp;there<br>
isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetHandle"><strong>GetHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetHandle">GetHandle</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;platform-specific&nbsp;handle&nbsp;(as&nbsp;a&nbsp;long&nbsp;integer)&nbsp;of&nbsp;the<br>
physical&nbsp;window.&nbsp;&nbsp;Currently&nbsp;on&nbsp;wxMac&nbsp;it&nbsp;returns&nbsp;the&nbsp;handle&nbsp;of&nbsp;the<br>
toplevel&nbsp;parent&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetHelpText"><strong>GetHelpText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetHelpText">GetHelpText</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;help&nbsp;text&nbsp;to&nbsp;be&nbsp;used&nbsp;as&nbsp;context-sensitive&nbsp;help&nbsp;for&nbsp;this<br>
window.&nbsp;&nbsp;Note&nbsp;that&nbsp;the&nbsp;text&nbsp;is&nbsp;actually&nbsp;stored&nbsp;by&nbsp;the&nbsp;current<br>
wxHelpProvider&nbsp;implementation,&nbsp;and&nbsp;not&nbsp;in&nbsp;the&nbsp;window&nbsp;object&nbsp;itself.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetId"><strong>GetId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetId">GetId</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;identifier&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Each&nbsp;window&nbsp;has&nbsp;an&nbsp;integer<br>
identifier.&nbsp;If&nbsp;the&nbsp;application&nbsp;has&nbsp;not&nbsp;provided&nbsp;one&nbsp;(or&nbsp;the&nbsp;default&nbsp;Id<br>
-1&nbsp;is&nbsp;used)&nbsp;then&nbsp;an&nbsp;unique&nbsp;identifier&nbsp;with&nbsp;a&nbsp;negative&nbsp;value&nbsp;will&nbsp;be<br>
generated.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetMaxHeight"><strong>GetMaxHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetMaxHeight">GetMaxHeight</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetMaxSize"><strong>GetMaxSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetMaxSize">GetMaxSize</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetMaxWidth"><strong>GetMaxWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetMaxWidth">GetMaxWidth</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetMinHeight"><strong>GetMinHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetMinHeight">GetMinHeight</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetMinSize"><strong>GetMinSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetMinSize">GetMinSize</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetMinWidth"><strong>GetMinWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetMinWidth">GetMinWidth</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetName"><strong>GetName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetName">GetName</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;windows&nbsp;name.&nbsp;&nbsp;This&nbsp;name&nbsp;is&nbsp;not&nbsp;guaranteed&nbsp;to&nbsp;be&nbsp;unique;<br>
it&nbsp;is&nbsp;up&nbsp;to&nbsp;the&nbsp;programmer&nbsp;to&nbsp;supply&nbsp;an&nbsp;appropriate&nbsp;name&nbsp;in&nbsp;the&nbsp;window<br>
constructor&nbsp;or&nbsp;via&nbsp;wx.Window.SetName.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetParent"><strong>GetParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetParent">GetParent</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;parent&nbsp;window&nbsp;of&nbsp;this&nbsp;window,&nbsp;or&nbsp;None&nbsp;if&nbsp;there&nbsp;isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetPosition"><strong>GetPosition</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetPosition">GetPosition</a>(self)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window's&nbsp;position.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetPositionTuple"><strong>GetPositionTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetPositionTuple">GetPositionTuple</a>()&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window's&nbsp;position.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetRect"><strong>GetRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetRect">GetRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;size&nbsp;and&nbsp;position&nbsp;of&nbsp;the&nbsp;window&nbsp;as&nbsp;a&nbsp;wx.Rect&nbsp;object.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetScrollPos"><strong>GetScrollPos</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetScrollPos">GetScrollPos</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;position.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetScrollRange"><strong>GetScrollRange</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetScrollRange">GetScrollRange</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;range.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetScrollThumb"><strong>GetScrollThumb</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetScrollThumb">GetScrollThumb</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;thumb&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetSize"><strong>GetSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetSize">GetSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetSizeTuple"><strong>GetSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetSizeTuple">GetSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetSizer"><strong>GetSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetSizer">GetSizer</a>(self)&nbsp;-&gt;&nbsp;Sizer<br>
&nbsp;<br>
Return&nbsp;the&nbsp;sizer&nbsp;associated&nbsp;with&nbsp;the&nbsp;window&nbsp;by&nbsp;a&nbsp;previous&nbsp;call&nbsp;to<br>
SetSizer&nbsp;or&nbsp;None&nbsp;if&nbsp;there&nbsp;isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetTextExtent"><strong>GetTextExtent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetTextExtent">GetTextExtent</a>(String&nbsp;string)&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;width&nbsp;and&nbsp;height&nbsp;of&nbsp;the&nbsp;text&nbsp;using&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetThemeEnabled"><strong>GetThemeEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetThemeEnabled">GetThemeEnabled</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Return&nbsp;the&nbsp;themeEnabled&nbsp;flag.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetTitle"><strong>GetTitle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetTitle">GetTitle</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window's&nbsp;title.&nbsp;Applicable&nbsp;only&nbsp;to&nbsp;frames&nbsp;and&nbsp;dialogs.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolTip"><strong>GetToolTip</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetToolTip">GetToolTip</a>(self)&nbsp;-&gt;&nbsp;ToolTip<br>
&nbsp;<br>
get&nbsp;the&nbsp;associated&nbsp;tooltip&nbsp;or&nbsp;None&nbsp;if&nbsp;none</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetUpdateClientRect"><strong>GetUpdateClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetUpdateClientRect">GetUpdateClientRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Get&nbsp;the&nbsp;update&nbsp;rectangle&nbsp;region&nbsp;bounding&nbsp;box&nbsp;in&nbsp;client&nbsp;coords.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetUpdateRegion"><strong>GetUpdateRegion</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetUpdateRegion">GetUpdateRegion</a>(self)&nbsp;-&gt;&nbsp;Region<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;region&nbsp;specifying&nbsp;which&nbsp;parts&nbsp;of&nbsp;the&nbsp;window&nbsp;have&nbsp;been<br>
damaged.&nbsp;Should&nbsp;only&nbsp;be&nbsp;called&nbsp;within&nbsp;an&nbsp;EVT_PAINT&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetValidator"><strong>GetValidator</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetValidator">GetValidator</a>(self)&nbsp;-&gt;&nbsp;Validator<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;pointer&nbsp;to&nbsp;the&nbsp;current&nbsp;validator&nbsp;for&nbsp;the&nbsp;window,&nbsp;or&nbsp;None&nbsp;if<br>
there&nbsp;is&nbsp;none.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetVirtualSize"><strong>GetVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetVirtualSize">GetVirtualSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Get&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows<br>
this&nbsp;is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetVirtualSizeTuple"><strong>GetVirtualSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetVirtualSizeTuple">GetVirtualSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows<br>
this&nbsp;is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetWindowStyle"><strong>GetWindowStyle</strong></a> = GetWindowStyleFlag(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetWindowStyleFlag">GetWindowStyleFlag</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window&nbsp;style&nbsp;that&nbsp;was&nbsp;passed&nbsp;to&nbsp;the&nbsp;constructor&nbsp;or&nbsp;Create<br>
method.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetWindowStyleFlag"><strong>GetWindowStyleFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetWindowStyleFlag">GetWindowStyleFlag</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window&nbsp;style&nbsp;that&nbsp;was&nbsp;passed&nbsp;to&nbsp;the&nbsp;constructor&nbsp;or&nbsp;Create<br>
method.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetWindowVariant"><strong>GetWindowVariant</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetWindowVariant">GetWindowVariant</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-HasCapture"><strong>HasCapture</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-HasCapture">HasCapture</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;this&nbsp;window&nbsp;has&nbsp;the&nbsp;current&nbsp;mouse&nbsp;capture.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-HasFlag"><strong>HasFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-HasFlag">HasFlag</a>(self,&nbsp;int&nbsp;flag)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Test&nbsp;if&nbsp;the&nbsp;given&nbsp;style&nbsp;is&nbsp;set&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-HasScrollbar"><strong>HasScrollbar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-HasScrollbar">HasScrollbar</a>(self,&nbsp;int&nbsp;orient)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Does&nbsp;the&nbsp;window&nbsp;have&nbsp;the&nbsp;scrollbar&nbsp;for&nbsp;this&nbsp;orientation?</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-HasTransparentBackground"><strong>HasTransparentBackground</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-HasTransparentBackground">HasTransparentBackground</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;True&nbsp;if&nbsp;this&nbsp;window's&nbsp;background&nbsp;is&nbsp;transparent&nbsp;(as,&nbsp;for<br>
example,&nbsp;for&nbsp;`wx.StaticText`)&nbsp;and&nbsp;should&nbsp;show&nbsp;the&nbsp;parent&nbsp;window's<br>
background.<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;mostly&nbsp;used&nbsp;internally&nbsp;by&nbsp;the&nbsp;library&nbsp;itself&nbsp;and&nbsp;you<br>
normally&nbsp;shouldn't&nbsp;have&nbsp;to&nbsp;call&nbsp;it.&nbsp;You&nbsp;may,&nbsp;however,&nbsp;have&nbsp;to&nbsp;override<br>
it&nbsp;in&nbsp;your&nbsp;custom&nbsp;control&nbsp;classes&nbsp;to&nbsp;ensure&nbsp;that&nbsp;background&nbsp;is&nbsp;painted<br>
correctly.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Hide"><strong>Hide</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Hide">Hide</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Equivalent&nbsp;to&nbsp;calling&nbsp;<a href="#NavigationToolbarWx-Show">Show</a>(False).</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-HitTest"><strong>HitTest</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-HitTest">HitTest</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Test&nbsp;where&nbsp;the&nbsp;given&nbsp;(in&nbsp;client&nbsp;coords)&nbsp;point&nbsp;lies</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-HitTestXY"><strong>HitTestXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-HitTestXY">HitTestXY</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Test&nbsp;where&nbsp;the&nbsp;given&nbsp;(in&nbsp;client&nbsp;coords)&nbsp;point&nbsp;lies</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-InheritAttributes"><strong>InheritAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-InheritAttributes">InheritAttributes</a>(self)<br>
&nbsp;<br>
This&nbsp;function&nbsp;is&nbsp;(or&nbsp;should&nbsp;be,&nbsp;in&nbsp;case&nbsp;of&nbsp;custom&nbsp;controls)&nbsp;called<br>
during&nbsp;window&nbsp;creation&nbsp;to&nbsp;intelligently&nbsp;set&nbsp;up&nbsp;the&nbsp;window&nbsp;visual<br>
attributes,&nbsp;that&nbsp;is&nbsp;the&nbsp;font&nbsp;and&nbsp;the&nbsp;foreground&nbsp;and&nbsp;background<br>
colours.<br>
&nbsp;<br>
By&nbsp;'intelligently'&nbsp;the&nbsp;following&nbsp;is&nbsp;meant:&nbsp;by&nbsp;default,&nbsp;all&nbsp;windows&nbsp;use<br>
their&nbsp;own&nbsp;default&nbsp;attributes.&nbsp;However&nbsp;if&nbsp;some&nbsp;of&nbsp;the&nbsp;parent's<br>
attributes&nbsp;are&nbsp;explicitly&nbsp;changed&nbsp;(that&nbsp;is,&nbsp;using&nbsp;SetFont&nbsp;and&nbsp;not<br>
SetOwnFont)&nbsp;and&nbsp;if&nbsp;the&nbsp;corresponding&nbsp;attribute&nbsp;hadn't&nbsp;been<br>
explicitly&nbsp;set&nbsp;for&nbsp;this&nbsp;window&nbsp;itself,&nbsp;then&nbsp;this&nbsp;window&nbsp;takes&nbsp;the&nbsp;same<br>
value&nbsp;as&nbsp;used&nbsp;by&nbsp;the&nbsp;parent.&nbsp;In&nbsp;addition,&nbsp;if&nbsp;the&nbsp;window&nbsp;overrides<br>
ShouldInheritColours&nbsp;to&nbsp;return&nbsp;false,&nbsp;the&nbsp;colours&nbsp;will&nbsp;not&nbsp;be&nbsp;changed<br>
no&nbsp;matter&nbsp;what&nbsp;and&nbsp;only&nbsp;the&nbsp;font&nbsp;might.<br>
&nbsp;<br>
This&nbsp;rather&nbsp;complicated&nbsp;logic&nbsp;is&nbsp;necessary&nbsp;in&nbsp;order&nbsp;to&nbsp;accommodate&nbsp;the<br>
different&nbsp;usage&nbsp;scenarios.&nbsp;The&nbsp;most&nbsp;common&nbsp;one&nbsp;is&nbsp;when&nbsp;all&nbsp;default<br>
attributes&nbsp;are&nbsp;used&nbsp;and&nbsp;in&nbsp;this&nbsp;case,&nbsp;nothing&nbsp;should&nbsp;be&nbsp;inherited&nbsp;as<br>
in&nbsp;modern&nbsp;GUIs&nbsp;different&nbsp;controls&nbsp;use&nbsp;different&nbsp;fonts&nbsp;(and&nbsp;colours)<br>
than&nbsp;their&nbsp;siblings&nbsp;so&nbsp;they&nbsp;can't&nbsp;inherit&nbsp;the&nbsp;same&nbsp;value&nbsp;from&nbsp;the<br>
parent.&nbsp;However&nbsp;it&nbsp;was&nbsp;also&nbsp;deemed&nbsp;desirable&nbsp;to&nbsp;allow&nbsp;to&nbsp;simply&nbsp;change<br>
the&nbsp;attributes&nbsp;of&nbsp;all&nbsp;children&nbsp;at&nbsp;once&nbsp;by&nbsp;just&nbsp;changing&nbsp;the&nbsp;font&nbsp;or<br>
colour&nbsp;of&nbsp;their&nbsp;common&nbsp;parent,&nbsp;hence&nbsp;in&nbsp;this&nbsp;case&nbsp;we&nbsp;do&nbsp;inherit&nbsp;the<br>
parents&nbsp;attributes.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-InheritsBackgroundColour"><strong>InheritsBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-InheritsBackgroundColour">InheritsBackgroundColour</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-InitDialog"><strong>InitDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-InitDialog">InitDialog</a>(self)<br>
&nbsp;<br>
Sends&nbsp;an&nbsp;EVT_INIT_DIALOG&nbsp;event,&nbsp;whose&nbsp;handler&nbsp;usually&nbsp;transfers&nbsp;data<br>
to&nbsp;the&nbsp;dialog&nbsp;via&nbsp;validators.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-InvalidateBestSize"><strong>InvalidateBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-InvalidateBestSize">InvalidateBestSize</a>(self)<br>
&nbsp;<br>
Reset&nbsp;the&nbsp;cached&nbsp;best&nbsp;size&nbsp;value&nbsp;so&nbsp;it&nbsp;will&nbsp;be&nbsp;recalculated&nbsp;the&nbsp;next<br>
time&nbsp;it&nbsp;is&nbsp;needed.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-IsBeingDeleted"><strong>IsBeingDeleted</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-IsBeingDeleted">IsBeingDeleted</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Is&nbsp;the&nbsp;window&nbsp;in&nbsp;the&nbsp;process&nbsp;of&nbsp;being&nbsp;deleted?</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-IsEnabled"><strong>IsEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-IsEnabled">IsEnabled</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;enabled&nbsp;for&nbsp;input,&nbsp;false&nbsp;otherwise.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-IsExposed"><strong>IsExposed</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-IsExposed">IsExposed</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;w=1,&nbsp;int&nbsp;h=1)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-IsExposedPoint"><strong>IsExposedPoint</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-IsExposedPoint">IsExposedPoint</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-IsExposedRect"><strong>IsExposedRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-IsExposedRect">IsExposedRect</a>(self,&nbsp;Rect&nbsp;rect)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-IsRetained"><strong>IsRetained</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-IsRetained">IsRetained</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;retained,&nbsp;false&nbsp;otherwise.&nbsp;&nbsp;Retained<br>
windows&nbsp;are&nbsp;only&nbsp;available&nbsp;on&nbsp;X&nbsp;platforms.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-IsShown"><strong>IsShown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-IsShown">IsShown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;shown,&nbsp;false&nbsp;if&nbsp;it&nbsp;has&nbsp;been&nbsp;hidden.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-IsTopLevel"><strong>IsTopLevel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-IsTopLevel">IsTopLevel</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;window&nbsp;is&nbsp;a&nbsp;top-level&nbsp;one.&nbsp;Currently&nbsp;all<br>
frames&nbsp;and&nbsp;dialogs&nbsp;are&nbsp;always&nbsp;considered&nbsp;to&nbsp;be&nbsp;top-level&nbsp;windows&nbsp;(even<br>
if&nbsp;they&nbsp;have&nbsp;a&nbsp;parent&nbsp;window).</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Layout"><strong>Layout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Layout">Layout</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Invokes&nbsp;the&nbsp;constraint-based&nbsp;layout&nbsp;algorithm&nbsp;or&nbsp;the&nbsp;sizer-based<br>
algorithm&nbsp;for&nbsp;this&nbsp;window.&nbsp;&nbsp;See&nbsp;SetAutoLayout:&nbsp;when&nbsp;auto&nbsp;layout&nbsp;is&nbsp;on,<br>
this&nbsp;function&nbsp;gets&nbsp;called&nbsp;automatically&nbsp;by&nbsp;the&nbsp;default&nbsp;EVT_SIZE<br>
handler&nbsp;when&nbsp;the&nbsp;window&nbsp;is&nbsp;resized.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-LineDown"><strong>LineDown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-LineDown">LineDown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#NavigationToolbarWx-ScrollLines">ScrollLines</a>(1).</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-LineUp"><strong>LineUp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-LineUp">LineUp</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#NavigationToolbarWx-ScrollLines">ScrollLines</a>(-1).</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Lower"><strong>Lower</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Lower">Lower</a>(self)<br>
&nbsp;<br>
Lowers&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;bottom&nbsp;of&nbsp;the&nbsp;window&nbsp;hierarchy.&nbsp;&nbsp;In&nbsp;current<br>
version&nbsp;of&nbsp;wxWidgets&nbsp;this&nbsp;works&nbsp;both&nbsp;for&nbsp;manage&nbsp;and&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-MakeModal"><strong>MakeModal</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-MakeModal">MakeModal</a>(self,&nbsp;bool&nbsp;modal=True)<br>
&nbsp;<br>
Disables&nbsp;all&nbsp;other&nbsp;windows&nbsp;in&nbsp;the&nbsp;application&nbsp;so&nbsp;that&nbsp;the&nbsp;user&nbsp;can<br>
only&nbsp;interact&nbsp;with&nbsp;this&nbsp;window.&nbsp;&nbsp;Passing&nbsp;False&nbsp;will&nbsp;reverse&nbsp;this<br>
effect.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Move"><strong>Move</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Move">Move</a>(self,&nbsp;Point&nbsp;pt,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-MoveAfterInTabOrder"><strong>MoveAfterInTabOrder</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-MoveAfterInTabOrder">MoveAfterInTabOrder</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Moves&nbsp;this&nbsp;window&nbsp;in&nbsp;the&nbsp;tab&nbsp;navigation&nbsp;order&nbsp;after&nbsp;the&nbsp;specified<br>
sibling&nbsp;window.&nbsp;&nbsp;This&nbsp;means&nbsp;that&nbsp;when&nbsp;the&nbsp;user&nbsp;presses&nbsp;the&nbsp;TAB&nbsp;key&nbsp;on<br>
that&nbsp;other&nbsp;window,&nbsp;the&nbsp;focus&nbsp;switches&nbsp;to&nbsp;this&nbsp;window.<br>
&nbsp;<br>
The&nbsp;default&nbsp;tab&nbsp;order&nbsp;is&nbsp;the&nbsp;same&nbsp;as&nbsp;creation&nbsp;order.&nbsp;&nbsp;This&nbsp;function<br>
and&nbsp;`MoveBeforeInTabOrder`&nbsp;allow&nbsp;to&nbsp;change&nbsp;it&nbsp;after&nbsp;creating&nbsp;all&nbsp;the<br>
windows.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-MoveBeforeInTabOrder"><strong>MoveBeforeInTabOrder</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-MoveBeforeInTabOrder">MoveBeforeInTabOrder</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Same&nbsp;as&nbsp;`MoveAfterInTabOrder`&nbsp;except&nbsp;that&nbsp;it&nbsp;inserts&nbsp;this&nbsp;window&nbsp;just<br>
before&nbsp;win&nbsp;instead&nbsp;of&nbsp;putting&nbsp;it&nbsp;right&nbsp;after&nbsp;it.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-MoveXY"><strong>MoveXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-MoveXY">MoveXY</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Navigate"><strong>Navigate</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Navigate">Navigate</a>(self,&nbsp;int&nbsp;flags=NavigationKeyEvent.IsForward)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Does&nbsp;keyboard&nbsp;navigation&nbsp;from&nbsp;this&nbsp;window&nbsp;to&nbsp;another,&nbsp;by&nbsp;sending&nbsp;a<br>
`wx.NavigationKeyEvent`.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-PageDown"><strong>PageDown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-PageDown">PageDown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#NavigationToolbarWx-ScrollPages">ScrollPages</a>(1).</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-PageUp"><strong>PageUp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-PageUp">PageUp</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#NavigationToolbarWx-ScrollPages">ScrollPages</a>(-1).</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-PopEventHandler"><strong>PopEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-PopEventHandler">PopEventHandler</a>(self,&nbsp;bool&nbsp;deleteHandler=False)&nbsp;-&gt;&nbsp;EvtHandler<br>
&nbsp;<br>
Removes&nbsp;and&nbsp;returns&nbsp;the&nbsp;top-most&nbsp;event&nbsp;handler&nbsp;on&nbsp;the&nbsp;event&nbsp;handler<br>
stack.&nbsp;&nbsp;If&nbsp;deleteHandler&nbsp;is&nbsp;True&nbsp;then&nbsp;the&nbsp;wx.EvtHandler&nbsp;object&nbsp;will&nbsp;be<br>
destroyed&nbsp;after&nbsp;it&nbsp;is&nbsp;popped.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-PopupMenu"><strong>PopupMenu</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-PopupMenu">PopupMenu</a>(self,&nbsp;Menu&nbsp;menu,&nbsp;Point&nbsp;pos=DefaultPosition)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Pops&nbsp;up&nbsp;the&nbsp;given&nbsp;menu&nbsp;at&nbsp;the&nbsp;specified&nbsp;coordinates,&nbsp;relative&nbsp;to&nbsp;this&nbsp;window,<br>
and&nbsp;returns&nbsp;control&nbsp;when&nbsp;the&nbsp;user&nbsp;has&nbsp;dismissed&nbsp;the&nbsp;menu.&nbsp;If&nbsp;a&nbsp;menu&nbsp;item&nbsp;is<br>
selected,&nbsp;the&nbsp;corresponding&nbsp;menu&nbsp;event&nbsp;is&nbsp;generated&nbsp;and&nbsp;will&nbsp;be&nbsp;processed&nbsp;as<br>
usual.&nbsp;&nbsp;If&nbsp;the&nbsp;default&nbsp;position&nbsp;is&nbsp;given&nbsp;then&nbsp;the&nbsp;current&nbsp;position&nbsp;of&nbsp;the<br>
mouse&nbsp;cursor&nbsp;will&nbsp;be&nbsp;used.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-PopupMenuXY"><strong>PopupMenuXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-PopupMenuXY">PopupMenuXY</a>(self,&nbsp;Menu&nbsp;menu,&nbsp;int&nbsp;x=-1,&nbsp;int&nbsp;y=-1)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Pops&nbsp;up&nbsp;the&nbsp;given&nbsp;menu&nbsp;at&nbsp;the&nbsp;specified&nbsp;coordinates,&nbsp;relative&nbsp;to&nbsp;this&nbsp;window,<br>
and&nbsp;returns&nbsp;control&nbsp;when&nbsp;the&nbsp;user&nbsp;has&nbsp;dismissed&nbsp;the&nbsp;menu.&nbsp;If&nbsp;a&nbsp;menu&nbsp;item&nbsp;is<br>
selected,&nbsp;the&nbsp;corresponding&nbsp;menu&nbsp;event&nbsp;is&nbsp;generated&nbsp;and&nbsp;will&nbsp;be&nbsp;processed&nbsp;as<br>
usual.&nbsp;&nbsp;If&nbsp;the&nbsp;default&nbsp;position&nbsp;is&nbsp;given&nbsp;then&nbsp;the&nbsp;current&nbsp;position&nbsp;of&nbsp;the<br>
mouse&nbsp;cursor&nbsp;will&nbsp;be&nbsp;used.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-PostCreate"><strong>PostCreate</strong></a>(self, pre)</dt><dd><tt>Phase&nbsp;3&nbsp;of&nbsp;the&nbsp;2-phase&nbsp;create&nbsp;&lt;wink!&gt;<br>
Call&nbsp;this&nbsp;method&nbsp;after&nbsp;precreating&nbsp;the&nbsp;window&nbsp;with&nbsp;the&nbsp;2-phase&nbsp;create&nbsp;method.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-PrepareDC"><strong>PrepareDC</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-PrepareDC">PrepareDC</a>(self,&nbsp;DC&nbsp;dc)<br>
&nbsp;<br>
Call&nbsp;this&nbsp;function&nbsp;to&nbsp;prepare&nbsp;the&nbsp;device&nbsp;context&nbsp;for&nbsp;drawing&nbsp;a<br>
scrolled&nbsp;image.&nbsp;It&nbsp;sets&nbsp;the&nbsp;device&nbsp;origin&nbsp;according&nbsp;to&nbsp;the&nbsp;current<br>
scroll&nbsp;position.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-PushEventHandler"><strong>PushEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-PushEventHandler">PushEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)<br>
&nbsp;<br>
Pushes&nbsp;this&nbsp;event&nbsp;handler&nbsp;onto&nbsp;the&nbsp;event&nbsp;handler&nbsp;stack&nbsp;for&nbsp;the&nbsp;window.<br>
An&nbsp;event&nbsp;handler&nbsp;is&nbsp;an&nbsp;object&nbsp;that&nbsp;is&nbsp;capable&nbsp;of&nbsp;processing&nbsp;the&nbsp;events<br>
sent&nbsp;to&nbsp;a&nbsp;window.&nbsp;By&nbsp;default,&nbsp;the&nbsp;window&nbsp;is&nbsp;its&nbsp;own&nbsp;event&nbsp;handler,&nbsp;but<br>
an&nbsp;application&nbsp;may&nbsp;wish&nbsp;to&nbsp;substitute&nbsp;another,&nbsp;for&nbsp;example&nbsp;to&nbsp;allow<br>
central&nbsp;implementation&nbsp;of&nbsp;event-handling&nbsp;for&nbsp;a&nbsp;variety&nbsp;of&nbsp;different<br>
window&nbsp;classes.<br>
&nbsp;<br>
wx.Window.PushEventHandler&nbsp;allows&nbsp;an&nbsp;application&nbsp;to&nbsp;set&nbsp;up&nbsp;a&nbsp;chain&nbsp;of<br>
event&nbsp;handlers,&nbsp;where&nbsp;an&nbsp;event&nbsp;not&nbsp;handled&nbsp;by&nbsp;one&nbsp;event&nbsp;handler&nbsp;is<br>
handed&nbsp;to&nbsp;the&nbsp;next&nbsp;one&nbsp;in&nbsp;the&nbsp;chain.&nbsp;Use&nbsp;`wx.Window.PopEventHandler`&nbsp;to<br>
remove&nbsp;the&nbsp;event&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Raise"><strong>Raise</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Raise">Raise</a>(self)<br>
&nbsp;<br>
Raises&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;top&nbsp;of&nbsp;the&nbsp;window&nbsp;hierarchy.&nbsp;&nbsp;In&nbsp;current<br>
version&nbsp;of&nbsp;wxWidgets&nbsp;this&nbsp;works&nbsp;both&nbsp;for&nbsp;manage&nbsp;and&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Refresh"><strong>Refresh</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Refresh">Refresh</a>(self,&nbsp;bool&nbsp;eraseBackground=True,&nbsp;Rect&nbsp;rect=None)<br>
&nbsp;<br>
Mark&nbsp;the&nbsp;specified&nbsp;rectangle&nbsp;(or&nbsp;the&nbsp;whole&nbsp;window)&nbsp;as&nbsp;"dirty"&nbsp;so&nbsp;it<br>
will&nbsp;be&nbsp;repainted.&nbsp;&nbsp;Causes&nbsp;an&nbsp;EVT_PAINT&nbsp;event&nbsp;to&nbsp;be&nbsp;generated&nbsp;and&nbsp;sent<br>
to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-RefreshRect"><strong>RefreshRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-RefreshRect">RefreshRect</a>(self,&nbsp;Rect&nbsp;rect,&nbsp;bool&nbsp;eraseBackground=True)<br>
&nbsp;<br>
Redraws&nbsp;the&nbsp;contents&nbsp;of&nbsp;the&nbsp;given&nbsp;rectangle:&nbsp;the&nbsp;area&nbsp;inside&nbsp;it&nbsp;will<br>
be&nbsp;repainted.&nbsp;&nbsp;This&nbsp;is&nbsp;the&nbsp;same&nbsp;as&nbsp;Refresh&nbsp;but&nbsp;has&nbsp;a&nbsp;nicer&nbsp;syntax.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-RegisterHotKey"><strong>RegisterHotKey</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-RegisterHotKey">RegisterHotKey</a>(self,&nbsp;int&nbsp;hotkeyId,&nbsp;int&nbsp;modifiers,&nbsp;int&nbsp;keycode)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Registers&nbsp;a&nbsp;system&nbsp;wide&nbsp;hotkey.&nbsp;Every&nbsp;time&nbsp;the&nbsp;user&nbsp;presses&nbsp;the&nbsp;hotkey<br>
registered&nbsp;here,&nbsp;this&nbsp;window&nbsp;will&nbsp;receive&nbsp;a&nbsp;hotkey&nbsp;event.&nbsp;It&nbsp;will<br>
receive&nbsp;the&nbsp;event&nbsp;even&nbsp;if&nbsp;the&nbsp;application&nbsp;is&nbsp;in&nbsp;the&nbsp;background&nbsp;and<br>
does&nbsp;not&nbsp;have&nbsp;the&nbsp;input&nbsp;focus&nbsp;because&nbsp;the&nbsp;user&nbsp;is&nbsp;working&nbsp;with&nbsp;some<br>
other&nbsp;application.&nbsp;&nbsp;To&nbsp;bind&nbsp;an&nbsp;event&nbsp;handler&nbsp;function&nbsp;to&nbsp;this&nbsp;hotkey<br>
use&nbsp;EVT_HOTKEY&nbsp;with&nbsp;an&nbsp;id&nbsp;equal&nbsp;to&nbsp;hotkeyId.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the<br>
hotkey&nbsp;was&nbsp;registered&nbsp;successfully.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ReleaseMouse"><strong>ReleaseMouse</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-ReleaseMouse">ReleaseMouse</a>(self)<br>
&nbsp;<br>
Releases&nbsp;mouse&nbsp;input&nbsp;captured&nbsp;with&nbsp;wx.Window.CaptureMouse.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-RemoveChild"><strong>RemoveChild</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-RemoveChild">RemoveChild</a>(self,&nbsp;Window&nbsp;child)<br>
&nbsp;<br>
Removes&nbsp;a&nbsp;child&nbsp;window.&nbsp;This&nbsp;is&nbsp;called&nbsp;automatically&nbsp;by&nbsp;window<br>
deletion&nbsp;functions&nbsp;so&nbsp;should&nbsp;not&nbsp;be&nbsp;required&nbsp;by&nbsp;the&nbsp;application<br>
programmer.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-RemoveEventHandler"><strong>RemoveEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-RemoveEventHandler">RemoveEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Find&nbsp;the&nbsp;given&nbsp;handler&nbsp;in&nbsp;the&nbsp;event&nbsp;handler&nbsp;chain&nbsp;and&nbsp;remove&nbsp;(but&nbsp;not<br>
delete)&nbsp;it&nbsp;from&nbsp;the&nbsp;event&nbsp;handler&nbsp;chain,&nbsp;return&nbsp;True&nbsp;if&nbsp;it&nbsp;was&nbsp;found<br>
and&nbsp;False&nbsp;otherwise&nbsp;(this&nbsp;also&nbsp;results&nbsp;in&nbsp;an&nbsp;assert&nbsp;failure&nbsp;so&nbsp;this<br>
function&nbsp;should&nbsp;only&nbsp;be&nbsp;called&nbsp;when&nbsp;the&nbsp;handler&nbsp;is&nbsp;supposed&nbsp;to&nbsp;be<br>
there.)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Reparent"><strong>Reparent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Reparent">Reparent</a>(self,&nbsp;Window&nbsp;newParent)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Reparents&nbsp;the&nbsp;window,&nbsp;i.e&nbsp;the&nbsp;window&nbsp;will&nbsp;be&nbsp;removed&nbsp;from&nbsp;its&nbsp;current<br>
parent&nbsp;window&nbsp;(e.g.&nbsp;a&nbsp;non-standard&nbsp;toolbar&nbsp;in&nbsp;a&nbsp;wxFrame)&nbsp;and&nbsp;then<br>
re-inserted&nbsp;into&nbsp;another.&nbsp;Available&nbsp;on&nbsp;Windows&nbsp;and&nbsp;GTK.&nbsp;&nbsp;Returns&nbsp;True<br>
if&nbsp;the&nbsp;parent&nbsp;was&nbsp;changed,&nbsp;False&nbsp;otherwise&nbsp;(error&nbsp;or&nbsp;newParent&nbsp;==<br>
oldParent)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ScreenToClient"><strong>ScreenToClient</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-ScreenToClient">ScreenToClient</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;from&nbsp;screen&nbsp;to&nbsp;client&nbsp;window&nbsp;coordinates.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ScreenToClientXY"><strong>ScreenToClientXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-ScreenToClientXY">ScreenToClientXY</a>(int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Converts&nbsp;from&nbsp;screen&nbsp;to&nbsp;client&nbsp;window&nbsp;coordinates.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ScrollLines"><strong>ScrollLines</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-ScrollLines">ScrollLines</a>(self,&nbsp;int&nbsp;lines)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
If&nbsp;the&nbsp;platform&nbsp;and&nbsp;window&nbsp;class&nbsp;supports&nbsp;it,&nbsp;scrolls&nbsp;the&nbsp;window&nbsp;by<br>
the&nbsp;given&nbsp;number&nbsp;of&nbsp;lines&nbsp;down,&nbsp;if&nbsp;lines&nbsp;is&nbsp;positive,&nbsp;or&nbsp;up&nbsp;if&nbsp;lines<br>
is&nbsp;negative.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;window&nbsp;was&nbsp;scrolled,&nbsp;False&nbsp;if&nbsp;it&nbsp;was<br>
already&nbsp;on&nbsp;top/bottom&nbsp;and&nbsp;nothing&nbsp;was&nbsp;done.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ScrollPages"><strong>ScrollPages</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-ScrollPages">ScrollPages</a>(self,&nbsp;int&nbsp;pages)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
If&nbsp;the&nbsp;platform&nbsp;and&nbsp;window&nbsp;class&nbsp;supports&nbsp;it,&nbsp;scrolls&nbsp;the&nbsp;window&nbsp;by<br>
the&nbsp;given&nbsp;number&nbsp;of&nbsp;pages&nbsp;down,&nbsp;if&nbsp;pages&nbsp;is&nbsp;positive,&nbsp;or&nbsp;up&nbsp;if&nbsp;pages<br>
is&nbsp;negative.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;window&nbsp;was&nbsp;scrolled,&nbsp;False&nbsp;if&nbsp;it&nbsp;was<br>
already&nbsp;on&nbsp;top/bottom&nbsp;and&nbsp;nothing&nbsp;was&nbsp;done.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ScrollWindow"><strong>ScrollWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-ScrollWindow">ScrollWindow</a>(self,&nbsp;int&nbsp;dx,&nbsp;int&nbsp;dy,&nbsp;Rect&nbsp;rect=None)<br>
&nbsp;<br>
Physically&nbsp;scrolls&nbsp;the&nbsp;pixels&nbsp;in&nbsp;the&nbsp;window&nbsp;and&nbsp;move&nbsp;child&nbsp;windows<br>
accordingly.&nbsp;&nbsp;Use&nbsp;this&nbsp;function&nbsp;to&nbsp;optimise&nbsp;your&nbsp;scrolling<br>
implementations,&nbsp;to&nbsp;minimise&nbsp;the&nbsp;area&nbsp;that&nbsp;must&nbsp;be&nbsp;redrawn.&nbsp;Note&nbsp;that<br>
it&nbsp;is&nbsp;rarely&nbsp;required&nbsp;to&nbsp;call&nbsp;this&nbsp;function&nbsp;from&nbsp;a&nbsp;user&nbsp;program.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SendSizeEvent"><strong>SendSizeEvent</strong></a>(self)</dt></dl>

<dl><dt><a name="NavigationToolbarWx-SetAcceleratorTable"><strong>SetAcceleratorTable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetAcceleratorTable">SetAcceleratorTable</a>(self,&nbsp;AcceleratorTable&nbsp;accel)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;accelerator&nbsp;table&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetAutoLayout"><strong>SetAutoLayout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetAutoLayout">SetAutoLayout</a>(self,&nbsp;bool&nbsp;autoLayout)<br>
&nbsp;<br>
Determines&nbsp;whether&nbsp;the&nbsp;Layout&nbsp;function&nbsp;will&nbsp;be&nbsp;called&nbsp;automatically<br>
when&nbsp;the&nbsp;window&nbsp;is&nbsp;resized.&nbsp;&nbsp;It&nbsp;is&nbsp;called&nbsp;implicitly&nbsp;by&nbsp;SetSizer&nbsp;but<br>
if&nbsp;you&nbsp;use&nbsp;SetConstraints&nbsp;you&nbsp;should&nbsp;call&nbsp;it&nbsp;manually&nbsp;or&nbsp;otherwise&nbsp;the<br>
window&nbsp;layout&nbsp;won't&nbsp;be&nbsp;correctly&nbsp;updated&nbsp;when&nbsp;its&nbsp;size&nbsp;changes.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetBackgroundColour"><strong>SetBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetBackgroundColour">SetBackgroundColour</a>(self,&nbsp;Colour&nbsp;colour)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;background&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;colour<br>
was&nbsp;changed.&nbsp;&nbsp;The&nbsp;background&nbsp;colour&nbsp;is&nbsp;usually&nbsp;painted&nbsp;by&nbsp;the&nbsp;default<br>
EVT_ERASE_BACKGROUND&nbsp;event&nbsp;handler&nbsp;function&nbsp;under&nbsp;Windows&nbsp;and<br>
automatically&nbsp;under&nbsp;GTK.&nbsp;&nbsp;Using&nbsp;`wx.NullColour`&nbsp;will&nbsp;reset&nbsp;the&nbsp;window<br>
to&nbsp;the&nbsp;default&nbsp;background&nbsp;colour.<br>
&nbsp;<br>
Note&nbsp;that&nbsp;setting&nbsp;the&nbsp;background&nbsp;colour&nbsp;may&nbsp;not&nbsp;cause&nbsp;an&nbsp;immediate<br>
refresh,&nbsp;so&nbsp;you&nbsp;may&nbsp;wish&nbsp;to&nbsp;call&nbsp;`ClearBackground`&nbsp;or&nbsp;`Refresh`&nbsp;after<br>
calling&nbsp;this&nbsp;function.<br>
&nbsp;<br>
Using&nbsp;this&nbsp;function&nbsp;will&nbsp;disable&nbsp;attempts&nbsp;to&nbsp;use&nbsp;themes&nbsp;for&nbsp;this<br>
window,&nbsp;if&nbsp;the&nbsp;system&nbsp;supports&nbsp;them.&nbsp;&nbsp;Use&nbsp;with&nbsp;care&nbsp;since&nbsp;usually&nbsp;the<br>
themes&nbsp;represent&nbsp;the&nbsp;appearance&nbsp;chosen&nbsp;by&nbsp;the&nbsp;user&nbsp;to&nbsp;be&nbsp;used&nbsp;for&nbsp;all<br>
applications&nbsp;on&nbsp;the&nbsp;system.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetBackgroundStyle"><strong>SetBackgroundStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetBackgroundStyle">SetBackgroundStyle</a>(self,&nbsp;int&nbsp;style)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;The&nbsp;background&nbsp;style<br>
indicates&nbsp;how&nbsp;the&nbsp;background&nbsp;of&nbsp;the&nbsp;window&nbsp;is&nbsp;drawn.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;======================&nbsp;&nbsp;========================================<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_SYSTEM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;colour&nbsp;or&nbsp;pattern&nbsp;should<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;be&nbsp;determined&nbsp;by&nbsp;the&nbsp;system<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_COLOUR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;should&nbsp;be&nbsp;a&nbsp;solid&nbsp;colour<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_CUSTOM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;will&nbsp;be&nbsp;implemented&nbsp;by&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;application.<br>
&nbsp;&nbsp;&nbsp;&nbsp;======================&nbsp;&nbsp;========================================<br>
&nbsp;<br>
On&nbsp;GTK+,&nbsp;use&nbsp;of&nbsp;wx.BG_STYLE_CUSTOM&nbsp;allows&nbsp;the&nbsp;flicker-free&nbsp;drawing&nbsp;of<br>
a&nbsp;custom&nbsp;background,&nbsp;such&nbsp;as&nbsp;a&nbsp;tiled&nbsp;bitmap.&nbsp;Currently&nbsp;the&nbsp;style&nbsp;has<br>
no&nbsp;effect&nbsp;on&nbsp;other&nbsp;platforms.<br>
&nbsp;<br>
:see:&nbsp;`GetBackgroundStyle`,&nbsp;`SetBackgroundColour`</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetBestFittingSize"><strong>SetBestFittingSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetBestFittingSize">SetBestFittingSize</a>(self,&nbsp;Size&nbsp;size=DefaultSize)<br>
&nbsp;<br>
A&nbsp;'Smart'&nbsp;SetSize&nbsp;that&nbsp;will&nbsp;fill&nbsp;in&nbsp;default&nbsp;size&nbsp;components&nbsp;with&nbsp;the<br>
window's&nbsp;*best&nbsp;size*&nbsp;values.&nbsp;&nbsp;Also&nbsp;set's&nbsp;the&nbsp;minsize&nbsp;for&nbsp;use&nbsp;with&nbsp;sizers.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetCaret"><strong>SetCaret</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetCaret">SetCaret</a>(self,&nbsp;Caret&nbsp;caret)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;caret&nbsp;associated&nbsp;with&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetClientRect"><strong>SetClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetClientRect">SetClientRect</a>(self,&nbsp;Rect&nbsp;rect)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetClientSize"><strong>SetClientSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetClientSize">SetClientSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetClientSizeWH"><strong>SetClientSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetClientSizeWH">SetClientSizeWH</a>(self,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetConstraints"><strong>SetConstraints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetConstraints">SetConstraints</a>(self,&nbsp;LayoutConstraints&nbsp;constraints)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window&nbsp;to&nbsp;have&nbsp;the&nbsp;given&nbsp;layout&nbsp;constraints.&nbsp;If&nbsp;an&nbsp;existing<br>
layout&nbsp;constraints&nbsp;object&nbsp;is&nbsp;already&nbsp;owned&nbsp;by&nbsp;the&nbsp;window,&nbsp;it&nbsp;will&nbsp;be<br>
deleted.&nbsp;&nbsp;Pass&nbsp;None&nbsp;to&nbsp;disassociate&nbsp;and&nbsp;delete&nbsp;the&nbsp;window's&nbsp;current<br>
constraints.<br>
&nbsp;<br>
You&nbsp;must&nbsp;call&nbsp;SetAutoLayout&nbsp;to&nbsp;tell&nbsp;a&nbsp;window&nbsp;to&nbsp;use&nbsp;the&nbsp;constraints<br>
automatically&nbsp;in&nbsp;its&nbsp;default&nbsp;EVT_SIZE&nbsp;handler;&nbsp;otherwise,&nbsp;you&nbsp;must<br>
handle&nbsp;EVT_SIZE&nbsp;yourself&nbsp;and&nbsp;call&nbsp;<a href="#NavigationToolbarWx-Layout">Layout</a>()&nbsp;explicitly.&nbsp;When&nbsp;setting<br>
both&nbsp;a&nbsp;wx.LayoutConstraints&nbsp;and&nbsp;a&nbsp;wx.Sizer,&nbsp;only&nbsp;the&nbsp;sizer&nbsp;will&nbsp;have<br>
effect.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetContainingSizer"><strong>SetContainingSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetContainingSizer">SetContainingSizer</a>(self,&nbsp;Sizer&nbsp;sizer)<br>
&nbsp;<br>
This&nbsp;normally&nbsp;does&nbsp;not&nbsp;need&nbsp;to&nbsp;be&nbsp;called&nbsp;by&nbsp;application&nbsp;code.&nbsp;It&nbsp;is<br>
called&nbsp;internally&nbsp;when&nbsp;a&nbsp;window&nbsp;is&nbsp;added&nbsp;to&nbsp;a&nbsp;sizer,&nbsp;and&nbsp;is&nbsp;used&nbsp;so<br>
the&nbsp;window&nbsp;can&nbsp;remove&nbsp;itself&nbsp;from&nbsp;the&nbsp;sizer&nbsp;when&nbsp;it&nbsp;is&nbsp;destroyed.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetCursor"><strong>SetCursor</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetCursor">SetCursor</a>(self,&nbsp;Cursor&nbsp;cursor)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;cursor.&nbsp;Notice&nbsp;that&nbsp;the&nbsp;window&nbsp;cursor&nbsp;also&nbsp;sets&nbsp;it<br>
for&nbsp;the&nbsp;children&nbsp;of&nbsp;the&nbsp;window&nbsp;implicitly.<br>
&nbsp;<br>
The&nbsp;cursor&nbsp;may&nbsp;be&nbsp;wx.NullCursor&nbsp;in&nbsp;which&nbsp;case&nbsp;the&nbsp;window&nbsp;cursor&nbsp;will<br>
be&nbsp;reset&nbsp;back&nbsp;to&nbsp;default.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetDefaultItem"><strong>SetDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetDefaultItem">SetDefaultItem</a>(self,&nbsp;Window&nbsp;child)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Set&nbsp;this&nbsp;child&nbsp;as&nbsp;default,&nbsp;return&nbsp;the&nbsp;old&nbsp;default.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetDimensions"><strong>SetDimensions</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetDimensions">SetDimensions</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height,&nbsp;int&nbsp;sizeFlags=SIZE_AUTO)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;and&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;The&nbsp;sizeFlags<br>
parameter&nbsp;indicates&nbsp;the&nbsp;interpretation&nbsp;of&nbsp;the&nbsp;other&nbsp;params&nbsp;if&nbsp;they&nbsp;are<br>
equal&nbsp;to&nbsp;-1.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;========================&nbsp;&nbsp;======================================<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.SIZE_AUTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;-1&nbsp;indicates&nbsp;that&nbsp;a&nbsp;class-specific<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;should&nbsp;be&nbsp;used.<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.SIZE_USE_EXISTING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Axisting&nbsp;dimensions&nbsp;should&nbsp;be&nbsp;used&nbsp;if<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;values&nbsp;are&nbsp;supplied.<br>
&nbsp;&nbsp;&nbsp;&nbsp;wxSIZE_ALLOW_MINUS_ONE&nbsp;&nbsp;&nbsp;&nbsp;Allow&nbsp;dimensions&nbsp;of&nbsp;-1&nbsp;and&nbsp;less&nbsp;to&nbsp;be<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interpreted&nbsp;as&nbsp;real&nbsp;dimensions,&nbsp;not<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;values.<br>
&nbsp;&nbsp;&nbsp;&nbsp;========================&nbsp;&nbsp;======================================</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetDropTarget"><strong>SetDropTarget</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetDropTarget">SetDropTarget</a>(self,&nbsp;DropTarget&nbsp;dropTarget)<br>
&nbsp;<br>
Associates&nbsp;a&nbsp;drop&nbsp;target&nbsp;with&nbsp;this&nbsp;window.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;already&nbsp;has<br>
a&nbsp;drop&nbsp;target,&nbsp;it&nbsp;is&nbsp;deleted.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetEventHandler"><strong>SetEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetEventHandler">SetEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;event&nbsp;handler&nbsp;for&nbsp;this&nbsp;window.&nbsp;&nbsp;An&nbsp;event&nbsp;handler&nbsp;is&nbsp;an&nbsp;object<br>
that&nbsp;is&nbsp;capable&nbsp;of&nbsp;processing&nbsp;the&nbsp;events&nbsp;sent&nbsp;to&nbsp;a&nbsp;window.&nbsp;By&nbsp;default,<br>
the&nbsp;window&nbsp;is&nbsp;its&nbsp;own&nbsp;event&nbsp;handler,&nbsp;but&nbsp;an&nbsp;application&nbsp;may&nbsp;wish&nbsp;to<br>
substitute&nbsp;another,&nbsp;for&nbsp;example&nbsp;to&nbsp;allow&nbsp;central&nbsp;implementation&nbsp;of<br>
event-handling&nbsp;for&nbsp;a&nbsp;variety&nbsp;of&nbsp;different&nbsp;window&nbsp;classes.<br>
&nbsp;<br>
It&nbsp;is&nbsp;usually&nbsp;better&nbsp;to&nbsp;use&nbsp;`wx.Window.PushEventHandler`&nbsp;since&nbsp;this&nbsp;sets<br>
up&nbsp;a&nbsp;chain&nbsp;of&nbsp;event&nbsp;handlers,&nbsp;where&nbsp;an&nbsp;event&nbsp;not&nbsp;handled&nbsp;by&nbsp;one&nbsp;event<br>
handler&nbsp;is&nbsp;handed&nbsp;to&nbsp;the&nbsp;next&nbsp;one&nbsp;in&nbsp;the&nbsp;chain.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetExtraStyle"><strong>SetExtraStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetExtraStyle">SetExtraStyle</a>(self,&nbsp;long&nbsp;exStyle)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;extra&nbsp;style&nbsp;bits&nbsp;for&nbsp;the&nbsp;window.&nbsp;&nbsp;Extra&nbsp;styles&nbsp;are&nbsp;the&nbsp;less<br>
often&nbsp;used&nbsp;style&nbsp;bits&nbsp;which&nbsp;can't&nbsp;be&nbsp;set&nbsp;with&nbsp;the&nbsp;constructor&nbsp;or&nbsp;with<br>
<a href="#NavigationToolbarWx-SetWindowStyleFlag">SetWindowStyleFlag</a>()</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetFocus"><strong>SetFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetFocus">SetFocus</a>(self)<br>
&nbsp;<br>
Set's&nbsp;the&nbsp;focus&nbsp;to&nbsp;this&nbsp;window,&nbsp;allowing&nbsp;it&nbsp;to&nbsp;receive&nbsp;keyboard&nbsp;input.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetFocusFromKbd"><strong>SetFocusFromKbd</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetFocusFromKbd">SetFocusFromKbd</a>(self)<br>
&nbsp;<br>
Set&nbsp;focus&nbsp;to&nbsp;this&nbsp;window&nbsp;as&nbsp;the&nbsp;result&nbsp;of&nbsp;a&nbsp;keyboard&nbsp;action.&nbsp;&nbsp;Normally<br>
only&nbsp;called&nbsp;internally.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetFont"><strong>SetFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetFont">SetFont</a>(self,&nbsp;Font&nbsp;font)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;font&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetForegroundColour"><strong>SetForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetForegroundColour">SetForegroundColour</a>(self,&nbsp;Colour&nbsp;colour)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;foreground&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Returns&nbsp;True&nbsp;is&nbsp;the&nbsp;colour<br>
was&nbsp;changed.&nbsp;&nbsp;The&nbsp;interpretation&nbsp;of&nbsp;foreground&nbsp;colour&nbsp;is&nbsp;dependent&nbsp;on<br>
the&nbsp;window&nbsp;class;&nbsp;it&nbsp;may&nbsp;be&nbsp;the&nbsp;text&nbsp;colour&nbsp;or&nbsp;other&nbsp;colour,&nbsp;or&nbsp;it&nbsp;may<br>
not&nbsp;be&nbsp;used&nbsp;at&nbsp;all.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetHelpText"><strong>SetHelpText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetHelpText">SetHelpText</a>(self,&nbsp;String&nbsp;text)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;help&nbsp;text&nbsp;to&nbsp;be&nbsp;used&nbsp;as&nbsp;context-sensitive&nbsp;help&nbsp;for&nbsp;this<br>
window.&nbsp;&nbsp;Note&nbsp;that&nbsp;the&nbsp;text&nbsp;is&nbsp;actually&nbsp;stored&nbsp;by&nbsp;the&nbsp;current<br>
wxHelpProvider&nbsp;implementation,&nbsp;and&nbsp;not&nbsp;in&nbsp;the&nbsp;window&nbsp;object&nbsp;itself.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetHelpTextForId"><strong>SetHelpTextForId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetHelpTextForId">SetHelpTextForId</a>(self,&nbsp;String&nbsp;text)<br>
&nbsp;<br>
Associate&nbsp;this&nbsp;help&nbsp;text&nbsp;with&nbsp;all&nbsp;windows&nbsp;with&nbsp;the&nbsp;same&nbsp;id&nbsp;as&nbsp;this<br>
one.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetId"><strong>SetId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetId">SetId</a>(self,&nbsp;int&nbsp;winid)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;identifier&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Each&nbsp;window&nbsp;has&nbsp;an&nbsp;integer<br>
identifier.&nbsp;If&nbsp;the&nbsp;application&nbsp;has&nbsp;not&nbsp;provided&nbsp;one,&nbsp;an&nbsp;identifier<br>
will&nbsp;be&nbsp;generated.&nbsp;Normally,&nbsp;the&nbsp;identifier&nbsp;should&nbsp;be&nbsp;provided&nbsp;on<br>
creation&nbsp;and&nbsp;should&nbsp;not&nbsp;be&nbsp;modified&nbsp;subsequently.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetMaxSize"><strong>SetMaxSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetMaxSize">SetMaxSize</a>(self,&nbsp;Size&nbsp;maxSize)<br>
&nbsp;<br>
A&nbsp;more&nbsp;convenient&nbsp;method&nbsp;than&nbsp;`SetSizeHints`&nbsp;for&nbsp;setting&nbsp;just&nbsp;the<br>
max&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetMinSize"><strong>SetMinSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetMinSize">SetMinSize</a>(self,&nbsp;Size&nbsp;minSize)<br>
&nbsp;<br>
A&nbsp;more&nbsp;convenient&nbsp;method&nbsp;than&nbsp;`SetSizeHints`&nbsp;for&nbsp;setting&nbsp;just&nbsp;the<br>
min&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetName"><strong>SetName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetName">SetName</a>(self,&nbsp;String&nbsp;name)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;name.&nbsp;&nbsp;The&nbsp;window&nbsp;name&nbsp;is&nbsp;used&nbsp;for&nbsp;ressource&nbsp;setting<br>
in&nbsp;X,&nbsp;it&nbsp;is&nbsp;not&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;window&nbsp;title/label</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetOwnBackgroundColour"><strong>SetOwnBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetOwnBackgroundColour">SetOwnBackgroundColour</a>(self,&nbsp;Colour&nbsp;colour)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetOwnFont"><strong>SetOwnFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetOwnFont">SetOwnFont</a>(self,&nbsp;Font&nbsp;font)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetOwnForegroundColour"><strong>SetOwnForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetOwnForegroundColour">SetOwnForegroundColour</a>(self,&nbsp;Colour&nbsp;colour)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetPosition"><strong>SetPosition</strong></a> = Move(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Move">Move</a>(self,&nbsp;Point&nbsp;pt,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetRect"><strong>SetRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetRect">SetRect</a>(self,&nbsp;Rect&nbsp;rect,&nbsp;int&nbsp;sizeFlags=SIZE_AUTO)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;and&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels&nbsp;using&nbsp;a&nbsp;wx.Rect.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetScrollPos"><strong>SetScrollPos</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetScrollPos">SetScrollPos</a>(self,&nbsp;int&nbsp;orientation,&nbsp;int&nbsp;pos,&nbsp;bool&nbsp;refresh=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;of&nbsp;one&nbsp;of&nbsp;the&nbsp;built-in&nbsp;scrollbars.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetScrollbar"><strong>SetScrollbar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetScrollbar">SetScrollbar</a>(self,&nbsp;int&nbsp;orientation,&nbsp;int&nbsp;position,&nbsp;int&nbsp;thumbSize,&nbsp;int&nbsp;range,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;refresh=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;scrollbar&nbsp;properties&nbsp;of&nbsp;a&nbsp;built-in&nbsp;scrollbar.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetSize"><strong>SetSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetSize">SetSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetSizeHints"><strong>SetSizeHints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetSizeHints">SetSizeHints</a>(self,&nbsp;int&nbsp;minW,&nbsp;int&nbsp;minH,&nbsp;int&nbsp;maxW=-1,&nbsp;int&nbsp;maxH=-1,&nbsp;int&nbsp;incW=-1,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;incH=-1)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;window&nbsp;sizes,&nbsp;and&nbsp;window<br>
size&nbsp;increments.&nbsp;If&nbsp;a&nbsp;pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the<br>
default&nbsp;values&nbsp;will&nbsp;be&nbsp;used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user<br>
will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds&nbsp;(if&nbsp;it&nbsp;is<br>
a&nbsp;top-level&nbsp;window.)&nbsp;&nbsp;Sizers&nbsp;will&nbsp;also&nbsp;inspect&nbsp;the&nbsp;minimum&nbsp;window&nbsp;size<br>
and&nbsp;will&nbsp;use&nbsp;that&nbsp;value&nbsp;if&nbsp;set&nbsp;when&nbsp;calculating&nbsp;layout.<br>
&nbsp;<br>
The&nbsp;resizing&nbsp;increments&nbsp;are&nbsp;only&nbsp;significant&nbsp;under&nbsp;Motif&nbsp;or&nbsp;Xt.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetSizeHintsSz"><strong>SetSizeHintsSz</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetSizeHintsSz">SetSizeHintsSz</a>(self,&nbsp;Size&nbsp;minSize,&nbsp;Size&nbsp;maxSize=DefaultSize,&nbsp;Size&nbsp;incSize=DefaultSize)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;window&nbsp;sizes,&nbsp;and&nbsp;window<br>
size&nbsp;increments.&nbsp;If&nbsp;a&nbsp;pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the<br>
default&nbsp;values&nbsp;will&nbsp;be&nbsp;used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user<br>
will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds&nbsp;(if&nbsp;it&nbsp;is<br>
a&nbsp;top-level&nbsp;window.)&nbsp;&nbsp;Sizers&nbsp;will&nbsp;also&nbsp;inspect&nbsp;the&nbsp;minimum&nbsp;window&nbsp;size<br>
and&nbsp;will&nbsp;use&nbsp;that&nbsp;value&nbsp;if&nbsp;set&nbsp;when&nbsp;calculating&nbsp;layout.<br>
&nbsp;<br>
The&nbsp;resizing&nbsp;increments&nbsp;are&nbsp;only&nbsp;significant&nbsp;under&nbsp;Motif&nbsp;or&nbsp;Xt.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetSizeWH"><strong>SetSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetSizeWH">SetSizeWH</a>(self,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetSizer"><strong>SetSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetSizer">SetSizer</a>(self,&nbsp;Sizer&nbsp;sizer,&nbsp;bool&nbsp;deleteOld=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window&nbsp;to&nbsp;have&nbsp;the&nbsp;given&nbsp;layout&nbsp;sizer.&nbsp;The&nbsp;window&nbsp;will&nbsp;then<br>
own&nbsp;the&nbsp;object,&nbsp;and&nbsp;will&nbsp;take&nbsp;care&nbsp;of&nbsp;its&nbsp;deletion.&nbsp;If&nbsp;an&nbsp;existing<br>
layout&nbsp;sizer&nbsp;object&nbsp;is&nbsp;already&nbsp;owned&nbsp;by&nbsp;the&nbsp;window,&nbsp;it&nbsp;will&nbsp;be&nbsp;deleted<br>
if&nbsp;the&nbsp;deleteOld&nbsp;parameter&nbsp;is&nbsp;true.&nbsp;Note&nbsp;that&nbsp;this&nbsp;function&nbsp;will&nbsp;also<br>
call&nbsp;SetAutoLayout&nbsp;implicitly&nbsp;with&nbsp;a&nbsp;True&nbsp;parameter&nbsp;if&nbsp;the&nbsp;sizer&nbsp;is<br>
non-None,&nbsp;and&nbsp;False&nbsp;otherwise.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetSizerAndFit"><strong>SetSizerAndFit</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetSizerAndFit">SetSizerAndFit</a>(self,&nbsp;Sizer&nbsp;sizer,&nbsp;bool&nbsp;deleteOld=True)<br>
&nbsp;<br>
The&nbsp;same&nbsp;as&nbsp;SetSizer,&nbsp;except&nbsp;it&nbsp;also&nbsp;sets&nbsp;the&nbsp;size&nbsp;hints&nbsp;for&nbsp;the<br>
window&nbsp;based&nbsp;on&nbsp;the&nbsp;sizer's&nbsp;minimum&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetThemeEnabled"><strong>SetThemeEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetThemeEnabled">SetThemeEnabled</a>(self,&nbsp;bool&nbsp;enableTheme)<br>
&nbsp;<br>
This&nbsp;function&nbsp;tells&nbsp;a&nbsp;window&nbsp;if&nbsp;it&nbsp;should&nbsp;use&nbsp;the&nbsp;system's&nbsp;"theme"<br>
&nbsp;code&nbsp;to&nbsp;draw&nbsp;the&nbsp;windows'&nbsp;background&nbsp;instead&nbsp;if&nbsp;its&nbsp;own&nbsp;background<br>
&nbsp;drawing&nbsp;code.&nbsp;This&nbsp;will&nbsp;only&nbsp;have&nbsp;an&nbsp;effect&nbsp;on&nbsp;platforms&nbsp;that&nbsp;support<br>
&nbsp;the&nbsp;notion&nbsp;of&nbsp;themes&nbsp;in&nbsp;user&nbsp;defined&nbsp;windows.&nbsp;One&nbsp;such&nbsp;platform&nbsp;is<br>
&nbsp;GTK+&nbsp;where&nbsp;windows&nbsp;can&nbsp;have&nbsp;(very&nbsp;colourful)&nbsp;backgrounds&nbsp;defined&nbsp;by&nbsp;a<br>
&nbsp;user's&nbsp;selected&nbsp;theme.<br>
&nbsp;<br>
Dialogs,&nbsp;notebook&nbsp;pages&nbsp;and&nbsp;the&nbsp;status&nbsp;bar&nbsp;have&nbsp;this&nbsp;flag&nbsp;set&nbsp;to&nbsp;true<br>
by&nbsp;default&nbsp;so&nbsp;that&nbsp;the&nbsp;default&nbsp;look&nbsp;and&nbsp;feel&nbsp;is&nbsp;simulated&nbsp;best.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetTitle"><strong>SetTitle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetTitle">SetTitle</a>(self,&nbsp;String&nbsp;title)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;title.&nbsp;Applicable&nbsp;only&nbsp;to&nbsp;frames&nbsp;and&nbsp;dialogs.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetTmpDefaultItem"><strong>SetTmpDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetTmpDefaultItem">SetTmpDefaultItem</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Set&nbsp;this&nbsp;child&nbsp;as&nbsp;temporary&nbsp;default</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetToolTip"><strong>SetToolTip</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetToolTip">SetToolTip</a>(self,&nbsp;ToolTip&nbsp;tip)<br>
&nbsp;<br>
Attach&nbsp;a&nbsp;tooltip&nbsp;to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetToolTipString"><strong>SetToolTipString</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetToolTipString">SetToolTipString</a>(self,&nbsp;String&nbsp;tip)<br>
&nbsp;<br>
Attach&nbsp;a&nbsp;tooltip&nbsp;to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetValidator"><strong>SetValidator</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetValidator">SetValidator</a>(self,&nbsp;Validator&nbsp;validator)<br>
&nbsp;<br>
Deletes&nbsp;the&nbsp;current&nbsp;validator&nbsp;(if&nbsp;any)&nbsp;and&nbsp;sets&nbsp;the&nbsp;window&nbsp;validator,<br>
having&nbsp;called&nbsp;wx.Validator.Clone&nbsp;to&nbsp;create&nbsp;a&nbsp;new&nbsp;validator&nbsp;of&nbsp;this<br>
type.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetVirtualSize"><strong>SetVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetVirtualSize">SetVirtualSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;a&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows&nbsp;this<br>
is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetVirtualSizeHints"><strong>SetVirtualSizeHints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetVirtualSizeHints">SetVirtualSizeHints</a>(self,&nbsp;int&nbsp;minW,&nbsp;int&nbsp;minH,&nbsp;int&nbsp;maxW=-1,&nbsp;int&nbsp;maxH=-1)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;virtual&nbsp;window&nbsp;sizes.&nbsp;If&nbsp;a<br>
pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the&nbsp;default&nbsp;values&nbsp;will&nbsp;be<br>
used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user&nbsp;will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size<br>
the&nbsp;virtual&nbsp;area&nbsp;of&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetVirtualSizeHintsSz"><strong>SetVirtualSizeHintsSz</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetVirtualSizeHintsSz">SetVirtualSizeHintsSz</a>(self,&nbsp;Size&nbsp;minSize,&nbsp;Size&nbsp;maxSize=DefaultSize)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;virtual&nbsp;window&nbsp;sizes.&nbsp;If&nbsp;a<br>
pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the&nbsp;default&nbsp;values&nbsp;will&nbsp;be<br>
used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user&nbsp;will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size<br>
the&nbsp;virtual&nbsp;area&nbsp;of&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetVirtualSizeWH"><strong>SetVirtualSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetVirtualSizeWH">SetVirtualSizeWH</a>(self,&nbsp;int&nbsp;w,&nbsp;int&nbsp;h)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;a&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows&nbsp;this<br>
is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetWindowStyle"><strong>SetWindowStyle</strong></a> = SetWindowStyleFlag(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetWindowStyleFlag">SetWindowStyleFlag</a>(self,&nbsp;long&nbsp;style)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;Please&nbsp;note&nbsp;that&nbsp;some&nbsp;styles&nbsp;cannot&nbsp;be<br>
changed&nbsp;after&nbsp;the&nbsp;window&nbsp;creation&nbsp;and&nbsp;that&nbsp;<a href="#NavigationToolbarWx-Refresh">Refresh</a>()&nbsp;might&nbsp;need&nbsp;to&nbsp;be<br>
called&nbsp;after&nbsp;changing&nbsp;the&nbsp;others&nbsp;for&nbsp;the&nbsp;change&nbsp;to&nbsp;take&nbsp;place<br>
immediately.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetWindowStyleFlag"><strong>SetWindowStyleFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetWindowStyleFlag">SetWindowStyleFlag</a>(self,&nbsp;long&nbsp;style)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;Please&nbsp;note&nbsp;that&nbsp;some&nbsp;styles&nbsp;cannot&nbsp;be<br>
changed&nbsp;after&nbsp;the&nbsp;window&nbsp;creation&nbsp;and&nbsp;that&nbsp;<a href="#NavigationToolbarWx-Refresh">Refresh</a>()&nbsp;might&nbsp;need&nbsp;to&nbsp;be<br>
called&nbsp;after&nbsp;changing&nbsp;the&nbsp;others&nbsp;for&nbsp;the&nbsp;change&nbsp;to&nbsp;take&nbsp;place<br>
immediately.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetWindowVariant"><strong>SetWindowVariant</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetWindowVariant">SetWindowVariant</a>(self,&nbsp;int&nbsp;variant)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;variant&nbsp;of&nbsp;the&nbsp;window/font&nbsp;size&nbsp;to&nbsp;use&nbsp;for&nbsp;this&nbsp;window,&nbsp;if<br>
the&nbsp;platform&nbsp;supports&nbsp;variants,&nbsp;for&nbsp;example,&nbsp;wxMac.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ShouldInheritColours"><strong>ShouldInheritColours</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-ShouldInheritColours">ShouldInheritColours</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Return&nbsp;true&nbsp;from&nbsp;here&nbsp;to&nbsp;allow&nbsp;the&nbsp;colours&nbsp;of&nbsp;this&nbsp;window&nbsp;to&nbsp;be<br>
changed&nbsp;by&nbsp;InheritAttributes,&nbsp;returning&nbsp;false&nbsp;forbids&nbsp;inheriting&nbsp;them<br>
from&nbsp;the&nbsp;parent&nbsp;window.<br>
&nbsp;<br>
The&nbsp;base&nbsp;class&nbsp;version&nbsp;returns&nbsp;false,&nbsp;but&nbsp;this&nbsp;method&nbsp;is&nbsp;overridden&nbsp;in<br>
wxControl&nbsp;where&nbsp;it&nbsp;returns&nbsp;true.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Show"><strong>Show</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Show">Show</a>(self,&nbsp;bool&nbsp;show=True)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Shows&nbsp;or&nbsp;hides&nbsp;the&nbsp;window.&nbsp;You&nbsp;may&nbsp;need&nbsp;to&nbsp;call&nbsp;Raise&nbsp;for&nbsp;a&nbsp;top&nbsp;level<br>
window&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;bring&nbsp;it&nbsp;to&nbsp;top,&nbsp;although&nbsp;this&nbsp;is&nbsp;not&nbsp;needed&nbsp;if<br>
Show&nbsp;is&nbsp;called&nbsp;immediately&nbsp;after&nbsp;the&nbsp;frame&nbsp;creation.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if<br>
the&nbsp;window&nbsp;has&nbsp;been&nbsp;shown&nbsp;or&nbsp;hidden&nbsp;or&nbsp;False&nbsp;if&nbsp;nothing&nbsp;was&nbsp;done<br>
because&nbsp;it&nbsp;already&nbsp;was&nbsp;in&nbsp;the&nbsp;requested&nbsp;state.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Thaw"><strong>Thaw</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Thaw">Thaw</a>(self)<br>
&nbsp;<br>
Reenables&nbsp;window&nbsp;updating&nbsp;after&nbsp;a&nbsp;previous&nbsp;call&nbsp;to&nbsp;Freeze.&nbsp;&nbsp;Calls&nbsp;to<br>
Freeze/Thaw&nbsp;may&nbsp;be&nbsp;nested,&nbsp;so&nbsp;Thaw&nbsp;must&nbsp;be&nbsp;called&nbsp;the&nbsp;same&nbsp;number&nbsp;of<br>
times&nbsp;that&nbsp;Freeze&nbsp;was&nbsp;before&nbsp;the&nbsp;window&nbsp;will&nbsp;be&nbsp;updated.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-TransferDataFromWindow"><strong>TransferDataFromWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-TransferDataFromWindow">TransferDataFromWindow</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Transfers&nbsp;values&nbsp;from&nbsp;child&nbsp;controls&nbsp;to&nbsp;data&nbsp;areas&nbsp;specified&nbsp;by&nbsp;their<br>
validators.&nbsp;Returns&nbsp;false&nbsp;if&nbsp;a&nbsp;transfer&nbsp;failed.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has<br>
wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra&nbsp;style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will<br>
also&nbsp;call&nbsp;<a href="#NavigationToolbarWx-TransferDataFromWindow">TransferDataFromWindow</a>()&nbsp;of&nbsp;all&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-TransferDataToWindow"><strong>TransferDataToWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-TransferDataToWindow">TransferDataToWindow</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Transfers&nbsp;values&nbsp;to&nbsp;child&nbsp;controls&nbsp;from&nbsp;data&nbsp;areas&nbsp;specified&nbsp;by&nbsp;their<br>
validators.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has&nbsp;wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra<br>
style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will&nbsp;also&nbsp;call&nbsp;<a href="#NavigationToolbarWx-TransferDataToWindow">TransferDataToWindow</a>()&nbsp;of<br>
all&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-UnregisterHotKey"><strong>UnregisterHotKey</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-UnregisterHotKey">UnregisterHotKey</a>(self,&nbsp;int&nbsp;hotkeyId)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Unregisters&nbsp;a&nbsp;system&nbsp;wide&nbsp;hotkey.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Update"><strong>Update</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Update">Update</a>(self)<br>
&nbsp;<br>
Calling&nbsp;this&nbsp;method&nbsp;immediately&nbsp;repaints&nbsp;the&nbsp;invalidated&nbsp;area&nbsp;of&nbsp;the<br>
window&nbsp;instead&nbsp;of&nbsp;waiting&nbsp;for&nbsp;the&nbsp;EVT_PAINT&nbsp;event&nbsp;to&nbsp;happen,&nbsp;(normally<br>
this&nbsp;would&nbsp;usually&nbsp;only&nbsp;happen&nbsp;when&nbsp;the&nbsp;flow&nbsp;of&nbsp;control&nbsp;returns&nbsp;to&nbsp;the<br>
event&nbsp;loop.)&nbsp;&nbsp;Notice&nbsp;that&nbsp;this&nbsp;function&nbsp;doesn't&nbsp;refresh&nbsp;the&nbsp;window&nbsp;and<br>
does&nbsp;nothing&nbsp;if&nbsp;the&nbsp;window&nbsp;has&nbsp;been&nbsp;already&nbsp;repainted.&nbsp;&nbsp;Use&nbsp;Refresh<br>
first&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;immediately&nbsp;redraw&nbsp;the&nbsp;window&nbsp;(or&nbsp;some&nbsp;portion&nbsp;of<br>
it)&nbsp;unconditionally.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-UpdateWindowUI"><strong>UpdateWindowUI</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-UpdateWindowUI">UpdateWindowUI</a>(self,&nbsp;long&nbsp;flags=UPDATE_UI_NONE)<br>
&nbsp;<br>
This&nbsp;function&nbsp;sends&nbsp;EVT_UPDATE_UI&nbsp;events&nbsp;to&nbsp;the&nbsp;window.&nbsp;The&nbsp;particular<br>
implementation&nbsp;depends&nbsp;on&nbsp;the&nbsp;window;&nbsp;for&nbsp;example&nbsp;a&nbsp;wx.<a href="wx._controls.html#ToolBar">ToolBar</a>&nbsp;will<br>
send&nbsp;an&nbsp;update&nbsp;UI&nbsp;event&nbsp;for&nbsp;each&nbsp;toolbar&nbsp;button,&nbsp;and&nbsp;a&nbsp;wx.<a href="wx._windows.html#Frame">Frame</a>&nbsp;will<br>
send&nbsp;an&nbsp;update&nbsp;UI&nbsp;event&nbsp;for&nbsp;each&nbsp;menubar&nbsp;menu&nbsp;item.&nbsp;You&nbsp;can&nbsp;call&nbsp;this<br>
function&nbsp;from&nbsp;your&nbsp;application&nbsp;to&nbsp;ensure&nbsp;that&nbsp;your&nbsp;UI&nbsp;is&nbsp;up-to-date&nbsp;at<br>
a&nbsp;particular&nbsp;point&nbsp;in&nbsp;time&nbsp;(as&nbsp;far&nbsp;as&nbsp;your&nbsp;EVT_UPDATE_UI&nbsp;handlers&nbsp;are<br>
concerned).&nbsp;This&nbsp;may&nbsp;be&nbsp;necessary&nbsp;if&nbsp;you&nbsp;have&nbsp;called<br>
`wx.UpdateUIEvent.SetMode`&nbsp;or&nbsp;`wx.UpdateUIEvent.SetUpdateInterval`&nbsp;to<br>
limit&nbsp;the&nbsp;overhead&nbsp;that&nbsp;wxWindows&nbsp;incurs&nbsp;by&nbsp;sending&nbsp;update&nbsp;UI&nbsp;events<br>
in&nbsp;idle&nbsp;time.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-UseBgCol"><strong>UseBgCol</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-UseBgCol">UseBgCol</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Validate"><strong>Validate</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Validate">Validate</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Validates&nbsp;the&nbsp;current&nbsp;values&nbsp;of&nbsp;the&nbsp;child&nbsp;controls&nbsp;using&nbsp;their<br>
validators.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has&nbsp;wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra<br>
style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will&nbsp;also&nbsp;call&nbsp;<a href="#NavigationToolbarWx-Validate">Validate</a>()&nbsp;of&nbsp;all&nbsp;child<br>
windows.&nbsp;&nbsp;Returns&nbsp;false&nbsp;if&nbsp;any&nbsp;of&nbsp;the&nbsp;validations&nbsp;failed.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-WarpPointer"><strong>WarpPointer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-WarpPointer">WarpPointer</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;pointer&nbsp;to&nbsp;the&nbsp;given&nbsp;position&nbsp;on&nbsp;the&nbsp;window.<br>
&nbsp;<br>
NOTE:&nbsp;This&nbsp;function&nbsp;is&nbsp;not&nbsp;supported&nbsp;under&nbsp;Mac&nbsp;because&nbsp;Apple&nbsp;Human<br>
Interface&nbsp;Guidelines&nbsp;forbid&nbsp;moving&nbsp;the&nbsp;mouse&nbsp;cursor&nbsp;programmatically.</tt></dd></dl>

<hr>
Static methods inherited from <a href="wx._core.html#Window">wx._core.Window</a>:<br>
<dl><dt><a name="NavigationToolbarWx-FindFocus"><strong>FindFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-FindFocus">FindFocus</a>()&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;window&nbsp;or&nbsp;control&nbsp;that&nbsp;currently&nbsp;has&nbsp;the&nbsp;keyboard&nbsp;focus,<br>
or&nbsp;None.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetCapture"><strong>GetCapture</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetCapture">GetCapture</a>()&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;window&nbsp;which&nbsp;currently&nbsp;captures&nbsp;the&nbsp;mouse&nbsp;or&nbsp;None</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-NewControlId"><strong>NewControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-NewControlId">NewControlId</a>()&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Generate&nbsp;a&nbsp;control&nbsp;id&nbsp;for&nbsp;the&nbsp;controls&nbsp;which&nbsp;were&nbsp;not&nbsp;given&nbsp;one.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-NextControlId"><strong>NextControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-NextControlId">NextControlId</a>(int&nbsp;winid)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;id&nbsp;of&nbsp;the&nbsp;control&nbsp;following&nbsp;the&nbsp;one&nbsp;with&nbsp;the&nbsp;given<br>
autogenerated)&nbsp;id</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-PrevControlId"><strong>PrevControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-PrevControlId">PrevControlId</a>(int&nbsp;winid)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;id&nbsp;of&nbsp;the&nbsp;control&nbsp;preceding&nbsp;the&nbsp;one&nbsp;with&nbsp;the&nbsp;given<br>
autogenerated)&nbsp;id</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#EvtHandler">wx._core.EvtHandler</a>:<br>
<dl><dt><a name="NavigationToolbarWx-AddPendingEvent"><strong>AddPendingEvent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-AddPendingEvent">AddPendingEvent</a>(self,&nbsp;Event&nbsp;event)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Bind"><strong>Bind</strong></a>(self, event, handler, source<font color="#909090">=None</font>, id<font color="#909090">=-1</font>, id2<font color="#909090">=-1</font>)</dt><dd><tt>Bind&nbsp;an&nbsp;event&nbsp;to&nbsp;an&nbsp;event&nbsp;handler.<br>
&nbsp;<br>
:param&nbsp;event:&nbsp;One&nbsp;of&nbsp;the&nbsp;EVT_*&nbsp;objects&nbsp;that&nbsp;specifies&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type&nbsp;of&nbsp;event&nbsp;to&nbsp;bind,<br>
&nbsp;<br>
:param&nbsp;handler:&nbsp;A&nbsp;callable&nbsp;object&nbsp;to&nbsp;be&nbsp;invoked&nbsp;when&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event&nbsp;is&nbsp;delivered&nbsp;to&nbsp;self.&nbsp;&nbsp;Pass&nbsp;None&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;disconnect&nbsp;an&nbsp;event&nbsp;handler.<br>
&nbsp;<br>
:param&nbsp;source:&nbsp;Sometimes&nbsp;the&nbsp;event&nbsp;originates&nbsp;from&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;different&nbsp;window&nbsp;than&nbsp;self,&nbsp;but&nbsp;you&nbsp;still<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;want&nbsp;to&nbsp;catch&nbsp;it&nbsp;in&nbsp;self.&nbsp;&nbsp;(For&nbsp;example,&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button&nbsp;event&nbsp;delivered&nbsp;to&nbsp;a&nbsp;frame.)&nbsp;&nbsp;By<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;passing&nbsp;the&nbsp;source&nbsp;of&nbsp;the&nbsp;event,&nbsp;the&nbsp;event<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handling&nbsp;system&nbsp;is&nbsp;able&nbsp;to&nbsp;differentiate<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;between&nbsp;the&nbsp;same&nbsp;event&nbsp;type&nbsp;from&nbsp;different<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controls.<br>
&nbsp;<br>
:param&nbsp;id:&nbsp;Used&nbsp;to&nbsp;spcify&nbsp;the&nbsp;event&nbsp;source&nbsp;by&nbsp;ID&nbsp;instead<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;instance.<br>
&nbsp;<br>
:param&nbsp;id2:&nbsp;Used&nbsp;when&nbsp;it&nbsp;is&nbsp;desirable&nbsp;to&nbsp;bind&nbsp;a&nbsp;handler<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;a&nbsp;range&nbsp;of&nbsp;IDs,&nbsp;such&nbsp;as&nbsp;with&nbsp;EVT_MENU_RANGE.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Connect"><strong>Connect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Connect">Connect</a>(self,&nbsp;int&nbsp;id,&nbsp;int&nbsp;lastId,&nbsp;int&nbsp;eventType,&nbsp;PyObject&nbsp;func)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Disconnect"><strong>Disconnect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-Disconnect">Disconnect</a>(self,&nbsp;int&nbsp;id,&nbsp;int&nbsp;lastId=-1,&nbsp;wxEventType&nbsp;eventType=wxEVT_NULL)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetEvtHandlerEnabled"><strong>GetEvtHandlerEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetEvtHandlerEnabled">GetEvtHandlerEnabled</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetNextHandler"><strong>GetNextHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetNextHandler">GetNextHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetPreviousHandler"><strong>GetPreviousHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetPreviousHandler">GetPreviousHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ProcessEvent"><strong>ProcessEvent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-ProcessEvent">ProcessEvent</a>(self,&nbsp;Event&nbsp;event)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ProcessPendingEvents"><strong>ProcessPendingEvents</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-ProcessPendingEvents">ProcessPendingEvents</a>(self)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetEvtHandlerEnabled"><strong>SetEvtHandlerEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetEvtHandlerEnabled">SetEvtHandlerEnabled</a>(self,&nbsp;bool&nbsp;enabled)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetNextHandler"><strong>SetNextHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetNextHandler">SetNextHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetPreviousHandler"><strong>SetPreviousHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-SetPreviousHandler">SetPreviousHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Unbind"><strong>Unbind</strong></a>(self, event, source<font color="#909090">=None</font>, id<font color="#909090">=-1</font>, id2<font color="#909090">=-1</font>)</dt><dd><tt>Disconencts&nbsp;the&nbsp;event&nbsp;handler&nbsp;binding&nbsp;for&nbsp;event&nbsp;from&nbsp;self.<br>
Returns&nbsp;True&nbsp;if&nbsp;successful.</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#Object">wx._core.Object</a>:<br>
<dl><dt><a name="NavigationToolbarWx-GetClassName"><strong>GetClassName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#NavigationToolbarWx-GetClassName">GetClassName</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;class&nbsp;name&nbsp;of&nbsp;the&nbsp;C++&nbsp;class&nbsp;using&nbsp;wxRTTI.</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="wx._core.html#Object">wx._core.Object</a>:<br>
<dl><dt><strong>__dict__</strong> = &lt;dictproxy object&gt;<dd><tt>dictionary&nbsp;for&nbsp;instance&nbsp;variables&nbsp;(if&nbsp;defined)</tt></dl>

<dl><dt><strong>__weakref__</strong> = &lt;attribute '__weakref__' of 'Object' objects&gt;<dd><tt>list&nbsp;of&nbsp;weak&nbsp;references&nbsp;to&nbsp;the&nbsp;object&nbsp;(if&nbsp;defined)</tt></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="PrintoutWx">class <strong>PrintoutWx</strong></a>(<a href="wx._windows.html#Printout">wx._windows.Printout</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Simple&nbsp;wrapper&nbsp;around&nbsp;wx&nbsp;<a href="wx._windows.html#Printout">Printout</a>&nbsp;class&nbsp;--&nbsp;all&nbsp;the&nbsp;real&nbsp;work<br>
here&nbsp;is&nbsp;scaling&nbsp;the&nbsp;matplotlib&nbsp;canvas&nbsp;bitmap&nbsp;to&nbsp;the&nbsp;current<br>
printer's&nbsp;definition.<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.backends.backend_wx.html#PrintoutWx">PrintoutWx</a></dd>
<dd><a href="wx._windows.html#Printout">wx._windows.Printout</a></dd>
<dd><a href="wx._core.html#Object">wx._core.Object</a></dd>
<dd><a href="__builtin__.html#object">__builtin__.object</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="PrintoutWx-GetPageInfo"><strong>GetPageInfo</strong></a>(self)</dt></dl>

<dl><dt><a name="PrintoutWx-HasPage"><strong>HasPage</strong></a>(self, page)</dt></dl>

<dl><dt><a name="PrintoutWx-OnPrintPage"><strong>OnPrintPage</strong></a>(self, page)</dt></dl>

<dl><dt><a name="PrintoutWx-__init__"><strong>__init__</strong></a>(self, canvas, width<font color="#909090">=5.5</font>, margin<font color="#909090">=0.5</font>, title<font color="#909090">='matplotlib'</font>)</dt></dl>

<hr>
Methods inherited from <a href="wx._windows.html#Printout">wx._windows.Printout</a>:<br>
<dl><dt><a name="PrintoutWx-GetDC"><strong>GetDC</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#PrintoutWx-GetDC">GetDC</a>(self)&nbsp;-&gt;&nbsp;DC</tt></dd></dl>

<dl><dt><a name="PrintoutWx-GetPPIPrinter"><strong>GetPPIPrinter</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#PrintoutWx-GetPPIPrinter">GetPPIPrinter</a>()&nbsp;-&gt;&nbsp;(x,y)</tt></dd></dl>

<dl><dt><a name="PrintoutWx-GetPPIScreen"><strong>GetPPIScreen</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#PrintoutWx-GetPPIScreen">GetPPIScreen</a>()&nbsp;-&gt;&nbsp;(x,y)</tt></dd></dl>

<dl><dt><a name="PrintoutWx-GetPageSizeMM"><strong>GetPageSizeMM</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#PrintoutWx-GetPageSizeMM">GetPageSizeMM</a>()&nbsp;-&gt;&nbsp;(w,&nbsp;h)</tt></dd></dl>

<dl><dt><a name="PrintoutWx-GetPageSizePixels"><strong>GetPageSizePixels</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#PrintoutWx-GetPageSizePixels">GetPageSizePixels</a>()&nbsp;-&gt;&nbsp;(w,&nbsp;h)</tt></dd></dl>

<dl><dt><a name="PrintoutWx-GetTitle"><strong>GetTitle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#PrintoutWx-GetTitle">GetTitle</a>(self)&nbsp;-&gt;&nbsp;String</tt></dd></dl>

<dl><dt><a name="PrintoutWx-IsPreview"><strong>IsPreview</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#PrintoutWx-IsPreview">IsPreview</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="PrintoutWx-SetDC"><strong>SetDC</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#PrintoutWx-SetDC">SetDC</a>(self,&nbsp;DC&nbsp;dc)</tt></dd></dl>

<dl><dt><a name="PrintoutWx-SetIsPreview"><strong>SetIsPreview</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#PrintoutWx-SetIsPreview">SetIsPreview</a>(self,&nbsp;bool&nbsp;p)</tt></dd></dl>

<dl><dt><a name="PrintoutWx-SetPPIPrinter"><strong>SetPPIPrinter</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#PrintoutWx-SetPPIPrinter">SetPPIPrinter</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)</tt></dd></dl>

<dl><dt><a name="PrintoutWx-SetPPIScreen"><strong>SetPPIScreen</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#PrintoutWx-SetPPIScreen">SetPPIScreen</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)</tt></dd></dl>

<dl><dt><a name="PrintoutWx-SetPageSizeMM"><strong>SetPageSizeMM</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#PrintoutWx-SetPageSizeMM">SetPageSizeMM</a>(self,&nbsp;int&nbsp;w,&nbsp;int&nbsp;h)</tt></dd></dl>

<dl><dt><a name="PrintoutWx-SetPageSizePixels"><strong>SetPageSizePixels</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#PrintoutWx-SetPageSizePixels">SetPageSizePixels</a>(self,&nbsp;int&nbsp;w,&nbsp;int&nbsp;h)</tt></dd></dl>

<dl><dt><a name="PrintoutWx-__repr__"><strong>__repr__</strong></a>(self)</dt></dl>

<dl><dt><a name="PrintoutWx-base_GetPageInfo"><strong>base_GetPageInfo</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#PrintoutWx-base_GetPageInfo">base_GetPageInfo</a>()&nbsp;-&gt;&nbsp;(minPage,&nbsp;maxPage,&nbsp;pageFrom,&nbsp;pageTo)</tt></dd></dl>

<dl><dt><a name="PrintoutWx-base_HasPage"><strong>base_HasPage</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#PrintoutWx-base_HasPage">base_HasPage</a>(self,&nbsp;int&nbsp;page)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="PrintoutWx-base_OnBeginDocument"><strong>base_OnBeginDocument</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#PrintoutWx-base_OnBeginDocument">base_OnBeginDocument</a>(self,&nbsp;int&nbsp;startPage,&nbsp;int&nbsp;endPage)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="PrintoutWx-base_OnBeginPrinting"><strong>base_OnBeginPrinting</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#PrintoutWx-base_OnBeginPrinting">base_OnBeginPrinting</a>(self)</tt></dd></dl>

<dl><dt><a name="PrintoutWx-base_OnEndDocument"><strong>base_OnEndDocument</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#PrintoutWx-base_OnEndDocument">base_OnEndDocument</a>(self)</tt></dd></dl>

<dl><dt><a name="PrintoutWx-base_OnEndPrinting"><strong>base_OnEndPrinting</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#PrintoutWx-base_OnEndPrinting">base_OnEndPrinting</a>(self)</tt></dd></dl>

<dl><dt><a name="PrintoutWx-base_OnPreparePrinting"><strong>base_OnPreparePrinting</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#PrintoutWx-base_OnPreparePrinting">base_OnPreparePrinting</a>(self)</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#Object">wx._core.Object</a>:<br>
<dl><dt><a name="PrintoutWx-Destroy"><strong>Destroy</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#PrintoutWx-Destroy">Destroy</a>(self)<br>
&nbsp;<br>
Deletes&nbsp;the&nbsp;C++&nbsp;object&nbsp;this&nbsp;Python&nbsp;object&nbsp;is&nbsp;a&nbsp;proxy&nbsp;for.</tt></dd></dl>

<dl><dt><a name="PrintoutWx-GetClassName"><strong>GetClassName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#PrintoutWx-GetClassName">GetClassName</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;class&nbsp;name&nbsp;of&nbsp;the&nbsp;C++&nbsp;class&nbsp;using&nbsp;wxRTTI.</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="wx._core.html#Object">wx._core.Object</a>:<br>
<dl><dt><strong>__dict__</strong> = &lt;dictproxy object&gt;<dd><tt>dictionary&nbsp;for&nbsp;instance&nbsp;variables&nbsp;(if&nbsp;defined)</tt></dl>

<dl><dt><strong>__weakref__</strong> = &lt;attribute '__weakref__' of 'Object' objects&gt;<dd><tt>list&nbsp;of&nbsp;weak&nbsp;references&nbsp;to&nbsp;the&nbsp;object&nbsp;(if&nbsp;defined)</tt></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="RendererWx">class <strong>RendererWx</strong></a>(<a href="matplotlib.backend_bases.html#RendererBase">matplotlib.backend_bases.RendererBase</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>The&nbsp;renderer&nbsp;handles&nbsp;all&nbsp;the&nbsp;drawing&nbsp;primitives&nbsp;using&nbsp;a&nbsp;graphics<br>
context&nbsp;instance&nbsp;that&nbsp;controls&nbsp;the&nbsp;colors/styles.&nbsp;It&nbsp;acts&nbsp;as&nbsp;the<br>
'renderer'&nbsp;instance&nbsp;used&nbsp;by&nbsp;many&nbsp;classes&nbsp;in&nbsp;the&nbsp;hierarchy.<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="RendererWx-__init__"><strong>__init__</strong></a>(self, bitmap, dpi)</dt><dd><tt>Initialise&nbsp;a&nbsp;wxWindows&nbsp;renderer&nbsp;instance.</tt></dd></dl>

<dl><dt><a name="RendererWx-draw_arc"><strong>draw_arc</strong></a>(self, gc, rgbFace, x, y, width, height, angle1, angle2, rotation)</dt><dd><tt>Draw&nbsp;an&nbsp;arc&nbsp;centered&nbsp;at&nbsp;x,y&nbsp;with&nbsp;width&nbsp;and&nbsp;height&nbsp;and&nbsp;angles<br>
from&nbsp;0.0&nbsp;to&nbsp;360.0.<br>
If&nbsp;rgbFace&nbsp;is&nbsp;present,&nbsp;fill&nbsp;the&nbsp;figure&nbsp;in&nbsp;this&nbsp;colour,&nbsp;otherwise<br>
it&nbsp;is&nbsp;not&nbsp;filled.</tt></dd></dl>

<dl><dt><a name="RendererWx-draw_line"><strong>draw_line</strong></a>(self, gc, x1, y1, x2, y2)</dt><dd><tt>Draw&nbsp;a&nbsp;single&nbsp;line&nbsp;from&nbsp;x1,y1&nbsp;to&nbsp;x2,y2</tt></dd></dl>

<dl><dt><a name="RendererWx-draw_lines"><strong>draw_lines</strong></a>(self, gc, x, y)</dt><dd><tt>x&nbsp;and&nbsp;y&nbsp;are&nbsp;equal&nbsp;length&nbsp;arrays,&nbsp;draw&nbsp;lines&nbsp;connecting&nbsp;each<br>
point&nbsp;in&nbsp;x,&nbsp;y</tt></dd></dl>

<dl><dt><a name="RendererWx-draw_point"><strong>draw_point</strong></a>(self, gc, x, y)</dt><dd><tt>Draw&nbsp;a&nbsp;single&nbsp;point&nbsp;at&nbsp;x,y</tt></dd></dl>

<dl><dt><a name="RendererWx-draw_polygon"><strong>draw_polygon</strong></a>(self, gc, rgbFace, points)</dt><dd><tt>Draw&nbsp;a&nbsp;polygon.&nbsp;&nbsp;points&nbsp;is&nbsp;a&nbsp;len&nbsp;vertices&nbsp;tuple,&nbsp;each&nbsp;element<br>
giving&nbsp;the&nbsp;x,y&nbsp;coords&nbsp;a&nbsp;vertex</tt></dd></dl>

<dl><dt><a name="RendererWx-draw_rectangle"><strong>draw_rectangle</strong></a>(self, gc, rgbFace, x, y, width, height)</dt><dd><tt>Draw&nbsp;a&nbsp;rectangle&nbsp;at&nbsp;lower&nbsp;left&nbsp;x,y&nbsp;with&nbsp;width&nbsp;and&nbsp;height<br>
If&nbsp;filled=True,&nbsp;fill&nbsp;the&nbsp;rectangle&nbsp;with&nbsp;the&nbsp;gc&nbsp;foreground<br>
gc&nbsp;is&nbsp;a&nbsp;GraphicsContext&nbsp;instance</tt></dd></dl>

<dl><dt><a name="RendererWx-draw_text"><strong>draw_text</strong></a>(self, gc, x, y, s, prop, angle, ismath)</dt><dd><tt>Render&nbsp;the&nbsp;matplotlib.text.Text&nbsp;instance<br>
None)</tt></dd></dl>

<dl><dt><a name="RendererWx-flipy"><strong>flipy</strong></a>(self)</dt></dl>

<dl><dt><a name="RendererWx-get_canvas_width_height"><strong>get_canvas_width_height</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;canvas&nbsp;width&nbsp;and&nbsp;height&nbsp;in&nbsp;display&nbsp;coords</tt></dd></dl>

<dl><dt><a name="RendererWx-get_gc"><strong>get_gc</strong></a>(self)</dt><dd><tt>Fetch&nbsp;the&nbsp;locally&nbsp;cached&nbsp;gc.</tt></dd></dl>

<dl><dt><a name="RendererWx-get_text_width_height"><strong>get_text_width_height</strong></a>(self, s, prop, ismath)</dt><dd><tt>get&nbsp;the&nbsp;width&nbsp;and&nbsp;height&nbsp;in&nbsp;display&nbsp;coords&nbsp;of&nbsp;the&nbsp;string&nbsp;s<br>
with&nbsp;FontPropertry&nbsp;prop</tt></dd></dl>

<dl><dt><a name="RendererWx-get_wx_font"><strong>get_wx_font</strong></a>(self, s, prop)</dt><dd><tt>Return&nbsp;a&nbsp;wx&nbsp;font.&nbsp;&nbsp;Cache&nbsp;instances&nbsp;in&nbsp;a&nbsp;font&nbsp;dictionary&nbsp;for<br>
efficiency</tt></dd></dl>

<dl><dt><a name="RendererWx-new_gc"><strong>new_gc</strong></a>(self)</dt><dd><tt>Return&nbsp;an&nbsp;instance&nbsp;of&nbsp;a&nbsp;<a href="#GraphicsContextWx">GraphicsContextWx</a>,&nbsp;and&nbsp;sets&nbsp;the&nbsp;current&nbsp;gc&nbsp;copy</tt></dd></dl>

<dl><dt><a name="RendererWx-offset_text_height"><strong>offset_text_height</strong></a>(self)</dt></dl>

<dl><dt><a name="RendererWx-points_to_pixels"><strong>points_to_pixels</strong></a>(self, points)</dt><dd><tt>convert&nbsp;point&nbsp;measures&nbsp;to&nbsp;pixes&nbsp;using&nbsp;dpi&nbsp;and&nbsp;the&nbsp;pixels&nbsp;per<br>
inch&nbsp;of&nbsp;the&nbsp;display</tt></dd></dl>

<hr>
Data and other attributes defined here:<br>
<dl><dt><strong>fontangles</strong> = {'italic': 93, 'normal': 90, 'oblique': 94}</dl>

<dl><dt><strong>fontnames</strong> = {'Courier': 75, 'Decorative': 71, 'Modern': 75, 'Roman': 72, 'Sans': 74, 'Script': 73, 'courier': 75}</dl>

<dl><dt><strong>fontweights</strong> = {100: 91, 200: 91, 300: 91, 400: 90, 500: 90, 600: 90, 700: 92, 800: 92, 900: 92, 'black': 92, ...}</dl>

<hr>
Methods inherited from <a href="matplotlib.backend_bases.html#RendererBase">matplotlib.backend_bases.RendererBase</a>:<br>
<dl><dt><a name="RendererWx-close_group"><strong>close_group</strong></a>(self, s)</dt><dd><tt>close&nbsp;a&nbsp;grouping&nbsp;element&nbsp;with&nbsp;label&nbsp;s<br>
Is&nbsp;only&nbsp;currently&nbsp;used&nbsp;by&nbsp;backend_svg</tt></dd></dl>

<dl><dt><a name="RendererWx-draw_image"><strong>draw_image</strong></a>(self, x, y, im, bbox)</dt><dd><tt>Draw&nbsp;the&nbsp;Image&nbsp;instance&nbsp;into&nbsp;the&nbsp;current&nbsp;axes;&nbsp;x&nbsp;is&nbsp;the<br>
distance&nbsp;in&nbsp;pixels&nbsp;from&nbsp;the&nbsp;left&nbsp;hand&nbsp;side&nbsp;of&nbsp;the&nbsp;canvas.&nbsp;y&nbsp;is<br>
the&nbsp;distance&nbsp;from&nbsp;the&nbsp;origin.&nbsp;&nbsp;That&nbsp;is,&nbsp;if&nbsp;origin&nbsp;is&nbsp;upper,&nbsp;y<br>
is&nbsp;the&nbsp;distance&nbsp;from&nbsp;top.&nbsp;&nbsp;If&nbsp;origin&nbsp;is&nbsp;lower,&nbsp;y&nbsp;is&nbsp;the<br>
distance&nbsp;from&nbsp;bottom<br>
&nbsp;<br>
bbox&nbsp;is&nbsp;a&nbsp;matplotlib.transforms.BBox&nbsp;instance&nbsp;for&nbsp;clipping,&nbsp;or<br>
None</tt></dd></dl>

<dl><dt><a name="RendererWx-draw_line_collection"><strong>draw_line_collection</strong></a>(self, segments, transform, clipbox, colors, linewidths, linestyle, antialiaseds, offsets, transOffset)</dt><dd><tt>This&nbsp;is&nbsp;a&nbsp;function&nbsp;for&nbsp;optimized&nbsp;line&nbsp;drawing.&nbsp;If&nbsp;you&nbsp;need&nbsp;to&nbsp;draw<br>
many&nbsp;line&nbsp;segments&nbsp;with&nbsp;similar&nbsp;properties,&nbsp;it&nbsp;is&nbsp;faster&nbsp;to&nbsp;avoid&nbsp;the<br>
overhead&nbsp;of&nbsp;all&nbsp;the&nbsp;object&nbsp;creation&nbsp;etc.&nbsp;The&nbsp;lack&nbsp;of&nbsp;total<br>
configurability&nbsp;is&nbsp;compensated&nbsp;for&nbsp;with&nbsp;efficiency.&nbsp;Hence&nbsp;we&nbsp;don't&nbsp;use<br>
a&nbsp;GC&nbsp;and&nbsp;many&nbsp;of&nbsp;the&nbsp;line&nbsp;props&nbsp;it&nbsp;supports.&nbsp;See<br>
matplotlib.collections&nbsp;for&nbsp;more&nbsp;details.<br>
&nbsp;<br>
segments&nbsp;is&nbsp;a&nbsp;sequence&nbsp;of&nbsp;(&nbsp;line0,&nbsp;line1,&nbsp;line2),&nbsp;where&nbsp;linen&nbsp;=<br>
is&nbsp;an&nbsp;Mx2&nbsp;array&nbsp;with&nbsp;columns&nbsp;x,&nbsp;y.&nbsp;&nbsp;Each&nbsp;line&nbsp;can&nbsp;be&nbsp;a<br>
different&nbsp;length<br>
&nbsp;<br>
transform&nbsp;is&nbsp;used&nbsp;to&nbsp;Transform&nbsp;the&nbsp;lines<br>
&nbsp;<br>
clipbox&nbsp;is&nbsp;a&nbsp;&nbsp;xmin,&nbsp;ymin,&nbsp;width,&nbsp;height&nbsp;clip&nbsp;rect<br>
&nbsp;<br>
colors&nbsp;is&nbsp;a&nbsp;tuple&nbsp;of&nbsp;RGBA&nbsp;tuples<br>
&nbsp;<br>
linewidths&nbsp;is&nbsp;a&nbsp;tuple&nbsp;of&nbsp;linewidths<br>
***&nbsp;really&nbsp;should&nbsp;be&nbsp;called&nbsp;'dashes'&nbsp;not&nbsp;'linestyle',&nbsp;since<br>
we&nbsp;call&nbsp;gc.set_dashes()&nbsp;not&nbsp;gc.set_linestyle()&nbsp;***<br>
&nbsp;<br>
linestyle&nbsp;is&nbsp;an&nbsp;(offset,&nbsp;onoffseq)&nbsp;tuple&nbsp;or&nbsp;None,None&nbsp;for&nbsp;solid<br>
&nbsp;<br>
antialiseds&nbsp;is&nbsp;a&nbsp;tuple&nbsp;of&nbsp;ones&nbsp;or&nbsp;zeros&nbsp;indicating&nbsp;whether&nbsp;the<br>
segment&nbsp;should&nbsp;be&nbsp;aa&nbsp;or&nbsp;not<br>
&nbsp;<br>
offsets,&nbsp;if&nbsp;not&nbsp;None,&nbsp;is&nbsp;an&nbsp;Nx2&nbsp;array&nbsp;of&nbsp;x,y&nbsp;offsets&nbsp;to<br>
translate&nbsp;the&nbsp;lines&nbsp;by&nbsp;after&nbsp;transform&nbsp;is&nbsp;used&nbsp;to&nbsp;transform<br>
the&nbsp;offset&nbsp;coords<br>
&nbsp;<br>
This&nbsp;function&nbsp;could&nbsp;be&nbsp;overridden&nbsp;in&nbsp;the&nbsp;backend&nbsp;to&nbsp;possibly&nbsp;implement<br>
faster&nbsp;drawing,&nbsp;but&nbsp;it&nbsp;is&nbsp;already&nbsp;much&nbsp;faster&nbsp;than&nbsp;using&nbsp;<a href="#RendererWx-draw_lines">draw_lines</a>()<br>
by&nbsp;itself.</tt></dd></dl>

<dl><dt><a name="RendererWx-draw_poly_collection"><strong>draw_poly_collection</strong></a>(self, verts, transform, clipbox, facecolors, edgecolors, linewidths, antialiaseds, offsets, transOffset)</dt><dd><tt>Draw&nbsp;a&nbsp;polygon&nbsp;collection<br>
&nbsp;<br>
verts&nbsp;are&nbsp;a&nbsp;sequence&nbsp;of&nbsp;polygon&nbsp;vectors,&nbsp;where&nbsp;each&nbsp;polygon<br>
vector&nbsp;is&nbsp;a&nbsp;sequence&nbsp;of&nbsp;x,y&nbsp;tuples&nbsp;of&nbsp;vertices<br>
&nbsp;<br>
facecolors&nbsp;and&nbsp;edgecolors&nbsp;are&nbsp;a&nbsp;sequence&nbsp;of&nbsp;RGBA&nbsp;tuples<br>
linewidths&nbsp;are&nbsp;a&nbsp;sequence&nbsp;of&nbsp;linewidths<br>
antialiaseds&nbsp;are&nbsp;a&nbsp;sequence&nbsp;of&nbsp;0,1&nbsp;integers&nbsp;whether&nbsp;to&nbsp;use&nbsp;aa<br>
&nbsp;<br>
If&nbsp;a&nbsp;linewidth&nbsp;is&nbsp;zero&nbsp;or&nbsp;an&nbsp;edgecolor&nbsp;alpha&nbsp;is&nbsp;zero,&nbsp;the<br>
line&nbsp;will&nbsp;be&nbsp;omitted;&nbsp;similarly,&nbsp;the&nbsp;fill&nbsp;will&nbsp;be&nbsp;omitted<br>
if&nbsp;the&nbsp;facecolor&nbsp;alpha&nbsp;is&nbsp;zero.</tt></dd></dl>

<dl><dt><a name="RendererWx-draw_quad_mesh"><strong>draw_quad_mesh</strong></a>(self, meshWidth, meshHeight, colors, xCoords, yCoords, clipbox, transform, offsets, transOffset, showedges)</dt><dd><tt>Draw&nbsp;a&nbsp;quadrilateral&nbsp;mesh<br>
See&nbsp;documentation&nbsp;in&nbsp;QuadMesh&nbsp;class&nbsp;in&nbsp;collections.py&nbsp;for&nbsp;details</tt></dd></dl>

<dl><dt><a name="RendererWx-draw_regpoly_collection"><strong>draw_regpoly_collection</strong></a>(self, clipbox, offsets, transOffset, verts, sizes, facecolors, edgecolors, linewidths, antialiaseds)</dt><dd><tt>Draw&nbsp;a&nbsp;regular&nbsp;poly&nbsp;collection<br>
&nbsp;<br>
offsets&nbsp;&nbsp;&nbsp;-&nbsp;is&nbsp;a&nbsp;sequence&nbsp;is&nbsp;x,y&nbsp;tuples<br>
transOffset&nbsp;-&nbsp;maps&nbsp;this&nbsp;to&nbsp;display&nbsp;coords<br>
&nbsp;<br>
verts&nbsp;-&nbsp;are&nbsp;the&nbsp;vertices&nbsp;of&nbsp;the&nbsp;regular&nbsp;polygon&nbsp;at&nbsp;the&nbsp;origin<br>
&nbsp;<br>
sizes&nbsp;are&nbsp;the&nbsp;area&nbsp;of&nbsp;the&nbsp;circle&nbsp;that&nbsp;circumscribes&nbsp;the<br>
polygon&nbsp;in&nbsp;points^2<br>
&nbsp;<br>
facecolors&nbsp;and&nbsp;edgecolors&nbsp;are&nbsp;a&nbsp;sequence&nbsp;of&nbsp;RGBA&nbsp;tuples<br>
linewidths&nbsp;are&nbsp;a&nbsp;sequence&nbsp;of&nbsp;linewidths<br>
antialiaseds&nbsp;are&nbsp;a&nbsp;sequence&nbsp;of&nbsp;0,1&nbsp;integers&nbsp;whether&nbsp;to&nbsp;use&nbsp;aa</tt></dd></dl>

<dl><dt><a name="RendererWx-draw_tex"><strong>draw_tex</strong></a>(self, gc, x, y, s, prop, angle, ismath<font color="#909090">='TeX!'</font>)</dt></dl>

<dl><dt><a name="RendererWx-get_image_magnification"><strong>get_image_magnification</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;factor&nbsp;by&nbsp;which&nbsp;to&nbsp;magnify&nbsp;images&nbsp;passed&nbsp;to&nbsp;draw_image.<br>
Allows&nbsp;a&nbsp;backend&nbsp;to&nbsp;have&nbsp;images&nbsp;at&nbsp;a&nbsp;different&nbsp;resolution&nbsp;to&nbsp;other<br>
artists.</tt></dd></dl>

<dl><dt><a name="RendererWx-get_texmanager"><strong>get_texmanager</strong></a>(self)</dt></dl>

<dl><dt><a name="RendererWx-get_text_extent"><strong>get_text_extent</strong></a>(self, text)</dt><dd><tt>Get&nbsp;the&nbsp;text&nbsp;extent&nbsp;in&nbsp;window&nbsp;coords</tt></dd></dl>

<dl><dt><a name="RendererWx-open_group"><strong>open_group</strong></a>(self, s)</dt><dd><tt>open&nbsp;a&nbsp;grouping&nbsp;element&nbsp;with&nbsp;label&nbsp;s<br>
Is&nbsp;only&nbsp;currently&nbsp;used&nbsp;by&nbsp;backend_svg</tt></dd></dl>

<dl><dt><a name="RendererWx-option_image_nocomposite"><strong>option_image_nocomposite</strong></a>(self)</dt><dd><tt>overwrite&nbsp;this&nbsp;method&nbsp;for&nbsp;renderers&nbsp;that&nbsp;do&nbsp;not&nbsp;necessarily<br>
want&nbsp;to&nbsp;rescale&nbsp;and&nbsp;composite&nbsp;raster&nbsp;images.&nbsp;(like&nbsp;SVG)</tt></dd></dl>

<dl><dt><a name="RendererWx-strip_math"><strong>strip_math</strong></a>(self, s)</dt></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="StatusBarWx">class <strong>StatusBarWx</strong></a>(<a href="wx._windows.html#StatusBar">wx._windows.StatusBar</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>A&nbsp;status&nbsp;bar&nbsp;is&nbsp;added&nbsp;to&nbsp;_FigureFrame&nbsp;to&nbsp;allow&nbsp;measurements&nbsp;and&nbsp;the<br>
previously&nbsp;selected&nbsp;scroll&nbsp;function&nbsp;to&nbsp;be&nbsp;displayed&nbsp;as&nbsp;a&nbsp;user<br>
convenience.<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.backends.backend_wx.html#StatusBarWx">StatusBarWx</a></dd>
<dd><a href="wx._windows.html#StatusBar">wx._windows.StatusBar</a></dd>
<dd><a href="wx._core.html#Window">wx._core.Window</a></dd>
<dd><a href="wx._core.html#EvtHandler">wx._core.EvtHandler</a></dd>
<dd><a href="wx._core.html#Object">wx._core.Object</a></dd>
<dd><a href="__builtin__.html#object">__builtin__.object</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="StatusBarWx-__init__"><strong>__init__</strong></a>(self, parent)</dt></dl>

<dl><dt><a name="StatusBarWx-set_function"><strong>set_function</strong></a>(self, string)</dt></dl>

<hr>
Methods inherited from <a href="wx._windows.html#StatusBar">wx._windows.StatusBar</a>:<br>
<dl><dt><a name="StatusBarWx-Create"><strong>Create</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Create">Create</a>(self,&nbsp;Window&nbsp;parent,&nbsp;int&nbsp;id=-1,&nbsp;long&nbsp;style=ST_SIZEGRIP,&nbsp;String&nbsp;name=StatusLineNameStr)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetBorderX"><strong>GetBorderX</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetBorderX">GetBorderX</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetBorderY"><strong>GetBorderY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetBorderY">GetBorderY</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetFieldRect"><strong>GetFieldRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetFieldRect">GetFieldRect</a>(self,&nbsp;int&nbsp;i)&nbsp;-&gt;&nbsp;Rect</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetFieldsCount"><strong>GetFieldsCount</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetFieldsCount">GetFieldsCount</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetStatusText"><strong>GetStatusText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetStatusText">GetStatusText</a>(self,&nbsp;int&nbsp;number=0)&nbsp;-&gt;&nbsp;String</tt></dd></dl>

<dl><dt><a name="StatusBarWx-PopStatusText"><strong>PopStatusText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-PopStatusText">PopStatusText</a>(self,&nbsp;int&nbsp;number=0)</tt></dd></dl>

<dl><dt><a name="StatusBarWx-PushStatusText"><strong>PushStatusText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-PushStatusText">PushStatusText</a>(self,&nbsp;String&nbsp;text,&nbsp;int&nbsp;number=0)</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetFieldsCount"><strong>SetFieldsCount</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetFieldsCount">SetFieldsCount</a>(self,&nbsp;int&nbsp;number=1)</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetMinHeight"><strong>SetMinHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetMinHeight">SetMinHeight</a>(self,&nbsp;int&nbsp;height)</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetStatusStyles"><strong>SetStatusStyles</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetStatusStyles">SetStatusStyles</a>(self,&nbsp;int&nbsp;styles)</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetStatusText"><strong>SetStatusText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetStatusText">SetStatusText</a>(self,&nbsp;String&nbsp;text,&nbsp;int&nbsp;number=0)</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetStatusWidths"><strong>SetStatusWidths</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetStatusWidths">SetStatusWidths</a>(self,&nbsp;int&nbsp;widths)</tt></dd></dl>

<dl><dt><a name="StatusBarWx-__repr__"><strong>__repr__</strong></a>(self)</dt></dl>

<hr>
Static methods inherited from <a href="wx._windows.html#StatusBar">wx._windows.StatusBar</a>:<br>
<dl><dt><a name="StatusBarWx-GetClassDefaultAttributes"><strong>GetClassDefaultAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetClassDefaultAttributes">GetClassDefaultAttributes</a>(int&nbsp;variant=WINDOW_VARIANT_NORMAL)&nbsp;-&gt;&nbsp;VisualAttributes<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;attributes&nbsp;for&nbsp;this&nbsp;class.&nbsp;&nbsp;This&nbsp;is&nbsp;useful&nbsp;if&nbsp;you&nbsp;want<br>
to&nbsp;use&nbsp;the&nbsp;same&nbsp;font&nbsp;or&nbsp;colour&nbsp;in&nbsp;your&nbsp;own&nbsp;control&nbsp;as&nbsp;in&nbsp;a&nbsp;standard<br>
control&nbsp;--&nbsp;which&nbsp;is&nbsp;a&nbsp;much&nbsp;better&nbsp;idea&nbsp;than&nbsp;hard&nbsp;coding&nbsp;specific<br>
colours&nbsp;or&nbsp;fonts&nbsp;which&nbsp;might&nbsp;look&nbsp;completely&nbsp;out&nbsp;of&nbsp;place&nbsp;on&nbsp;the<br>
user's&nbsp;system,&nbsp;especially&nbsp;if&nbsp;it&nbsp;uses&nbsp;themes.<br>
&nbsp;<br>
The&nbsp;variant&nbsp;parameter&nbsp;is&nbsp;only&nbsp;relevant&nbsp;under&nbsp;Mac&nbsp;currently&nbsp;and&nbsp;is<br>
ignore&nbsp;under&nbsp;other&nbsp;platforms.&nbsp;Under&nbsp;Mac,&nbsp;it&nbsp;will&nbsp;change&nbsp;the&nbsp;size&nbsp;of<br>
the&nbsp;returned&nbsp;font.&nbsp;See&nbsp;`wx.Window.SetWindowVariant`&nbsp;for&nbsp;more&nbsp;about<br>
this.</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#Window">wx._core.Window</a>:<br>
<dl><dt><a name="StatusBarWx-AcceptsFocus"><strong>AcceptsFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-AcceptsFocus">AcceptsFocus</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Can&nbsp;this&nbsp;window&nbsp;have&nbsp;focus?</tt></dd></dl>

<dl><dt><a name="StatusBarWx-AcceptsFocusFromKeyboard"><strong>AcceptsFocusFromKeyboard</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-AcceptsFocusFromKeyboard">AcceptsFocusFromKeyboard</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Can&nbsp;this&nbsp;window&nbsp;be&nbsp;given&nbsp;focus&nbsp;by&nbsp;keyboard&nbsp;navigation?&nbsp;if&nbsp;not,&nbsp;the<br>
only&nbsp;way&nbsp;to&nbsp;give&nbsp;it&nbsp;focus&nbsp;(provided&nbsp;it&nbsp;accepts&nbsp;it&nbsp;at&nbsp;all)&nbsp;is&nbsp;to&nbsp;click<br>
it.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-AddChild"><strong>AddChild</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-AddChild">AddChild</a>(self,&nbsp;Window&nbsp;child)<br>
&nbsp;<br>
Adds&nbsp;a&nbsp;child&nbsp;window.&nbsp;This&nbsp;is&nbsp;called&nbsp;automatically&nbsp;by&nbsp;window&nbsp;creation<br>
functions&nbsp;so&nbsp;should&nbsp;not&nbsp;be&nbsp;required&nbsp;by&nbsp;the&nbsp;application&nbsp;programmer.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-AssociateHandle"><strong>AssociateHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-AssociateHandle">AssociateHandle</a>(self,&nbsp;long&nbsp;handle)<br>
&nbsp;<br>
Associate&nbsp;the&nbsp;window&nbsp;with&nbsp;a&nbsp;new&nbsp;native&nbsp;handle</tt></dd></dl>

<dl><dt><a name="StatusBarWx-CacheBestSize"><strong>CacheBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-CacheBestSize">CacheBestSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Cache&nbsp;the&nbsp;best&nbsp;size&nbsp;so&nbsp;it&nbsp;doesn't&nbsp;need&nbsp;to&nbsp;be&nbsp;calculated&nbsp;again,&nbsp;(at&nbsp;least&nbsp;until<br>
some&nbsp;properties&nbsp;of&nbsp;the&nbsp;window&nbsp;change.)</tt></dd></dl>

<dl><dt><a name="StatusBarWx-CaptureMouse"><strong>CaptureMouse</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-CaptureMouse">CaptureMouse</a>(self)<br>
&nbsp;<br>
Directs&nbsp;all&nbsp;mouse&nbsp;input&nbsp;to&nbsp;this&nbsp;window.&nbsp;Call&nbsp;wx.Window.ReleaseMouse&nbsp;to<br>
release&nbsp;the&nbsp;capture.<br>
&nbsp;<br>
Note&nbsp;that&nbsp;wxWindows&nbsp;maintains&nbsp;the&nbsp;stack&nbsp;of&nbsp;windows&nbsp;having&nbsp;captured&nbsp;the<br>
mouse&nbsp;and&nbsp;when&nbsp;the&nbsp;mouse&nbsp;is&nbsp;released&nbsp;the&nbsp;capture&nbsp;returns&nbsp;to&nbsp;the&nbsp;window<br>
which&nbsp;had&nbsp;had&nbsp;captured&nbsp;it&nbsp;previously&nbsp;and&nbsp;it&nbsp;is&nbsp;only&nbsp;really&nbsp;released&nbsp;if<br>
there&nbsp;were&nbsp;no&nbsp;previous&nbsp;window.&nbsp;In&nbsp;particular,&nbsp;this&nbsp;means&nbsp;that&nbsp;you&nbsp;must<br>
release&nbsp;the&nbsp;mouse&nbsp;as&nbsp;many&nbsp;times&nbsp;as&nbsp;you&nbsp;capture&nbsp;it.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Center"><strong>Center</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Center">Center</a>(self,&nbsp;int&nbsp;direction=BOTH)<br>
&nbsp;<br>
Centers&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;parameter&nbsp;specifies&nbsp;the&nbsp;direction&nbsp;for<br>
cetering,&nbsp;and&nbsp;may&nbsp;be&nbsp;wx.HORIZONTAL,&nbsp;wx.VERTICAL&nbsp;or&nbsp;wx.BOTH.&nbsp;It&nbsp;may<br>
also&nbsp;include&nbsp;wx.CENTER_ON_SCREEN&nbsp;flag&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;center&nbsp;the&nbsp;window<br>
on&nbsp;the&nbsp;entire&nbsp;screen&nbsp;and&nbsp;not&nbsp;on&nbsp;its&nbsp;parent&nbsp;window.&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a<br>
top-level&nbsp;window&nbsp;and&nbsp;has&nbsp;no&nbsp;parent&nbsp;then&nbsp;it&nbsp;will&nbsp;always&nbsp;be&nbsp;centered<br>
relative&nbsp;to&nbsp;the&nbsp;screen.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-CenterOnParent"><strong>CenterOnParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-CenterOnParent">CenterOnParent</a>(self,&nbsp;int&nbsp;dir=BOTH)<br>
&nbsp;<br>
Center&nbsp;with&nbsp;respect&nbsp;to&nbsp;the&nbsp;the&nbsp;parent&nbsp;window</tt></dd></dl>

<dl><dt><a name="StatusBarWx-CenterOnScreen"><strong>CenterOnScreen</strong></a> = deprecatedWrapper(*args, **kwargs)</dt><dd><tt>&lt;function&nbsp;CenterOnScreen&nbsp;at&nbsp;0x2b90d8dbcf50&gt;&nbsp;is&nbsp;deprecated</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Centre"><strong>Centre</strong></a> = Center(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Center">Center</a>(self,&nbsp;int&nbsp;direction=BOTH)<br>
&nbsp;<br>
Centers&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;parameter&nbsp;specifies&nbsp;the&nbsp;direction&nbsp;for<br>
cetering,&nbsp;and&nbsp;may&nbsp;be&nbsp;wx.HORIZONTAL,&nbsp;wx.VERTICAL&nbsp;or&nbsp;wx.BOTH.&nbsp;It&nbsp;may<br>
also&nbsp;include&nbsp;wx.CENTER_ON_SCREEN&nbsp;flag&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;center&nbsp;the&nbsp;window<br>
on&nbsp;the&nbsp;entire&nbsp;screen&nbsp;and&nbsp;not&nbsp;on&nbsp;its&nbsp;parent&nbsp;window.&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a<br>
top-level&nbsp;window&nbsp;and&nbsp;has&nbsp;no&nbsp;parent&nbsp;then&nbsp;it&nbsp;will&nbsp;always&nbsp;be&nbsp;centered<br>
relative&nbsp;to&nbsp;the&nbsp;screen.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-CentreOnParent"><strong>CentreOnParent</strong></a> = CenterOnParent(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-CenterOnParent">CenterOnParent</a>(self,&nbsp;int&nbsp;dir=BOTH)<br>
&nbsp;<br>
Center&nbsp;with&nbsp;respect&nbsp;to&nbsp;the&nbsp;the&nbsp;parent&nbsp;window</tt></dd></dl>

<dl><dt><a name="StatusBarWx-CentreOnScreen"><strong>CentreOnScreen</strong></a> = deprecatedWrapper(*args, **kwargs)</dt><dd><tt>&lt;function&nbsp;CenterOnScreen&nbsp;at&nbsp;0x2b90d8dbcf50&gt;&nbsp;is&nbsp;deprecated</tt></dd></dl>

<dl><dt><a name="StatusBarWx-ClearBackground"><strong>ClearBackground</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-ClearBackground">ClearBackground</a>(self)<br>
&nbsp;<br>
Clears&nbsp;the&nbsp;window&nbsp;by&nbsp;filling&nbsp;it&nbsp;with&nbsp;the&nbsp;current&nbsp;background<br>
colour.&nbsp;Does&nbsp;not&nbsp;cause&nbsp;an&nbsp;erase&nbsp;background&nbsp;event&nbsp;to&nbsp;be&nbsp;generated.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-ClientToScreen"><strong>ClientToScreen</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-ClientToScreen">ClientToScreen</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;to&nbsp;screen&nbsp;coordinates&nbsp;from&nbsp;coordinates&nbsp;relative&nbsp;to&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-ClientToScreenXY"><strong>ClientToScreenXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-ClientToScreenXY">ClientToScreenXY</a>(int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Converts&nbsp;to&nbsp;screen&nbsp;coordinates&nbsp;from&nbsp;coordinates&nbsp;relative&nbsp;to&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Close"><strong>Close</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Close">Close</a>(self,&nbsp;bool&nbsp;force=False)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;function&nbsp;simply&nbsp;generates&nbsp;a&nbsp;EVT_CLOSE&nbsp;event&nbsp;whose&nbsp;handler&nbsp;usually<br>
tries&nbsp;to&nbsp;close&nbsp;the&nbsp;window.&nbsp;It&nbsp;doesn't&nbsp;close&nbsp;the&nbsp;window&nbsp;itself,<br>
however.&nbsp;&nbsp;If&nbsp;force&nbsp;is&nbsp;False&nbsp;(the&nbsp;default)&nbsp;then&nbsp;the&nbsp;window's&nbsp;close<br>
handler&nbsp;will&nbsp;be&nbsp;allowed&nbsp;to&nbsp;veto&nbsp;the&nbsp;destruction&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-ConvertDialogPointToPixels"><strong>ConvertDialogPointToPixels</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-ConvertDialogPointToPixels">ConvertDialogPointToPixels</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-ConvertDialogSizeToPixels"><strong>ConvertDialogSizeToPixels</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-ConvertDialogSizeToPixels">ConvertDialogSizeToPixels</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-ConvertPixelPointToDialog"><strong>ConvertPixelPointToDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-ConvertPixelPointToDialog">ConvertPixelPointToDialog</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point</tt></dd></dl>

<dl><dt><a name="StatusBarWx-ConvertPixelSizeToDialog"><strong>ConvertPixelSizeToDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-ConvertPixelSizeToDialog">ConvertPixelSizeToDialog</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="StatusBarWx-DLG_PNT"><strong>DLG_PNT</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-DLG_PNT">DLG_PNT</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-DLG_SZE"><strong>DLG_SZE</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-DLG_SZE">DLG_SZE</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Destroy"><strong>Destroy</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Destroy">Destroy</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Destroys&nbsp;the&nbsp;window&nbsp;safely.&nbsp;&nbsp;Frames&nbsp;and&nbsp;dialogs&nbsp;are&nbsp;not&nbsp;destroyed<br>
immediately&nbsp;when&nbsp;this&nbsp;function&nbsp;is&nbsp;called&nbsp;--&nbsp;they&nbsp;are&nbsp;added&nbsp;to&nbsp;a&nbsp;list<br>
of&nbsp;windows&nbsp;to&nbsp;be&nbsp;deleted&nbsp;on&nbsp;idle&nbsp;time,&nbsp;when&nbsp;all&nbsp;the&nbsp;window's&nbsp;events<br>
have&nbsp;been&nbsp;processed.&nbsp;This&nbsp;prevents&nbsp;problems&nbsp;with&nbsp;events&nbsp;being&nbsp;sent&nbsp;to<br>
non-existent&nbsp;windows.<br>
&nbsp;<br>
Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;window&nbsp;has&nbsp;either&nbsp;been&nbsp;successfully&nbsp;deleted,&nbsp;or&nbsp;it<br>
has&nbsp;been&nbsp;added&nbsp;to&nbsp;the&nbsp;list&nbsp;of&nbsp;windows&nbsp;pending&nbsp;real&nbsp;deletion.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-DestroyChildren"><strong>DestroyChildren</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-DestroyChildren">DestroyChildren</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Destroys&nbsp;all&nbsp;children&nbsp;of&nbsp;a&nbsp;window.&nbsp;Called&nbsp;automatically&nbsp;by&nbsp;the<br>
destructor.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Disable"><strong>Disable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Disable">Disable</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Disables&nbsp;the&nbsp;window,&nbsp;same&nbsp;as&nbsp;<a href="#StatusBarWx-Enable">Enable</a>(false).</tt></dd></dl>

<dl><dt><a name="StatusBarWx-DissociateHandle"><strong>DissociateHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-DissociateHandle">DissociateHandle</a>(self)<br>
&nbsp;<br>
Dissociate&nbsp;the&nbsp;current&nbsp;native&nbsp;handle&nbsp;from&nbsp;the&nbsp;window</tt></dd></dl>

<dl><dt><a name="StatusBarWx-DragAcceptFiles"><strong>DragAcceptFiles</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-DragAcceptFiles">DragAcceptFiles</a>(self,&nbsp;bool&nbsp;accept)<br>
&nbsp;<br>
Enables&nbsp;or&nbsp;disables&nbsp;eligibility&nbsp;for&nbsp;drop&nbsp;file&nbsp;events,&nbsp;EVT_DROP_FILES.<br>
Only&nbsp;functional&nbsp;on&nbsp;Windows.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Enable"><strong>Enable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Enable">Enable</a>(self,&nbsp;bool&nbsp;enable=True)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Enable&nbsp;or&nbsp;disable&nbsp;the&nbsp;window&nbsp;for&nbsp;user&nbsp;input.&nbsp;Note&nbsp;that&nbsp;when&nbsp;a&nbsp;parent<br>
window&nbsp;is&nbsp;disabled,&nbsp;all&nbsp;of&nbsp;its&nbsp;children&nbsp;are&nbsp;disabled&nbsp;as&nbsp;well&nbsp;and&nbsp;they<br>
are&nbsp;reenabled&nbsp;again&nbsp;when&nbsp;the&nbsp;parent&nbsp;is.&nbsp;&nbsp;Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window<br>
has&nbsp;been&nbsp;enabled&nbsp;or&nbsp;disabled,&nbsp;false&nbsp;if&nbsp;nothing&nbsp;was&nbsp;done,&nbsp;i.e.&nbsp;if&nbsp;the<br>
window&nbsp;had&nbsp;already&nbsp;been&nbsp;in&nbsp;the&nbsp;specified&nbsp;state.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-FindWindowById"><strong>FindWindowById</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-FindWindowById">FindWindowById</a>(self,&nbsp;long&nbsp;winid)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Find&nbsp;a&nbsp;chld&nbsp;of&nbsp;this&nbsp;window&nbsp;by&nbsp;window&nbsp;ID</tt></dd></dl>

<dl><dt><a name="StatusBarWx-FindWindowByName"><strong>FindWindowByName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-FindWindowByName">FindWindowByName</a>(self,&nbsp;String&nbsp;name)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Find&nbsp;a&nbsp;child&nbsp;of&nbsp;this&nbsp;window&nbsp;by&nbsp;name</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Fit"><strong>Fit</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Fit">Fit</a>(self)<br>
&nbsp;<br>
Sizes&nbsp;the&nbsp;window&nbsp;so&nbsp;that&nbsp;it&nbsp;fits&nbsp;around&nbsp;its&nbsp;subwindows.&nbsp;This&nbsp;function<br>
won't&nbsp;do&nbsp;anything&nbsp;if&nbsp;there&nbsp;are&nbsp;no&nbsp;subwindows&nbsp;and&nbsp;will&nbsp;only&nbsp;really&nbsp;work<br>
correctly&nbsp;if&nbsp;sizers&nbsp;are&nbsp;used&nbsp;for&nbsp;the&nbsp;subwindows&nbsp;layout.&nbsp;Also,&nbsp;if&nbsp;the<br>
window&nbsp;has&nbsp;exactly&nbsp;one&nbsp;subwindow&nbsp;it&nbsp;is&nbsp;better&nbsp;(faster&nbsp;and&nbsp;the&nbsp;result<br>
is&nbsp;more&nbsp;precise&nbsp;as&nbsp;Fit&nbsp;adds&nbsp;some&nbsp;margin&nbsp;to&nbsp;account&nbsp;for&nbsp;fuzziness&nbsp;of<br>
its&nbsp;calculations)&nbsp;to&nbsp;call&nbsp;window.<a href="#StatusBarWx-SetClientSize">SetClientSize</a>(child.<a href="#StatusBarWx-GetSize">GetSize</a>())<br>
instead&nbsp;of&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-FitInside"><strong>FitInside</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-FitInside">FitInside</a>(self)<br>
&nbsp;<br>
Similar&nbsp;to&nbsp;Fit,&nbsp;but&nbsp;sizes&nbsp;the&nbsp;interior&nbsp;(virtual)&nbsp;size&nbsp;of&nbsp;a<br>
window.&nbsp;Mainly&nbsp;useful&nbsp;with&nbsp;scrolled&nbsp;windows&nbsp;to&nbsp;reset&nbsp;scrollbars&nbsp;after<br>
sizing&nbsp;changes&nbsp;that&nbsp;do&nbsp;not&nbsp;trigger&nbsp;a&nbsp;size&nbsp;event,&nbsp;and/or&nbsp;scrolled<br>
windows&nbsp;without&nbsp;an&nbsp;interior&nbsp;sizer.&nbsp;This&nbsp;function&nbsp;similarly&nbsp;won't&nbsp;do<br>
anything&nbsp;if&nbsp;there&nbsp;are&nbsp;no&nbsp;subwindows.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Freeze"><strong>Freeze</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Freeze">Freeze</a>(self)<br>
&nbsp;<br>
Freezes&nbsp;the&nbsp;window&nbsp;or,&nbsp;in&nbsp;other&nbsp;words,&nbsp;prevents&nbsp;any&nbsp;updates&nbsp;from<br>
taking&nbsp;place&nbsp;on&nbsp;screen,&nbsp;the&nbsp;window&nbsp;is&nbsp;not&nbsp;redrawn&nbsp;at&nbsp;all.&nbsp;Thaw&nbsp;must&nbsp;be<br>
called&nbsp;to&nbsp;reenable&nbsp;window&nbsp;redrawing.&nbsp;&nbsp;Calls&nbsp;to&nbsp;Freeze/Thaw&nbsp;may&nbsp;be<br>
nested,&nbsp;with&nbsp;the&nbsp;actual&nbsp;Thaw&nbsp;being&nbsp;delayed&nbsp;until&nbsp;all&nbsp;the&nbsp;nesting&nbsp;has<br>
been&nbsp;undone.<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;useful&nbsp;for&nbsp;visual&nbsp;appearance&nbsp;optimization&nbsp;(for&nbsp;example,<br>
it&nbsp;is&nbsp;a&nbsp;good&nbsp;idea&nbsp;to&nbsp;use&nbsp;it&nbsp;before&nbsp;inserting&nbsp;large&nbsp;amount&nbsp;of&nbsp;text&nbsp;into<br>
a&nbsp;wxTextCtrl&nbsp;under&nbsp;wxGTK)&nbsp;but&nbsp;is&nbsp;not&nbsp;implemented&nbsp;on&nbsp;all&nbsp;platforms&nbsp;nor<br>
for&nbsp;all&nbsp;controls&nbsp;so&nbsp;it&nbsp;is&nbsp;mostly&nbsp;just&nbsp;a&nbsp;hint&nbsp;to&nbsp;wxWindows&nbsp;and&nbsp;not&nbsp;a<br>
mandatory&nbsp;directive.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetAcceleratorTable"><strong>GetAcceleratorTable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetAcceleratorTable">GetAcceleratorTable</a>(self)&nbsp;-&gt;&nbsp;AcceleratorTable<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;accelerator&nbsp;table&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetAdjustedBestSize"><strong>GetAdjustedBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetAdjustedBestSize">GetAdjustedBestSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;similar&nbsp;to&nbsp;GetBestSize,&nbsp;except&nbsp;in&nbsp;one<br>
thing.&nbsp;GetBestSize&nbsp;should&nbsp;return&nbsp;the&nbsp;minimum&nbsp;untruncated&nbsp;size&nbsp;of&nbsp;the<br>
window,&nbsp;while&nbsp;this&nbsp;method&nbsp;will&nbsp;return&nbsp;the&nbsp;largest&nbsp;of&nbsp;BestSize&nbsp;and&nbsp;any<br>
user&nbsp;specified&nbsp;minimum&nbsp;size.&nbsp;ie.&nbsp;it&nbsp;is&nbsp;the&nbsp;minimum&nbsp;size&nbsp;the&nbsp;window<br>
should&nbsp;currently&nbsp;be&nbsp;drawn&nbsp;at,&nbsp;not&nbsp;the&nbsp;minimal&nbsp;size&nbsp;it&nbsp;can&nbsp;possibly<br>
tolerate.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetAutoLayout"><strong>GetAutoLayout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetAutoLayout">GetAutoLayout</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;current&nbsp;autoLayout&nbsp;setting</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetBackgroundColour"><strong>GetBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetBackgroundColour">GetBackgroundColour</a>(self)&nbsp;-&gt;&nbsp;Colour<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetBackgroundStyle"><strong>GetBackgroundStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetBackgroundStyle">GetBackgroundStyle</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;style&nbsp;of&nbsp;the&nbsp;window.<br>
&nbsp;<br>
:see:&nbsp;`SetBackgroundStyle`</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetBestFittingSize"><strong>GetBestFittingSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetBestFittingSize">GetBestFittingSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;function&nbsp;will&nbsp;merge&nbsp;the&nbsp;window's&nbsp;best&nbsp;size&nbsp;into&nbsp;the&nbsp;window's<br>
minimum&nbsp;size,&nbsp;giving&nbsp;priority&nbsp;to&nbsp;the&nbsp;min&nbsp;size&nbsp;components,&nbsp;and&nbsp;returns<br>
the&nbsp;results.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetBestSize"><strong>GetBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetBestSize">GetBestSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;function&nbsp;returns&nbsp;the&nbsp;best&nbsp;acceptable&nbsp;minimal&nbsp;size&nbsp;for&nbsp;the<br>
window,&nbsp;if&nbsp;applicable.&nbsp;For&nbsp;example,&nbsp;for&nbsp;a&nbsp;static&nbsp;text&nbsp;control,&nbsp;it&nbsp;will<br>
be&nbsp;the&nbsp;minimal&nbsp;size&nbsp;such&nbsp;that&nbsp;the&nbsp;control&nbsp;label&nbsp;is&nbsp;not&nbsp;truncated.&nbsp;For<br>
windows&nbsp;containing&nbsp;subwindows&nbsp;(suzh&nbsp;aswx.<a href="wx._windows.html#Panel">Panel</a>),&nbsp;the&nbsp;size&nbsp;returned&nbsp;by<br>
this&nbsp;function&nbsp;will&nbsp;be&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;size&nbsp;the&nbsp;window&nbsp;would&nbsp;have&nbsp;had<br>
after&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetBestSizeTuple"><strong>GetBestSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetBestSizeTuple">GetBestSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
This&nbsp;function&nbsp;returns&nbsp;the&nbsp;best&nbsp;acceptable&nbsp;minimal&nbsp;size&nbsp;for&nbsp;the<br>
window,&nbsp;if&nbsp;applicable.&nbsp;For&nbsp;example,&nbsp;for&nbsp;a&nbsp;static&nbsp;text&nbsp;control,&nbsp;it&nbsp;will<br>
be&nbsp;the&nbsp;minimal&nbsp;size&nbsp;such&nbsp;that&nbsp;the&nbsp;control&nbsp;label&nbsp;is&nbsp;not&nbsp;truncated.&nbsp;For<br>
windows&nbsp;containing&nbsp;subwindows&nbsp;(suzh&nbsp;aswx.<a href="wx._windows.html#Panel">Panel</a>),&nbsp;the&nbsp;size&nbsp;returned&nbsp;by<br>
this&nbsp;function&nbsp;will&nbsp;be&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;size&nbsp;the&nbsp;window&nbsp;would&nbsp;have&nbsp;had<br>
after&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetBestVirtualSize"><strong>GetBestVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetBestVirtualSize">GetBestVirtualSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Return&nbsp;the&nbsp;largest&nbsp;of&nbsp;ClientSize&nbsp;and&nbsp;BestSize&nbsp;(as&nbsp;determined&nbsp;by&nbsp;a<br>
sizer,&nbsp;interior&nbsp;children,&nbsp;or&nbsp;other&nbsp;means)</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetBorder"><strong>GetBorder</strong></a>(*args)</dt><dd><tt><a href="#StatusBarWx-GetBorder">GetBorder</a>(self,&nbsp;long&nbsp;flags)&nbsp;-&gt;&nbsp;int<br>
<a href="#StatusBarWx-GetBorder">GetBorder</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;border&nbsp;for&nbsp;the&nbsp;flags&nbsp;of&nbsp;this&nbsp;window</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetCaret"><strong>GetCaret</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetCaret">GetCaret</a>(self)&nbsp;-&gt;&nbsp;Caret<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;caret&nbsp;associated&nbsp;with&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetCharHeight"><strong>GetCharHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetCharHeight">GetCharHeight</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;(average)&nbsp;character&nbsp;size&nbsp;for&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetCharWidth"><strong>GetCharWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetCharWidth">GetCharWidth</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;(average)&nbsp;character&nbsp;size&nbsp;for&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetChildren"><strong>GetChildren</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetChildren">GetChildren</a>(self)&nbsp;-&gt;&nbsp;PyObject<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;list&nbsp;of&nbsp;the&nbsp;window's&nbsp;children.&nbsp;&nbsp;NOTE:&nbsp;Currently&nbsp;this&nbsp;is&nbsp;a<br>
copy&nbsp;of&nbsp;the&nbsp;child&nbsp;window&nbsp;list&nbsp;maintained&nbsp;by&nbsp;the&nbsp;window,&nbsp;so&nbsp;the&nbsp;return<br>
value&nbsp;of&nbsp;this&nbsp;function&nbsp;is&nbsp;only&nbsp;valid&nbsp;as&nbsp;long&nbsp;as&nbsp;the&nbsp;window's&nbsp;children<br>
do&nbsp;not&nbsp;change.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetClientAreaOrigin"><strong>GetClientAreaOrigin</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetClientAreaOrigin">GetClientAreaOrigin</a>(self)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Get&nbsp;the&nbsp;origin&nbsp;of&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window&nbsp;relative&nbsp;to&nbsp;the<br>
window's&nbsp;top&nbsp;left&nbsp;corner&nbsp;(the&nbsp;client&nbsp;area&nbsp;may&nbsp;be&nbsp;shifted&nbsp;because&nbsp;of<br>
the&nbsp;borders,&nbsp;scrollbars,&nbsp;other&nbsp;decorations...)</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetClientRect"><strong>GetClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetClientRect">GetClientRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Get&nbsp;the&nbsp;client&nbsp;area&nbsp;position&nbsp;and&nbsp;size&nbsp;as&nbsp;a&nbsp;`wx.Rect`&nbsp;object.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetClientSize"><strong>GetClientSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetClientSize">GetClientSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;gets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window's&nbsp;'client&nbsp;area'&nbsp;in&nbsp;pixels.&nbsp;The&nbsp;client<br>
area&nbsp;is&nbsp;the&nbsp;area&nbsp;which&nbsp;may&nbsp;be&nbsp;drawn&nbsp;on&nbsp;by&nbsp;the&nbsp;programmer,&nbsp;excluding<br>
title&nbsp;bar,&nbsp;border,&nbsp;scrollbars,&nbsp;etc.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetClientSizeTuple"><strong>GetClientSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetClientSizeTuple">GetClientSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
This&nbsp;gets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window's&nbsp;'client&nbsp;area'&nbsp;in&nbsp;pixels.&nbsp;The&nbsp;client<br>
area&nbsp;is&nbsp;the&nbsp;area&nbsp;which&nbsp;may&nbsp;be&nbsp;drawn&nbsp;on&nbsp;by&nbsp;the&nbsp;programmer,&nbsp;excluding<br>
title&nbsp;bar,&nbsp;border,&nbsp;scrollbars,&nbsp;etc.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetConstraints"><strong>GetConstraints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetConstraints">GetConstraints</a>(self)&nbsp;-&gt;&nbsp;LayoutConstraints<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;pointer&nbsp;to&nbsp;the&nbsp;window's&nbsp;layout&nbsp;constraints,&nbsp;or&nbsp;None&nbsp;if&nbsp;there<br>
are&nbsp;none.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetContainingSizer"><strong>GetContainingSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetContainingSizer">GetContainingSizer</a>(self)&nbsp;-&gt;&nbsp;Sizer<br>
&nbsp;<br>
Return&nbsp;the&nbsp;sizer&nbsp;that&nbsp;this&nbsp;window&nbsp;is&nbsp;a&nbsp;member&nbsp;of,&nbsp;if&nbsp;any,&nbsp;otherwise&nbsp;None.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetCursor"><strong>GetCursor</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetCursor">GetCursor</a>(self)&nbsp;-&gt;&nbsp;Cursor<br>
&nbsp;<br>
Return&nbsp;the&nbsp;cursor&nbsp;associated&nbsp;with&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetDefaultAttributes"><strong>GetDefaultAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetDefaultAttributes">GetDefaultAttributes</a>(self)&nbsp;-&gt;&nbsp;VisualAttributes<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;attributes&nbsp;for&nbsp;an&nbsp;instance&nbsp;of&nbsp;this&nbsp;class.&nbsp;&nbsp;This&nbsp;is<br>
useful&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;use&nbsp;the&nbsp;same&nbsp;font&nbsp;or&nbsp;colour&nbsp;in&nbsp;your&nbsp;own&nbsp;control<br>
as&nbsp;in&nbsp;a&nbsp;standard&nbsp;control&nbsp;--&nbsp;which&nbsp;is&nbsp;a&nbsp;much&nbsp;better&nbsp;idea&nbsp;than&nbsp;hard<br>
coding&nbsp;specific&nbsp;colours&nbsp;or&nbsp;fonts&nbsp;which&nbsp;might&nbsp;look&nbsp;completely&nbsp;out&nbsp;of<br>
place&nbsp;on&nbsp;the&nbsp;user's&nbsp;system,&nbsp;especially&nbsp;if&nbsp;it&nbsp;uses&nbsp;themes.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetDefaultItem"><strong>GetDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetDefaultItem">GetDefaultItem</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;child&nbsp;of&nbsp;this&nbsp;parent,&nbsp;i.e.&nbsp;the&nbsp;one&nbsp;which&nbsp;is&nbsp;activated<br>
by&nbsp;pressing&nbsp;&lt;Enter&gt;&nbsp;such&nbsp;as&nbsp;the&nbsp;OK&nbsp;button&nbsp;on&nbsp;a&nbsp;wx.Dialog.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetDropTarget"><strong>GetDropTarget</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetDropTarget">GetDropTarget</a>(self)&nbsp;-&gt;&nbsp;DropTarget<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;associated&nbsp;drop&nbsp;target,&nbsp;which&nbsp;may&nbsp;be&nbsp;None.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetEventHandler"><strong>GetEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetEventHandler">GetEventHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;event&nbsp;handler&nbsp;for&nbsp;this&nbsp;window.&nbsp;By&nbsp;default,&nbsp;the&nbsp;window&nbsp;is<br>
its&nbsp;own&nbsp;event&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetExtraStyle"><strong>GetExtraStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetExtraStyle">GetExtraStyle</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;extra&nbsp;style&nbsp;bits&nbsp;for&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetFont"><strong>GetFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetFont">GetFont</a>(self)&nbsp;-&gt;&nbsp;Font<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;default&nbsp;font&nbsp;used&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetForegroundColour"><strong>GetForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetForegroundColour">GetForegroundColour</a>(self)&nbsp;-&gt;&nbsp;Colour<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;foreground&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;interpretation&nbsp;of<br>
foreground&nbsp;colour&nbsp;is&nbsp;dependent&nbsp;on&nbsp;the&nbsp;window&nbsp;class;&nbsp;it&nbsp;may&nbsp;be&nbsp;the&nbsp;text<br>
colour&nbsp;or&nbsp;other&nbsp;colour,&nbsp;or&nbsp;it&nbsp;may&nbsp;not&nbsp;be&nbsp;used&nbsp;at&nbsp;all.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetFullTextExtent"><strong>GetFullTextExtent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetFullTextExtent">GetFullTextExtent</a>(String&nbsp;string,&nbsp;Font&nbsp;font=None)&nbsp;-&gt;<br>
&nbsp;&nbsp;&nbsp;(width,&nbsp;height,&nbsp;descent,&nbsp;externalLeading)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;width,&nbsp;height,&nbsp;decent&nbsp;and&nbsp;leading&nbsp;of&nbsp;the&nbsp;text&nbsp;using&nbsp;the<br>
current&nbsp;or&nbsp;specified&nbsp;font.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetGrandParent"><strong>GetGrandParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetGrandParent">GetGrandParent</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;parent&nbsp;of&nbsp;the&nbsp;parent&nbsp;of&nbsp;this&nbsp;window,&nbsp;or&nbsp;None&nbsp;if&nbsp;there<br>
isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetHandle"><strong>GetHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetHandle">GetHandle</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;platform-specific&nbsp;handle&nbsp;(as&nbsp;a&nbsp;long&nbsp;integer)&nbsp;of&nbsp;the<br>
physical&nbsp;window.&nbsp;&nbsp;Currently&nbsp;on&nbsp;wxMac&nbsp;it&nbsp;returns&nbsp;the&nbsp;handle&nbsp;of&nbsp;the<br>
toplevel&nbsp;parent&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetHelpText"><strong>GetHelpText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetHelpText">GetHelpText</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;help&nbsp;text&nbsp;to&nbsp;be&nbsp;used&nbsp;as&nbsp;context-sensitive&nbsp;help&nbsp;for&nbsp;this<br>
window.&nbsp;&nbsp;Note&nbsp;that&nbsp;the&nbsp;text&nbsp;is&nbsp;actually&nbsp;stored&nbsp;by&nbsp;the&nbsp;current<br>
wxHelpProvider&nbsp;implementation,&nbsp;and&nbsp;not&nbsp;in&nbsp;the&nbsp;window&nbsp;object&nbsp;itself.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetId"><strong>GetId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetId">GetId</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;identifier&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Each&nbsp;window&nbsp;has&nbsp;an&nbsp;integer<br>
identifier.&nbsp;If&nbsp;the&nbsp;application&nbsp;has&nbsp;not&nbsp;provided&nbsp;one&nbsp;(or&nbsp;the&nbsp;default&nbsp;Id<br>
-1&nbsp;is&nbsp;used)&nbsp;then&nbsp;an&nbsp;unique&nbsp;identifier&nbsp;with&nbsp;a&nbsp;negative&nbsp;value&nbsp;will&nbsp;be<br>
generated.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetLabel"><strong>GetLabel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetLabel">GetLabel</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Generic&nbsp;way&nbsp;of&nbsp;getting&nbsp;a&nbsp;label&nbsp;from&nbsp;any&nbsp;window,&nbsp;for&nbsp;identification<br>
purposes.&nbsp;&nbsp;The&nbsp;interpretation&nbsp;of&nbsp;this&nbsp;function&nbsp;differs&nbsp;from&nbsp;class&nbsp;to<br>
class.&nbsp;For&nbsp;frames&nbsp;and&nbsp;dialogs,&nbsp;the&nbsp;value&nbsp;returned&nbsp;is&nbsp;the&nbsp;title.&nbsp;For<br>
buttons&nbsp;or&nbsp;static&nbsp;text&nbsp;controls,&nbsp;it&nbsp;is&nbsp;the&nbsp;button&nbsp;text.&nbsp;This&nbsp;function<br>
can&nbsp;be&nbsp;useful&nbsp;for&nbsp;meta-programs&nbsp;such&nbsp;as&nbsp;testing&nbsp;tools&nbsp;or&nbsp;special-needs<br>
access&nbsp;programs)which&nbsp;need&nbsp;to&nbsp;identify&nbsp;windows&nbsp;by&nbsp;name.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetMaxHeight"><strong>GetMaxHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetMaxHeight">GetMaxHeight</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetMaxSize"><strong>GetMaxSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetMaxSize">GetMaxSize</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetMaxWidth"><strong>GetMaxWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetMaxWidth">GetMaxWidth</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetMinHeight"><strong>GetMinHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetMinHeight">GetMinHeight</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetMinSize"><strong>GetMinSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetMinSize">GetMinSize</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetMinWidth"><strong>GetMinWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetMinWidth">GetMinWidth</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetName"><strong>GetName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetName">GetName</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;windows&nbsp;name.&nbsp;&nbsp;This&nbsp;name&nbsp;is&nbsp;not&nbsp;guaranteed&nbsp;to&nbsp;be&nbsp;unique;<br>
it&nbsp;is&nbsp;up&nbsp;to&nbsp;the&nbsp;programmer&nbsp;to&nbsp;supply&nbsp;an&nbsp;appropriate&nbsp;name&nbsp;in&nbsp;the&nbsp;window<br>
constructor&nbsp;or&nbsp;via&nbsp;wx.Window.SetName.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetParent"><strong>GetParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetParent">GetParent</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;parent&nbsp;window&nbsp;of&nbsp;this&nbsp;window,&nbsp;or&nbsp;None&nbsp;if&nbsp;there&nbsp;isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetPosition"><strong>GetPosition</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetPosition">GetPosition</a>(self)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window's&nbsp;position.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetPositionTuple"><strong>GetPositionTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetPositionTuple">GetPositionTuple</a>()&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window's&nbsp;position.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetRect"><strong>GetRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetRect">GetRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;size&nbsp;and&nbsp;position&nbsp;of&nbsp;the&nbsp;window&nbsp;as&nbsp;a&nbsp;wx.Rect&nbsp;object.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetScrollPos"><strong>GetScrollPos</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetScrollPos">GetScrollPos</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;position.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetScrollRange"><strong>GetScrollRange</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetScrollRange">GetScrollRange</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;range.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetScrollThumb"><strong>GetScrollThumb</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetScrollThumb">GetScrollThumb</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;thumb&nbsp;size.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetSize"><strong>GetSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetSize">GetSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetSizeTuple"><strong>GetSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetSizeTuple">GetSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetSizer"><strong>GetSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetSizer">GetSizer</a>(self)&nbsp;-&gt;&nbsp;Sizer<br>
&nbsp;<br>
Return&nbsp;the&nbsp;sizer&nbsp;associated&nbsp;with&nbsp;the&nbsp;window&nbsp;by&nbsp;a&nbsp;previous&nbsp;call&nbsp;to<br>
SetSizer&nbsp;or&nbsp;None&nbsp;if&nbsp;there&nbsp;isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetTextExtent"><strong>GetTextExtent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetTextExtent">GetTextExtent</a>(String&nbsp;string)&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;width&nbsp;and&nbsp;height&nbsp;of&nbsp;the&nbsp;text&nbsp;using&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetThemeEnabled"><strong>GetThemeEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetThemeEnabled">GetThemeEnabled</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Return&nbsp;the&nbsp;themeEnabled&nbsp;flag.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetTitle"><strong>GetTitle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetTitle">GetTitle</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window's&nbsp;title.&nbsp;Applicable&nbsp;only&nbsp;to&nbsp;frames&nbsp;and&nbsp;dialogs.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetToolTip"><strong>GetToolTip</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetToolTip">GetToolTip</a>(self)&nbsp;-&gt;&nbsp;ToolTip<br>
&nbsp;<br>
get&nbsp;the&nbsp;associated&nbsp;tooltip&nbsp;or&nbsp;None&nbsp;if&nbsp;none</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetUpdateClientRect"><strong>GetUpdateClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetUpdateClientRect">GetUpdateClientRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Get&nbsp;the&nbsp;update&nbsp;rectangle&nbsp;region&nbsp;bounding&nbsp;box&nbsp;in&nbsp;client&nbsp;coords.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetUpdateRegion"><strong>GetUpdateRegion</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetUpdateRegion">GetUpdateRegion</a>(self)&nbsp;-&gt;&nbsp;Region<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;region&nbsp;specifying&nbsp;which&nbsp;parts&nbsp;of&nbsp;the&nbsp;window&nbsp;have&nbsp;been<br>
damaged.&nbsp;Should&nbsp;only&nbsp;be&nbsp;called&nbsp;within&nbsp;an&nbsp;EVT_PAINT&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetValidator"><strong>GetValidator</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetValidator">GetValidator</a>(self)&nbsp;-&gt;&nbsp;Validator<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;pointer&nbsp;to&nbsp;the&nbsp;current&nbsp;validator&nbsp;for&nbsp;the&nbsp;window,&nbsp;or&nbsp;None&nbsp;if<br>
there&nbsp;is&nbsp;none.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetVirtualSize"><strong>GetVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetVirtualSize">GetVirtualSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Get&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows<br>
this&nbsp;is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetVirtualSizeTuple"><strong>GetVirtualSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetVirtualSizeTuple">GetVirtualSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows<br>
this&nbsp;is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetWindowStyle"><strong>GetWindowStyle</strong></a> = GetWindowStyleFlag(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetWindowStyleFlag">GetWindowStyleFlag</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window&nbsp;style&nbsp;that&nbsp;was&nbsp;passed&nbsp;to&nbsp;the&nbsp;constructor&nbsp;or&nbsp;Create<br>
method.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetWindowStyleFlag"><strong>GetWindowStyleFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetWindowStyleFlag">GetWindowStyleFlag</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window&nbsp;style&nbsp;that&nbsp;was&nbsp;passed&nbsp;to&nbsp;the&nbsp;constructor&nbsp;or&nbsp;Create<br>
method.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetWindowVariant"><strong>GetWindowVariant</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetWindowVariant">GetWindowVariant</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="StatusBarWx-HasCapture"><strong>HasCapture</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-HasCapture">HasCapture</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;this&nbsp;window&nbsp;has&nbsp;the&nbsp;current&nbsp;mouse&nbsp;capture.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-HasFlag"><strong>HasFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-HasFlag">HasFlag</a>(self,&nbsp;int&nbsp;flag)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Test&nbsp;if&nbsp;the&nbsp;given&nbsp;style&nbsp;is&nbsp;set&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-HasScrollbar"><strong>HasScrollbar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-HasScrollbar">HasScrollbar</a>(self,&nbsp;int&nbsp;orient)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Does&nbsp;the&nbsp;window&nbsp;have&nbsp;the&nbsp;scrollbar&nbsp;for&nbsp;this&nbsp;orientation?</tt></dd></dl>

<dl><dt><a name="StatusBarWx-HasTransparentBackground"><strong>HasTransparentBackground</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-HasTransparentBackground">HasTransparentBackground</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;True&nbsp;if&nbsp;this&nbsp;window's&nbsp;background&nbsp;is&nbsp;transparent&nbsp;(as,&nbsp;for<br>
example,&nbsp;for&nbsp;`wx.StaticText`)&nbsp;and&nbsp;should&nbsp;show&nbsp;the&nbsp;parent&nbsp;window's<br>
background.<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;mostly&nbsp;used&nbsp;internally&nbsp;by&nbsp;the&nbsp;library&nbsp;itself&nbsp;and&nbsp;you<br>
normally&nbsp;shouldn't&nbsp;have&nbsp;to&nbsp;call&nbsp;it.&nbsp;You&nbsp;may,&nbsp;however,&nbsp;have&nbsp;to&nbsp;override<br>
it&nbsp;in&nbsp;your&nbsp;custom&nbsp;control&nbsp;classes&nbsp;to&nbsp;ensure&nbsp;that&nbsp;background&nbsp;is&nbsp;painted<br>
correctly.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Hide"><strong>Hide</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Hide">Hide</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Equivalent&nbsp;to&nbsp;calling&nbsp;<a href="#StatusBarWx-Show">Show</a>(False).</tt></dd></dl>

<dl><dt><a name="StatusBarWx-HitTest"><strong>HitTest</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-HitTest">HitTest</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Test&nbsp;where&nbsp;the&nbsp;given&nbsp;(in&nbsp;client&nbsp;coords)&nbsp;point&nbsp;lies</tt></dd></dl>

<dl><dt><a name="StatusBarWx-HitTestXY"><strong>HitTestXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-HitTestXY">HitTestXY</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Test&nbsp;where&nbsp;the&nbsp;given&nbsp;(in&nbsp;client&nbsp;coords)&nbsp;point&nbsp;lies</tt></dd></dl>

<dl><dt><a name="StatusBarWx-InheritAttributes"><strong>InheritAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-InheritAttributes">InheritAttributes</a>(self)<br>
&nbsp;<br>
This&nbsp;function&nbsp;is&nbsp;(or&nbsp;should&nbsp;be,&nbsp;in&nbsp;case&nbsp;of&nbsp;custom&nbsp;controls)&nbsp;called<br>
during&nbsp;window&nbsp;creation&nbsp;to&nbsp;intelligently&nbsp;set&nbsp;up&nbsp;the&nbsp;window&nbsp;visual<br>
attributes,&nbsp;that&nbsp;is&nbsp;the&nbsp;font&nbsp;and&nbsp;the&nbsp;foreground&nbsp;and&nbsp;background<br>
colours.<br>
&nbsp;<br>
By&nbsp;'intelligently'&nbsp;the&nbsp;following&nbsp;is&nbsp;meant:&nbsp;by&nbsp;default,&nbsp;all&nbsp;windows&nbsp;use<br>
their&nbsp;own&nbsp;default&nbsp;attributes.&nbsp;However&nbsp;if&nbsp;some&nbsp;of&nbsp;the&nbsp;parent's<br>
attributes&nbsp;are&nbsp;explicitly&nbsp;changed&nbsp;(that&nbsp;is,&nbsp;using&nbsp;SetFont&nbsp;and&nbsp;not<br>
SetOwnFont)&nbsp;and&nbsp;if&nbsp;the&nbsp;corresponding&nbsp;attribute&nbsp;hadn't&nbsp;been<br>
explicitly&nbsp;set&nbsp;for&nbsp;this&nbsp;window&nbsp;itself,&nbsp;then&nbsp;this&nbsp;window&nbsp;takes&nbsp;the&nbsp;same<br>
value&nbsp;as&nbsp;used&nbsp;by&nbsp;the&nbsp;parent.&nbsp;In&nbsp;addition,&nbsp;if&nbsp;the&nbsp;window&nbsp;overrides<br>
ShouldInheritColours&nbsp;to&nbsp;return&nbsp;false,&nbsp;the&nbsp;colours&nbsp;will&nbsp;not&nbsp;be&nbsp;changed<br>
no&nbsp;matter&nbsp;what&nbsp;and&nbsp;only&nbsp;the&nbsp;font&nbsp;might.<br>
&nbsp;<br>
This&nbsp;rather&nbsp;complicated&nbsp;logic&nbsp;is&nbsp;necessary&nbsp;in&nbsp;order&nbsp;to&nbsp;accommodate&nbsp;the<br>
different&nbsp;usage&nbsp;scenarios.&nbsp;The&nbsp;most&nbsp;common&nbsp;one&nbsp;is&nbsp;when&nbsp;all&nbsp;default<br>
attributes&nbsp;are&nbsp;used&nbsp;and&nbsp;in&nbsp;this&nbsp;case,&nbsp;nothing&nbsp;should&nbsp;be&nbsp;inherited&nbsp;as<br>
in&nbsp;modern&nbsp;GUIs&nbsp;different&nbsp;controls&nbsp;use&nbsp;different&nbsp;fonts&nbsp;(and&nbsp;colours)<br>
than&nbsp;their&nbsp;siblings&nbsp;so&nbsp;they&nbsp;can't&nbsp;inherit&nbsp;the&nbsp;same&nbsp;value&nbsp;from&nbsp;the<br>
parent.&nbsp;However&nbsp;it&nbsp;was&nbsp;also&nbsp;deemed&nbsp;desirable&nbsp;to&nbsp;allow&nbsp;to&nbsp;simply&nbsp;change<br>
the&nbsp;attributes&nbsp;of&nbsp;all&nbsp;children&nbsp;at&nbsp;once&nbsp;by&nbsp;just&nbsp;changing&nbsp;the&nbsp;font&nbsp;or<br>
colour&nbsp;of&nbsp;their&nbsp;common&nbsp;parent,&nbsp;hence&nbsp;in&nbsp;this&nbsp;case&nbsp;we&nbsp;do&nbsp;inherit&nbsp;the<br>
parents&nbsp;attributes.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-InheritsBackgroundColour"><strong>InheritsBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-InheritsBackgroundColour">InheritsBackgroundColour</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="StatusBarWx-InitDialog"><strong>InitDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-InitDialog">InitDialog</a>(self)<br>
&nbsp;<br>
Sends&nbsp;an&nbsp;EVT_INIT_DIALOG&nbsp;event,&nbsp;whose&nbsp;handler&nbsp;usually&nbsp;transfers&nbsp;data<br>
to&nbsp;the&nbsp;dialog&nbsp;via&nbsp;validators.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-InvalidateBestSize"><strong>InvalidateBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-InvalidateBestSize">InvalidateBestSize</a>(self)<br>
&nbsp;<br>
Reset&nbsp;the&nbsp;cached&nbsp;best&nbsp;size&nbsp;value&nbsp;so&nbsp;it&nbsp;will&nbsp;be&nbsp;recalculated&nbsp;the&nbsp;next<br>
time&nbsp;it&nbsp;is&nbsp;needed.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-IsBeingDeleted"><strong>IsBeingDeleted</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-IsBeingDeleted">IsBeingDeleted</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Is&nbsp;the&nbsp;window&nbsp;in&nbsp;the&nbsp;process&nbsp;of&nbsp;being&nbsp;deleted?</tt></dd></dl>

<dl><dt><a name="StatusBarWx-IsEnabled"><strong>IsEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-IsEnabled">IsEnabled</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;enabled&nbsp;for&nbsp;input,&nbsp;false&nbsp;otherwise.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-IsExposed"><strong>IsExposed</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-IsExposed">IsExposed</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;w=1,&nbsp;int&nbsp;h=1)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-IsExposedPoint"><strong>IsExposedPoint</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-IsExposedPoint">IsExposedPoint</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-IsExposedRect"><strong>IsExposedRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-IsExposedRect">IsExposedRect</a>(self,&nbsp;Rect&nbsp;rect)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-IsRetained"><strong>IsRetained</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-IsRetained">IsRetained</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;retained,&nbsp;false&nbsp;otherwise.&nbsp;&nbsp;Retained<br>
windows&nbsp;are&nbsp;only&nbsp;available&nbsp;on&nbsp;X&nbsp;platforms.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-IsShown"><strong>IsShown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-IsShown">IsShown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;shown,&nbsp;false&nbsp;if&nbsp;it&nbsp;has&nbsp;been&nbsp;hidden.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-IsTopLevel"><strong>IsTopLevel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-IsTopLevel">IsTopLevel</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;window&nbsp;is&nbsp;a&nbsp;top-level&nbsp;one.&nbsp;Currently&nbsp;all<br>
frames&nbsp;and&nbsp;dialogs&nbsp;are&nbsp;always&nbsp;considered&nbsp;to&nbsp;be&nbsp;top-level&nbsp;windows&nbsp;(even<br>
if&nbsp;they&nbsp;have&nbsp;a&nbsp;parent&nbsp;window).</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Layout"><strong>Layout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Layout">Layout</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Invokes&nbsp;the&nbsp;constraint-based&nbsp;layout&nbsp;algorithm&nbsp;or&nbsp;the&nbsp;sizer-based<br>
algorithm&nbsp;for&nbsp;this&nbsp;window.&nbsp;&nbsp;See&nbsp;SetAutoLayout:&nbsp;when&nbsp;auto&nbsp;layout&nbsp;is&nbsp;on,<br>
this&nbsp;function&nbsp;gets&nbsp;called&nbsp;automatically&nbsp;by&nbsp;the&nbsp;default&nbsp;EVT_SIZE<br>
handler&nbsp;when&nbsp;the&nbsp;window&nbsp;is&nbsp;resized.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-LineDown"><strong>LineDown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-LineDown">LineDown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#StatusBarWx-ScrollLines">ScrollLines</a>(1).</tt></dd></dl>

<dl><dt><a name="StatusBarWx-LineUp"><strong>LineUp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-LineUp">LineUp</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#StatusBarWx-ScrollLines">ScrollLines</a>(-1).</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Lower"><strong>Lower</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Lower">Lower</a>(self)<br>
&nbsp;<br>
Lowers&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;bottom&nbsp;of&nbsp;the&nbsp;window&nbsp;hierarchy.&nbsp;&nbsp;In&nbsp;current<br>
version&nbsp;of&nbsp;wxWidgets&nbsp;this&nbsp;works&nbsp;both&nbsp;for&nbsp;manage&nbsp;and&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-MakeModal"><strong>MakeModal</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-MakeModal">MakeModal</a>(self,&nbsp;bool&nbsp;modal=True)<br>
&nbsp;<br>
Disables&nbsp;all&nbsp;other&nbsp;windows&nbsp;in&nbsp;the&nbsp;application&nbsp;so&nbsp;that&nbsp;the&nbsp;user&nbsp;can<br>
only&nbsp;interact&nbsp;with&nbsp;this&nbsp;window.&nbsp;&nbsp;Passing&nbsp;False&nbsp;will&nbsp;reverse&nbsp;this<br>
effect.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Move"><strong>Move</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Move">Move</a>(self,&nbsp;Point&nbsp;pt,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-MoveAfterInTabOrder"><strong>MoveAfterInTabOrder</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-MoveAfterInTabOrder">MoveAfterInTabOrder</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Moves&nbsp;this&nbsp;window&nbsp;in&nbsp;the&nbsp;tab&nbsp;navigation&nbsp;order&nbsp;after&nbsp;the&nbsp;specified<br>
sibling&nbsp;window.&nbsp;&nbsp;This&nbsp;means&nbsp;that&nbsp;when&nbsp;the&nbsp;user&nbsp;presses&nbsp;the&nbsp;TAB&nbsp;key&nbsp;on<br>
that&nbsp;other&nbsp;window,&nbsp;the&nbsp;focus&nbsp;switches&nbsp;to&nbsp;this&nbsp;window.<br>
&nbsp;<br>
The&nbsp;default&nbsp;tab&nbsp;order&nbsp;is&nbsp;the&nbsp;same&nbsp;as&nbsp;creation&nbsp;order.&nbsp;&nbsp;This&nbsp;function<br>
and&nbsp;`MoveBeforeInTabOrder`&nbsp;allow&nbsp;to&nbsp;change&nbsp;it&nbsp;after&nbsp;creating&nbsp;all&nbsp;the<br>
windows.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-MoveBeforeInTabOrder"><strong>MoveBeforeInTabOrder</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-MoveBeforeInTabOrder">MoveBeforeInTabOrder</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Same&nbsp;as&nbsp;`MoveAfterInTabOrder`&nbsp;except&nbsp;that&nbsp;it&nbsp;inserts&nbsp;this&nbsp;window&nbsp;just<br>
before&nbsp;win&nbsp;instead&nbsp;of&nbsp;putting&nbsp;it&nbsp;right&nbsp;after&nbsp;it.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-MoveXY"><strong>MoveXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-MoveXY">MoveXY</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Navigate"><strong>Navigate</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Navigate">Navigate</a>(self,&nbsp;int&nbsp;flags=NavigationKeyEvent.IsForward)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Does&nbsp;keyboard&nbsp;navigation&nbsp;from&nbsp;this&nbsp;window&nbsp;to&nbsp;another,&nbsp;by&nbsp;sending&nbsp;a<br>
`wx.NavigationKeyEvent`.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-PageDown"><strong>PageDown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-PageDown">PageDown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#StatusBarWx-ScrollPages">ScrollPages</a>(1).</tt></dd></dl>

<dl><dt><a name="StatusBarWx-PageUp"><strong>PageUp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-PageUp">PageUp</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#StatusBarWx-ScrollPages">ScrollPages</a>(-1).</tt></dd></dl>

<dl><dt><a name="StatusBarWx-PopEventHandler"><strong>PopEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-PopEventHandler">PopEventHandler</a>(self,&nbsp;bool&nbsp;deleteHandler=False)&nbsp;-&gt;&nbsp;EvtHandler<br>
&nbsp;<br>
Removes&nbsp;and&nbsp;returns&nbsp;the&nbsp;top-most&nbsp;event&nbsp;handler&nbsp;on&nbsp;the&nbsp;event&nbsp;handler<br>
stack.&nbsp;&nbsp;If&nbsp;deleteHandler&nbsp;is&nbsp;True&nbsp;then&nbsp;the&nbsp;wx.EvtHandler&nbsp;object&nbsp;will&nbsp;be<br>
destroyed&nbsp;after&nbsp;it&nbsp;is&nbsp;popped.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-PopupMenu"><strong>PopupMenu</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-PopupMenu">PopupMenu</a>(self,&nbsp;Menu&nbsp;menu,&nbsp;Point&nbsp;pos=DefaultPosition)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Pops&nbsp;up&nbsp;the&nbsp;given&nbsp;menu&nbsp;at&nbsp;the&nbsp;specified&nbsp;coordinates,&nbsp;relative&nbsp;to&nbsp;this&nbsp;window,<br>
and&nbsp;returns&nbsp;control&nbsp;when&nbsp;the&nbsp;user&nbsp;has&nbsp;dismissed&nbsp;the&nbsp;menu.&nbsp;If&nbsp;a&nbsp;menu&nbsp;item&nbsp;is<br>
selected,&nbsp;the&nbsp;corresponding&nbsp;menu&nbsp;event&nbsp;is&nbsp;generated&nbsp;and&nbsp;will&nbsp;be&nbsp;processed&nbsp;as<br>
usual.&nbsp;&nbsp;If&nbsp;the&nbsp;default&nbsp;position&nbsp;is&nbsp;given&nbsp;then&nbsp;the&nbsp;current&nbsp;position&nbsp;of&nbsp;the<br>
mouse&nbsp;cursor&nbsp;will&nbsp;be&nbsp;used.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-PopupMenuXY"><strong>PopupMenuXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-PopupMenuXY">PopupMenuXY</a>(self,&nbsp;Menu&nbsp;menu,&nbsp;int&nbsp;x=-1,&nbsp;int&nbsp;y=-1)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Pops&nbsp;up&nbsp;the&nbsp;given&nbsp;menu&nbsp;at&nbsp;the&nbsp;specified&nbsp;coordinates,&nbsp;relative&nbsp;to&nbsp;this&nbsp;window,<br>
and&nbsp;returns&nbsp;control&nbsp;when&nbsp;the&nbsp;user&nbsp;has&nbsp;dismissed&nbsp;the&nbsp;menu.&nbsp;If&nbsp;a&nbsp;menu&nbsp;item&nbsp;is<br>
selected,&nbsp;the&nbsp;corresponding&nbsp;menu&nbsp;event&nbsp;is&nbsp;generated&nbsp;and&nbsp;will&nbsp;be&nbsp;processed&nbsp;as<br>
usual.&nbsp;&nbsp;If&nbsp;the&nbsp;default&nbsp;position&nbsp;is&nbsp;given&nbsp;then&nbsp;the&nbsp;current&nbsp;position&nbsp;of&nbsp;the<br>
mouse&nbsp;cursor&nbsp;will&nbsp;be&nbsp;used.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-PostCreate"><strong>PostCreate</strong></a>(self, pre)</dt><dd><tt>Phase&nbsp;3&nbsp;of&nbsp;the&nbsp;2-phase&nbsp;create&nbsp;&lt;wink!&gt;<br>
Call&nbsp;this&nbsp;method&nbsp;after&nbsp;precreating&nbsp;the&nbsp;window&nbsp;with&nbsp;the&nbsp;2-phase&nbsp;create&nbsp;method.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-PrepareDC"><strong>PrepareDC</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-PrepareDC">PrepareDC</a>(self,&nbsp;DC&nbsp;dc)<br>
&nbsp;<br>
Call&nbsp;this&nbsp;function&nbsp;to&nbsp;prepare&nbsp;the&nbsp;device&nbsp;context&nbsp;for&nbsp;drawing&nbsp;a<br>
scrolled&nbsp;image.&nbsp;It&nbsp;sets&nbsp;the&nbsp;device&nbsp;origin&nbsp;according&nbsp;to&nbsp;the&nbsp;current<br>
scroll&nbsp;position.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-PushEventHandler"><strong>PushEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-PushEventHandler">PushEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)<br>
&nbsp;<br>
Pushes&nbsp;this&nbsp;event&nbsp;handler&nbsp;onto&nbsp;the&nbsp;event&nbsp;handler&nbsp;stack&nbsp;for&nbsp;the&nbsp;window.<br>
An&nbsp;event&nbsp;handler&nbsp;is&nbsp;an&nbsp;object&nbsp;that&nbsp;is&nbsp;capable&nbsp;of&nbsp;processing&nbsp;the&nbsp;events<br>
sent&nbsp;to&nbsp;a&nbsp;window.&nbsp;By&nbsp;default,&nbsp;the&nbsp;window&nbsp;is&nbsp;its&nbsp;own&nbsp;event&nbsp;handler,&nbsp;but<br>
an&nbsp;application&nbsp;may&nbsp;wish&nbsp;to&nbsp;substitute&nbsp;another,&nbsp;for&nbsp;example&nbsp;to&nbsp;allow<br>
central&nbsp;implementation&nbsp;of&nbsp;event-handling&nbsp;for&nbsp;a&nbsp;variety&nbsp;of&nbsp;different<br>
window&nbsp;classes.<br>
&nbsp;<br>
wx.Window.PushEventHandler&nbsp;allows&nbsp;an&nbsp;application&nbsp;to&nbsp;set&nbsp;up&nbsp;a&nbsp;chain&nbsp;of<br>
event&nbsp;handlers,&nbsp;where&nbsp;an&nbsp;event&nbsp;not&nbsp;handled&nbsp;by&nbsp;one&nbsp;event&nbsp;handler&nbsp;is<br>
handed&nbsp;to&nbsp;the&nbsp;next&nbsp;one&nbsp;in&nbsp;the&nbsp;chain.&nbsp;Use&nbsp;`wx.Window.PopEventHandler`&nbsp;to<br>
remove&nbsp;the&nbsp;event&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Raise"><strong>Raise</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Raise">Raise</a>(self)<br>
&nbsp;<br>
Raises&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;top&nbsp;of&nbsp;the&nbsp;window&nbsp;hierarchy.&nbsp;&nbsp;In&nbsp;current<br>
version&nbsp;of&nbsp;wxWidgets&nbsp;this&nbsp;works&nbsp;both&nbsp;for&nbsp;manage&nbsp;and&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Refresh"><strong>Refresh</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Refresh">Refresh</a>(self,&nbsp;bool&nbsp;eraseBackground=True,&nbsp;Rect&nbsp;rect=None)<br>
&nbsp;<br>
Mark&nbsp;the&nbsp;specified&nbsp;rectangle&nbsp;(or&nbsp;the&nbsp;whole&nbsp;window)&nbsp;as&nbsp;"dirty"&nbsp;so&nbsp;it<br>
will&nbsp;be&nbsp;repainted.&nbsp;&nbsp;Causes&nbsp;an&nbsp;EVT_PAINT&nbsp;event&nbsp;to&nbsp;be&nbsp;generated&nbsp;and&nbsp;sent<br>
to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-RefreshRect"><strong>RefreshRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-RefreshRect">RefreshRect</a>(self,&nbsp;Rect&nbsp;rect,&nbsp;bool&nbsp;eraseBackground=True)<br>
&nbsp;<br>
Redraws&nbsp;the&nbsp;contents&nbsp;of&nbsp;the&nbsp;given&nbsp;rectangle:&nbsp;the&nbsp;area&nbsp;inside&nbsp;it&nbsp;will<br>
be&nbsp;repainted.&nbsp;&nbsp;This&nbsp;is&nbsp;the&nbsp;same&nbsp;as&nbsp;Refresh&nbsp;but&nbsp;has&nbsp;a&nbsp;nicer&nbsp;syntax.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-RegisterHotKey"><strong>RegisterHotKey</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-RegisterHotKey">RegisterHotKey</a>(self,&nbsp;int&nbsp;hotkeyId,&nbsp;int&nbsp;modifiers,&nbsp;int&nbsp;keycode)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Registers&nbsp;a&nbsp;system&nbsp;wide&nbsp;hotkey.&nbsp;Every&nbsp;time&nbsp;the&nbsp;user&nbsp;presses&nbsp;the&nbsp;hotkey<br>
registered&nbsp;here,&nbsp;this&nbsp;window&nbsp;will&nbsp;receive&nbsp;a&nbsp;hotkey&nbsp;event.&nbsp;It&nbsp;will<br>
receive&nbsp;the&nbsp;event&nbsp;even&nbsp;if&nbsp;the&nbsp;application&nbsp;is&nbsp;in&nbsp;the&nbsp;background&nbsp;and<br>
does&nbsp;not&nbsp;have&nbsp;the&nbsp;input&nbsp;focus&nbsp;because&nbsp;the&nbsp;user&nbsp;is&nbsp;working&nbsp;with&nbsp;some<br>
other&nbsp;application.&nbsp;&nbsp;To&nbsp;bind&nbsp;an&nbsp;event&nbsp;handler&nbsp;function&nbsp;to&nbsp;this&nbsp;hotkey<br>
use&nbsp;EVT_HOTKEY&nbsp;with&nbsp;an&nbsp;id&nbsp;equal&nbsp;to&nbsp;hotkeyId.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the<br>
hotkey&nbsp;was&nbsp;registered&nbsp;successfully.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-ReleaseMouse"><strong>ReleaseMouse</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-ReleaseMouse">ReleaseMouse</a>(self)<br>
&nbsp;<br>
Releases&nbsp;mouse&nbsp;input&nbsp;captured&nbsp;with&nbsp;wx.Window.CaptureMouse.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-RemoveChild"><strong>RemoveChild</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-RemoveChild">RemoveChild</a>(self,&nbsp;Window&nbsp;child)<br>
&nbsp;<br>
Removes&nbsp;a&nbsp;child&nbsp;window.&nbsp;This&nbsp;is&nbsp;called&nbsp;automatically&nbsp;by&nbsp;window<br>
deletion&nbsp;functions&nbsp;so&nbsp;should&nbsp;not&nbsp;be&nbsp;required&nbsp;by&nbsp;the&nbsp;application<br>
programmer.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-RemoveEventHandler"><strong>RemoveEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-RemoveEventHandler">RemoveEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Find&nbsp;the&nbsp;given&nbsp;handler&nbsp;in&nbsp;the&nbsp;event&nbsp;handler&nbsp;chain&nbsp;and&nbsp;remove&nbsp;(but&nbsp;not<br>
delete)&nbsp;it&nbsp;from&nbsp;the&nbsp;event&nbsp;handler&nbsp;chain,&nbsp;return&nbsp;True&nbsp;if&nbsp;it&nbsp;was&nbsp;found<br>
and&nbsp;False&nbsp;otherwise&nbsp;(this&nbsp;also&nbsp;results&nbsp;in&nbsp;an&nbsp;assert&nbsp;failure&nbsp;so&nbsp;this<br>
function&nbsp;should&nbsp;only&nbsp;be&nbsp;called&nbsp;when&nbsp;the&nbsp;handler&nbsp;is&nbsp;supposed&nbsp;to&nbsp;be<br>
there.)</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Reparent"><strong>Reparent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Reparent">Reparent</a>(self,&nbsp;Window&nbsp;newParent)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Reparents&nbsp;the&nbsp;window,&nbsp;i.e&nbsp;the&nbsp;window&nbsp;will&nbsp;be&nbsp;removed&nbsp;from&nbsp;its&nbsp;current<br>
parent&nbsp;window&nbsp;(e.g.&nbsp;a&nbsp;non-standard&nbsp;toolbar&nbsp;in&nbsp;a&nbsp;wxFrame)&nbsp;and&nbsp;then<br>
re-inserted&nbsp;into&nbsp;another.&nbsp;Available&nbsp;on&nbsp;Windows&nbsp;and&nbsp;GTK.&nbsp;&nbsp;Returns&nbsp;True<br>
if&nbsp;the&nbsp;parent&nbsp;was&nbsp;changed,&nbsp;False&nbsp;otherwise&nbsp;(error&nbsp;or&nbsp;newParent&nbsp;==<br>
oldParent)</tt></dd></dl>

<dl><dt><a name="StatusBarWx-ScreenToClient"><strong>ScreenToClient</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-ScreenToClient">ScreenToClient</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;from&nbsp;screen&nbsp;to&nbsp;client&nbsp;window&nbsp;coordinates.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-ScreenToClientXY"><strong>ScreenToClientXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-ScreenToClientXY">ScreenToClientXY</a>(int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Converts&nbsp;from&nbsp;screen&nbsp;to&nbsp;client&nbsp;window&nbsp;coordinates.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-ScrollLines"><strong>ScrollLines</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-ScrollLines">ScrollLines</a>(self,&nbsp;int&nbsp;lines)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
If&nbsp;the&nbsp;platform&nbsp;and&nbsp;window&nbsp;class&nbsp;supports&nbsp;it,&nbsp;scrolls&nbsp;the&nbsp;window&nbsp;by<br>
the&nbsp;given&nbsp;number&nbsp;of&nbsp;lines&nbsp;down,&nbsp;if&nbsp;lines&nbsp;is&nbsp;positive,&nbsp;or&nbsp;up&nbsp;if&nbsp;lines<br>
is&nbsp;negative.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;window&nbsp;was&nbsp;scrolled,&nbsp;False&nbsp;if&nbsp;it&nbsp;was<br>
already&nbsp;on&nbsp;top/bottom&nbsp;and&nbsp;nothing&nbsp;was&nbsp;done.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-ScrollPages"><strong>ScrollPages</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-ScrollPages">ScrollPages</a>(self,&nbsp;int&nbsp;pages)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
If&nbsp;the&nbsp;platform&nbsp;and&nbsp;window&nbsp;class&nbsp;supports&nbsp;it,&nbsp;scrolls&nbsp;the&nbsp;window&nbsp;by<br>
the&nbsp;given&nbsp;number&nbsp;of&nbsp;pages&nbsp;down,&nbsp;if&nbsp;pages&nbsp;is&nbsp;positive,&nbsp;or&nbsp;up&nbsp;if&nbsp;pages<br>
is&nbsp;negative.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;window&nbsp;was&nbsp;scrolled,&nbsp;False&nbsp;if&nbsp;it&nbsp;was<br>
already&nbsp;on&nbsp;top/bottom&nbsp;and&nbsp;nothing&nbsp;was&nbsp;done.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-ScrollWindow"><strong>ScrollWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-ScrollWindow">ScrollWindow</a>(self,&nbsp;int&nbsp;dx,&nbsp;int&nbsp;dy,&nbsp;Rect&nbsp;rect=None)<br>
&nbsp;<br>
Physically&nbsp;scrolls&nbsp;the&nbsp;pixels&nbsp;in&nbsp;the&nbsp;window&nbsp;and&nbsp;move&nbsp;child&nbsp;windows<br>
accordingly.&nbsp;&nbsp;Use&nbsp;this&nbsp;function&nbsp;to&nbsp;optimise&nbsp;your&nbsp;scrolling<br>
implementations,&nbsp;to&nbsp;minimise&nbsp;the&nbsp;area&nbsp;that&nbsp;must&nbsp;be&nbsp;redrawn.&nbsp;Note&nbsp;that<br>
it&nbsp;is&nbsp;rarely&nbsp;required&nbsp;to&nbsp;call&nbsp;this&nbsp;function&nbsp;from&nbsp;a&nbsp;user&nbsp;program.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SendSizeEvent"><strong>SendSizeEvent</strong></a>(self)</dt></dl>

<dl><dt><a name="StatusBarWx-SetAcceleratorTable"><strong>SetAcceleratorTable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetAcceleratorTable">SetAcceleratorTable</a>(self,&nbsp;AcceleratorTable&nbsp;accel)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;accelerator&nbsp;table&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetAutoLayout"><strong>SetAutoLayout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetAutoLayout">SetAutoLayout</a>(self,&nbsp;bool&nbsp;autoLayout)<br>
&nbsp;<br>
Determines&nbsp;whether&nbsp;the&nbsp;Layout&nbsp;function&nbsp;will&nbsp;be&nbsp;called&nbsp;automatically<br>
when&nbsp;the&nbsp;window&nbsp;is&nbsp;resized.&nbsp;&nbsp;It&nbsp;is&nbsp;called&nbsp;implicitly&nbsp;by&nbsp;SetSizer&nbsp;but<br>
if&nbsp;you&nbsp;use&nbsp;SetConstraints&nbsp;you&nbsp;should&nbsp;call&nbsp;it&nbsp;manually&nbsp;or&nbsp;otherwise&nbsp;the<br>
window&nbsp;layout&nbsp;won't&nbsp;be&nbsp;correctly&nbsp;updated&nbsp;when&nbsp;its&nbsp;size&nbsp;changes.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetBackgroundColour"><strong>SetBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetBackgroundColour">SetBackgroundColour</a>(self,&nbsp;Colour&nbsp;colour)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;background&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;colour<br>
was&nbsp;changed.&nbsp;&nbsp;The&nbsp;background&nbsp;colour&nbsp;is&nbsp;usually&nbsp;painted&nbsp;by&nbsp;the&nbsp;default<br>
EVT_ERASE_BACKGROUND&nbsp;event&nbsp;handler&nbsp;function&nbsp;under&nbsp;Windows&nbsp;and<br>
automatically&nbsp;under&nbsp;GTK.&nbsp;&nbsp;Using&nbsp;`wx.NullColour`&nbsp;will&nbsp;reset&nbsp;the&nbsp;window<br>
to&nbsp;the&nbsp;default&nbsp;background&nbsp;colour.<br>
&nbsp;<br>
Note&nbsp;that&nbsp;setting&nbsp;the&nbsp;background&nbsp;colour&nbsp;may&nbsp;not&nbsp;cause&nbsp;an&nbsp;immediate<br>
refresh,&nbsp;so&nbsp;you&nbsp;may&nbsp;wish&nbsp;to&nbsp;call&nbsp;`ClearBackground`&nbsp;or&nbsp;`Refresh`&nbsp;after<br>
calling&nbsp;this&nbsp;function.<br>
&nbsp;<br>
Using&nbsp;this&nbsp;function&nbsp;will&nbsp;disable&nbsp;attempts&nbsp;to&nbsp;use&nbsp;themes&nbsp;for&nbsp;this<br>
window,&nbsp;if&nbsp;the&nbsp;system&nbsp;supports&nbsp;them.&nbsp;&nbsp;Use&nbsp;with&nbsp;care&nbsp;since&nbsp;usually&nbsp;the<br>
themes&nbsp;represent&nbsp;the&nbsp;appearance&nbsp;chosen&nbsp;by&nbsp;the&nbsp;user&nbsp;to&nbsp;be&nbsp;used&nbsp;for&nbsp;all<br>
applications&nbsp;on&nbsp;the&nbsp;system.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetBackgroundStyle"><strong>SetBackgroundStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetBackgroundStyle">SetBackgroundStyle</a>(self,&nbsp;int&nbsp;style)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;The&nbsp;background&nbsp;style<br>
indicates&nbsp;how&nbsp;the&nbsp;background&nbsp;of&nbsp;the&nbsp;window&nbsp;is&nbsp;drawn.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;======================&nbsp;&nbsp;========================================<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_SYSTEM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;colour&nbsp;or&nbsp;pattern&nbsp;should<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;be&nbsp;determined&nbsp;by&nbsp;the&nbsp;system<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_COLOUR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;should&nbsp;be&nbsp;a&nbsp;solid&nbsp;colour<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_CUSTOM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;will&nbsp;be&nbsp;implemented&nbsp;by&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;application.<br>
&nbsp;&nbsp;&nbsp;&nbsp;======================&nbsp;&nbsp;========================================<br>
&nbsp;<br>
On&nbsp;GTK+,&nbsp;use&nbsp;of&nbsp;wx.BG_STYLE_CUSTOM&nbsp;allows&nbsp;the&nbsp;flicker-free&nbsp;drawing&nbsp;of<br>
a&nbsp;custom&nbsp;background,&nbsp;such&nbsp;as&nbsp;a&nbsp;tiled&nbsp;bitmap.&nbsp;Currently&nbsp;the&nbsp;style&nbsp;has<br>
no&nbsp;effect&nbsp;on&nbsp;other&nbsp;platforms.<br>
&nbsp;<br>
:see:&nbsp;`GetBackgroundStyle`,&nbsp;`SetBackgroundColour`</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetBestFittingSize"><strong>SetBestFittingSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetBestFittingSize">SetBestFittingSize</a>(self,&nbsp;Size&nbsp;size=DefaultSize)<br>
&nbsp;<br>
A&nbsp;'Smart'&nbsp;SetSize&nbsp;that&nbsp;will&nbsp;fill&nbsp;in&nbsp;default&nbsp;size&nbsp;components&nbsp;with&nbsp;the<br>
window's&nbsp;*best&nbsp;size*&nbsp;values.&nbsp;&nbsp;Also&nbsp;set's&nbsp;the&nbsp;minsize&nbsp;for&nbsp;use&nbsp;with&nbsp;sizers.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetCaret"><strong>SetCaret</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetCaret">SetCaret</a>(self,&nbsp;Caret&nbsp;caret)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;caret&nbsp;associated&nbsp;with&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetClientRect"><strong>SetClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetClientRect">SetClientRect</a>(self,&nbsp;Rect&nbsp;rect)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetClientSize"><strong>SetClientSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetClientSize">SetClientSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetClientSizeWH"><strong>SetClientSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetClientSizeWH">SetClientSizeWH</a>(self,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetConstraints"><strong>SetConstraints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetConstraints">SetConstraints</a>(self,&nbsp;LayoutConstraints&nbsp;constraints)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window&nbsp;to&nbsp;have&nbsp;the&nbsp;given&nbsp;layout&nbsp;constraints.&nbsp;If&nbsp;an&nbsp;existing<br>
layout&nbsp;constraints&nbsp;object&nbsp;is&nbsp;already&nbsp;owned&nbsp;by&nbsp;the&nbsp;window,&nbsp;it&nbsp;will&nbsp;be<br>
deleted.&nbsp;&nbsp;Pass&nbsp;None&nbsp;to&nbsp;disassociate&nbsp;and&nbsp;delete&nbsp;the&nbsp;window's&nbsp;current<br>
constraints.<br>
&nbsp;<br>
You&nbsp;must&nbsp;call&nbsp;SetAutoLayout&nbsp;to&nbsp;tell&nbsp;a&nbsp;window&nbsp;to&nbsp;use&nbsp;the&nbsp;constraints<br>
automatically&nbsp;in&nbsp;its&nbsp;default&nbsp;EVT_SIZE&nbsp;handler;&nbsp;otherwise,&nbsp;you&nbsp;must<br>
handle&nbsp;EVT_SIZE&nbsp;yourself&nbsp;and&nbsp;call&nbsp;<a href="#StatusBarWx-Layout">Layout</a>()&nbsp;explicitly.&nbsp;When&nbsp;setting<br>
both&nbsp;a&nbsp;wx.LayoutConstraints&nbsp;and&nbsp;a&nbsp;wx.Sizer,&nbsp;only&nbsp;the&nbsp;sizer&nbsp;will&nbsp;have<br>
effect.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetContainingSizer"><strong>SetContainingSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetContainingSizer">SetContainingSizer</a>(self,&nbsp;Sizer&nbsp;sizer)<br>
&nbsp;<br>
This&nbsp;normally&nbsp;does&nbsp;not&nbsp;need&nbsp;to&nbsp;be&nbsp;called&nbsp;by&nbsp;application&nbsp;code.&nbsp;It&nbsp;is<br>
called&nbsp;internally&nbsp;when&nbsp;a&nbsp;window&nbsp;is&nbsp;added&nbsp;to&nbsp;a&nbsp;sizer,&nbsp;and&nbsp;is&nbsp;used&nbsp;so<br>
the&nbsp;window&nbsp;can&nbsp;remove&nbsp;itself&nbsp;from&nbsp;the&nbsp;sizer&nbsp;when&nbsp;it&nbsp;is&nbsp;destroyed.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetCursor"><strong>SetCursor</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetCursor">SetCursor</a>(self,&nbsp;Cursor&nbsp;cursor)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;cursor.&nbsp;Notice&nbsp;that&nbsp;the&nbsp;window&nbsp;cursor&nbsp;also&nbsp;sets&nbsp;it<br>
for&nbsp;the&nbsp;children&nbsp;of&nbsp;the&nbsp;window&nbsp;implicitly.<br>
&nbsp;<br>
The&nbsp;cursor&nbsp;may&nbsp;be&nbsp;wx.NullCursor&nbsp;in&nbsp;which&nbsp;case&nbsp;the&nbsp;window&nbsp;cursor&nbsp;will<br>
be&nbsp;reset&nbsp;back&nbsp;to&nbsp;default.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetDefaultItem"><strong>SetDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetDefaultItem">SetDefaultItem</a>(self,&nbsp;Window&nbsp;child)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Set&nbsp;this&nbsp;child&nbsp;as&nbsp;default,&nbsp;return&nbsp;the&nbsp;old&nbsp;default.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetDimensions"><strong>SetDimensions</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetDimensions">SetDimensions</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height,&nbsp;int&nbsp;sizeFlags=SIZE_AUTO)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;and&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;The&nbsp;sizeFlags<br>
parameter&nbsp;indicates&nbsp;the&nbsp;interpretation&nbsp;of&nbsp;the&nbsp;other&nbsp;params&nbsp;if&nbsp;they&nbsp;are<br>
equal&nbsp;to&nbsp;-1.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;========================&nbsp;&nbsp;======================================<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.SIZE_AUTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;-1&nbsp;indicates&nbsp;that&nbsp;a&nbsp;class-specific<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;should&nbsp;be&nbsp;used.<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.SIZE_USE_EXISTING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Axisting&nbsp;dimensions&nbsp;should&nbsp;be&nbsp;used&nbsp;if<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;values&nbsp;are&nbsp;supplied.<br>
&nbsp;&nbsp;&nbsp;&nbsp;wxSIZE_ALLOW_MINUS_ONE&nbsp;&nbsp;&nbsp;&nbsp;Allow&nbsp;dimensions&nbsp;of&nbsp;-1&nbsp;and&nbsp;less&nbsp;to&nbsp;be<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interpreted&nbsp;as&nbsp;real&nbsp;dimensions,&nbsp;not<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;values.<br>
&nbsp;&nbsp;&nbsp;&nbsp;========================&nbsp;&nbsp;======================================</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetDropTarget"><strong>SetDropTarget</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetDropTarget">SetDropTarget</a>(self,&nbsp;DropTarget&nbsp;dropTarget)<br>
&nbsp;<br>
Associates&nbsp;a&nbsp;drop&nbsp;target&nbsp;with&nbsp;this&nbsp;window.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;already&nbsp;has<br>
a&nbsp;drop&nbsp;target,&nbsp;it&nbsp;is&nbsp;deleted.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetEventHandler"><strong>SetEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetEventHandler">SetEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;event&nbsp;handler&nbsp;for&nbsp;this&nbsp;window.&nbsp;&nbsp;An&nbsp;event&nbsp;handler&nbsp;is&nbsp;an&nbsp;object<br>
that&nbsp;is&nbsp;capable&nbsp;of&nbsp;processing&nbsp;the&nbsp;events&nbsp;sent&nbsp;to&nbsp;a&nbsp;window.&nbsp;By&nbsp;default,<br>
the&nbsp;window&nbsp;is&nbsp;its&nbsp;own&nbsp;event&nbsp;handler,&nbsp;but&nbsp;an&nbsp;application&nbsp;may&nbsp;wish&nbsp;to<br>
substitute&nbsp;another,&nbsp;for&nbsp;example&nbsp;to&nbsp;allow&nbsp;central&nbsp;implementation&nbsp;of<br>
event-handling&nbsp;for&nbsp;a&nbsp;variety&nbsp;of&nbsp;different&nbsp;window&nbsp;classes.<br>
&nbsp;<br>
It&nbsp;is&nbsp;usually&nbsp;better&nbsp;to&nbsp;use&nbsp;`wx.Window.PushEventHandler`&nbsp;since&nbsp;this&nbsp;sets<br>
up&nbsp;a&nbsp;chain&nbsp;of&nbsp;event&nbsp;handlers,&nbsp;where&nbsp;an&nbsp;event&nbsp;not&nbsp;handled&nbsp;by&nbsp;one&nbsp;event<br>
handler&nbsp;is&nbsp;handed&nbsp;to&nbsp;the&nbsp;next&nbsp;one&nbsp;in&nbsp;the&nbsp;chain.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetExtraStyle"><strong>SetExtraStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetExtraStyle">SetExtraStyle</a>(self,&nbsp;long&nbsp;exStyle)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;extra&nbsp;style&nbsp;bits&nbsp;for&nbsp;the&nbsp;window.&nbsp;&nbsp;Extra&nbsp;styles&nbsp;are&nbsp;the&nbsp;less<br>
often&nbsp;used&nbsp;style&nbsp;bits&nbsp;which&nbsp;can't&nbsp;be&nbsp;set&nbsp;with&nbsp;the&nbsp;constructor&nbsp;or&nbsp;with<br>
<a href="#StatusBarWx-SetWindowStyleFlag">SetWindowStyleFlag</a>()</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetFocus"><strong>SetFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetFocus">SetFocus</a>(self)<br>
&nbsp;<br>
Set's&nbsp;the&nbsp;focus&nbsp;to&nbsp;this&nbsp;window,&nbsp;allowing&nbsp;it&nbsp;to&nbsp;receive&nbsp;keyboard&nbsp;input.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetFocusFromKbd"><strong>SetFocusFromKbd</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetFocusFromKbd">SetFocusFromKbd</a>(self)<br>
&nbsp;<br>
Set&nbsp;focus&nbsp;to&nbsp;this&nbsp;window&nbsp;as&nbsp;the&nbsp;result&nbsp;of&nbsp;a&nbsp;keyboard&nbsp;action.&nbsp;&nbsp;Normally<br>
only&nbsp;called&nbsp;internally.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetFont"><strong>SetFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetFont">SetFont</a>(self,&nbsp;Font&nbsp;font)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;font&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetForegroundColour"><strong>SetForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetForegroundColour">SetForegroundColour</a>(self,&nbsp;Colour&nbsp;colour)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;foreground&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Returns&nbsp;True&nbsp;is&nbsp;the&nbsp;colour<br>
was&nbsp;changed.&nbsp;&nbsp;The&nbsp;interpretation&nbsp;of&nbsp;foreground&nbsp;colour&nbsp;is&nbsp;dependent&nbsp;on<br>
the&nbsp;window&nbsp;class;&nbsp;it&nbsp;may&nbsp;be&nbsp;the&nbsp;text&nbsp;colour&nbsp;or&nbsp;other&nbsp;colour,&nbsp;or&nbsp;it&nbsp;may<br>
not&nbsp;be&nbsp;used&nbsp;at&nbsp;all.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetHelpText"><strong>SetHelpText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetHelpText">SetHelpText</a>(self,&nbsp;String&nbsp;text)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;help&nbsp;text&nbsp;to&nbsp;be&nbsp;used&nbsp;as&nbsp;context-sensitive&nbsp;help&nbsp;for&nbsp;this<br>
window.&nbsp;&nbsp;Note&nbsp;that&nbsp;the&nbsp;text&nbsp;is&nbsp;actually&nbsp;stored&nbsp;by&nbsp;the&nbsp;current<br>
wxHelpProvider&nbsp;implementation,&nbsp;and&nbsp;not&nbsp;in&nbsp;the&nbsp;window&nbsp;object&nbsp;itself.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetHelpTextForId"><strong>SetHelpTextForId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetHelpTextForId">SetHelpTextForId</a>(self,&nbsp;String&nbsp;text)<br>
&nbsp;<br>
Associate&nbsp;this&nbsp;help&nbsp;text&nbsp;with&nbsp;all&nbsp;windows&nbsp;with&nbsp;the&nbsp;same&nbsp;id&nbsp;as&nbsp;this<br>
one.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetId"><strong>SetId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetId">SetId</a>(self,&nbsp;int&nbsp;winid)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;identifier&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Each&nbsp;window&nbsp;has&nbsp;an&nbsp;integer<br>
identifier.&nbsp;If&nbsp;the&nbsp;application&nbsp;has&nbsp;not&nbsp;provided&nbsp;one,&nbsp;an&nbsp;identifier<br>
will&nbsp;be&nbsp;generated.&nbsp;Normally,&nbsp;the&nbsp;identifier&nbsp;should&nbsp;be&nbsp;provided&nbsp;on<br>
creation&nbsp;and&nbsp;should&nbsp;not&nbsp;be&nbsp;modified&nbsp;subsequently.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetLabel"><strong>SetLabel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetLabel">SetLabel</a>(self,&nbsp;String&nbsp;label)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;text&nbsp;which&nbsp;the&nbsp;window&nbsp;shows&nbsp;in&nbsp;its&nbsp;label&nbsp;if&nbsp;applicable.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetMaxSize"><strong>SetMaxSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetMaxSize">SetMaxSize</a>(self,&nbsp;Size&nbsp;maxSize)<br>
&nbsp;<br>
A&nbsp;more&nbsp;convenient&nbsp;method&nbsp;than&nbsp;`SetSizeHints`&nbsp;for&nbsp;setting&nbsp;just&nbsp;the<br>
max&nbsp;size.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetMinSize"><strong>SetMinSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetMinSize">SetMinSize</a>(self,&nbsp;Size&nbsp;minSize)<br>
&nbsp;<br>
A&nbsp;more&nbsp;convenient&nbsp;method&nbsp;than&nbsp;`SetSizeHints`&nbsp;for&nbsp;setting&nbsp;just&nbsp;the<br>
min&nbsp;size.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetName"><strong>SetName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetName">SetName</a>(self,&nbsp;String&nbsp;name)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;name.&nbsp;&nbsp;The&nbsp;window&nbsp;name&nbsp;is&nbsp;used&nbsp;for&nbsp;ressource&nbsp;setting<br>
in&nbsp;X,&nbsp;it&nbsp;is&nbsp;not&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;window&nbsp;title/label</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetOwnBackgroundColour"><strong>SetOwnBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetOwnBackgroundColour">SetOwnBackgroundColour</a>(self,&nbsp;Colour&nbsp;colour)</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetOwnFont"><strong>SetOwnFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetOwnFont">SetOwnFont</a>(self,&nbsp;Font&nbsp;font)</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetOwnForegroundColour"><strong>SetOwnForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetOwnForegroundColour">SetOwnForegroundColour</a>(self,&nbsp;Colour&nbsp;colour)</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetPosition"><strong>SetPosition</strong></a> = Move(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Move">Move</a>(self,&nbsp;Point&nbsp;pt,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetRect"><strong>SetRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetRect">SetRect</a>(self,&nbsp;Rect&nbsp;rect,&nbsp;int&nbsp;sizeFlags=SIZE_AUTO)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;and&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels&nbsp;using&nbsp;a&nbsp;wx.Rect.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetScrollPos"><strong>SetScrollPos</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetScrollPos">SetScrollPos</a>(self,&nbsp;int&nbsp;orientation,&nbsp;int&nbsp;pos,&nbsp;bool&nbsp;refresh=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;of&nbsp;one&nbsp;of&nbsp;the&nbsp;built-in&nbsp;scrollbars.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetScrollbar"><strong>SetScrollbar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetScrollbar">SetScrollbar</a>(self,&nbsp;int&nbsp;orientation,&nbsp;int&nbsp;position,&nbsp;int&nbsp;thumbSize,&nbsp;int&nbsp;range,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;refresh=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;scrollbar&nbsp;properties&nbsp;of&nbsp;a&nbsp;built-in&nbsp;scrollbar.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetSize"><strong>SetSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetSize">SetSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetSizeHints"><strong>SetSizeHints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetSizeHints">SetSizeHints</a>(self,&nbsp;int&nbsp;minW,&nbsp;int&nbsp;minH,&nbsp;int&nbsp;maxW=-1,&nbsp;int&nbsp;maxH=-1,&nbsp;int&nbsp;incW=-1,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;incH=-1)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;window&nbsp;sizes,&nbsp;and&nbsp;window<br>
size&nbsp;increments.&nbsp;If&nbsp;a&nbsp;pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the<br>
default&nbsp;values&nbsp;will&nbsp;be&nbsp;used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user<br>
will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds&nbsp;(if&nbsp;it&nbsp;is<br>
a&nbsp;top-level&nbsp;window.)&nbsp;&nbsp;Sizers&nbsp;will&nbsp;also&nbsp;inspect&nbsp;the&nbsp;minimum&nbsp;window&nbsp;size<br>
and&nbsp;will&nbsp;use&nbsp;that&nbsp;value&nbsp;if&nbsp;set&nbsp;when&nbsp;calculating&nbsp;layout.<br>
&nbsp;<br>
The&nbsp;resizing&nbsp;increments&nbsp;are&nbsp;only&nbsp;significant&nbsp;under&nbsp;Motif&nbsp;or&nbsp;Xt.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetSizeHintsSz"><strong>SetSizeHintsSz</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetSizeHintsSz">SetSizeHintsSz</a>(self,&nbsp;Size&nbsp;minSize,&nbsp;Size&nbsp;maxSize=DefaultSize,&nbsp;Size&nbsp;incSize=DefaultSize)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;window&nbsp;sizes,&nbsp;and&nbsp;window<br>
size&nbsp;increments.&nbsp;If&nbsp;a&nbsp;pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the<br>
default&nbsp;values&nbsp;will&nbsp;be&nbsp;used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user<br>
will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds&nbsp;(if&nbsp;it&nbsp;is<br>
a&nbsp;top-level&nbsp;window.)&nbsp;&nbsp;Sizers&nbsp;will&nbsp;also&nbsp;inspect&nbsp;the&nbsp;minimum&nbsp;window&nbsp;size<br>
and&nbsp;will&nbsp;use&nbsp;that&nbsp;value&nbsp;if&nbsp;set&nbsp;when&nbsp;calculating&nbsp;layout.<br>
&nbsp;<br>
The&nbsp;resizing&nbsp;increments&nbsp;are&nbsp;only&nbsp;significant&nbsp;under&nbsp;Motif&nbsp;or&nbsp;Xt.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetSizeWH"><strong>SetSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetSizeWH">SetSizeWH</a>(self,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetSizer"><strong>SetSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetSizer">SetSizer</a>(self,&nbsp;Sizer&nbsp;sizer,&nbsp;bool&nbsp;deleteOld=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window&nbsp;to&nbsp;have&nbsp;the&nbsp;given&nbsp;layout&nbsp;sizer.&nbsp;The&nbsp;window&nbsp;will&nbsp;then<br>
own&nbsp;the&nbsp;object,&nbsp;and&nbsp;will&nbsp;take&nbsp;care&nbsp;of&nbsp;its&nbsp;deletion.&nbsp;If&nbsp;an&nbsp;existing<br>
layout&nbsp;sizer&nbsp;object&nbsp;is&nbsp;already&nbsp;owned&nbsp;by&nbsp;the&nbsp;window,&nbsp;it&nbsp;will&nbsp;be&nbsp;deleted<br>
if&nbsp;the&nbsp;deleteOld&nbsp;parameter&nbsp;is&nbsp;true.&nbsp;Note&nbsp;that&nbsp;this&nbsp;function&nbsp;will&nbsp;also<br>
call&nbsp;SetAutoLayout&nbsp;implicitly&nbsp;with&nbsp;a&nbsp;True&nbsp;parameter&nbsp;if&nbsp;the&nbsp;sizer&nbsp;is<br>
non-None,&nbsp;and&nbsp;False&nbsp;otherwise.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetSizerAndFit"><strong>SetSizerAndFit</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetSizerAndFit">SetSizerAndFit</a>(self,&nbsp;Sizer&nbsp;sizer,&nbsp;bool&nbsp;deleteOld=True)<br>
&nbsp;<br>
The&nbsp;same&nbsp;as&nbsp;SetSizer,&nbsp;except&nbsp;it&nbsp;also&nbsp;sets&nbsp;the&nbsp;size&nbsp;hints&nbsp;for&nbsp;the<br>
window&nbsp;based&nbsp;on&nbsp;the&nbsp;sizer's&nbsp;minimum&nbsp;size.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetThemeEnabled"><strong>SetThemeEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetThemeEnabled">SetThemeEnabled</a>(self,&nbsp;bool&nbsp;enableTheme)<br>
&nbsp;<br>
This&nbsp;function&nbsp;tells&nbsp;a&nbsp;window&nbsp;if&nbsp;it&nbsp;should&nbsp;use&nbsp;the&nbsp;system's&nbsp;"theme"<br>
&nbsp;code&nbsp;to&nbsp;draw&nbsp;the&nbsp;windows'&nbsp;background&nbsp;instead&nbsp;if&nbsp;its&nbsp;own&nbsp;background<br>
&nbsp;drawing&nbsp;code.&nbsp;This&nbsp;will&nbsp;only&nbsp;have&nbsp;an&nbsp;effect&nbsp;on&nbsp;platforms&nbsp;that&nbsp;support<br>
&nbsp;the&nbsp;notion&nbsp;of&nbsp;themes&nbsp;in&nbsp;user&nbsp;defined&nbsp;windows.&nbsp;One&nbsp;such&nbsp;platform&nbsp;is<br>
&nbsp;GTK+&nbsp;where&nbsp;windows&nbsp;can&nbsp;have&nbsp;(very&nbsp;colourful)&nbsp;backgrounds&nbsp;defined&nbsp;by&nbsp;a<br>
&nbsp;user's&nbsp;selected&nbsp;theme.<br>
&nbsp;<br>
Dialogs,&nbsp;notebook&nbsp;pages&nbsp;and&nbsp;the&nbsp;status&nbsp;bar&nbsp;have&nbsp;this&nbsp;flag&nbsp;set&nbsp;to&nbsp;true<br>
by&nbsp;default&nbsp;so&nbsp;that&nbsp;the&nbsp;default&nbsp;look&nbsp;and&nbsp;feel&nbsp;is&nbsp;simulated&nbsp;best.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetTitle"><strong>SetTitle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetTitle">SetTitle</a>(self,&nbsp;String&nbsp;title)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;title.&nbsp;Applicable&nbsp;only&nbsp;to&nbsp;frames&nbsp;and&nbsp;dialogs.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetTmpDefaultItem"><strong>SetTmpDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetTmpDefaultItem">SetTmpDefaultItem</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Set&nbsp;this&nbsp;child&nbsp;as&nbsp;temporary&nbsp;default</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetToolTip"><strong>SetToolTip</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetToolTip">SetToolTip</a>(self,&nbsp;ToolTip&nbsp;tip)<br>
&nbsp;<br>
Attach&nbsp;a&nbsp;tooltip&nbsp;to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetToolTipString"><strong>SetToolTipString</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetToolTipString">SetToolTipString</a>(self,&nbsp;String&nbsp;tip)<br>
&nbsp;<br>
Attach&nbsp;a&nbsp;tooltip&nbsp;to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetValidator"><strong>SetValidator</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetValidator">SetValidator</a>(self,&nbsp;Validator&nbsp;validator)<br>
&nbsp;<br>
Deletes&nbsp;the&nbsp;current&nbsp;validator&nbsp;(if&nbsp;any)&nbsp;and&nbsp;sets&nbsp;the&nbsp;window&nbsp;validator,<br>
having&nbsp;called&nbsp;wx.Validator.Clone&nbsp;to&nbsp;create&nbsp;a&nbsp;new&nbsp;validator&nbsp;of&nbsp;this<br>
type.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetVirtualSize"><strong>SetVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetVirtualSize">SetVirtualSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;a&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows&nbsp;this<br>
is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetVirtualSizeHints"><strong>SetVirtualSizeHints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetVirtualSizeHints">SetVirtualSizeHints</a>(self,&nbsp;int&nbsp;minW,&nbsp;int&nbsp;minH,&nbsp;int&nbsp;maxW=-1,&nbsp;int&nbsp;maxH=-1)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;virtual&nbsp;window&nbsp;sizes.&nbsp;If&nbsp;a<br>
pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the&nbsp;default&nbsp;values&nbsp;will&nbsp;be<br>
used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user&nbsp;will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size<br>
the&nbsp;virtual&nbsp;area&nbsp;of&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetVirtualSizeHintsSz"><strong>SetVirtualSizeHintsSz</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetVirtualSizeHintsSz">SetVirtualSizeHintsSz</a>(self,&nbsp;Size&nbsp;minSize,&nbsp;Size&nbsp;maxSize=DefaultSize)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;virtual&nbsp;window&nbsp;sizes.&nbsp;If&nbsp;a<br>
pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the&nbsp;default&nbsp;values&nbsp;will&nbsp;be<br>
used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user&nbsp;will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size<br>
the&nbsp;virtual&nbsp;area&nbsp;of&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetVirtualSizeWH"><strong>SetVirtualSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetVirtualSizeWH">SetVirtualSizeWH</a>(self,&nbsp;int&nbsp;w,&nbsp;int&nbsp;h)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;a&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows&nbsp;this<br>
is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetWindowStyle"><strong>SetWindowStyle</strong></a> = SetWindowStyleFlag(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetWindowStyleFlag">SetWindowStyleFlag</a>(self,&nbsp;long&nbsp;style)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;Please&nbsp;note&nbsp;that&nbsp;some&nbsp;styles&nbsp;cannot&nbsp;be<br>
changed&nbsp;after&nbsp;the&nbsp;window&nbsp;creation&nbsp;and&nbsp;that&nbsp;<a href="#StatusBarWx-Refresh">Refresh</a>()&nbsp;might&nbsp;need&nbsp;to&nbsp;be<br>
called&nbsp;after&nbsp;changing&nbsp;the&nbsp;others&nbsp;for&nbsp;the&nbsp;change&nbsp;to&nbsp;take&nbsp;place<br>
immediately.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetWindowStyleFlag"><strong>SetWindowStyleFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetWindowStyleFlag">SetWindowStyleFlag</a>(self,&nbsp;long&nbsp;style)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;Please&nbsp;note&nbsp;that&nbsp;some&nbsp;styles&nbsp;cannot&nbsp;be<br>
changed&nbsp;after&nbsp;the&nbsp;window&nbsp;creation&nbsp;and&nbsp;that&nbsp;<a href="#StatusBarWx-Refresh">Refresh</a>()&nbsp;might&nbsp;need&nbsp;to&nbsp;be<br>
called&nbsp;after&nbsp;changing&nbsp;the&nbsp;others&nbsp;for&nbsp;the&nbsp;change&nbsp;to&nbsp;take&nbsp;place<br>
immediately.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetWindowVariant"><strong>SetWindowVariant</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetWindowVariant">SetWindowVariant</a>(self,&nbsp;int&nbsp;variant)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;variant&nbsp;of&nbsp;the&nbsp;window/font&nbsp;size&nbsp;to&nbsp;use&nbsp;for&nbsp;this&nbsp;window,&nbsp;if<br>
the&nbsp;platform&nbsp;supports&nbsp;variants,&nbsp;for&nbsp;example,&nbsp;wxMac.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-ShouldInheritColours"><strong>ShouldInheritColours</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-ShouldInheritColours">ShouldInheritColours</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Return&nbsp;true&nbsp;from&nbsp;here&nbsp;to&nbsp;allow&nbsp;the&nbsp;colours&nbsp;of&nbsp;this&nbsp;window&nbsp;to&nbsp;be<br>
changed&nbsp;by&nbsp;InheritAttributes,&nbsp;returning&nbsp;false&nbsp;forbids&nbsp;inheriting&nbsp;them<br>
from&nbsp;the&nbsp;parent&nbsp;window.<br>
&nbsp;<br>
The&nbsp;base&nbsp;class&nbsp;version&nbsp;returns&nbsp;false,&nbsp;but&nbsp;this&nbsp;method&nbsp;is&nbsp;overridden&nbsp;in<br>
wxControl&nbsp;where&nbsp;it&nbsp;returns&nbsp;true.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Show"><strong>Show</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Show">Show</a>(self,&nbsp;bool&nbsp;show=True)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Shows&nbsp;or&nbsp;hides&nbsp;the&nbsp;window.&nbsp;You&nbsp;may&nbsp;need&nbsp;to&nbsp;call&nbsp;Raise&nbsp;for&nbsp;a&nbsp;top&nbsp;level<br>
window&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;bring&nbsp;it&nbsp;to&nbsp;top,&nbsp;although&nbsp;this&nbsp;is&nbsp;not&nbsp;needed&nbsp;if<br>
Show&nbsp;is&nbsp;called&nbsp;immediately&nbsp;after&nbsp;the&nbsp;frame&nbsp;creation.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if<br>
the&nbsp;window&nbsp;has&nbsp;been&nbsp;shown&nbsp;or&nbsp;hidden&nbsp;or&nbsp;False&nbsp;if&nbsp;nothing&nbsp;was&nbsp;done<br>
because&nbsp;it&nbsp;already&nbsp;was&nbsp;in&nbsp;the&nbsp;requested&nbsp;state.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Thaw"><strong>Thaw</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Thaw">Thaw</a>(self)<br>
&nbsp;<br>
Reenables&nbsp;window&nbsp;updating&nbsp;after&nbsp;a&nbsp;previous&nbsp;call&nbsp;to&nbsp;Freeze.&nbsp;&nbsp;Calls&nbsp;to<br>
Freeze/Thaw&nbsp;may&nbsp;be&nbsp;nested,&nbsp;so&nbsp;Thaw&nbsp;must&nbsp;be&nbsp;called&nbsp;the&nbsp;same&nbsp;number&nbsp;of<br>
times&nbsp;that&nbsp;Freeze&nbsp;was&nbsp;before&nbsp;the&nbsp;window&nbsp;will&nbsp;be&nbsp;updated.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-TransferDataFromWindow"><strong>TransferDataFromWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-TransferDataFromWindow">TransferDataFromWindow</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Transfers&nbsp;values&nbsp;from&nbsp;child&nbsp;controls&nbsp;to&nbsp;data&nbsp;areas&nbsp;specified&nbsp;by&nbsp;their<br>
validators.&nbsp;Returns&nbsp;false&nbsp;if&nbsp;a&nbsp;transfer&nbsp;failed.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has<br>
wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra&nbsp;style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will<br>
also&nbsp;call&nbsp;<a href="#StatusBarWx-TransferDataFromWindow">TransferDataFromWindow</a>()&nbsp;of&nbsp;all&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-TransferDataToWindow"><strong>TransferDataToWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-TransferDataToWindow">TransferDataToWindow</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Transfers&nbsp;values&nbsp;to&nbsp;child&nbsp;controls&nbsp;from&nbsp;data&nbsp;areas&nbsp;specified&nbsp;by&nbsp;their<br>
validators.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has&nbsp;wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra<br>
style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will&nbsp;also&nbsp;call&nbsp;<a href="#StatusBarWx-TransferDataToWindow">TransferDataToWindow</a>()&nbsp;of<br>
all&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-UnregisterHotKey"><strong>UnregisterHotKey</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-UnregisterHotKey">UnregisterHotKey</a>(self,&nbsp;int&nbsp;hotkeyId)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Unregisters&nbsp;a&nbsp;system&nbsp;wide&nbsp;hotkey.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Update"><strong>Update</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Update">Update</a>(self)<br>
&nbsp;<br>
Calling&nbsp;this&nbsp;method&nbsp;immediately&nbsp;repaints&nbsp;the&nbsp;invalidated&nbsp;area&nbsp;of&nbsp;the<br>
window&nbsp;instead&nbsp;of&nbsp;waiting&nbsp;for&nbsp;the&nbsp;EVT_PAINT&nbsp;event&nbsp;to&nbsp;happen,&nbsp;(normally<br>
this&nbsp;would&nbsp;usually&nbsp;only&nbsp;happen&nbsp;when&nbsp;the&nbsp;flow&nbsp;of&nbsp;control&nbsp;returns&nbsp;to&nbsp;the<br>
event&nbsp;loop.)&nbsp;&nbsp;Notice&nbsp;that&nbsp;this&nbsp;function&nbsp;doesn't&nbsp;refresh&nbsp;the&nbsp;window&nbsp;and<br>
does&nbsp;nothing&nbsp;if&nbsp;the&nbsp;window&nbsp;has&nbsp;been&nbsp;already&nbsp;repainted.&nbsp;&nbsp;Use&nbsp;Refresh<br>
first&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;immediately&nbsp;redraw&nbsp;the&nbsp;window&nbsp;(or&nbsp;some&nbsp;portion&nbsp;of<br>
it)&nbsp;unconditionally.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-UpdateWindowUI"><strong>UpdateWindowUI</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-UpdateWindowUI">UpdateWindowUI</a>(self,&nbsp;long&nbsp;flags=UPDATE_UI_NONE)<br>
&nbsp;<br>
This&nbsp;function&nbsp;sends&nbsp;EVT_UPDATE_UI&nbsp;events&nbsp;to&nbsp;the&nbsp;window.&nbsp;The&nbsp;particular<br>
implementation&nbsp;depends&nbsp;on&nbsp;the&nbsp;window;&nbsp;for&nbsp;example&nbsp;a&nbsp;wx.<a href="wx._controls.html#ToolBar">ToolBar</a>&nbsp;will<br>
send&nbsp;an&nbsp;update&nbsp;UI&nbsp;event&nbsp;for&nbsp;each&nbsp;toolbar&nbsp;button,&nbsp;and&nbsp;a&nbsp;wx.<a href="wx._windows.html#Frame">Frame</a>&nbsp;will<br>
send&nbsp;an&nbsp;update&nbsp;UI&nbsp;event&nbsp;for&nbsp;each&nbsp;menubar&nbsp;menu&nbsp;item.&nbsp;You&nbsp;can&nbsp;call&nbsp;this<br>
function&nbsp;from&nbsp;your&nbsp;application&nbsp;to&nbsp;ensure&nbsp;that&nbsp;your&nbsp;UI&nbsp;is&nbsp;up-to-date&nbsp;at<br>
a&nbsp;particular&nbsp;point&nbsp;in&nbsp;time&nbsp;(as&nbsp;far&nbsp;as&nbsp;your&nbsp;EVT_UPDATE_UI&nbsp;handlers&nbsp;are<br>
concerned).&nbsp;This&nbsp;may&nbsp;be&nbsp;necessary&nbsp;if&nbsp;you&nbsp;have&nbsp;called<br>
`wx.UpdateUIEvent.SetMode`&nbsp;or&nbsp;`wx.UpdateUIEvent.SetUpdateInterval`&nbsp;to<br>
limit&nbsp;the&nbsp;overhead&nbsp;that&nbsp;wxWindows&nbsp;incurs&nbsp;by&nbsp;sending&nbsp;update&nbsp;UI&nbsp;events<br>
in&nbsp;idle&nbsp;time.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-UseBgCol"><strong>UseBgCol</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-UseBgCol">UseBgCol</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Validate"><strong>Validate</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Validate">Validate</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Validates&nbsp;the&nbsp;current&nbsp;values&nbsp;of&nbsp;the&nbsp;child&nbsp;controls&nbsp;using&nbsp;their<br>
validators.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has&nbsp;wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra<br>
style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will&nbsp;also&nbsp;call&nbsp;<a href="#StatusBarWx-Validate">Validate</a>()&nbsp;of&nbsp;all&nbsp;child<br>
windows.&nbsp;&nbsp;Returns&nbsp;false&nbsp;if&nbsp;any&nbsp;of&nbsp;the&nbsp;validations&nbsp;failed.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-WarpPointer"><strong>WarpPointer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-WarpPointer">WarpPointer</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;pointer&nbsp;to&nbsp;the&nbsp;given&nbsp;position&nbsp;on&nbsp;the&nbsp;window.<br>
&nbsp;<br>
NOTE:&nbsp;This&nbsp;function&nbsp;is&nbsp;not&nbsp;supported&nbsp;under&nbsp;Mac&nbsp;because&nbsp;Apple&nbsp;Human<br>
Interface&nbsp;Guidelines&nbsp;forbid&nbsp;moving&nbsp;the&nbsp;mouse&nbsp;cursor&nbsp;programmatically.</tt></dd></dl>

<hr>
Static methods inherited from <a href="wx._core.html#Window">wx._core.Window</a>:<br>
<dl><dt><a name="StatusBarWx-FindFocus"><strong>FindFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-FindFocus">FindFocus</a>()&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;window&nbsp;or&nbsp;control&nbsp;that&nbsp;currently&nbsp;has&nbsp;the&nbsp;keyboard&nbsp;focus,<br>
or&nbsp;None.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetCapture"><strong>GetCapture</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetCapture">GetCapture</a>()&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;window&nbsp;which&nbsp;currently&nbsp;captures&nbsp;the&nbsp;mouse&nbsp;or&nbsp;None</tt></dd></dl>

<dl><dt><a name="StatusBarWx-NewControlId"><strong>NewControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-NewControlId">NewControlId</a>()&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Generate&nbsp;a&nbsp;control&nbsp;id&nbsp;for&nbsp;the&nbsp;controls&nbsp;which&nbsp;were&nbsp;not&nbsp;given&nbsp;one.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-NextControlId"><strong>NextControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-NextControlId">NextControlId</a>(int&nbsp;winid)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;id&nbsp;of&nbsp;the&nbsp;control&nbsp;following&nbsp;the&nbsp;one&nbsp;with&nbsp;the&nbsp;given<br>
autogenerated)&nbsp;id</tt></dd></dl>

<dl><dt><a name="StatusBarWx-PrevControlId"><strong>PrevControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-PrevControlId">PrevControlId</a>(int&nbsp;winid)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;id&nbsp;of&nbsp;the&nbsp;control&nbsp;preceding&nbsp;the&nbsp;one&nbsp;with&nbsp;the&nbsp;given<br>
autogenerated)&nbsp;id</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#EvtHandler">wx._core.EvtHandler</a>:<br>
<dl><dt><a name="StatusBarWx-AddPendingEvent"><strong>AddPendingEvent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-AddPendingEvent">AddPendingEvent</a>(self,&nbsp;Event&nbsp;event)</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Bind"><strong>Bind</strong></a>(self, event, handler, source<font color="#909090">=None</font>, id<font color="#909090">=-1</font>, id2<font color="#909090">=-1</font>)</dt><dd><tt>Bind&nbsp;an&nbsp;event&nbsp;to&nbsp;an&nbsp;event&nbsp;handler.<br>
&nbsp;<br>
:param&nbsp;event:&nbsp;One&nbsp;of&nbsp;the&nbsp;EVT_*&nbsp;objects&nbsp;that&nbsp;specifies&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type&nbsp;of&nbsp;event&nbsp;to&nbsp;bind,<br>
&nbsp;<br>
:param&nbsp;handler:&nbsp;A&nbsp;callable&nbsp;object&nbsp;to&nbsp;be&nbsp;invoked&nbsp;when&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event&nbsp;is&nbsp;delivered&nbsp;to&nbsp;self.&nbsp;&nbsp;Pass&nbsp;None&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;disconnect&nbsp;an&nbsp;event&nbsp;handler.<br>
&nbsp;<br>
:param&nbsp;source:&nbsp;Sometimes&nbsp;the&nbsp;event&nbsp;originates&nbsp;from&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;different&nbsp;window&nbsp;than&nbsp;self,&nbsp;but&nbsp;you&nbsp;still<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;want&nbsp;to&nbsp;catch&nbsp;it&nbsp;in&nbsp;self.&nbsp;&nbsp;(For&nbsp;example,&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button&nbsp;event&nbsp;delivered&nbsp;to&nbsp;a&nbsp;frame.)&nbsp;&nbsp;By<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;passing&nbsp;the&nbsp;source&nbsp;of&nbsp;the&nbsp;event,&nbsp;the&nbsp;event<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handling&nbsp;system&nbsp;is&nbsp;able&nbsp;to&nbsp;differentiate<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;between&nbsp;the&nbsp;same&nbsp;event&nbsp;type&nbsp;from&nbsp;different<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controls.<br>
&nbsp;<br>
:param&nbsp;id:&nbsp;Used&nbsp;to&nbsp;spcify&nbsp;the&nbsp;event&nbsp;source&nbsp;by&nbsp;ID&nbsp;instead<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;instance.<br>
&nbsp;<br>
:param&nbsp;id2:&nbsp;Used&nbsp;when&nbsp;it&nbsp;is&nbsp;desirable&nbsp;to&nbsp;bind&nbsp;a&nbsp;handler<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;a&nbsp;range&nbsp;of&nbsp;IDs,&nbsp;such&nbsp;as&nbsp;with&nbsp;EVT_MENU_RANGE.</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Connect"><strong>Connect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Connect">Connect</a>(self,&nbsp;int&nbsp;id,&nbsp;int&nbsp;lastId,&nbsp;int&nbsp;eventType,&nbsp;PyObject&nbsp;func)</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Disconnect"><strong>Disconnect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-Disconnect">Disconnect</a>(self,&nbsp;int&nbsp;id,&nbsp;int&nbsp;lastId=-1,&nbsp;wxEventType&nbsp;eventType=wxEVT_NULL)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetEvtHandlerEnabled"><strong>GetEvtHandlerEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetEvtHandlerEnabled">GetEvtHandlerEnabled</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetNextHandler"><strong>GetNextHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetNextHandler">GetNextHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler</tt></dd></dl>

<dl><dt><a name="StatusBarWx-GetPreviousHandler"><strong>GetPreviousHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetPreviousHandler">GetPreviousHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler</tt></dd></dl>

<dl><dt><a name="StatusBarWx-ProcessEvent"><strong>ProcessEvent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-ProcessEvent">ProcessEvent</a>(self,&nbsp;Event&nbsp;event)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="StatusBarWx-ProcessPendingEvents"><strong>ProcessPendingEvents</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-ProcessPendingEvents">ProcessPendingEvents</a>(self)</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetEvtHandlerEnabled"><strong>SetEvtHandlerEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetEvtHandlerEnabled">SetEvtHandlerEnabled</a>(self,&nbsp;bool&nbsp;enabled)</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetNextHandler"><strong>SetNextHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetNextHandler">SetNextHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)</tt></dd></dl>

<dl><dt><a name="StatusBarWx-SetPreviousHandler"><strong>SetPreviousHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-SetPreviousHandler">SetPreviousHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)</tt></dd></dl>

<dl><dt><a name="StatusBarWx-Unbind"><strong>Unbind</strong></a>(self, event, source<font color="#909090">=None</font>, id<font color="#909090">=-1</font>, id2<font color="#909090">=-1</font>)</dt><dd><tt>Disconencts&nbsp;the&nbsp;event&nbsp;handler&nbsp;binding&nbsp;for&nbsp;event&nbsp;from&nbsp;self.<br>
Returns&nbsp;True&nbsp;if&nbsp;successful.</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#Object">wx._core.Object</a>:<br>
<dl><dt><a name="StatusBarWx-GetClassName"><strong>GetClassName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#StatusBarWx-GetClassName">GetClassName</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;class&nbsp;name&nbsp;of&nbsp;the&nbsp;C++&nbsp;class&nbsp;using&nbsp;wxRTTI.</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="wx._core.html#Object">wx._core.Object</a>:<br>
<dl><dt><strong>__dict__</strong> = &lt;dictproxy object&gt;<dd><tt>dictionary&nbsp;for&nbsp;instance&nbsp;variables&nbsp;(if&nbsp;defined)</tt></dl>

<dl><dt><strong>__weakref__</strong> = &lt;attribute '__weakref__' of 'Object' objects&gt;<dd><tt>list&nbsp;of&nbsp;weak&nbsp;references&nbsp;to&nbsp;the&nbsp;object&nbsp;(if&nbsp;defined)</tt></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="SubplotToolWX">class <strong>SubplotToolWX</strong></a>(<a href="wx._windows.html#Frame">wx._windows.Frame</a>)</font></td></tr>
    
<tr><td bgcolor="#ffc8d8"><tt>&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.backends.backend_wx.html#SubplotToolWX">SubplotToolWX</a></dd>
<dd><a href="wx._windows.html#Frame">wx._windows.Frame</a></dd>
<dd><a href="wx._windows.html#TopLevelWindow">wx._windows.TopLevelWindow</a></dd>
<dd><a href="wx._core.html#Window">wx._core.Window</a></dd>
<dd><a href="wx._core.html#EvtHandler">wx._core.EvtHandler</a></dd>
<dd><a href="wx._core.html#Object">wx._core.Object</a></dd>
<dd><a href="__builtin__.html#object">__builtin__.object</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="SubplotToolWX-__init__"><strong>__init__</strong></a>(self, targetfig)</dt></dl>

<hr>
Methods inherited from <a href="wx._windows.html#Frame">wx._windows.Frame</a>:<br>
<dl><dt><a name="SubplotToolWX-Command"><strong>Command</strong></a> = ProcessCommand(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-ProcessCommand">ProcessCommand</a>(self,&nbsp;int&nbsp;winid)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Create"><strong>Create</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Create">Create</a>(self,&nbsp;Window&nbsp;parent,&nbsp;int&nbsp;id=-1,&nbsp;String&nbsp;title=EmptyString,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Point&nbsp;pos=DefaultPosition,&nbsp;Size&nbsp;size=DefaultSize,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;long&nbsp;style=DEFAULT_FRAME_STYLE,&nbsp;String&nbsp;name=FrameNameStr)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-CreateStatusBar"><strong>CreateStatusBar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-CreateStatusBar">CreateStatusBar</a>(self,&nbsp;int&nbsp;number=1,&nbsp;long&nbsp;style=DEFAULT_STATUSBAR_STYLE,&nbsp;int&nbsp;winid=0,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;name=StatusLineNameStr)&nbsp;-&gt;&nbsp;<a href="wx._windows.html#StatusBar">StatusBar</a></tt></dd></dl>

<dl><dt><a name="SubplotToolWX-CreateToolBar"><strong>CreateToolBar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-CreateToolBar">CreateToolBar</a>(self,&nbsp;long&nbsp;style=-1,&nbsp;int&nbsp;winid=-1,&nbsp;String&nbsp;name=ToolBarNameStr)&nbsp;-&gt;&nbsp;wxToolBar</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-DoGiveHelp"><strong>DoGiveHelp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-DoGiveHelp">DoGiveHelp</a>(self,&nbsp;String&nbsp;text,&nbsp;bool&nbsp;show)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-DoMenuUpdates"><strong>DoMenuUpdates</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-DoMenuUpdates">DoMenuUpdates</a>(self,&nbsp;Menu&nbsp;menu=None)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetClientAreaOrigin"><strong>GetClientAreaOrigin</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetClientAreaOrigin">GetClientAreaOrigin</a>(self)&nbsp;-&gt;&nbsp;Point</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetMenuBar"><strong>GetMenuBar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetMenuBar">GetMenuBar</a>(self)&nbsp;-&gt;&nbsp;MenuBar</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetStatusBar"><strong>GetStatusBar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetStatusBar">GetStatusBar</a>(self)&nbsp;-&gt;&nbsp;<a href="wx._windows.html#StatusBar">StatusBar</a></tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetStatusBarPane"><strong>GetStatusBarPane</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetStatusBarPane">GetStatusBarPane</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetToolBar"><strong>GetToolBar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetToolBar">GetToolBar</a>(self)&nbsp;-&gt;&nbsp;wxToolBar</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-PopStatusText"><strong>PopStatusText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-PopStatusText">PopStatusText</a>(self,&nbsp;int&nbsp;number=0)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-ProcessCommand"><strong>ProcessCommand</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-ProcessCommand">ProcessCommand</a>(self,&nbsp;int&nbsp;winid)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-PushStatusText"><strong>PushStatusText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-PushStatusText">PushStatusText</a>(self,&nbsp;String&nbsp;text,&nbsp;int&nbsp;number=0)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SendSizeEvent"><strong>SendSizeEvent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SendSizeEvent">SendSizeEvent</a>(self)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetMenuBar"><strong>SetMenuBar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetMenuBar">SetMenuBar</a>(self,&nbsp;MenuBar&nbsp;menubar)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetStatusBar"><strong>SetStatusBar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetStatusBar">SetStatusBar</a>(self,&nbsp;<a href="wx._windows.html#StatusBar">StatusBar</a>&nbsp;statBar)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetStatusBarPane"><strong>SetStatusBarPane</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetStatusBarPane">SetStatusBarPane</a>(self,&nbsp;int&nbsp;n)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetStatusText"><strong>SetStatusText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetStatusText">SetStatusText</a>(self,&nbsp;String&nbsp;text,&nbsp;int&nbsp;number=0)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetStatusWidths"><strong>SetStatusWidths</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetStatusWidths">SetStatusWidths</a>(self,&nbsp;int&nbsp;widths)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetToolBar"><strong>SetToolBar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetToolBar">SetToolBar</a>(self,&nbsp;wxToolBar&nbsp;toolbar)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-__repr__"><strong>__repr__</strong></a>(self)</dt></dl>

<hr>
Static methods inherited from <a href="wx._windows.html#Frame">wx._windows.Frame</a>:<br>
<dl><dt><a name="SubplotToolWX-GetClassDefaultAttributes"><strong>GetClassDefaultAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetClassDefaultAttributes">GetClassDefaultAttributes</a>(int&nbsp;variant=WINDOW_VARIANT_NORMAL)&nbsp;-&gt;&nbsp;VisualAttributes<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;attributes&nbsp;for&nbsp;this&nbsp;class.&nbsp;&nbsp;This&nbsp;is&nbsp;useful&nbsp;if&nbsp;you&nbsp;want<br>
to&nbsp;use&nbsp;the&nbsp;same&nbsp;font&nbsp;or&nbsp;colour&nbsp;in&nbsp;your&nbsp;own&nbsp;control&nbsp;as&nbsp;in&nbsp;a&nbsp;standard<br>
control&nbsp;--&nbsp;which&nbsp;is&nbsp;a&nbsp;much&nbsp;better&nbsp;idea&nbsp;than&nbsp;hard&nbsp;coding&nbsp;specific<br>
colours&nbsp;or&nbsp;fonts&nbsp;which&nbsp;might&nbsp;look&nbsp;completely&nbsp;out&nbsp;of&nbsp;place&nbsp;on&nbsp;the<br>
user's&nbsp;system,&nbsp;especially&nbsp;if&nbsp;it&nbsp;uses&nbsp;themes.<br>
&nbsp;<br>
The&nbsp;variant&nbsp;parameter&nbsp;is&nbsp;only&nbsp;relevant&nbsp;under&nbsp;Mac&nbsp;currently&nbsp;and&nbsp;is<br>
ignore&nbsp;under&nbsp;other&nbsp;platforms.&nbsp;Under&nbsp;Mac,&nbsp;it&nbsp;will&nbsp;change&nbsp;the&nbsp;size&nbsp;of<br>
the&nbsp;returned&nbsp;font.&nbsp;See&nbsp;`wx.Window.SetWindowVariant`&nbsp;for&nbsp;more&nbsp;about<br>
this.</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._windows.html#TopLevelWindow">wx._windows.TopLevelWindow</a>:<br>
<dl><dt><a name="SubplotToolWX-CenterOnScreen"><strong>CenterOnScreen</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-CenterOnScreen">CenterOnScreen</a>(self,&nbsp;int&nbsp;dir=BOTH)<br>
&nbsp;<br>
Center&nbsp;the&nbsp;window&nbsp;on&nbsp;screen</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-CentreOnScreen"><strong>CentreOnScreen</strong></a> = CenterOnScreen(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-CenterOnScreen">CenterOnScreen</a>(self,&nbsp;int&nbsp;dir=BOTH)<br>
&nbsp;<br>
Center&nbsp;the&nbsp;window&nbsp;on&nbsp;screen</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetIcon"><strong>GetIcon</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetIcon">GetIcon</a>(self)&nbsp;-&gt;&nbsp;Icon</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetTitle"><strong>GetTitle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetTitle">GetTitle</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window's&nbsp;title.&nbsp;Applicable&nbsp;only&nbsp;to&nbsp;frames&nbsp;and&nbsp;dialogs.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Iconize"><strong>Iconize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Iconize">Iconize</a>(self,&nbsp;bool&nbsp;iconize=True)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-IsActive"><strong>IsActive</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-IsActive">IsActive</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-IsFullScreen"><strong>IsFullScreen</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-IsFullScreen">IsFullScreen</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-IsIconized"><strong>IsIconized</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-IsIconized">IsIconized</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-IsMaximized"><strong>IsMaximized</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-IsMaximized">IsMaximized</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-MacGetMetalAppearance"><strong>MacGetMetalAppearance</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-MacGetMetalAppearance">MacGetMetalAppearance</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-MacSetMetalAppearance"><strong>MacSetMetalAppearance</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-MacSetMetalAppearance">MacSetMetalAppearance</a>(self,&nbsp;bool&nbsp;on)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Maximize"><strong>Maximize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Maximize">Maximize</a>(self,&nbsp;bool&nbsp;maximize=True)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-RequestUserAttention"><strong>RequestUserAttention</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-RequestUserAttention">RequestUserAttention</a>(self,&nbsp;int&nbsp;flags=USER_ATTENTION_INFO)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Restore"><strong>Restore</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Restore">Restore</a>(self)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetIcon"><strong>SetIcon</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetIcon">SetIcon</a>(self,&nbsp;Icon&nbsp;icon)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetIcons"><strong>SetIcons</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetIcons">SetIcons</a>(self,&nbsp;wxIconBundle&nbsp;icons)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetShape"><strong>SetShape</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetShape">SetShape</a>(self,&nbsp;Region&nbsp;region)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetTitle"><strong>SetTitle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetTitle">SetTitle</a>(self,&nbsp;String&nbsp;title)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;title.&nbsp;Applicable&nbsp;only&nbsp;to&nbsp;frames&nbsp;and&nbsp;dialogs.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-ShowFullScreen"><strong>ShowFullScreen</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-ShowFullScreen">ShowFullScreen</a>(self,&nbsp;bool&nbsp;show,&nbsp;long&nbsp;style=FULLSCREEN_ALL)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#Window">wx._core.Window</a>:<br>
<dl><dt><a name="SubplotToolWX-AcceptsFocus"><strong>AcceptsFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-AcceptsFocus">AcceptsFocus</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Can&nbsp;this&nbsp;window&nbsp;have&nbsp;focus?</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-AcceptsFocusFromKeyboard"><strong>AcceptsFocusFromKeyboard</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-AcceptsFocusFromKeyboard">AcceptsFocusFromKeyboard</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Can&nbsp;this&nbsp;window&nbsp;be&nbsp;given&nbsp;focus&nbsp;by&nbsp;keyboard&nbsp;navigation?&nbsp;if&nbsp;not,&nbsp;the<br>
only&nbsp;way&nbsp;to&nbsp;give&nbsp;it&nbsp;focus&nbsp;(provided&nbsp;it&nbsp;accepts&nbsp;it&nbsp;at&nbsp;all)&nbsp;is&nbsp;to&nbsp;click<br>
it.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-AddChild"><strong>AddChild</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-AddChild">AddChild</a>(self,&nbsp;Window&nbsp;child)<br>
&nbsp;<br>
Adds&nbsp;a&nbsp;child&nbsp;window.&nbsp;This&nbsp;is&nbsp;called&nbsp;automatically&nbsp;by&nbsp;window&nbsp;creation<br>
functions&nbsp;so&nbsp;should&nbsp;not&nbsp;be&nbsp;required&nbsp;by&nbsp;the&nbsp;application&nbsp;programmer.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-AssociateHandle"><strong>AssociateHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-AssociateHandle">AssociateHandle</a>(self,&nbsp;long&nbsp;handle)<br>
&nbsp;<br>
Associate&nbsp;the&nbsp;window&nbsp;with&nbsp;a&nbsp;new&nbsp;native&nbsp;handle</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-CacheBestSize"><strong>CacheBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-CacheBestSize">CacheBestSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Cache&nbsp;the&nbsp;best&nbsp;size&nbsp;so&nbsp;it&nbsp;doesn't&nbsp;need&nbsp;to&nbsp;be&nbsp;calculated&nbsp;again,&nbsp;(at&nbsp;least&nbsp;until<br>
some&nbsp;properties&nbsp;of&nbsp;the&nbsp;window&nbsp;change.)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-CaptureMouse"><strong>CaptureMouse</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-CaptureMouse">CaptureMouse</a>(self)<br>
&nbsp;<br>
Directs&nbsp;all&nbsp;mouse&nbsp;input&nbsp;to&nbsp;this&nbsp;window.&nbsp;Call&nbsp;wx.Window.ReleaseMouse&nbsp;to<br>
release&nbsp;the&nbsp;capture.<br>
&nbsp;<br>
Note&nbsp;that&nbsp;wxWindows&nbsp;maintains&nbsp;the&nbsp;stack&nbsp;of&nbsp;windows&nbsp;having&nbsp;captured&nbsp;the<br>
mouse&nbsp;and&nbsp;when&nbsp;the&nbsp;mouse&nbsp;is&nbsp;released&nbsp;the&nbsp;capture&nbsp;returns&nbsp;to&nbsp;the&nbsp;window<br>
which&nbsp;had&nbsp;had&nbsp;captured&nbsp;it&nbsp;previously&nbsp;and&nbsp;it&nbsp;is&nbsp;only&nbsp;really&nbsp;released&nbsp;if<br>
there&nbsp;were&nbsp;no&nbsp;previous&nbsp;window.&nbsp;In&nbsp;particular,&nbsp;this&nbsp;means&nbsp;that&nbsp;you&nbsp;must<br>
release&nbsp;the&nbsp;mouse&nbsp;as&nbsp;many&nbsp;times&nbsp;as&nbsp;you&nbsp;capture&nbsp;it.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Center"><strong>Center</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Center">Center</a>(self,&nbsp;int&nbsp;direction=BOTH)<br>
&nbsp;<br>
Centers&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;parameter&nbsp;specifies&nbsp;the&nbsp;direction&nbsp;for<br>
cetering,&nbsp;and&nbsp;may&nbsp;be&nbsp;wx.HORIZONTAL,&nbsp;wx.VERTICAL&nbsp;or&nbsp;wx.BOTH.&nbsp;It&nbsp;may<br>
also&nbsp;include&nbsp;wx.CENTER_ON_SCREEN&nbsp;flag&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;center&nbsp;the&nbsp;window<br>
on&nbsp;the&nbsp;entire&nbsp;screen&nbsp;and&nbsp;not&nbsp;on&nbsp;its&nbsp;parent&nbsp;window.&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a<br>
top-level&nbsp;window&nbsp;and&nbsp;has&nbsp;no&nbsp;parent&nbsp;then&nbsp;it&nbsp;will&nbsp;always&nbsp;be&nbsp;centered<br>
relative&nbsp;to&nbsp;the&nbsp;screen.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-CenterOnParent"><strong>CenterOnParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-CenterOnParent">CenterOnParent</a>(self,&nbsp;int&nbsp;dir=BOTH)<br>
&nbsp;<br>
Center&nbsp;with&nbsp;respect&nbsp;to&nbsp;the&nbsp;the&nbsp;parent&nbsp;window</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Centre"><strong>Centre</strong></a> = Center(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Center">Center</a>(self,&nbsp;int&nbsp;direction=BOTH)<br>
&nbsp;<br>
Centers&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;parameter&nbsp;specifies&nbsp;the&nbsp;direction&nbsp;for<br>
cetering,&nbsp;and&nbsp;may&nbsp;be&nbsp;wx.HORIZONTAL,&nbsp;wx.VERTICAL&nbsp;or&nbsp;wx.BOTH.&nbsp;It&nbsp;may<br>
also&nbsp;include&nbsp;wx.CENTER_ON_SCREEN&nbsp;flag&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;center&nbsp;the&nbsp;window<br>
on&nbsp;the&nbsp;entire&nbsp;screen&nbsp;and&nbsp;not&nbsp;on&nbsp;its&nbsp;parent&nbsp;window.&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a<br>
top-level&nbsp;window&nbsp;and&nbsp;has&nbsp;no&nbsp;parent&nbsp;then&nbsp;it&nbsp;will&nbsp;always&nbsp;be&nbsp;centered<br>
relative&nbsp;to&nbsp;the&nbsp;screen.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-CentreOnParent"><strong>CentreOnParent</strong></a> = CenterOnParent(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-CenterOnParent">CenterOnParent</a>(self,&nbsp;int&nbsp;dir=BOTH)<br>
&nbsp;<br>
Center&nbsp;with&nbsp;respect&nbsp;to&nbsp;the&nbsp;the&nbsp;parent&nbsp;window</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-ClearBackground"><strong>ClearBackground</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-ClearBackground">ClearBackground</a>(self)<br>
&nbsp;<br>
Clears&nbsp;the&nbsp;window&nbsp;by&nbsp;filling&nbsp;it&nbsp;with&nbsp;the&nbsp;current&nbsp;background<br>
colour.&nbsp;Does&nbsp;not&nbsp;cause&nbsp;an&nbsp;erase&nbsp;background&nbsp;event&nbsp;to&nbsp;be&nbsp;generated.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-ClientToScreen"><strong>ClientToScreen</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-ClientToScreen">ClientToScreen</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;to&nbsp;screen&nbsp;coordinates&nbsp;from&nbsp;coordinates&nbsp;relative&nbsp;to&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-ClientToScreenXY"><strong>ClientToScreenXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-ClientToScreenXY">ClientToScreenXY</a>(int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Converts&nbsp;to&nbsp;screen&nbsp;coordinates&nbsp;from&nbsp;coordinates&nbsp;relative&nbsp;to&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Close"><strong>Close</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Close">Close</a>(self,&nbsp;bool&nbsp;force=False)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;function&nbsp;simply&nbsp;generates&nbsp;a&nbsp;EVT_CLOSE&nbsp;event&nbsp;whose&nbsp;handler&nbsp;usually<br>
tries&nbsp;to&nbsp;close&nbsp;the&nbsp;window.&nbsp;It&nbsp;doesn't&nbsp;close&nbsp;the&nbsp;window&nbsp;itself,<br>
however.&nbsp;&nbsp;If&nbsp;force&nbsp;is&nbsp;False&nbsp;(the&nbsp;default)&nbsp;then&nbsp;the&nbsp;window's&nbsp;close<br>
handler&nbsp;will&nbsp;be&nbsp;allowed&nbsp;to&nbsp;veto&nbsp;the&nbsp;destruction&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-ConvertDialogPointToPixels"><strong>ConvertDialogPointToPixels</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-ConvertDialogPointToPixels">ConvertDialogPointToPixels</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-ConvertDialogSizeToPixels"><strong>ConvertDialogSizeToPixels</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-ConvertDialogSizeToPixels">ConvertDialogSizeToPixels</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-ConvertPixelPointToDialog"><strong>ConvertPixelPointToDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-ConvertPixelPointToDialog">ConvertPixelPointToDialog</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-ConvertPixelSizeToDialog"><strong>ConvertPixelSizeToDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-ConvertPixelSizeToDialog">ConvertPixelSizeToDialog</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-DLG_PNT"><strong>DLG_PNT</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-DLG_PNT">DLG_PNT</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-DLG_SZE"><strong>DLG_SZE</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-DLG_SZE">DLG_SZE</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Destroy"><strong>Destroy</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Destroy">Destroy</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Destroys&nbsp;the&nbsp;window&nbsp;safely.&nbsp;&nbsp;Frames&nbsp;and&nbsp;dialogs&nbsp;are&nbsp;not&nbsp;destroyed<br>
immediately&nbsp;when&nbsp;this&nbsp;function&nbsp;is&nbsp;called&nbsp;--&nbsp;they&nbsp;are&nbsp;added&nbsp;to&nbsp;a&nbsp;list<br>
of&nbsp;windows&nbsp;to&nbsp;be&nbsp;deleted&nbsp;on&nbsp;idle&nbsp;time,&nbsp;when&nbsp;all&nbsp;the&nbsp;window's&nbsp;events<br>
have&nbsp;been&nbsp;processed.&nbsp;This&nbsp;prevents&nbsp;problems&nbsp;with&nbsp;events&nbsp;being&nbsp;sent&nbsp;to<br>
non-existent&nbsp;windows.<br>
&nbsp;<br>
Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;window&nbsp;has&nbsp;either&nbsp;been&nbsp;successfully&nbsp;deleted,&nbsp;or&nbsp;it<br>
has&nbsp;been&nbsp;added&nbsp;to&nbsp;the&nbsp;list&nbsp;of&nbsp;windows&nbsp;pending&nbsp;real&nbsp;deletion.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-DestroyChildren"><strong>DestroyChildren</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-DestroyChildren">DestroyChildren</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Destroys&nbsp;all&nbsp;children&nbsp;of&nbsp;a&nbsp;window.&nbsp;Called&nbsp;automatically&nbsp;by&nbsp;the<br>
destructor.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Disable"><strong>Disable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Disable">Disable</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Disables&nbsp;the&nbsp;window,&nbsp;same&nbsp;as&nbsp;<a href="#SubplotToolWX-Enable">Enable</a>(false).</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-DissociateHandle"><strong>DissociateHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-DissociateHandle">DissociateHandle</a>(self)<br>
&nbsp;<br>
Dissociate&nbsp;the&nbsp;current&nbsp;native&nbsp;handle&nbsp;from&nbsp;the&nbsp;window</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-DragAcceptFiles"><strong>DragAcceptFiles</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-DragAcceptFiles">DragAcceptFiles</a>(self,&nbsp;bool&nbsp;accept)<br>
&nbsp;<br>
Enables&nbsp;or&nbsp;disables&nbsp;eligibility&nbsp;for&nbsp;drop&nbsp;file&nbsp;events,&nbsp;EVT_DROP_FILES.<br>
Only&nbsp;functional&nbsp;on&nbsp;Windows.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Enable"><strong>Enable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Enable">Enable</a>(self,&nbsp;bool&nbsp;enable=True)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Enable&nbsp;or&nbsp;disable&nbsp;the&nbsp;window&nbsp;for&nbsp;user&nbsp;input.&nbsp;Note&nbsp;that&nbsp;when&nbsp;a&nbsp;parent<br>
window&nbsp;is&nbsp;disabled,&nbsp;all&nbsp;of&nbsp;its&nbsp;children&nbsp;are&nbsp;disabled&nbsp;as&nbsp;well&nbsp;and&nbsp;they<br>
are&nbsp;reenabled&nbsp;again&nbsp;when&nbsp;the&nbsp;parent&nbsp;is.&nbsp;&nbsp;Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window<br>
has&nbsp;been&nbsp;enabled&nbsp;or&nbsp;disabled,&nbsp;false&nbsp;if&nbsp;nothing&nbsp;was&nbsp;done,&nbsp;i.e.&nbsp;if&nbsp;the<br>
window&nbsp;had&nbsp;already&nbsp;been&nbsp;in&nbsp;the&nbsp;specified&nbsp;state.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-FindWindowById"><strong>FindWindowById</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-FindWindowById">FindWindowById</a>(self,&nbsp;long&nbsp;winid)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Find&nbsp;a&nbsp;chld&nbsp;of&nbsp;this&nbsp;window&nbsp;by&nbsp;window&nbsp;ID</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-FindWindowByName"><strong>FindWindowByName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-FindWindowByName">FindWindowByName</a>(self,&nbsp;String&nbsp;name)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Find&nbsp;a&nbsp;child&nbsp;of&nbsp;this&nbsp;window&nbsp;by&nbsp;name</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Fit"><strong>Fit</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Fit">Fit</a>(self)<br>
&nbsp;<br>
Sizes&nbsp;the&nbsp;window&nbsp;so&nbsp;that&nbsp;it&nbsp;fits&nbsp;around&nbsp;its&nbsp;subwindows.&nbsp;This&nbsp;function<br>
won't&nbsp;do&nbsp;anything&nbsp;if&nbsp;there&nbsp;are&nbsp;no&nbsp;subwindows&nbsp;and&nbsp;will&nbsp;only&nbsp;really&nbsp;work<br>
correctly&nbsp;if&nbsp;sizers&nbsp;are&nbsp;used&nbsp;for&nbsp;the&nbsp;subwindows&nbsp;layout.&nbsp;Also,&nbsp;if&nbsp;the<br>
window&nbsp;has&nbsp;exactly&nbsp;one&nbsp;subwindow&nbsp;it&nbsp;is&nbsp;better&nbsp;(faster&nbsp;and&nbsp;the&nbsp;result<br>
is&nbsp;more&nbsp;precise&nbsp;as&nbsp;Fit&nbsp;adds&nbsp;some&nbsp;margin&nbsp;to&nbsp;account&nbsp;for&nbsp;fuzziness&nbsp;of<br>
its&nbsp;calculations)&nbsp;to&nbsp;call&nbsp;window.<a href="#SubplotToolWX-SetClientSize">SetClientSize</a>(child.<a href="#SubplotToolWX-GetSize">GetSize</a>())<br>
instead&nbsp;of&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-FitInside"><strong>FitInside</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-FitInside">FitInside</a>(self)<br>
&nbsp;<br>
Similar&nbsp;to&nbsp;Fit,&nbsp;but&nbsp;sizes&nbsp;the&nbsp;interior&nbsp;(virtual)&nbsp;size&nbsp;of&nbsp;a<br>
window.&nbsp;Mainly&nbsp;useful&nbsp;with&nbsp;scrolled&nbsp;windows&nbsp;to&nbsp;reset&nbsp;scrollbars&nbsp;after<br>
sizing&nbsp;changes&nbsp;that&nbsp;do&nbsp;not&nbsp;trigger&nbsp;a&nbsp;size&nbsp;event,&nbsp;and/or&nbsp;scrolled<br>
windows&nbsp;without&nbsp;an&nbsp;interior&nbsp;sizer.&nbsp;This&nbsp;function&nbsp;similarly&nbsp;won't&nbsp;do<br>
anything&nbsp;if&nbsp;there&nbsp;are&nbsp;no&nbsp;subwindows.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Freeze"><strong>Freeze</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Freeze">Freeze</a>(self)<br>
&nbsp;<br>
Freezes&nbsp;the&nbsp;window&nbsp;or,&nbsp;in&nbsp;other&nbsp;words,&nbsp;prevents&nbsp;any&nbsp;updates&nbsp;from<br>
taking&nbsp;place&nbsp;on&nbsp;screen,&nbsp;the&nbsp;window&nbsp;is&nbsp;not&nbsp;redrawn&nbsp;at&nbsp;all.&nbsp;Thaw&nbsp;must&nbsp;be<br>
called&nbsp;to&nbsp;reenable&nbsp;window&nbsp;redrawing.&nbsp;&nbsp;Calls&nbsp;to&nbsp;Freeze/Thaw&nbsp;may&nbsp;be<br>
nested,&nbsp;with&nbsp;the&nbsp;actual&nbsp;Thaw&nbsp;being&nbsp;delayed&nbsp;until&nbsp;all&nbsp;the&nbsp;nesting&nbsp;has<br>
been&nbsp;undone.<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;useful&nbsp;for&nbsp;visual&nbsp;appearance&nbsp;optimization&nbsp;(for&nbsp;example,<br>
it&nbsp;is&nbsp;a&nbsp;good&nbsp;idea&nbsp;to&nbsp;use&nbsp;it&nbsp;before&nbsp;inserting&nbsp;large&nbsp;amount&nbsp;of&nbsp;text&nbsp;into<br>
a&nbsp;wxTextCtrl&nbsp;under&nbsp;wxGTK)&nbsp;but&nbsp;is&nbsp;not&nbsp;implemented&nbsp;on&nbsp;all&nbsp;platforms&nbsp;nor<br>
for&nbsp;all&nbsp;controls&nbsp;so&nbsp;it&nbsp;is&nbsp;mostly&nbsp;just&nbsp;a&nbsp;hint&nbsp;to&nbsp;wxWindows&nbsp;and&nbsp;not&nbsp;a<br>
mandatory&nbsp;directive.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetAcceleratorTable"><strong>GetAcceleratorTable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetAcceleratorTable">GetAcceleratorTable</a>(self)&nbsp;-&gt;&nbsp;AcceleratorTable<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;accelerator&nbsp;table&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetAdjustedBestSize"><strong>GetAdjustedBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetAdjustedBestSize">GetAdjustedBestSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;similar&nbsp;to&nbsp;GetBestSize,&nbsp;except&nbsp;in&nbsp;one<br>
thing.&nbsp;GetBestSize&nbsp;should&nbsp;return&nbsp;the&nbsp;minimum&nbsp;untruncated&nbsp;size&nbsp;of&nbsp;the<br>
window,&nbsp;while&nbsp;this&nbsp;method&nbsp;will&nbsp;return&nbsp;the&nbsp;largest&nbsp;of&nbsp;BestSize&nbsp;and&nbsp;any<br>
user&nbsp;specified&nbsp;minimum&nbsp;size.&nbsp;ie.&nbsp;it&nbsp;is&nbsp;the&nbsp;minimum&nbsp;size&nbsp;the&nbsp;window<br>
should&nbsp;currently&nbsp;be&nbsp;drawn&nbsp;at,&nbsp;not&nbsp;the&nbsp;minimal&nbsp;size&nbsp;it&nbsp;can&nbsp;possibly<br>
tolerate.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetAutoLayout"><strong>GetAutoLayout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetAutoLayout">GetAutoLayout</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;current&nbsp;autoLayout&nbsp;setting</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetBackgroundColour"><strong>GetBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetBackgroundColour">GetBackgroundColour</a>(self)&nbsp;-&gt;&nbsp;Colour<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetBackgroundStyle"><strong>GetBackgroundStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetBackgroundStyle">GetBackgroundStyle</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;style&nbsp;of&nbsp;the&nbsp;window.<br>
&nbsp;<br>
:see:&nbsp;`SetBackgroundStyle`</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetBestFittingSize"><strong>GetBestFittingSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetBestFittingSize">GetBestFittingSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;function&nbsp;will&nbsp;merge&nbsp;the&nbsp;window's&nbsp;best&nbsp;size&nbsp;into&nbsp;the&nbsp;window's<br>
minimum&nbsp;size,&nbsp;giving&nbsp;priority&nbsp;to&nbsp;the&nbsp;min&nbsp;size&nbsp;components,&nbsp;and&nbsp;returns<br>
the&nbsp;results.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetBestSize"><strong>GetBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetBestSize">GetBestSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;function&nbsp;returns&nbsp;the&nbsp;best&nbsp;acceptable&nbsp;minimal&nbsp;size&nbsp;for&nbsp;the<br>
window,&nbsp;if&nbsp;applicable.&nbsp;For&nbsp;example,&nbsp;for&nbsp;a&nbsp;static&nbsp;text&nbsp;control,&nbsp;it&nbsp;will<br>
be&nbsp;the&nbsp;minimal&nbsp;size&nbsp;such&nbsp;that&nbsp;the&nbsp;control&nbsp;label&nbsp;is&nbsp;not&nbsp;truncated.&nbsp;For<br>
windows&nbsp;containing&nbsp;subwindows&nbsp;(suzh&nbsp;aswx.<a href="wx._windows.html#Panel">Panel</a>),&nbsp;the&nbsp;size&nbsp;returned&nbsp;by<br>
this&nbsp;function&nbsp;will&nbsp;be&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;size&nbsp;the&nbsp;window&nbsp;would&nbsp;have&nbsp;had<br>
after&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetBestSizeTuple"><strong>GetBestSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetBestSizeTuple">GetBestSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
This&nbsp;function&nbsp;returns&nbsp;the&nbsp;best&nbsp;acceptable&nbsp;minimal&nbsp;size&nbsp;for&nbsp;the<br>
window,&nbsp;if&nbsp;applicable.&nbsp;For&nbsp;example,&nbsp;for&nbsp;a&nbsp;static&nbsp;text&nbsp;control,&nbsp;it&nbsp;will<br>
be&nbsp;the&nbsp;minimal&nbsp;size&nbsp;such&nbsp;that&nbsp;the&nbsp;control&nbsp;label&nbsp;is&nbsp;not&nbsp;truncated.&nbsp;For<br>
windows&nbsp;containing&nbsp;subwindows&nbsp;(suzh&nbsp;aswx.<a href="wx._windows.html#Panel">Panel</a>),&nbsp;the&nbsp;size&nbsp;returned&nbsp;by<br>
this&nbsp;function&nbsp;will&nbsp;be&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;size&nbsp;the&nbsp;window&nbsp;would&nbsp;have&nbsp;had<br>
after&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetBestVirtualSize"><strong>GetBestVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetBestVirtualSize">GetBestVirtualSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Return&nbsp;the&nbsp;largest&nbsp;of&nbsp;ClientSize&nbsp;and&nbsp;BestSize&nbsp;(as&nbsp;determined&nbsp;by&nbsp;a<br>
sizer,&nbsp;interior&nbsp;children,&nbsp;or&nbsp;other&nbsp;means)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetBorder"><strong>GetBorder</strong></a>(*args)</dt><dd><tt><a href="#SubplotToolWX-GetBorder">GetBorder</a>(self,&nbsp;long&nbsp;flags)&nbsp;-&gt;&nbsp;int<br>
<a href="#SubplotToolWX-GetBorder">GetBorder</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;border&nbsp;for&nbsp;the&nbsp;flags&nbsp;of&nbsp;this&nbsp;window</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetCaret"><strong>GetCaret</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetCaret">GetCaret</a>(self)&nbsp;-&gt;&nbsp;Caret<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;caret&nbsp;associated&nbsp;with&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetCharHeight"><strong>GetCharHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetCharHeight">GetCharHeight</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;(average)&nbsp;character&nbsp;size&nbsp;for&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetCharWidth"><strong>GetCharWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetCharWidth">GetCharWidth</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;(average)&nbsp;character&nbsp;size&nbsp;for&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetChildren"><strong>GetChildren</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetChildren">GetChildren</a>(self)&nbsp;-&gt;&nbsp;PyObject<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;list&nbsp;of&nbsp;the&nbsp;window's&nbsp;children.&nbsp;&nbsp;NOTE:&nbsp;Currently&nbsp;this&nbsp;is&nbsp;a<br>
copy&nbsp;of&nbsp;the&nbsp;child&nbsp;window&nbsp;list&nbsp;maintained&nbsp;by&nbsp;the&nbsp;window,&nbsp;so&nbsp;the&nbsp;return<br>
value&nbsp;of&nbsp;this&nbsp;function&nbsp;is&nbsp;only&nbsp;valid&nbsp;as&nbsp;long&nbsp;as&nbsp;the&nbsp;window's&nbsp;children<br>
do&nbsp;not&nbsp;change.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetClientRect"><strong>GetClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetClientRect">GetClientRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Get&nbsp;the&nbsp;client&nbsp;area&nbsp;position&nbsp;and&nbsp;size&nbsp;as&nbsp;a&nbsp;`wx.Rect`&nbsp;object.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetClientSize"><strong>GetClientSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetClientSize">GetClientSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;gets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window's&nbsp;'client&nbsp;area'&nbsp;in&nbsp;pixels.&nbsp;The&nbsp;client<br>
area&nbsp;is&nbsp;the&nbsp;area&nbsp;which&nbsp;may&nbsp;be&nbsp;drawn&nbsp;on&nbsp;by&nbsp;the&nbsp;programmer,&nbsp;excluding<br>
title&nbsp;bar,&nbsp;border,&nbsp;scrollbars,&nbsp;etc.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetClientSizeTuple"><strong>GetClientSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetClientSizeTuple">GetClientSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
This&nbsp;gets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window's&nbsp;'client&nbsp;area'&nbsp;in&nbsp;pixels.&nbsp;The&nbsp;client<br>
area&nbsp;is&nbsp;the&nbsp;area&nbsp;which&nbsp;may&nbsp;be&nbsp;drawn&nbsp;on&nbsp;by&nbsp;the&nbsp;programmer,&nbsp;excluding<br>
title&nbsp;bar,&nbsp;border,&nbsp;scrollbars,&nbsp;etc.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetConstraints"><strong>GetConstraints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetConstraints">GetConstraints</a>(self)&nbsp;-&gt;&nbsp;LayoutConstraints<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;pointer&nbsp;to&nbsp;the&nbsp;window's&nbsp;layout&nbsp;constraints,&nbsp;or&nbsp;None&nbsp;if&nbsp;there<br>
are&nbsp;none.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetContainingSizer"><strong>GetContainingSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetContainingSizer">GetContainingSizer</a>(self)&nbsp;-&gt;&nbsp;Sizer<br>
&nbsp;<br>
Return&nbsp;the&nbsp;sizer&nbsp;that&nbsp;this&nbsp;window&nbsp;is&nbsp;a&nbsp;member&nbsp;of,&nbsp;if&nbsp;any,&nbsp;otherwise&nbsp;None.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetCursor"><strong>GetCursor</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetCursor">GetCursor</a>(self)&nbsp;-&gt;&nbsp;Cursor<br>
&nbsp;<br>
Return&nbsp;the&nbsp;cursor&nbsp;associated&nbsp;with&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetDefaultAttributes"><strong>GetDefaultAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetDefaultAttributes">GetDefaultAttributes</a>(self)&nbsp;-&gt;&nbsp;VisualAttributes<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;attributes&nbsp;for&nbsp;an&nbsp;instance&nbsp;of&nbsp;this&nbsp;class.&nbsp;&nbsp;This&nbsp;is<br>
useful&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;use&nbsp;the&nbsp;same&nbsp;font&nbsp;or&nbsp;colour&nbsp;in&nbsp;your&nbsp;own&nbsp;control<br>
as&nbsp;in&nbsp;a&nbsp;standard&nbsp;control&nbsp;--&nbsp;which&nbsp;is&nbsp;a&nbsp;much&nbsp;better&nbsp;idea&nbsp;than&nbsp;hard<br>
coding&nbsp;specific&nbsp;colours&nbsp;or&nbsp;fonts&nbsp;which&nbsp;might&nbsp;look&nbsp;completely&nbsp;out&nbsp;of<br>
place&nbsp;on&nbsp;the&nbsp;user's&nbsp;system,&nbsp;especially&nbsp;if&nbsp;it&nbsp;uses&nbsp;themes.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetDefaultItem"><strong>GetDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetDefaultItem">GetDefaultItem</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;child&nbsp;of&nbsp;this&nbsp;parent,&nbsp;i.e.&nbsp;the&nbsp;one&nbsp;which&nbsp;is&nbsp;activated<br>
by&nbsp;pressing&nbsp;&lt;Enter&gt;&nbsp;such&nbsp;as&nbsp;the&nbsp;OK&nbsp;button&nbsp;on&nbsp;a&nbsp;wx.Dialog.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetDropTarget"><strong>GetDropTarget</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetDropTarget">GetDropTarget</a>(self)&nbsp;-&gt;&nbsp;DropTarget<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;associated&nbsp;drop&nbsp;target,&nbsp;which&nbsp;may&nbsp;be&nbsp;None.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetEventHandler"><strong>GetEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetEventHandler">GetEventHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;event&nbsp;handler&nbsp;for&nbsp;this&nbsp;window.&nbsp;By&nbsp;default,&nbsp;the&nbsp;window&nbsp;is<br>
its&nbsp;own&nbsp;event&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetExtraStyle"><strong>GetExtraStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetExtraStyle">GetExtraStyle</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;extra&nbsp;style&nbsp;bits&nbsp;for&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetFont"><strong>GetFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetFont">GetFont</a>(self)&nbsp;-&gt;&nbsp;Font<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;default&nbsp;font&nbsp;used&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetForegroundColour"><strong>GetForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetForegroundColour">GetForegroundColour</a>(self)&nbsp;-&gt;&nbsp;Colour<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;foreground&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;interpretation&nbsp;of<br>
foreground&nbsp;colour&nbsp;is&nbsp;dependent&nbsp;on&nbsp;the&nbsp;window&nbsp;class;&nbsp;it&nbsp;may&nbsp;be&nbsp;the&nbsp;text<br>
colour&nbsp;or&nbsp;other&nbsp;colour,&nbsp;or&nbsp;it&nbsp;may&nbsp;not&nbsp;be&nbsp;used&nbsp;at&nbsp;all.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetFullTextExtent"><strong>GetFullTextExtent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetFullTextExtent">GetFullTextExtent</a>(String&nbsp;string,&nbsp;Font&nbsp;font=None)&nbsp;-&gt;<br>
&nbsp;&nbsp;&nbsp;(width,&nbsp;height,&nbsp;descent,&nbsp;externalLeading)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;width,&nbsp;height,&nbsp;decent&nbsp;and&nbsp;leading&nbsp;of&nbsp;the&nbsp;text&nbsp;using&nbsp;the<br>
current&nbsp;or&nbsp;specified&nbsp;font.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetGrandParent"><strong>GetGrandParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetGrandParent">GetGrandParent</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;parent&nbsp;of&nbsp;the&nbsp;parent&nbsp;of&nbsp;this&nbsp;window,&nbsp;or&nbsp;None&nbsp;if&nbsp;there<br>
isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetHandle"><strong>GetHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetHandle">GetHandle</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;platform-specific&nbsp;handle&nbsp;(as&nbsp;a&nbsp;long&nbsp;integer)&nbsp;of&nbsp;the<br>
physical&nbsp;window.&nbsp;&nbsp;Currently&nbsp;on&nbsp;wxMac&nbsp;it&nbsp;returns&nbsp;the&nbsp;handle&nbsp;of&nbsp;the<br>
toplevel&nbsp;parent&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetHelpText"><strong>GetHelpText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetHelpText">GetHelpText</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;help&nbsp;text&nbsp;to&nbsp;be&nbsp;used&nbsp;as&nbsp;context-sensitive&nbsp;help&nbsp;for&nbsp;this<br>
window.&nbsp;&nbsp;Note&nbsp;that&nbsp;the&nbsp;text&nbsp;is&nbsp;actually&nbsp;stored&nbsp;by&nbsp;the&nbsp;current<br>
wxHelpProvider&nbsp;implementation,&nbsp;and&nbsp;not&nbsp;in&nbsp;the&nbsp;window&nbsp;object&nbsp;itself.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetId"><strong>GetId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetId">GetId</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;identifier&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Each&nbsp;window&nbsp;has&nbsp;an&nbsp;integer<br>
identifier.&nbsp;If&nbsp;the&nbsp;application&nbsp;has&nbsp;not&nbsp;provided&nbsp;one&nbsp;(or&nbsp;the&nbsp;default&nbsp;Id<br>
-1&nbsp;is&nbsp;used)&nbsp;then&nbsp;an&nbsp;unique&nbsp;identifier&nbsp;with&nbsp;a&nbsp;negative&nbsp;value&nbsp;will&nbsp;be<br>
generated.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetLabel"><strong>GetLabel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetLabel">GetLabel</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Generic&nbsp;way&nbsp;of&nbsp;getting&nbsp;a&nbsp;label&nbsp;from&nbsp;any&nbsp;window,&nbsp;for&nbsp;identification<br>
purposes.&nbsp;&nbsp;The&nbsp;interpretation&nbsp;of&nbsp;this&nbsp;function&nbsp;differs&nbsp;from&nbsp;class&nbsp;to<br>
class.&nbsp;For&nbsp;frames&nbsp;and&nbsp;dialogs,&nbsp;the&nbsp;value&nbsp;returned&nbsp;is&nbsp;the&nbsp;title.&nbsp;For<br>
buttons&nbsp;or&nbsp;static&nbsp;text&nbsp;controls,&nbsp;it&nbsp;is&nbsp;the&nbsp;button&nbsp;text.&nbsp;This&nbsp;function<br>
can&nbsp;be&nbsp;useful&nbsp;for&nbsp;meta-programs&nbsp;such&nbsp;as&nbsp;testing&nbsp;tools&nbsp;or&nbsp;special-needs<br>
access&nbsp;programs)which&nbsp;need&nbsp;to&nbsp;identify&nbsp;windows&nbsp;by&nbsp;name.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetMaxHeight"><strong>GetMaxHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetMaxHeight">GetMaxHeight</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetMaxSize"><strong>GetMaxSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetMaxSize">GetMaxSize</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetMaxWidth"><strong>GetMaxWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetMaxWidth">GetMaxWidth</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetMinHeight"><strong>GetMinHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetMinHeight">GetMinHeight</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetMinSize"><strong>GetMinSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetMinSize">GetMinSize</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetMinWidth"><strong>GetMinWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetMinWidth">GetMinWidth</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetName"><strong>GetName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetName">GetName</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;windows&nbsp;name.&nbsp;&nbsp;This&nbsp;name&nbsp;is&nbsp;not&nbsp;guaranteed&nbsp;to&nbsp;be&nbsp;unique;<br>
it&nbsp;is&nbsp;up&nbsp;to&nbsp;the&nbsp;programmer&nbsp;to&nbsp;supply&nbsp;an&nbsp;appropriate&nbsp;name&nbsp;in&nbsp;the&nbsp;window<br>
constructor&nbsp;or&nbsp;via&nbsp;wx.Window.SetName.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetParent"><strong>GetParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetParent">GetParent</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;parent&nbsp;window&nbsp;of&nbsp;this&nbsp;window,&nbsp;or&nbsp;None&nbsp;if&nbsp;there&nbsp;isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetPosition"><strong>GetPosition</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetPosition">GetPosition</a>(self)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window's&nbsp;position.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetPositionTuple"><strong>GetPositionTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetPositionTuple">GetPositionTuple</a>()&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window's&nbsp;position.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetRect"><strong>GetRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetRect">GetRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;size&nbsp;and&nbsp;position&nbsp;of&nbsp;the&nbsp;window&nbsp;as&nbsp;a&nbsp;wx.Rect&nbsp;object.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetScrollPos"><strong>GetScrollPos</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetScrollPos">GetScrollPos</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;position.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetScrollRange"><strong>GetScrollRange</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetScrollRange">GetScrollRange</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;range.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetScrollThumb"><strong>GetScrollThumb</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetScrollThumb">GetScrollThumb</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;thumb&nbsp;size.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetSize"><strong>GetSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetSize">GetSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetSizeTuple"><strong>GetSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetSizeTuple">GetSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetSizer"><strong>GetSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetSizer">GetSizer</a>(self)&nbsp;-&gt;&nbsp;Sizer<br>
&nbsp;<br>
Return&nbsp;the&nbsp;sizer&nbsp;associated&nbsp;with&nbsp;the&nbsp;window&nbsp;by&nbsp;a&nbsp;previous&nbsp;call&nbsp;to<br>
SetSizer&nbsp;or&nbsp;None&nbsp;if&nbsp;there&nbsp;isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetTextExtent"><strong>GetTextExtent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetTextExtent">GetTextExtent</a>(String&nbsp;string)&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;width&nbsp;and&nbsp;height&nbsp;of&nbsp;the&nbsp;text&nbsp;using&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetThemeEnabled"><strong>GetThemeEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetThemeEnabled">GetThemeEnabled</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Return&nbsp;the&nbsp;themeEnabled&nbsp;flag.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetToolTip"><strong>GetToolTip</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetToolTip">GetToolTip</a>(self)&nbsp;-&gt;&nbsp;ToolTip<br>
&nbsp;<br>
get&nbsp;the&nbsp;associated&nbsp;tooltip&nbsp;or&nbsp;None&nbsp;if&nbsp;none</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetUpdateClientRect"><strong>GetUpdateClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetUpdateClientRect">GetUpdateClientRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Get&nbsp;the&nbsp;update&nbsp;rectangle&nbsp;region&nbsp;bounding&nbsp;box&nbsp;in&nbsp;client&nbsp;coords.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetUpdateRegion"><strong>GetUpdateRegion</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetUpdateRegion">GetUpdateRegion</a>(self)&nbsp;-&gt;&nbsp;Region<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;region&nbsp;specifying&nbsp;which&nbsp;parts&nbsp;of&nbsp;the&nbsp;window&nbsp;have&nbsp;been<br>
damaged.&nbsp;Should&nbsp;only&nbsp;be&nbsp;called&nbsp;within&nbsp;an&nbsp;EVT_PAINT&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetValidator"><strong>GetValidator</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetValidator">GetValidator</a>(self)&nbsp;-&gt;&nbsp;Validator<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;pointer&nbsp;to&nbsp;the&nbsp;current&nbsp;validator&nbsp;for&nbsp;the&nbsp;window,&nbsp;or&nbsp;None&nbsp;if<br>
there&nbsp;is&nbsp;none.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetVirtualSize"><strong>GetVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetVirtualSize">GetVirtualSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Get&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows<br>
this&nbsp;is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetVirtualSizeTuple"><strong>GetVirtualSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetVirtualSizeTuple">GetVirtualSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows<br>
this&nbsp;is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetWindowStyle"><strong>GetWindowStyle</strong></a> = GetWindowStyleFlag(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetWindowStyleFlag">GetWindowStyleFlag</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window&nbsp;style&nbsp;that&nbsp;was&nbsp;passed&nbsp;to&nbsp;the&nbsp;constructor&nbsp;or&nbsp;Create<br>
method.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetWindowStyleFlag"><strong>GetWindowStyleFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetWindowStyleFlag">GetWindowStyleFlag</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window&nbsp;style&nbsp;that&nbsp;was&nbsp;passed&nbsp;to&nbsp;the&nbsp;constructor&nbsp;or&nbsp;Create<br>
method.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetWindowVariant"><strong>GetWindowVariant</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetWindowVariant">GetWindowVariant</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-HasCapture"><strong>HasCapture</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-HasCapture">HasCapture</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;this&nbsp;window&nbsp;has&nbsp;the&nbsp;current&nbsp;mouse&nbsp;capture.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-HasFlag"><strong>HasFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-HasFlag">HasFlag</a>(self,&nbsp;int&nbsp;flag)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Test&nbsp;if&nbsp;the&nbsp;given&nbsp;style&nbsp;is&nbsp;set&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-HasScrollbar"><strong>HasScrollbar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-HasScrollbar">HasScrollbar</a>(self,&nbsp;int&nbsp;orient)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Does&nbsp;the&nbsp;window&nbsp;have&nbsp;the&nbsp;scrollbar&nbsp;for&nbsp;this&nbsp;orientation?</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-HasTransparentBackground"><strong>HasTransparentBackground</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-HasTransparentBackground">HasTransparentBackground</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;True&nbsp;if&nbsp;this&nbsp;window's&nbsp;background&nbsp;is&nbsp;transparent&nbsp;(as,&nbsp;for<br>
example,&nbsp;for&nbsp;`wx.StaticText`)&nbsp;and&nbsp;should&nbsp;show&nbsp;the&nbsp;parent&nbsp;window's<br>
background.<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;mostly&nbsp;used&nbsp;internally&nbsp;by&nbsp;the&nbsp;library&nbsp;itself&nbsp;and&nbsp;you<br>
normally&nbsp;shouldn't&nbsp;have&nbsp;to&nbsp;call&nbsp;it.&nbsp;You&nbsp;may,&nbsp;however,&nbsp;have&nbsp;to&nbsp;override<br>
it&nbsp;in&nbsp;your&nbsp;custom&nbsp;control&nbsp;classes&nbsp;to&nbsp;ensure&nbsp;that&nbsp;background&nbsp;is&nbsp;painted<br>
correctly.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Hide"><strong>Hide</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Hide">Hide</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Equivalent&nbsp;to&nbsp;calling&nbsp;<a href="#SubplotToolWX-Show">Show</a>(False).</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-HitTest"><strong>HitTest</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-HitTest">HitTest</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Test&nbsp;where&nbsp;the&nbsp;given&nbsp;(in&nbsp;client&nbsp;coords)&nbsp;point&nbsp;lies</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-HitTestXY"><strong>HitTestXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-HitTestXY">HitTestXY</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Test&nbsp;where&nbsp;the&nbsp;given&nbsp;(in&nbsp;client&nbsp;coords)&nbsp;point&nbsp;lies</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-InheritAttributes"><strong>InheritAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-InheritAttributes">InheritAttributes</a>(self)<br>
&nbsp;<br>
This&nbsp;function&nbsp;is&nbsp;(or&nbsp;should&nbsp;be,&nbsp;in&nbsp;case&nbsp;of&nbsp;custom&nbsp;controls)&nbsp;called<br>
during&nbsp;window&nbsp;creation&nbsp;to&nbsp;intelligently&nbsp;set&nbsp;up&nbsp;the&nbsp;window&nbsp;visual<br>
attributes,&nbsp;that&nbsp;is&nbsp;the&nbsp;font&nbsp;and&nbsp;the&nbsp;foreground&nbsp;and&nbsp;background<br>
colours.<br>
&nbsp;<br>
By&nbsp;'intelligently'&nbsp;the&nbsp;following&nbsp;is&nbsp;meant:&nbsp;by&nbsp;default,&nbsp;all&nbsp;windows&nbsp;use<br>
their&nbsp;own&nbsp;default&nbsp;attributes.&nbsp;However&nbsp;if&nbsp;some&nbsp;of&nbsp;the&nbsp;parent's<br>
attributes&nbsp;are&nbsp;explicitly&nbsp;changed&nbsp;(that&nbsp;is,&nbsp;using&nbsp;SetFont&nbsp;and&nbsp;not<br>
SetOwnFont)&nbsp;and&nbsp;if&nbsp;the&nbsp;corresponding&nbsp;attribute&nbsp;hadn't&nbsp;been<br>
explicitly&nbsp;set&nbsp;for&nbsp;this&nbsp;window&nbsp;itself,&nbsp;then&nbsp;this&nbsp;window&nbsp;takes&nbsp;the&nbsp;same<br>
value&nbsp;as&nbsp;used&nbsp;by&nbsp;the&nbsp;parent.&nbsp;In&nbsp;addition,&nbsp;if&nbsp;the&nbsp;window&nbsp;overrides<br>
ShouldInheritColours&nbsp;to&nbsp;return&nbsp;false,&nbsp;the&nbsp;colours&nbsp;will&nbsp;not&nbsp;be&nbsp;changed<br>
no&nbsp;matter&nbsp;what&nbsp;and&nbsp;only&nbsp;the&nbsp;font&nbsp;might.<br>
&nbsp;<br>
This&nbsp;rather&nbsp;complicated&nbsp;logic&nbsp;is&nbsp;necessary&nbsp;in&nbsp;order&nbsp;to&nbsp;accommodate&nbsp;the<br>
different&nbsp;usage&nbsp;scenarios.&nbsp;The&nbsp;most&nbsp;common&nbsp;one&nbsp;is&nbsp;when&nbsp;all&nbsp;default<br>
attributes&nbsp;are&nbsp;used&nbsp;and&nbsp;in&nbsp;this&nbsp;case,&nbsp;nothing&nbsp;should&nbsp;be&nbsp;inherited&nbsp;as<br>
in&nbsp;modern&nbsp;GUIs&nbsp;different&nbsp;controls&nbsp;use&nbsp;different&nbsp;fonts&nbsp;(and&nbsp;colours)<br>
than&nbsp;their&nbsp;siblings&nbsp;so&nbsp;they&nbsp;can't&nbsp;inherit&nbsp;the&nbsp;same&nbsp;value&nbsp;from&nbsp;the<br>
parent.&nbsp;However&nbsp;it&nbsp;was&nbsp;also&nbsp;deemed&nbsp;desirable&nbsp;to&nbsp;allow&nbsp;to&nbsp;simply&nbsp;change<br>
the&nbsp;attributes&nbsp;of&nbsp;all&nbsp;children&nbsp;at&nbsp;once&nbsp;by&nbsp;just&nbsp;changing&nbsp;the&nbsp;font&nbsp;or<br>
colour&nbsp;of&nbsp;their&nbsp;common&nbsp;parent,&nbsp;hence&nbsp;in&nbsp;this&nbsp;case&nbsp;we&nbsp;do&nbsp;inherit&nbsp;the<br>
parents&nbsp;attributes.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-InheritsBackgroundColour"><strong>InheritsBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-InheritsBackgroundColour">InheritsBackgroundColour</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-InitDialog"><strong>InitDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-InitDialog">InitDialog</a>(self)<br>
&nbsp;<br>
Sends&nbsp;an&nbsp;EVT_INIT_DIALOG&nbsp;event,&nbsp;whose&nbsp;handler&nbsp;usually&nbsp;transfers&nbsp;data<br>
to&nbsp;the&nbsp;dialog&nbsp;via&nbsp;validators.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-InvalidateBestSize"><strong>InvalidateBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-InvalidateBestSize">InvalidateBestSize</a>(self)<br>
&nbsp;<br>
Reset&nbsp;the&nbsp;cached&nbsp;best&nbsp;size&nbsp;value&nbsp;so&nbsp;it&nbsp;will&nbsp;be&nbsp;recalculated&nbsp;the&nbsp;next<br>
time&nbsp;it&nbsp;is&nbsp;needed.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-IsBeingDeleted"><strong>IsBeingDeleted</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-IsBeingDeleted">IsBeingDeleted</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Is&nbsp;the&nbsp;window&nbsp;in&nbsp;the&nbsp;process&nbsp;of&nbsp;being&nbsp;deleted?</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-IsEnabled"><strong>IsEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-IsEnabled">IsEnabled</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;enabled&nbsp;for&nbsp;input,&nbsp;false&nbsp;otherwise.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-IsExposed"><strong>IsExposed</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-IsExposed">IsExposed</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;w=1,&nbsp;int&nbsp;h=1)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-IsExposedPoint"><strong>IsExposedPoint</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-IsExposedPoint">IsExposedPoint</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-IsExposedRect"><strong>IsExposedRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-IsExposedRect">IsExposedRect</a>(self,&nbsp;Rect&nbsp;rect)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-IsRetained"><strong>IsRetained</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-IsRetained">IsRetained</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;retained,&nbsp;false&nbsp;otherwise.&nbsp;&nbsp;Retained<br>
windows&nbsp;are&nbsp;only&nbsp;available&nbsp;on&nbsp;X&nbsp;platforms.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-IsShown"><strong>IsShown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-IsShown">IsShown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;shown,&nbsp;false&nbsp;if&nbsp;it&nbsp;has&nbsp;been&nbsp;hidden.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-IsTopLevel"><strong>IsTopLevel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-IsTopLevel">IsTopLevel</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;window&nbsp;is&nbsp;a&nbsp;top-level&nbsp;one.&nbsp;Currently&nbsp;all<br>
frames&nbsp;and&nbsp;dialogs&nbsp;are&nbsp;always&nbsp;considered&nbsp;to&nbsp;be&nbsp;top-level&nbsp;windows&nbsp;(even<br>
if&nbsp;they&nbsp;have&nbsp;a&nbsp;parent&nbsp;window).</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Layout"><strong>Layout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Layout">Layout</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Invokes&nbsp;the&nbsp;constraint-based&nbsp;layout&nbsp;algorithm&nbsp;or&nbsp;the&nbsp;sizer-based<br>
algorithm&nbsp;for&nbsp;this&nbsp;window.&nbsp;&nbsp;See&nbsp;SetAutoLayout:&nbsp;when&nbsp;auto&nbsp;layout&nbsp;is&nbsp;on,<br>
this&nbsp;function&nbsp;gets&nbsp;called&nbsp;automatically&nbsp;by&nbsp;the&nbsp;default&nbsp;EVT_SIZE<br>
handler&nbsp;when&nbsp;the&nbsp;window&nbsp;is&nbsp;resized.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-LineDown"><strong>LineDown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-LineDown">LineDown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#SubplotToolWX-ScrollLines">ScrollLines</a>(1).</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-LineUp"><strong>LineUp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-LineUp">LineUp</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#SubplotToolWX-ScrollLines">ScrollLines</a>(-1).</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Lower"><strong>Lower</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Lower">Lower</a>(self)<br>
&nbsp;<br>
Lowers&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;bottom&nbsp;of&nbsp;the&nbsp;window&nbsp;hierarchy.&nbsp;&nbsp;In&nbsp;current<br>
version&nbsp;of&nbsp;wxWidgets&nbsp;this&nbsp;works&nbsp;both&nbsp;for&nbsp;manage&nbsp;and&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-MakeModal"><strong>MakeModal</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-MakeModal">MakeModal</a>(self,&nbsp;bool&nbsp;modal=True)<br>
&nbsp;<br>
Disables&nbsp;all&nbsp;other&nbsp;windows&nbsp;in&nbsp;the&nbsp;application&nbsp;so&nbsp;that&nbsp;the&nbsp;user&nbsp;can<br>
only&nbsp;interact&nbsp;with&nbsp;this&nbsp;window.&nbsp;&nbsp;Passing&nbsp;False&nbsp;will&nbsp;reverse&nbsp;this<br>
effect.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Move"><strong>Move</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Move">Move</a>(self,&nbsp;Point&nbsp;pt,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-MoveAfterInTabOrder"><strong>MoveAfterInTabOrder</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-MoveAfterInTabOrder">MoveAfterInTabOrder</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Moves&nbsp;this&nbsp;window&nbsp;in&nbsp;the&nbsp;tab&nbsp;navigation&nbsp;order&nbsp;after&nbsp;the&nbsp;specified<br>
sibling&nbsp;window.&nbsp;&nbsp;This&nbsp;means&nbsp;that&nbsp;when&nbsp;the&nbsp;user&nbsp;presses&nbsp;the&nbsp;TAB&nbsp;key&nbsp;on<br>
that&nbsp;other&nbsp;window,&nbsp;the&nbsp;focus&nbsp;switches&nbsp;to&nbsp;this&nbsp;window.<br>
&nbsp;<br>
The&nbsp;default&nbsp;tab&nbsp;order&nbsp;is&nbsp;the&nbsp;same&nbsp;as&nbsp;creation&nbsp;order.&nbsp;&nbsp;This&nbsp;function<br>
and&nbsp;`MoveBeforeInTabOrder`&nbsp;allow&nbsp;to&nbsp;change&nbsp;it&nbsp;after&nbsp;creating&nbsp;all&nbsp;the<br>
windows.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-MoveBeforeInTabOrder"><strong>MoveBeforeInTabOrder</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-MoveBeforeInTabOrder">MoveBeforeInTabOrder</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Same&nbsp;as&nbsp;`MoveAfterInTabOrder`&nbsp;except&nbsp;that&nbsp;it&nbsp;inserts&nbsp;this&nbsp;window&nbsp;just<br>
before&nbsp;win&nbsp;instead&nbsp;of&nbsp;putting&nbsp;it&nbsp;right&nbsp;after&nbsp;it.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-MoveXY"><strong>MoveXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-MoveXY">MoveXY</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Navigate"><strong>Navigate</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Navigate">Navigate</a>(self,&nbsp;int&nbsp;flags=NavigationKeyEvent.IsForward)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Does&nbsp;keyboard&nbsp;navigation&nbsp;from&nbsp;this&nbsp;window&nbsp;to&nbsp;another,&nbsp;by&nbsp;sending&nbsp;a<br>
`wx.NavigationKeyEvent`.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-PageDown"><strong>PageDown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-PageDown">PageDown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#SubplotToolWX-ScrollPages">ScrollPages</a>(1).</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-PageUp"><strong>PageUp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-PageUp">PageUp</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#SubplotToolWX-ScrollPages">ScrollPages</a>(-1).</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-PopEventHandler"><strong>PopEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-PopEventHandler">PopEventHandler</a>(self,&nbsp;bool&nbsp;deleteHandler=False)&nbsp;-&gt;&nbsp;EvtHandler<br>
&nbsp;<br>
Removes&nbsp;and&nbsp;returns&nbsp;the&nbsp;top-most&nbsp;event&nbsp;handler&nbsp;on&nbsp;the&nbsp;event&nbsp;handler<br>
stack.&nbsp;&nbsp;If&nbsp;deleteHandler&nbsp;is&nbsp;True&nbsp;then&nbsp;the&nbsp;wx.EvtHandler&nbsp;object&nbsp;will&nbsp;be<br>
destroyed&nbsp;after&nbsp;it&nbsp;is&nbsp;popped.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-PopupMenu"><strong>PopupMenu</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-PopupMenu">PopupMenu</a>(self,&nbsp;Menu&nbsp;menu,&nbsp;Point&nbsp;pos=DefaultPosition)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Pops&nbsp;up&nbsp;the&nbsp;given&nbsp;menu&nbsp;at&nbsp;the&nbsp;specified&nbsp;coordinates,&nbsp;relative&nbsp;to&nbsp;this&nbsp;window,<br>
and&nbsp;returns&nbsp;control&nbsp;when&nbsp;the&nbsp;user&nbsp;has&nbsp;dismissed&nbsp;the&nbsp;menu.&nbsp;If&nbsp;a&nbsp;menu&nbsp;item&nbsp;is<br>
selected,&nbsp;the&nbsp;corresponding&nbsp;menu&nbsp;event&nbsp;is&nbsp;generated&nbsp;and&nbsp;will&nbsp;be&nbsp;processed&nbsp;as<br>
usual.&nbsp;&nbsp;If&nbsp;the&nbsp;default&nbsp;position&nbsp;is&nbsp;given&nbsp;then&nbsp;the&nbsp;current&nbsp;position&nbsp;of&nbsp;the<br>
mouse&nbsp;cursor&nbsp;will&nbsp;be&nbsp;used.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-PopupMenuXY"><strong>PopupMenuXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-PopupMenuXY">PopupMenuXY</a>(self,&nbsp;Menu&nbsp;menu,&nbsp;int&nbsp;x=-1,&nbsp;int&nbsp;y=-1)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Pops&nbsp;up&nbsp;the&nbsp;given&nbsp;menu&nbsp;at&nbsp;the&nbsp;specified&nbsp;coordinates,&nbsp;relative&nbsp;to&nbsp;this&nbsp;window,<br>
and&nbsp;returns&nbsp;control&nbsp;when&nbsp;the&nbsp;user&nbsp;has&nbsp;dismissed&nbsp;the&nbsp;menu.&nbsp;If&nbsp;a&nbsp;menu&nbsp;item&nbsp;is<br>
selected,&nbsp;the&nbsp;corresponding&nbsp;menu&nbsp;event&nbsp;is&nbsp;generated&nbsp;and&nbsp;will&nbsp;be&nbsp;processed&nbsp;as<br>
usual.&nbsp;&nbsp;If&nbsp;the&nbsp;default&nbsp;position&nbsp;is&nbsp;given&nbsp;then&nbsp;the&nbsp;current&nbsp;position&nbsp;of&nbsp;the<br>
mouse&nbsp;cursor&nbsp;will&nbsp;be&nbsp;used.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-PostCreate"><strong>PostCreate</strong></a>(self, pre)</dt><dd><tt>Phase&nbsp;3&nbsp;of&nbsp;the&nbsp;2-phase&nbsp;create&nbsp;&lt;wink!&gt;<br>
Call&nbsp;this&nbsp;method&nbsp;after&nbsp;precreating&nbsp;the&nbsp;window&nbsp;with&nbsp;the&nbsp;2-phase&nbsp;create&nbsp;method.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-PrepareDC"><strong>PrepareDC</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-PrepareDC">PrepareDC</a>(self,&nbsp;DC&nbsp;dc)<br>
&nbsp;<br>
Call&nbsp;this&nbsp;function&nbsp;to&nbsp;prepare&nbsp;the&nbsp;device&nbsp;context&nbsp;for&nbsp;drawing&nbsp;a<br>
scrolled&nbsp;image.&nbsp;It&nbsp;sets&nbsp;the&nbsp;device&nbsp;origin&nbsp;according&nbsp;to&nbsp;the&nbsp;current<br>
scroll&nbsp;position.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-PushEventHandler"><strong>PushEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-PushEventHandler">PushEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)<br>
&nbsp;<br>
Pushes&nbsp;this&nbsp;event&nbsp;handler&nbsp;onto&nbsp;the&nbsp;event&nbsp;handler&nbsp;stack&nbsp;for&nbsp;the&nbsp;window.<br>
An&nbsp;event&nbsp;handler&nbsp;is&nbsp;an&nbsp;object&nbsp;that&nbsp;is&nbsp;capable&nbsp;of&nbsp;processing&nbsp;the&nbsp;events<br>
sent&nbsp;to&nbsp;a&nbsp;window.&nbsp;By&nbsp;default,&nbsp;the&nbsp;window&nbsp;is&nbsp;its&nbsp;own&nbsp;event&nbsp;handler,&nbsp;but<br>
an&nbsp;application&nbsp;may&nbsp;wish&nbsp;to&nbsp;substitute&nbsp;another,&nbsp;for&nbsp;example&nbsp;to&nbsp;allow<br>
central&nbsp;implementation&nbsp;of&nbsp;event-handling&nbsp;for&nbsp;a&nbsp;variety&nbsp;of&nbsp;different<br>
window&nbsp;classes.<br>
&nbsp;<br>
wx.Window.PushEventHandler&nbsp;allows&nbsp;an&nbsp;application&nbsp;to&nbsp;set&nbsp;up&nbsp;a&nbsp;chain&nbsp;of<br>
event&nbsp;handlers,&nbsp;where&nbsp;an&nbsp;event&nbsp;not&nbsp;handled&nbsp;by&nbsp;one&nbsp;event&nbsp;handler&nbsp;is<br>
handed&nbsp;to&nbsp;the&nbsp;next&nbsp;one&nbsp;in&nbsp;the&nbsp;chain.&nbsp;Use&nbsp;`wx.Window.PopEventHandler`&nbsp;to<br>
remove&nbsp;the&nbsp;event&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Raise"><strong>Raise</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Raise">Raise</a>(self)<br>
&nbsp;<br>
Raises&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;top&nbsp;of&nbsp;the&nbsp;window&nbsp;hierarchy.&nbsp;&nbsp;In&nbsp;current<br>
version&nbsp;of&nbsp;wxWidgets&nbsp;this&nbsp;works&nbsp;both&nbsp;for&nbsp;manage&nbsp;and&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Refresh"><strong>Refresh</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Refresh">Refresh</a>(self,&nbsp;bool&nbsp;eraseBackground=True,&nbsp;Rect&nbsp;rect=None)<br>
&nbsp;<br>
Mark&nbsp;the&nbsp;specified&nbsp;rectangle&nbsp;(or&nbsp;the&nbsp;whole&nbsp;window)&nbsp;as&nbsp;"dirty"&nbsp;so&nbsp;it<br>
will&nbsp;be&nbsp;repainted.&nbsp;&nbsp;Causes&nbsp;an&nbsp;EVT_PAINT&nbsp;event&nbsp;to&nbsp;be&nbsp;generated&nbsp;and&nbsp;sent<br>
to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-RefreshRect"><strong>RefreshRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-RefreshRect">RefreshRect</a>(self,&nbsp;Rect&nbsp;rect,&nbsp;bool&nbsp;eraseBackground=True)<br>
&nbsp;<br>
Redraws&nbsp;the&nbsp;contents&nbsp;of&nbsp;the&nbsp;given&nbsp;rectangle:&nbsp;the&nbsp;area&nbsp;inside&nbsp;it&nbsp;will<br>
be&nbsp;repainted.&nbsp;&nbsp;This&nbsp;is&nbsp;the&nbsp;same&nbsp;as&nbsp;Refresh&nbsp;but&nbsp;has&nbsp;a&nbsp;nicer&nbsp;syntax.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-RegisterHotKey"><strong>RegisterHotKey</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-RegisterHotKey">RegisterHotKey</a>(self,&nbsp;int&nbsp;hotkeyId,&nbsp;int&nbsp;modifiers,&nbsp;int&nbsp;keycode)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Registers&nbsp;a&nbsp;system&nbsp;wide&nbsp;hotkey.&nbsp;Every&nbsp;time&nbsp;the&nbsp;user&nbsp;presses&nbsp;the&nbsp;hotkey<br>
registered&nbsp;here,&nbsp;this&nbsp;window&nbsp;will&nbsp;receive&nbsp;a&nbsp;hotkey&nbsp;event.&nbsp;It&nbsp;will<br>
receive&nbsp;the&nbsp;event&nbsp;even&nbsp;if&nbsp;the&nbsp;application&nbsp;is&nbsp;in&nbsp;the&nbsp;background&nbsp;and<br>
does&nbsp;not&nbsp;have&nbsp;the&nbsp;input&nbsp;focus&nbsp;because&nbsp;the&nbsp;user&nbsp;is&nbsp;working&nbsp;with&nbsp;some<br>
other&nbsp;application.&nbsp;&nbsp;To&nbsp;bind&nbsp;an&nbsp;event&nbsp;handler&nbsp;function&nbsp;to&nbsp;this&nbsp;hotkey<br>
use&nbsp;EVT_HOTKEY&nbsp;with&nbsp;an&nbsp;id&nbsp;equal&nbsp;to&nbsp;hotkeyId.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the<br>
hotkey&nbsp;was&nbsp;registered&nbsp;successfully.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-ReleaseMouse"><strong>ReleaseMouse</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-ReleaseMouse">ReleaseMouse</a>(self)<br>
&nbsp;<br>
Releases&nbsp;mouse&nbsp;input&nbsp;captured&nbsp;with&nbsp;wx.Window.CaptureMouse.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-RemoveChild"><strong>RemoveChild</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-RemoveChild">RemoveChild</a>(self,&nbsp;Window&nbsp;child)<br>
&nbsp;<br>
Removes&nbsp;a&nbsp;child&nbsp;window.&nbsp;This&nbsp;is&nbsp;called&nbsp;automatically&nbsp;by&nbsp;window<br>
deletion&nbsp;functions&nbsp;so&nbsp;should&nbsp;not&nbsp;be&nbsp;required&nbsp;by&nbsp;the&nbsp;application<br>
programmer.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-RemoveEventHandler"><strong>RemoveEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-RemoveEventHandler">RemoveEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Find&nbsp;the&nbsp;given&nbsp;handler&nbsp;in&nbsp;the&nbsp;event&nbsp;handler&nbsp;chain&nbsp;and&nbsp;remove&nbsp;(but&nbsp;not<br>
delete)&nbsp;it&nbsp;from&nbsp;the&nbsp;event&nbsp;handler&nbsp;chain,&nbsp;return&nbsp;True&nbsp;if&nbsp;it&nbsp;was&nbsp;found<br>
and&nbsp;False&nbsp;otherwise&nbsp;(this&nbsp;also&nbsp;results&nbsp;in&nbsp;an&nbsp;assert&nbsp;failure&nbsp;so&nbsp;this<br>
function&nbsp;should&nbsp;only&nbsp;be&nbsp;called&nbsp;when&nbsp;the&nbsp;handler&nbsp;is&nbsp;supposed&nbsp;to&nbsp;be<br>
there.)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Reparent"><strong>Reparent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Reparent">Reparent</a>(self,&nbsp;Window&nbsp;newParent)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Reparents&nbsp;the&nbsp;window,&nbsp;i.e&nbsp;the&nbsp;window&nbsp;will&nbsp;be&nbsp;removed&nbsp;from&nbsp;its&nbsp;current<br>
parent&nbsp;window&nbsp;(e.g.&nbsp;a&nbsp;non-standard&nbsp;toolbar&nbsp;in&nbsp;a&nbsp;wxFrame)&nbsp;and&nbsp;then<br>
re-inserted&nbsp;into&nbsp;another.&nbsp;Available&nbsp;on&nbsp;Windows&nbsp;and&nbsp;GTK.&nbsp;&nbsp;Returns&nbsp;True<br>
if&nbsp;the&nbsp;parent&nbsp;was&nbsp;changed,&nbsp;False&nbsp;otherwise&nbsp;(error&nbsp;or&nbsp;newParent&nbsp;==<br>
oldParent)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-ScreenToClient"><strong>ScreenToClient</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-ScreenToClient">ScreenToClient</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;from&nbsp;screen&nbsp;to&nbsp;client&nbsp;window&nbsp;coordinates.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-ScreenToClientXY"><strong>ScreenToClientXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-ScreenToClientXY">ScreenToClientXY</a>(int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Converts&nbsp;from&nbsp;screen&nbsp;to&nbsp;client&nbsp;window&nbsp;coordinates.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-ScrollLines"><strong>ScrollLines</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-ScrollLines">ScrollLines</a>(self,&nbsp;int&nbsp;lines)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
If&nbsp;the&nbsp;platform&nbsp;and&nbsp;window&nbsp;class&nbsp;supports&nbsp;it,&nbsp;scrolls&nbsp;the&nbsp;window&nbsp;by<br>
the&nbsp;given&nbsp;number&nbsp;of&nbsp;lines&nbsp;down,&nbsp;if&nbsp;lines&nbsp;is&nbsp;positive,&nbsp;or&nbsp;up&nbsp;if&nbsp;lines<br>
is&nbsp;negative.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;window&nbsp;was&nbsp;scrolled,&nbsp;False&nbsp;if&nbsp;it&nbsp;was<br>
already&nbsp;on&nbsp;top/bottom&nbsp;and&nbsp;nothing&nbsp;was&nbsp;done.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-ScrollPages"><strong>ScrollPages</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-ScrollPages">ScrollPages</a>(self,&nbsp;int&nbsp;pages)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
If&nbsp;the&nbsp;platform&nbsp;and&nbsp;window&nbsp;class&nbsp;supports&nbsp;it,&nbsp;scrolls&nbsp;the&nbsp;window&nbsp;by<br>
the&nbsp;given&nbsp;number&nbsp;of&nbsp;pages&nbsp;down,&nbsp;if&nbsp;pages&nbsp;is&nbsp;positive,&nbsp;or&nbsp;up&nbsp;if&nbsp;pages<br>
is&nbsp;negative.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;window&nbsp;was&nbsp;scrolled,&nbsp;False&nbsp;if&nbsp;it&nbsp;was<br>
already&nbsp;on&nbsp;top/bottom&nbsp;and&nbsp;nothing&nbsp;was&nbsp;done.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-ScrollWindow"><strong>ScrollWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-ScrollWindow">ScrollWindow</a>(self,&nbsp;int&nbsp;dx,&nbsp;int&nbsp;dy,&nbsp;Rect&nbsp;rect=None)<br>
&nbsp;<br>
Physically&nbsp;scrolls&nbsp;the&nbsp;pixels&nbsp;in&nbsp;the&nbsp;window&nbsp;and&nbsp;move&nbsp;child&nbsp;windows<br>
accordingly.&nbsp;&nbsp;Use&nbsp;this&nbsp;function&nbsp;to&nbsp;optimise&nbsp;your&nbsp;scrolling<br>
implementations,&nbsp;to&nbsp;minimise&nbsp;the&nbsp;area&nbsp;that&nbsp;must&nbsp;be&nbsp;redrawn.&nbsp;Note&nbsp;that<br>
it&nbsp;is&nbsp;rarely&nbsp;required&nbsp;to&nbsp;call&nbsp;this&nbsp;function&nbsp;from&nbsp;a&nbsp;user&nbsp;program.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetAcceleratorTable"><strong>SetAcceleratorTable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetAcceleratorTable">SetAcceleratorTable</a>(self,&nbsp;AcceleratorTable&nbsp;accel)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;accelerator&nbsp;table&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetAutoLayout"><strong>SetAutoLayout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetAutoLayout">SetAutoLayout</a>(self,&nbsp;bool&nbsp;autoLayout)<br>
&nbsp;<br>
Determines&nbsp;whether&nbsp;the&nbsp;Layout&nbsp;function&nbsp;will&nbsp;be&nbsp;called&nbsp;automatically<br>
when&nbsp;the&nbsp;window&nbsp;is&nbsp;resized.&nbsp;&nbsp;It&nbsp;is&nbsp;called&nbsp;implicitly&nbsp;by&nbsp;SetSizer&nbsp;but<br>
if&nbsp;you&nbsp;use&nbsp;SetConstraints&nbsp;you&nbsp;should&nbsp;call&nbsp;it&nbsp;manually&nbsp;or&nbsp;otherwise&nbsp;the<br>
window&nbsp;layout&nbsp;won't&nbsp;be&nbsp;correctly&nbsp;updated&nbsp;when&nbsp;its&nbsp;size&nbsp;changes.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetBackgroundColour"><strong>SetBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetBackgroundColour">SetBackgroundColour</a>(self,&nbsp;Colour&nbsp;colour)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;background&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;colour<br>
was&nbsp;changed.&nbsp;&nbsp;The&nbsp;background&nbsp;colour&nbsp;is&nbsp;usually&nbsp;painted&nbsp;by&nbsp;the&nbsp;default<br>
EVT_ERASE_BACKGROUND&nbsp;event&nbsp;handler&nbsp;function&nbsp;under&nbsp;Windows&nbsp;and<br>
automatically&nbsp;under&nbsp;GTK.&nbsp;&nbsp;Using&nbsp;`wx.NullColour`&nbsp;will&nbsp;reset&nbsp;the&nbsp;window<br>
to&nbsp;the&nbsp;default&nbsp;background&nbsp;colour.<br>
&nbsp;<br>
Note&nbsp;that&nbsp;setting&nbsp;the&nbsp;background&nbsp;colour&nbsp;may&nbsp;not&nbsp;cause&nbsp;an&nbsp;immediate<br>
refresh,&nbsp;so&nbsp;you&nbsp;may&nbsp;wish&nbsp;to&nbsp;call&nbsp;`ClearBackground`&nbsp;or&nbsp;`Refresh`&nbsp;after<br>
calling&nbsp;this&nbsp;function.<br>
&nbsp;<br>
Using&nbsp;this&nbsp;function&nbsp;will&nbsp;disable&nbsp;attempts&nbsp;to&nbsp;use&nbsp;themes&nbsp;for&nbsp;this<br>
window,&nbsp;if&nbsp;the&nbsp;system&nbsp;supports&nbsp;them.&nbsp;&nbsp;Use&nbsp;with&nbsp;care&nbsp;since&nbsp;usually&nbsp;the<br>
themes&nbsp;represent&nbsp;the&nbsp;appearance&nbsp;chosen&nbsp;by&nbsp;the&nbsp;user&nbsp;to&nbsp;be&nbsp;used&nbsp;for&nbsp;all<br>
applications&nbsp;on&nbsp;the&nbsp;system.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetBackgroundStyle"><strong>SetBackgroundStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetBackgroundStyle">SetBackgroundStyle</a>(self,&nbsp;int&nbsp;style)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;The&nbsp;background&nbsp;style<br>
indicates&nbsp;how&nbsp;the&nbsp;background&nbsp;of&nbsp;the&nbsp;window&nbsp;is&nbsp;drawn.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;======================&nbsp;&nbsp;========================================<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_SYSTEM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;colour&nbsp;or&nbsp;pattern&nbsp;should<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;be&nbsp;determined&nbsp;by&nbsp;the&nbsp;system<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_COLOUR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;should&nbsp;be&nbsp;a&nbsp;solid&nbsp;colour<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_CUSTOM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;will&nbsp;be&nbsp;implemented&nbsp;by&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;application.<br>
&nbsp;&nbsp;&nbsp;&nbsp;======================&nbsp;&nbsp;========================================<br>
&nbsp;<br>
On&nbsp;GTK+,&nbsp;use&nbsp;of&nbsp;wx.BG_STYLE_CUSTOM&nbsp;allows&nbsp;the&nbsp;flicker-free&nbsp;drawing&nbsp;of<br>
a&nbsp;custom&nbsp;background,&nbsp;such&nbsp;as&nbsp;a&nbsp;tiled&nbsp;bitmap.&nbsp;Currently&nbsp;the&nbsp;style&nbsp;has<br>
no&nbsp;effect&nbsp;on&nbsp;other&nbsp;platforms.<br>
&nbsp;<br>
:see:&nbsp;`GetBackgroundStyle`,&nbsp;`SetBackgroundColour`</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetBestFittingSize"><strong>SetBestFittingSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetBestFittingSize">SetBestFittingSize</a>(self,&nbsp;Size&nbsp;size=DefaultSize)<br>
&nbsp;<br>
A&nbsp;'Smart'&nbsp;SetSize&nbsp;that&nbsp;will&nbsp;fill&nbsp;in&nbsp;default&nbsp;size&nbsp;components&nbsp;with&nbsp;the<br>
window's&nbsp;*best&nbsp;size*&nbsp;values.&nbsp;&nbsp;Also&nbsp;set's&nbsp;the&nbsp;minsize&nbsp;for&nbsp;use&nbsp;with&nbsp;sizers.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetCaret"><strong>SetCaret</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetCaret">SetCaret</a>(self,&nbsp;Caret&nbsp;caret)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;caret&nbsp;associated&nbsp;with&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetClientRect"><strong>SetClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetClientRect">SetClientRect</a>(self,&nbsp;Rect&nbsp;rect)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetClientSize"><strong>SetClientSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetClientSize">SetClientSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetClientSizeWH"><strong>SetClientSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetClientSizeWH">SetClientSizeWH</a>(self,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetConstraints"><strong>SetConstraints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetConstraints">SetConstraints</a>(self,&nbsp;LayoutConstraints&nbsp;constraints)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window&nbsp;to&nbsp;have&nbsp;the&nbsp;given&nbsp;layout&nbsp;constraints.&nbsp;If&nbsp;an&nbsp;existing<br>
layout&nbsp;constraints&nbsp;object&nbsp;is&nbsp;already&nbsp;owned&nbsp;by&nbsp;the&nbsp;window,&nbsp;it&nbsp;will&nbsp;be<br>
deleted.&nbsp;&nbsp;Pass&nbsp;None&nbsp;to&nbsp;disassociate&nbsp;and&nbsp;delete&nbsp;the&nbsp;window's&nbsp;current<br>
constraints.<br>
&nbsp;<br>
You&nbsp;must&nbsp;call&nbsp;SetAutoLayout&nbsp;to&nbsp;tell&nbsp;a&nbsp;window&nbsp;to&nbsp;use&nbsp;the&nbsp;constraints<br>
automatically&nbsp;in&nbsp;its&nbsp;default&nbsp;EVT_SIZE&nbsp;handler;&nbsp;otherwise,&nbsp;you&nbsp;must<br>
handle&nbsp;EVT_SIZE&nbsp;yourself&nbsp;and&nbsp;call&nbsp;<a href="#SubplotToolWX-Layout">Layout</a>()&nbsp;explicitly.&nbsp;When&nbsp;setting<br>
both&nbsp;a&nbsp;wx.LayoutConstraints&nbsp;and&nbsp;a&nbsp;wx.Sizer,&nbsp;only&nbsp;the&nbsp;sizer&nbsp;will&nbsp;have<br>
effect.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetContainingSizer"><strong>SetContainingSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetContainingSizer">SetContainingSizer</a>(self,&nbsp;Sizer&nbsp;sizer)<br>
&nbsp;<br>
This&nbsp;normally&nbsp;does&nbsp;not&nbsp;need&nbsp;to&nbsp;be&nbsp;called&nbsp;by&nbsp;application&nbsp;code.&nbsp;It&nbsp;is<br>
called&nbsp;internally&nbsp;when&nbsp;a&nbsp;window&nbsp;is&nbsp;added&nbsp;to&nbsp;a&nbsp;sizer,&nbsp;and&nbsp;is&nbsp;used&nbsp;so<br>
the&nbsp;window&nbsp;can&nbsp;remove&nbsp;itself&nbsp;from&nbsp;the&nbsp;sizer&nbsp;when&nbsp;it&nbsp;is&nbsp;destroyed.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetCursor"><strong>SetCursor</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetCursor">SetCursor</a>(self,&nbsp;Cursor&nbsp;cursor)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;cursor.&nbsp;Notice&nbsp;that&nbsp;the&nbsp;window&nbsp;cursor&nbsp;also&nbsp;sets&nbsp;it<br>
for&nbsp;the&nbsp;children&nbsp;of&nbsp;the&nbsp;window&nbsp;implicitly.<br>
&nbsp;<br>
The&nbsp;cursor&nbsp;may&nbsp;be&nbsp;wx.NullCursor&nbsp;in&nbsp;which&nbsp;case&nbsp;the&nbsp;window&nbsp;cursor&nbsp;will<br>
be&nbsp;reset&nbsp;back&nbsp;to&nbsp;default.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetDefaultItem"><strong>SetDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetDefaultItem">SetDefaultItem</a>(self,&nbsp;Window&nbsp;child)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Set&nbsp;this&nbsp;child&nbsp;as&nbsp;default,&nbsp;return&nbsp;the&nbsp;old&nbsp;default.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetDimensions"><strong>SetDimensions</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetDimensions">SetDimensions</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height,&nbsp;int&nbsp;sizeFlags=SIZE_AUTO)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;and&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;The&nbsp;sizeFlags<br>
parameter&nbsp;indicates&nbsp;the&nbsp;interpretation&nbsp;of&nbsp;the&nbsp;other&nbsp;params&nbsp;if&nbsp;they&nbsp;are<br>
equal&nbsp;to&nbsp;-1.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;========================&nbsp;&nbsp;======================================<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.SIZE_AUTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;-1&nbsp;indicates&nbsp;that&nbsp;a&nbsp;class-specific<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;should&nbsp;be&nbsp;used.<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.SIZE_USE_EXISTING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Axisting&nbsp;dimensions&nbsp;should&nbsp;be&nbsp;used&nbsp;if<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;values&nbsp;are&nbsp;supplied.<br>
&nbsp;&nbsp;&nbsp;&nbsp;wxSIZE_ALLOW_MINUS_ONE&nbsp;&nbsp;&nbsp;&nbsp;Allow&nbsp;dimensions&nbsp;of&nbsp;-1&nbsp;and&nbsp;less&nbsp;to&nbsp;be<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interpreted&nbsp;as&nbsp;real&nbsp;dimensions,&nbsp;not<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;values.<br>
&nbsp;&nbsp;&nbsp;&nbsp;========================&nbsp;&nbsp;======================================</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetDropTarget"><strong>SetDropTarget</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetDropTarget">SetDropTarget</a>(self,&nbsp;DropTarget&nbsp;dropTarget)<br>
&nbsp;<br>
Associates&nbsp;a&nbsp;drop&nbsp;target&nbsp;with&nbsp;this&nbsp;window.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;already&nbsp;has<br>
a&nbsp;drop&nbsp;target,&nbsp;it&nbsp;is&nbsp;deleted.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetEventHandler"><strong>SetEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetEventHandler">SetEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;event&nbsp;handler&nbsp;for&nbsp;this&nbsp;window.&nbsp;&nbsp;An&nbsp;event&nbsp;handler&nbsp;is&nbsp;an&nbsp;object<br>
that&nbsp;is&nbsp;capable&nbsp;of&nbsp;processing&nbsp;the&nbsp;events&nbsp;sent&nbsp;to&nbsp;a&nbsp;window.&nbsp;By&nbsp;default,<br>
the&nbsp;window&nbsp;is&nbsp;its&nbsp;own&nbsp;event&nbsp;handler,&nbsp;but&nbsp;an&nbsp;application&nbsp;may&nbsp;wish&nbsp;to<br>
substitute&nbsp;another,&nbsp;for&nbsp;example&nbsp;to&nbsp;allow&nbsp;central&nbsp;implementation&nbsp;of<br>
event-handling&nbsp;for&nbsp;a&nbsp;variety&nbsp;of&nbsp;different&nbsp;window&nbsp;classes.<br>
&nbsp;<br>
It&nbsp;is&nbsp;usually&nbsp;better&nbsp;to&nbsp;use&nbsp;`wx.Window.PushEventHandler`&nbsp;since&nbsp;this&nbsp;sets<br>
up&nbsp;a&nbsp;chain&nbsp;of&nbsp;event&nbsp;handlers,&nbsp;where&nbsp;an&nbsp;event&nbsp;not&nbsp;handled&nbsp;by&nbsp;one&nbsp;event<br>
handler&nbsp;is&nbsp;handed&nbsp;to&nbsp;the&nbsp;next&nbsp;one&nbsp;in&nbsp;the&nbsp;chain.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetExtraStyle"><strong>SetExtraStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetExtraStyle">SetExtraStyle</a>(self,&nbsp;long&nbsp;exStyle)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;extra&nbsp;style&nbsp;bits&nbsp;for&nbsp;the&nbsp;window.&nbsp;&nbsp;Extra&nbsp;styles&nbsp;are&nbsp;the&nbsp;less<br>
often&nbsp;used&nbsp;style&nbsp;bits&nbsp;which&nbsp;can't&nbsp;be&nbsp;set&nbsp;with&nbsp;the&nbsp;constructor&nbsp;or&nbsp;with<br>
<a href="#SubplotToolWX-SetWindowStyleFlag">SetWindowStyleFlag</a>()</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetFocus"><strong>SetFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetFocus">SetFocus</a>(self)<br>
&nbsp;<br>
Set's&nbsp;the&nbsp;focus&nbsp;to&nbsp;this&nbsp;window,&nbsp;allowing&nbsp;it&nbsp;to&nbsp;receive&nbsp;keyboard&nbsp;input.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetFocusFromKbd"><strong>SetFocusFromKbd</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetFocusFromKbd">SetFocusFromKbd</a>(self)<br>
&nbsp;<br>
Set&nbsp;focus&nbsp;to&nbsp;this&nbsp;window&nbsp;as&nbsp;the&nbsp;result&nbsp;of&nbsp;a&nbsp;keyboard&nbsp;action.&nbsp;&nbsp;Normally<br>
only&nbsp;called&nbsp;internally.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetFont"><strong>SetFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetFont">SetFont</a>(self,&nbsp;Font&nbsp;font)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;font&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetForegroundColour"><strong>SetForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetForegroundColour">SetForegroundColour</a>(self,&nbsp;Colour&nbsp;colour)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;foreground&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Returns&nbsp;True&nbsp;is&nbsp;the&nbsp;colour<br>
was&nbsp;changed.&nbsp;&nbsp;The&nbsp;interpretation&nbsp;of&nbsp;foreground&nbsp;colour&nbsp;is&nbsp;dependent&nbsp;on<br>
the&nbsp;window&nbsp;class;&nbsp;it&nbsp;may&nbsp;be&nbsp;the&nbsp;text&nbsp;colour&nbsp;or&nbsp;other&nbsp;colour,&nbsp;or&nbsp;it&nbsp;may<br>
not&nbsp;be&nbsp;used&nbsp;at&nbsp;all.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetHelpText"><strong>SetHelpText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetHelpText">SetHelpText</a>(self,&nbsp;String&nbsp;text)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;help&nbsp;text&nbsp;to&nbsp;be&nbsp;used&nbsp;as&nbsp;context-sensitive&nbsp;help&nbsp;for&nbsp;this<br>
window.&nbsp;&nbsp;Note&nbsp;that&nbsp;the&nbsp;text&nbsp;is&nbsp;actually&nbsp;stored&nbsp;by&nbsp;the&nbsp;current<br>
wxHelpProvider&nbsp;implementation,&nbsp;and&nbsp;not&nbsp;in&nbsp;the&nbsp;window&nbsp;object&nbsp;itself.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetHelpTextForId"><strong>SetHelpTextForId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetHelpTextForId">SetHelpTextForId</a>(self,&nbsp;String&nbsp;text)<br>
&nbsp;<br>
Associate&nbsp;this&nbsp;help&nbsp;text&nbsp;with&nbsp;all&nbsp;windows&nbsp;with&nbsp;the&nbsp;same&nbsp;id&nbsp;as&nbsp;this<br>
one.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetId"><strong>SetId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetId">SetId</a>(self,&nbsp;int&nbsp;winid)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;identifier&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Each&nbsp;window&nbsp;has&nbsp;an&nbsp;integer<br>
identifier.&nbsp;If&nbsp;the&nbsp;application&nbsp;has&nbsp;not&nbsp;provided&nbsp;one,&nbsp;an&nbsp;identifier<br>
will&nbsp;be&nbsp;generated.&nbsp;Normally,&nbsp;the&nbsp;identifier&nbsp;should&nbsp;be&nbsp;provided&nbsp;on<br>
creation&nbsp;and&nbsp;should&nbsp;not&nbsp;be&nbsp;modified&nbsp;subsequently.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetLabel"><strong>SetLabel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetLabel">SetLabel</a>(self,&nbsp;String&nbsp;label)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;text&nbsp;which&nbsp;the&nbsp;window&nbsp;shows&nbsp;in&nbsp;its&nbsp;label&nbsp;if&nbsp;applicable.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetMaxSize"><strong>SetMaxSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetMaxSize">SetMaxSize</a>(self,&nbsp;Size&nbsp;maxSize)<br>
&nbsp;<br>
A&nbsp;more&nbsp;convenient&nbsp;method&nbsp;than&nbsp;`SetSizeHints`&nbsp;for&nbsp;setting&nbsp;just&nbsp;the<br>
max&nbsp;size.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetMinSize"><strong>SetMinSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetMinSize">SetMinSize</a>(self,&nbsp;Size&nbsp;minSize)<br>
&nbsp;<br>
A&nbsp;more&nbsp;convenient&nbsp;method&nbsp;than&nbsp;`SetSizeHints`&nbsp;for&nbsp;setting&nbsp;just&nbsp;the<br>
min&nbsp;size.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetName"><strong>SetName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetName">SetName</a>(self,&nbsp;String&nbsp;name)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;name.&nbsp;&nbsp;The&nbsp;window&nbsp;name&nbsp;is&nbsp;used&nbsp;for&nbsp;ressource&nbsp;setting<br>
in&nbsp;X,&nbsp;it&nbsp;is&nbsp;not&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;window&nbsp;title/label</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetOwnBackgroundColour"><strong>SetOwnBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetOwnBackgroundColour">SetOwnBackgroundColour</a>(self,&nbsp;Colour&nbsp;colour)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetOwnFont"><strong>SetOwnFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetOwnFont">SetOwnFont</a>(self,&nbsp;Font&nbsp;font)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetOwnForegroundColour"><strong>SetOwnForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetOwnForegroundColour">SetOwnForegroundColour</a>(self,&nbsp;Colour&nbsp;colour)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetPosition"><strong>SetPosition</strong></a> = Move(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Move">Move</a>(self,&nbsp;Point&nbsp;pt,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetRect"><strong>SetRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetRect">SetRect</a>(self,&nbsp;Rect&nbsp;rect,&nbsp;int&nbsp;sizeFlags=SIZE_AUTO)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;and&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels&nbsp;using&nbsp;a&nbsp;wx.Rect.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetScrollPos"><strong>SetScrollPos</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetScrollPos">SetScrollPos</a>(self,&nbsp;int&nbsp;orientation,&nbsp;int&nbsp;pos,&nbsp;bool&nbsp;refresh=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;of&nbsp;one&nbsp;of&nbsp;the&nbsp;built-in&nbsp;scrollbars.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetScrollbar"><strong>SetScrollbar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetScrollbar">SetScrollbar</a>(self,&nbsp;int&nbsp;orientation,&nbsp;int&nbsp;position,&nbsp;int&nbsp;thumbSize,&nbsp;int&nbsp;range,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;refresh=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;scrollbar&nbsp;properties&nbsp;of&nbsp;a&nbsp;built-in&nbsp;scrollbar.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetSize"><strong>SetSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetSize">SetSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetSizeHints"><strong>SetSizeHints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetSizeHints">SetSizeHints</a>(self,&nbsp;int&nbsp;minW,&nbsp;int&nbsp;minH,&nbsp;int&nbsp;maxW=-1,&nbsp;int&nbsp;maxH=-1,&nbsp;int&nbsp;incW=-1,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;incH=-1)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;window&nbsp;sizes,&nbsp;and&nbsp;window<br>
size&nbsp;increments.&nbsp;If&nbsp;a&nbsp;pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the<br>
default&nbsp;values&nbsp;will&nbsp;be&nbsp;used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user<br>
will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds&nbsp;(if&nbsp;it&nbsp;is<br>
a&nbsp;top-level&nbsp;window.)&nbsp;&nbsp;Sizers&nbsp;will&nbsp;also&nbsp;inspect&nbsp;the&nbsp;minimum&nbsp;window&nbsp;size<br>
and&nbsp;will&nbsp;use&nbsp;that&nbsp;value&nbsp;if&nbsp;set&nbsp;when&nbsp;calculating&nbsp;layout.<br>
&nbsp;<br>
The&nbsp;resizing&nbsp;increments&nbsp;are&nbsp;only&nbsp;significant&nbsp;under&nbsp;Motif&nbsp;or&nbsp;Xt.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetSizeHintsSz"><strong>SetSizeHintsSz</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetSizeHintsSz">SetSizeHintsSz</a>(self,&nbsp;Size&nbsp;minSize,&nbsp;Size&nbsp;maxSize=DefaultSize,&nbsp;Size&nbsp;incSize=DefaultSize)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;window&nbsp;sizes,&nbsp;and&nbsp;window<br>
size&nbsp;increments.&nbsp;If&nbsp;a&nbsp;pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the<br>
default&nbsp;values&nbsp;will&nbsp;be&nbsp;used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user<br>
will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds&nbsp;(if&nbsp;it&nbsp;is<br>
a&nbsp;top-level&nbsp;window.)&nbsp;&nbsp;Sizers&nbsp;will&nbsp;also&nbsp;inspect&nbsp;the&nbsp;minimum&nbsp;window&nbsp;size<br>
and&nbsp;will&nbsp;use&nbsp;that&nbsp;value&nbsp;if&nbsp;set&nbsp;when&nbsp;calculating&nbsp;layout.<br>
&nbsp;<br>
The&nbsp;resizing&nbsp;increments&nbsp;are&nbsp;only&nbsp;significant&nbsp;under&nbsp;Motif&nbsp;or&nbsp;Xt.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetSizeWH"><strong>SetSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetSizeWH">SetSizeWH</a>(self,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetSizer"><strong>SetSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetSizer">SetSizer</a>(self,&nbsp;Sizer&nbsp;sizer,&nbsp;bool&nbsp;deleteOld=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window&nbsp;to&nbsp;have&nbsp;the&nbsp;given&nbsp;layout&nbsp;sizer.&nbsp;The&nbsp;window&nbsp;will&nbsp;then<br>
own&nbsp;the&nbsp;object,&nbsp;and&nbsp;will&nbsp;take&nbsp;care&nbsp;of&nbsp;its&nbsp;deletion.&nbsp;If&nbsp;an&nbsp;existing<br>
layout&nbsp;sizer&nbsp;object&nbsp;is&nbsp;already&nbsp;owned&nbsp;by&nbsp;the&nbsp;window,&nbsp;it&nbsp;will&nbsp;be&nbsp;deleted<br>
if&nbsp;the&nbsp;deleteOld&nbsp;parameter&nbsp;is&nbsp;true.&nbsp;Note&nbsp;that&nbsp;this&nbsp;function&nbsp;will&nbsp;also<br>
call&nbsp;SetAutoLayout&nbsp;implicitly&nbsp;with&nbsp;a&nbsp;True&nbsp;parameter&nbsp;if&nbsp;the&nbsp;sizer&nbsp;is<br>
non-None,&nbsp;and&nbsp;False&nbsp;otherwise.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetSizerAndFit"><strong>SetSizerAndFit</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetSizerAndFit">SetSizerAndFit</a>(self,&nbsp;Sizer&nbsp;sizer,&nbsp;bool&nbsp;deleteOld=True)<br>
&nbsp;<br>
The&nbsp;same&nbsp;as&nbsp;SetSizer,&nbsp;except&nbsp;it&nbsp;also&nbsp;sets&nbsp;the&nbsp;size&nbsp;hints&nbsp;for&nbsp;the<br>
window&nbsp;based&nbsp;on&nbsp;the&nbsp;sizer's&nbsp;minimum&nbsp;size.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetThemeEnabled"><strong>SetThemeEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetThemeEnabled">SetThemeEnabled</a>(self,&nbsp;bool&nbsp;enableTheme)<br>
&nbsp;<br>
This&nbsp;function&nbsp;tells&nbsp;a&nbsp;window&nbsp;if&nbsp;it&nbsp;should&nbsp;use&nbsp;the&nbsp;system's&nbsp;"theme"<br>
&nbsp;code&nbsp;to&nbsp;draw&nbsp;the&nbsp;windows'&nbsp;background&nbsp;instead&nbsp;if&nbsp;its&nbsp;own&nbsp;background<br>
&nbsp;drawing&nbsp;code.&nbsp;This&nbsp;will&nbsp;only&nbsp;have&nbsp;an&nbsp;effect&nbsp;on&nbsp;platforms&nbsp;that&nbsp;support<br>
&nbsp;the&nbsp;notion&nbsp;of&nbsp;themes&nbsp;in&nbsp;user&nbsp;defined&nbsp;windows.&nbsp;One&nbsp;such&nbsp;platform&nbsp;is<br>
&nbsp;GTK+&nbsp;where&nbsp;windows&nbsp;can&nbsp;have&nbsp;(very&nbsp;colourful)&nbsp;backgrounds&nbsp;defined&nbsp;by&nbsp;a<br>
&nbsp;user's&nbsp;selected&nbsp;theme.<br>
&nbsp;<br>
Dialogs,&nbsp;notebook&nbsp;pages&nbsp;and&nbsp;the&nbsp;status&nbsp;bar&nbsp;have&nbsp;this&nbsp;flag&nbsp;set&nbsp;to&nbsp;true<br>
by&nbsp;default&nbsp;so&nbsp;that&nbsp;the&nbsp;default&nbsp;look&nbsp;and&nbsp;feel&nbsp;is&nbsp;simulated&nbsp;best.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetTmpDefaultItem"><strong>SetTmpDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetTmpDefaultItem">SetTmpDefaultItem</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Set&nbsp;this&nbsp;child&nbsp;as&nbsp;temporary&nbsp;default</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetToolTip"><strong>SetToolTip</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetToolTip">SetToolTip</a>(self,&nbsp;ToolTip&nbsp;tip)<br>
&nbsp;<br>
Attach&nbsp;a&nbsp;tooltip&nbsp;to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetToolTipString"><strong>SetToolTipString</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetToolTipString">SetToolTipString</a>(self,&nbsp;String&nbsp;tip)<br>
&nbsp;<br>
Attach&nbsp;a&nbsp;tooltip&nbsp;to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetValidator"><strong>SetValidator</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetValidator">SetValidator</a>(self,&nbsp;Validator&nbsp;validator)<br>
&nbsp;<br>
Deletes&nbsp;the&nbsp;current&nbsp;validator&nbsp;(if&nbsp;any)&nbsp;and&nbsp;sets&nbsp;the&nbsp;window&nbsp;validator,<br>
having&nbsp;called&nbsp;wx.Validator.Clone&nbsp;to&nbsp;create&nbsp;a&nbsp;new&nbsp;validator&nbsp;of&nbsp;this<br>
type.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetVirtualSize"><strong>SetVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetVirtualSize">SetVirtualSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;a&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows&nbsp;this<br>
is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetVirtualSizeHints"><strong>SetVirtualSizeHints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetVirtualSizeHints">SetVirtualSizeHints</a>(self,&nbsp;int&nbsp;minW,&nbsp;int&nbsp;minH,&nbsp;int&nbsp;maxW=-1,&nbsp;int&nbsp;maxH=-1)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;virtual&nbsp;window&nbsp;sizes.&nbsp;If&nbsp;a<br>
pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the&nbsp;default&nbsp;values&nbsp;will&nbsp;be<br>
used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user&nbsp;will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size<br>
the&nbsp;virtual&nbsp;area&nbsp;of&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetVirtualSizeHintsSz"><strong>SetVirtualSizeHintsSz</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetVirtualSizeHintsSz">SetVirtualSizeHintsSz</a>(self,&nbsp;Size&nbsp;minSize,&nbsp;Size&nbsp;maxSize=DefaultSize)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;virtual&nbsp;window&nbsp;sizes.&nbsp;If&nbsp;a<br>
pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the&nbsp;default&nbsp;values&nbsp;will&nbsp;be<br>
used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user&nbsp;will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size<br>
the&nbsp;virtual&nbsp;area&nbsp;of&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetVirtualSizeWH"><strong>SetVirtualSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetVirtualSizeWH">SetVirtualSizeWH</a>(self,&nbsp;int&nbsp;w,&nbsp;int&nbsp;h)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;a&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows&nbsp;this<br>
is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetWindowStyle"><strong>SetWindowStyle</strong></a> = SetWindowStyleFlag(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetWindowStyleFlag">SetWindowStyleFlag</a>(self,&nbsp;long&nbsp;style)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;Please&nbsp;note&nbsp;that&nbsp;some&nbsp;styles&nbsp;cannot&nbsp;be<br>
changed&nbsp;after&nbsp;the&nbsp;window&nbsp;creation&nbsp;and&nbsp;that&nbsp;<a href="#SubplotToolWX-Refresh">Refresh</a>()&nbsp;might&nbsp;need&nbsp;to&nbsp;be<br>
called&nbsp;after&nbsp;changing&nbsp;the&nbsp;others&nbsp;for&nbsp;the&nbsp;change&nbsp;to&nbsp;take&nbsp;place<br>
immediately.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetWindowStyleFlag"><strong>SetWindowStyleFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetWindowStyleFlag">SetWindowStyleFlag</a>(self,&nbsp;long&nbsp;style)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;Please&nbsp;note&nbsp;that&nbsp;some&nbsp;styles&nbsp;cannot&nbsp;be<br>
changed&nbsp;after&nbsp;the&nbsp;window&nbsp;creation&nbsp;and&nbsp;that&nbsp;<a href="#SubplotToolWX-Refresh">Refresh</a>()&nbsp;might&nbsp;need&nbsp;to&nbsp;be<br>
called&nbsp;after&nbsp;changing&nbsp;the&nbsp;others&nbsp;for&nbsp;the&nbsp;change&nbsp;to&nbsp;take&nbsp;place<br>
immediately.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetWindowVariant"><strong>SetWindowVariant</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetWindowVariant">SetWindowVariant</a>(self,&nbsp;int&nbsp;variant)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;variant&nbsp;of&nbsp;the&nbsp;window/font&nbsp;size&nbsp;to&nbsp;use&nbsp;for&nbsp;this&nbsp;window,&nbsp;if<br>
the&nbsp;platform&nbsp;supports&nbsp;variants,&nbsp;for&nbsp;example,&nbsp;wxMac.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-ShouldInheritColours"><strong>ShouldInheritColours</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-ShouldInheritColours">ShouldInheritColours</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Return&nbsp;true&nbsp;from&nbsp;here&nbsp;to&nbsp;allow&nbsp;the&nbsp;colours&nbsp;of&nbsp;this&nbsp;window&nbsp;to&nbsp;be<br>
changed&nbsp;by&nbsp;InheritAttributes,&nbsp;returning&nbsp;false&nbsp;forbids&nbsp;inheriting&nbsp;them<br>
from&nbsp;the&nbsp;parent&nbsp;window.<br>
&nbsp;<br>
The&nbsp;base&nbsp;class&nbsp;version&nbsp;returns&nbsp;false,&nbsp;but&nbsp;this&nbsp;method&nbsp;is&nbsp;overridden&nbsp;in<br>
wxControl&nbsp;where&nbsp;it&nbsp;returns&nbsp;true.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Show"><strong>Show</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Show">Show</a>(self,&nbsp;bool&nbsp;show=True)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Shows&nbsp;or&nbsp;hides&nbsp;the&nbsp;window.&nbsp;You&nbsp;may&nbsp;need&nbsp;to&nbsp;call&nbsp;Raise&nbsp;for&nbsp;a&nbsp;top&nbsp;level<br>
window&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;bring&nbsp;it&nbsp;to&nbsp;top,&nbsp;although&nbsp;this&nbsp;is&nbsp;not&nbsp;needed&nbsp;if<br>
Show&nbsp;is&nbsp;called&nbsp;immediately&nbsp;after&nbsp;the&nbsp;frame&nbsp;creation.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if<br>
the&nbsp;window&nbsp;has&nbsp;been&nbsp;shown&nbsp;or&nbsp;hidden&nbsp;or&nbsp;False&nbsp;if&nbsp;nothing&nbsp;was&nbsp;done<br>
because&nbsp;it&nbsp;already&nbsp;was&nbsp;in&nbsp;the&nbsp;requested&nbsp;state.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Thaw"><strong>Thaw</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Thaw">Thaw</a>(self)<br>
&nbsp;<br>
Reenables&nbsp;window&nbsp;updating&nbsp;after&nbsp;a&nbsp;previous&nbsp;call&nbsp;to&nbsp;Freeze.&nbsp;&nbsp;Calls&nbsp;to<br>
Freeze/Thaw&nbsp;may&nbsp;be&nbsp;nested,&nbsp;so&nbsp;Thaw&nbsp;must&nbsp;be&nbsp;called&nbsp;the&nbsp;same&nbsp;number&nbsp;of<br>
times&nbsp;that&nbsp;Freeze&nbsp;was&nbsp;before&nbsp;the&nbsp;window&nbsp;will&nbsp;be&nbsp;updated.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-TransferDataFromWindow"><strong>TransferDataFromWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-TransferDataFromWindow">TransferDataFromWindow</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Transfers&nbsp;values&nbsp;from&nbsp;child&nbsp;controls&nbsp;to&nbsp;data&nbsp;areas&nbsp;specified&nbsp;by&nbsp;their<br>
validators.&nbsp;Returns&nbsp;false&nbsp;if&nbsp;a&nbsp;transfer&nbsp;failed.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has<br>
wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra&nbsp;style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will<br>
also&nbsp;call&nbsp;<a href="#SubplotToolWX-TransferDataFromWindow">TransferDataFromWindow</a>()&nbsp;of&nbsp;all&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-TransferDataToWindow"><strong>TransferDataToWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-TransferDataToWindow">TransferDataToWindow</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Transfers&nbsp;values&nbsp;to&nbsp;child&nbsp;controls&nbsp;from&nbsp;data&nbsp;areas&nbsp;specified&nbsp;by&nbsp;their<br>
validators.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has&nbsp;wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra<br>
style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will&nbsp;also&nbsp;call&nbsp;<a href="#SubplotToolWX-TransferDataToWindow">TransferDataToWindow</a>()&nbsp;of<br>
all&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-UnregisterHotKey"><strong>UnregisterHotKey</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-UnregisterHotKey">UnregisterHotKey</a>(self,&nbsp;int&nbsp;hotkeyId)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Unregisters&nbsp;a&nbsp;system&nbsp;wide&nbsp;hotkey.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Update"><strong>Update</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Update">Update</a>(self)<br>
&nbsp;<br>
Calling&nbsp;this&nbsp;method&nbsp;immediately&nbsp;repaints&nbsp;the&nbsp;invalidated&nbsp;area&nbsp;of&nbsp;the<br>
window&nbsp;instead&nbsp;of&nbsp;waiting&nbsp;for&nbsp;the&nbsp;EVT_PAINT&nbsp;event&nbsp;to&nbsp;happen,&nbsp;(normally<br>
this&nbsp;would&nbsp;usually&nbsp;only&nbsp;happen&nbsp;when&nbsp;the&nbsp;flow&nbsp;of&nbsp;control&nbsp;returns&nbsp;to&nbsp;the<br>
event&nbsp;loop.)&nbsp;&nbsp;Notice&nbsp;that&nbsp;this&nbsp;function&nbsp;doesn't&nbsp;refresh&nbsp;the&nbsp;window&nbsp;and<br>
does&nbsp;nothing&nbsp;if&nbsp;the&nbsp;window&nbsp;has&nbsp;been&nbsp;already&nbsp;repainted.&nbsp;&nbsp;Use&nbsp;Refresh<br>
first&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;immediately&nbsp;redraw&nbsp;the&nbsp;window&nbsp;(or&nbsp;some&nbsp;portion&nbsp;of<br>
it)&nbsp;unconditionally.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-UpdateWindowUI"><strong>UpdateWindowUI</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-UpdateWindowUI">UpdateWindowUI</a>(self,&nbsp;long&nbsp;flags=UPDATE_UI_NONE)<br>
&nbsp;<br>
This&nbsp;function&nbsp;sends&nbsp;EVT_UPDATE_UI&nbsp;events&nbsp;to&nbsp;the&nbsp;window.&nbsp;The&nbsp;particular<br>
implementation&nbsp;depends&nbsp;on&nbsp;the&nbsp;window;&nbsp;for&nbsp;example&nbsp;a&nbsp;wx.<a href="wx._controls.html#ToolBar">ToolBar</a>&nbsp;will<br>
send&nbsp;an&nbsp;update&nbsp;UI&nbsp;event&nbsp;for&nbsp;each&nbsp;toolbar&nbsp;button,&nbsp;and&nbsp;a&nbsp;wx.<a href="wx._windows.html#Frame">Frame</a>&nbsp;will<br>
send&nbsp;an&nbsp;update&nbsp;UI&nbsp;event&nbsp;for&nbsp;each&nbsp;menubar&nbsp;menu&nbsp;item.&nbsp;You&nbsp;can&nbsp;call&nbsp;this<br>
function&nbsp;from&nbsp;your&nbsp;application&nbsp;to&nbsp;ensure&nbsp;that&nbsp;your&nbsp;UI&nbsp;is&nbsp;up-to-date&nbsp;at<br>
a&nbsp;particular&nbsp;point&nbsp;in&nbsp;time&nbsp;(as&nbsp;far&nbsp;as&nbsp;your&nbsp;EVT_UPDATE_UI&nbsp;handlers&nbsp;are<br>
concerned).&nbsp;This&nbsp;may&nbsp;be&nbsp;necessary&nbsp;if&nbsp;you&nbsp;have&nbsp;called<br>
`wx.UpdateUIEvent.SetMode`&nbsp;or&nbsp;`wx.UpdateUIEvent.SetUpdateInterval`&nbsp;to<br>
limit&nbsp;the&nbsp;overhead&nbsp;that&nbsp;wxWindows&nbsp;incurs&nbsp;by&nbsp;sending&nbsp;update&nbsp;UI&nbsp;events<br>
in&nbsp;idle&nbsp;time.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-UseBgCol"><strong>UseBgCol</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-UseBgCol">UseBgCol</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Validate"><strong>Validate</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Validate">Validate</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Validates&nbsp;the&nbsp;current&nbsp;values&nbsp;of&nbsp;the&nbsp;child&nbsp;controls&nbsp;using&nbsp;their<br>
validators.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has&nbsp;wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra<br>
style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will&nbsp;also&nbsp;call&nbsp;<a href="#SubplotToolWX-Validate">Validate</a>()&nbsp;of&nbsp;all&nbsp;child<br>
windows.&nbsp;&nbsp;Returns&nbsp;false&nbsp;if&nbsp;any&nbsp;of&nbsp;the&nbsp;validations&nbsp;failed.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-WarpPointer"><strong>WarpPointer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-WarpPointer">WarpPointer</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;pointer&nbsp;to&nbsp;the&nbsp;given&nbsp;position&nbsp;on&nbsp;the&nbsp;window.<br>
&nbsp;<br>
NOTE:&nbsp;This&nbsp;function&nbsp;is&nbsp;not&nbsp;supported&nbsp;under&nbsp;Mac&nbsp;because&nbsp;Apple&nbsp;Human<br>
Interface&nbsp;Guidelines&nbsp;forbid&nbsp;moving&nbsp;the&nbsp;mouse&nbsp;cursor&nbsp;programmatically.</tt></dd></dl>

<hr>
Static methods inherited from <a href="wx._core.html#Window">wx._core.Window</a>:<br>
<dl><dt><a name="SubplotToolWX-FindFocus"><strong>FindFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-FindFocus">FindFocus</a>()&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;window&nbsp;or&nbsp;control&nbsp;that&nbsp;currently&nbsp;has&nbsp;the&nbsp;keyboard&nbsp;focus,<br>
or&nbsp;None.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetCapture"><strong>GetCapture</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetCapture">GetCapture</a>()&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;window&nbsp;which&nbsp;currently&nbsp;captures&nbsp;the&nbsp;mouse&nbsp;or&nbsp;None</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-NewControlId"><strong>NewControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-NewControlId">NewControlId</a>()&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Generate&nbsp;a&nbsp;control&nbsp;id&nbsp;for&nbsp;the&nbsp;controls&nbsp;which&nbsp;were&nbsp;not&nbsp;given&nbsp;one.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-NextControlId"><strong>NextControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-NextControlId">NextControlId</a>(int&nbsp;winid)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;id&nbsp;of&nbsp;the&nbsp;control&nbsp;following&nbsp;the&nbsp;one&nbsp;with&nbsp;the&nbsp;given<br>
autogenerated)&nbsp;id</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-PrevControlId"><strong>PrevControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-PrevControlId">PrevControlId</a>(int&nbsp;winid)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;id&nbsp;of&nbsp;the&nbsp;control&nbsp;preceding&nbsp;the&nbsp;one&nbsp;with&nbsp;the&nbsp;given<br>
autogenerated)&nbsp;id</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#EvtHandler">wx._core.EvtHandler</a>:<br>
<dl><dt><a name="SubplotToolWX-AddPendingEvent"><strong>AddPendingEvent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-AddPendingEvent">AddPendingEvent</a>(self,&nbsp;Event&nbsp;event)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Bind"><strong>Bind</strong></a>(self, event, handler, source<font color="#909090">=None</font>, id<font color="#909090">=-1</font>, id2<font color="#909090">=-1</font>)</dt><dd><tt>Bind&nbsp;an&nbsp;event&nbsp;to&nbsp;an&nbsp;event&nbsp;handler.<br>
&nbsp;<br>
:param&nbsp;event:&nbsp;One&nbsp;of&nbsp;the&nbsp;EVT_*&nbsp;objects&nbsp;that&nbsp;specifies&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type&nbsp;of&nbsp;event&nbsp;to&nbsp;bind,<br>
&nbsp;<br>
:param&nbsp;handler:&nbsp;A&nbsp;callable&nbsp;object&nbsp;to&nbsp;be&nbsp;invoked&nbsp;when&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event&nbsp;is&nbsp;delivered&nbsp;to&nbsp;self.&nbsp;&nbsp;Pass&nbsp;None&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;disconnect&nbsp;an&nbsp;event&nbsp;handler.<br>
&nbsp;<br>
:param&nbsp;source:&nbsp;Sometimes&nbsp;the&nbsp;event&nbsp;originates&nbsp;from&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;different&nbsp;window&nbsp;than&nbsp;self,&nbsp;but&nbsp;you&nbsp;still<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;want&nbsp;to&nbsp;catch&nbsp;it&nbsp;in&nbsp;self.&nbsp;&nbsp;(For&nbsp;example,&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button&nbsp;event&nbsp;delivered&nbsp;to&nbsp;a&nbsp;frame.)&nbsp;&nbsp;By<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;passing&nbsp;the&nbsp;source&nbsp;of&nbsp;the&nbsp;event,&nbsp;the&nbsp;event<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handling&nbsp;system&nbsp;is&nbsp;able&nbsp;to&nbsp;differentiate<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;between&nbsp;the&nbsp;same&nbsp;event&nbsp;type&nbsp;from&nbsp;different<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controls.<br>
&nbsp;<br>
:param&nbsp;id:&nbsp;Used&nbsp;to&nbsp;spcify&nbsp;the&nbsp;event&nbsp;source&nbsp;by&nbsp;ID&nbsp;instead<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;instance.<br>
&nbsp;<br>
:param&nbsp;id2:&nbsp;Used&nbsp;when&nbsp;it&nbsp;is&nbsp;desirable&nbsp;to&nbsp;bind&nbsp;a&nbsp;handler<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;a&nbsp;range&nbsp;of&nbsp;IDs,&nbsp;such&nbsp;as&nbsp;with&nbsp;EVT_MENU_RANGE.</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Connect"><strong>Connect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Connect">Connect</a>(self,&nbsp;int&nbsp;id,&nbsp;int&nbsp;lastId,&nbsp;int&nbsp;eventType,&nbsp;PyObject&nbsp;func)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Disconnect"><strong>Disconnect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-Disconnect">Disconnect</a>(self,&nbsp;int&nbsp;id,&nbsp;int&nbsp;lastId=-1,&nbsp;wxEventType&nbsp;eventType=wxEVT_NULL)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetEvtHandlerEnabled"><strong>GetEvtHandlerEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetEvtHandlerEnabled">GetEvtHandlerEnabled</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetNextHandler"><strong>GetNextHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetNextHandler">GetNextHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-GetPreviousHandler"><strong>GetPreviousHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetPreviousHandler">GetPreviousHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-ProcessEvent"><strong>ProcessEvent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-ProcessEvent">ProcessEvent</a>(self,&nbsp;Event&nbsp;event)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-ProcessPendingEvents"><strong>ProcessPendingEvents</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-ProcessPendingEvents">ProcessPendingEvents</a>(self)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetEvtHandlerEnabled"><strong>SetEvtHandlerEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetEvtHandlerEnabled">SetEvtHandlerEnabled</a>(self,&nbsp;bool&nbsp;enabled)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetNextHandler"><strong>SetNextHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetNextHandler">SetNextHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-SetPreviousHandler"><strong>SetPreviousHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-SetPreviousHandler">SetPreviousHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)</tt></dd></dl>

<dl><dt><a name="SubplotToolWX-Unbind"><strong>Unbind</strong></a>(self, event, source<font color="#909090">=None</font>, id<font color="#909090">=-1</font>, id2<font color="#909090">=-1</font>)</dt><dd><tt>Disconencts&nbsp;the&nbsp;event&nbsp;handler&nbsp;binding&nbsp;for&nbsp;event&nbsp;from&nbsp;self.<br>
Returns&nbsp;True&nbsp;if&nbsp;successful.</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#Object">wx._core.Object</a>:<br>
<dl><dt><a name="SubplotToolWX-GetClassName"><strong>GetClassName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#SubplotToolWX-GetClassName">GetClassName</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;class&nbsp;name&nbsp;of&nbsp;the&nbsp;C++&nbsp;class&nbsp;using&nbsp;wxRTTI.</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="wx._core.html#Object">wx._core.Object</a>:<br>
<dl><dt><strong>__dict__</strong> = &lt;dictproxy object&gt;<dd><tt>dictionary&nbsp;for&nbsp;instance&nbsp;variables&nbsp;(if&nbsp;defined)</tt></dl>

<dl><dt><strong>__weakref__</strong> = &lt;attribute '__weakref__' of 'Object' objects&gt;<dd><tt>list&nbsp;of&nbsp;weak&nbsp;references&nbsp;to&nbsp;the&nbsp;object&nbsp;(if&nbsp;defined)</tt></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><strong>Toolbar</strong> = <a name="Toolbar">class NavigationToolbarWx</a>(<a href="wx._controls.html#ToolBar">wx._controls.ToolBar</a>)</font></td></tr>
    
<tr><td bgcolor="#ffc8d8"><tt>&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.backends.backend_wx.html#NavigationToolbarWx">NavigationToolbarWx</a></dd>
<dd><a href="wx._controls.html#ToolBar">wx._controls.ToolBar</a></dd>
<dd><a href="wx._controls.html#ToolBarBase">wx._controls.ToolBarBase</a></dd>
<dd><a href="wx._core.html#Control">wx._core.Control</a></dd>
<dd><a href="wx._core.html#Window">wx._core.Window</a></dd>
<dd><a href="wx._core.html#EvtHandler">wx._core.EvtHandler</a></dd>
<dd><a href="wx._core.html#Object">wx._core.Object</a></dd>
<dd><a href="__builtin__.html#object">__builtin__.object</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="NavigationToolbarWx-__init__"><strong>__init__</strong></a>(self, canvas, can_kill<font color="#909090">=False</font>)</dt><dd><tt>figure&nbsp;is&nbsp;the&nbsp;Figure&nbsp;instance&nbsp;that&nbsp;the&nbsp;toolboar&nbsp;controls<br>
&nbsp;<br>
win,&nbsp;if&nbsp;not&nbsp;None,&nbsp;is&nbsp;the&nbsp;wxWindow&nbsp;the&nbsp;Figure&nbsp;is&nbsp;embedded&nbsp;in</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-get_last_control"><strong>get_last_control</strong></a>(self)</dt><dd><tt>Returns&nbsp;the&nbsp;identity&nbsp;of&nbsp;the&nbsp;last&nbsp;toolbar&nbsp;button&nbsp;pressed.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-panx"><strong>panx</strong></a>(self, direction)</dt></dl>

<dl><dt><a name="NavigationToolbarWx-pany"><strong>pany</strong></a>(self, direction)</dt></dl>

<dl><dt><a name="NavigationToolbarWx-set_active"><strong>set_active</strong></a>(self, ind)</dt><dd><tt>ind&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;index&nbsp;numbers&nbsp;for&nbsp;the&nbsp;axes&nbsp;which&nbsp;are&nbsp;to&nbsp;be&nbsp;made&nbsp;active</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-update"><strong>update</strong></a>(self)</dt><dd><tt>Update&nbsp;the&nbsp;toolbar&nbsp;menu&nbsp;-&nbsp;called&nbsp;when&nbsp;(e.g.)&nbsp;a&nbsp;new&nbsp;subplot&nbsp;or&nbsp;axes&nbsp;are&nbsp;added</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-zoomx"><strong>zoomx</strong></a>(self, in_out)</dt></dl>

<dl><dt><a name="NavigationToolbarWx-zoomy"><strong>zoomy</strong></a>(self, in_out)</dt></dl>

<hr>
Methods inherited from <a href="wx._controls.html#ToolBar">wx._controls.ToolBar</a>:<br>
<dl><dt><a name="NavigationToolbarWx-Create"><strong>Create</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Create">Create</a>(self,&nbsp;Window&nbsp;parent,&nbsp;int&nbsp;id=-1,&nbsp;Point&nbsp;pos=DefaultPosition,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Size&nbsp;size=DefaultSize,&nbsp;long&nbsp;style=wxNO_BORDER|wxTB_HORIZONTAL,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;name=wxPyToolBarNameStr)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-FindToolForPosition"><strong>FindToolForPosition</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-FindToolForPosition">FindToolForPosition</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-__repr__"><strong>__repr__</strong></a>(self)</dt></dl>

<hr>
Static methods inherited from <a href="wx._controls.html#ToolBar">wx._controls.ToolBar</a>:<br>
<dl><dt><a name="NavigationToolbarWx-GetClassDefaultAttributes"><strong>GetClassDefaultAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetClassDefaultAttributes">GetClassDefaultAttributes</a>(int&nbsp;variant=WINDOW_VARIANT_NORMAL)&nbsp;-&gt;&nbsp;VisualAttributes<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;attributes&nbsp;for&nbsp;this&nbsp;class.&nbsp;&nbsp;This&nbsp;is&nbsp;useful&nbsp;if&nbsp;you&nbsp;want<br>
to&nbsp;use&nbsp;the&nbsp;same&nbsp;font&nbsp;or&nbsp;colour&nbsp;in&nbsp;your&nbsp;own&nbsp;control&nbsp;as&nbsp;in&nbsp;a&nbsp;standard<br>
control&nbsp;--&nbsp;which&nbsp;is&nbsp;a&nbsp;much&nbsp;better&nbsp;idea&nbsp;than&nbsp;hard&nbsp;coding&nbsp;specific<br>
colours&nbsp;or&nbsp;fonts&nbsp;which&nbsp;might&nbsp;look&nbsp;completely&nbsp;out&nbsp;of&nbsp;place&nbsp;on&nbsp;the<br>
user's&nbsp;system,&nbsp;especially&nbsp;if&nbsp;it&nbsp;uses&nbsp;themes.<br>
&nbsp;<br>
The&nbsp;variant&nbsp;parameter&nbsp;is&nbsp;only&nbsp;relevant&nbsp;under&nbsp;Mac&nbsp;currently&nbsp;and&nbsp;is<br>
ignore&nbsp;under&nbsp;other&nbsp;platforms.&nbsp;Under&nbsp;Mac,&nbsp;it&nbsp;will&nbsp;change&nbsp;the&nbsp;size&nbsp;of<br>
the&nbsp;returned&nbsp;font.&nbsp;See&nbsp;`wx.Window.SetWindowVariant`&nbsp;for&nbsp;more&nbsp;about<br>
this.</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._controls.html#ToolBarBase">wx._controls.ToolBarBase</a>:<br>
<dl><dt><a name="NavigationToolbarWx-AddCheckLabelTool"><strong>AddCheckLabelTool</strong></a>(self, id, label, bitmap, bmpDisabled<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, shortHelp<font color="#909090">=''</font>, longHelp<font color="#909090">=''</font>, clientData<font color="#909090">=None</font>)</dt><dd><tt>Add&nbsp;a&nbsp;check&nbsp;tool,&nbsp;i.e.&nbsp;a&nbsp;tool&nbsp;which&nbsp;can&nbsp;be&nbsp;toggled</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AddCheckTool"><strong>AddCheckTool</strong></a>(self, id, bitmap, bmpDisabled<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, shortHelp<font color="#909090">=''</font>, longHelp<font color="#909090">=''</font>, clientData<font color="#909090">=None</font>)</dt><dd><tt>Add&nbsp;a&nbsp;check&nbsp;tool,&nbsp;i.e.&nbsp;a&nbsp;tool&nbsp;which&nbsp;can&nbsp;be&nbsp;toggled</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AddControl"><strong>AddControl</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-AddControl">AddControl</a>(self,&nbsp;Control&nbsp;control)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AddLabelTool"><strong>AddLabelTool</strong></a>(self, id, label, bitmap, bmpDisabled<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, kind<font color="#909090">=0</font>, shortHelp<font color="#909090">=''</font>, longHelp<font color="#909090">=''</font>, clientData<font color="#909090">=None</font>)</dt><dd><tt>The&nbsp;full&nbsp;<a href="#Toolbar-AddTool">AddTool</a>()&nbsp;function.<br>
&nbsp;<br>
If&nbsp;bmpDisabled&nbsp;is&nbsp;wx.NullBitmap,&nbsp;a&nbsp;shadowed&nbsp;version&nbsp;of&nbsp;the&nbsp;normal&nbsp;bitmap<br>
is&nbsp;created&nbsp;and&nbsp;used&nbsp;as&nbsp;the&nbsp;disabled&nbsp;image.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AddRadioLabelTool"><strong>AddRadioLabelTool</strong></a>(self, id, label, bitmap, bmpDisabled<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, shortHelp<font color="#909090">=''</font>, longHelp<font color="#909090">=''</font>, clientData<font color="#909090">=None</font>)</dt><dd><tt>Add&nbsp;a&nbsp;radio&nbsp;tool,&nbsp;i.e.&nbsp;a&nbsp;tool&nbsp;which&nbsp;can&nbsp;be&nbsp;toggled&nbsp;and&nbsp;releases&nbsp;any<br>
other&nbsp;toggled&nbsp;radio&nbsp;tools&nbsp;in&nbsp;the&nbsp;same&nbsp;group&nbsp;when&nbsp;it&nbsp;happens</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AddRadioTool"><strong>AddRadioTool</strong></a>(self, id, bitmap, bmpDisabled<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, shortHelp<font color="#909090">=''</font>, longHelp<font color="#909090">=''</font>, clientData<font color="#909090">=None</font>)</dt><dd><tt>Add&nbsp;a&nbsp;radio&nbsp;tool,&nbsp;i.e.&nbsp;a&nbsp;tool&nbsp;which&nbsp;can&nbsp;be&nbsp;toggled&nbsp;and&nbsp;releases&nbsp;any<br>
other&nbsp;toggled&nbsp;radio&nbsp;tools&nbsp;in&nbsp;the&nbsp;same&nbsp;group&nbsp;when&nbsp;it&nbsp;happens</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AddSeparator"><strong>AddSeparator</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-AddSeparator">AddSeparator</a>(self)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AddSimpleTool"><strong>AddSimpleTool</strong></a>(self, id, bitmap, shortHelpString<font color="#909090">=''</font>, longHelpString<font color="#909090">=''</font>, isToggle<font color="#909090">=0</font>)</dt><dd><tt>Old&nbsp;style&nbsp;method&nbsp;to&nbsp;add&nbsp;a&nbsp;tool&nbsp;to&nbsp;the&nbsp;toolbar.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AddTool"><strong>AddTool</strong></a>(self, id, bitmap, pushedBitmap<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, isToggle<font color="#909090">=0</font>, clientData<font color="#909090">=None</font>, shortHelpString<font color="#909090">=''</font>, longHelpString<font color="#909090">=''</font>)</dt><dd><tt>Old&nbsp;style&nbsp;method&nbsp;to&nbsp;add&nbsp;a&nbsp;tool&nbsp;to&nbsp;the&nbsp;toolbar.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AddToolItem"><strong>AddToolItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-AddToolItem">AddToolItem</a>(self,&nbsp;ToolBarToolBase&nbsp;tool)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ClearTools"><strong>ClearTools</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-ClearTools">ClearTools</a>(self)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-DeleteTool"><strong>DeleteTool</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-DeleteTool">DeleteTool</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-DeleteToolByPos"><strong>DeleteToolByPos</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-DeleteToolByPos">DeleteToolByPos</a>(self,&nbsp;size_t&nbsp;pos)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-DoAddTool"><strong>DoAddTool</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-DoAddTool">DoAddTool</a>(self,&nbsp;int&nbsp;id,&nbsp;String&nbsp;label,&nbsp;Bitmap&nbsp;bitmap,&nbsp;Bitmap&nbsp;bmpDisabled=wxNullBitmap,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;kind=ITEM_NORMAL,&nbsp;String&nbsp;shortHelp=EmptyString,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;longHelp=EmptyString,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;PyObject&nbsp;clientData=None)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-DoInsertTool"><strong>DoInsertTool</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-DoInsertTool">DoInsertTool</a>(self,&nbsp;size_t&nbsp;pos,&nbsp;int&nbsp;id,&nbsp;String&nbsp;label,&nbsp;Bitmap&nbsp;bitmap,&nbsp;Bitmap&nbsp;bmpDisabled=wxNullBitmap,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;kind=ITEM_NORMAL,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;shortHelp=EmptyString,&nbsp;String&nbsp;longHelp=EmptyString,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;PyObject&nbsp;clientData=None)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-EnableTool"><strong>EnableTool</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-EnableTool">EnableTool</a>(self,&nbsp;int&nbsp;id,&nbsp;bool&nbsp;enable)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-FindById"><strong>FindById</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-FindById">FindById</a>(self,&nbsp;int&nbsp;toolid)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-FindControl"><strong>FindControl</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-FindControl">FindControl</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;Control</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetMargins"><strong>GetMargins</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetMargins">GetMargins</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetMaxCols"><strong>GetMaxCols</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetMaxCols">GetMaxCols</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetMaxRows"><strong>GetMaxRows</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetMaxRows">GetMaxRows</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolBitmapSize"><strong>GetToolBitmapSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetToolBitmapSize">GetToolBitmapSize</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolClientData"><strong>GetToolClientData</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetToolClientData">GetToolClientData</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;PyObject</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolEnabled"><strong>GetToolEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetToolEnabled">GetToolEnabled</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolLongHelp"><strong>GetToolLongHelp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetToolLongHelp">GetToolLongHelp</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;String</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolMargins"><strong>GetToolMargins</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetToolMargins">GetToolMargins</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolPacking"><strong>GetToolPacking</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetToolPacking">GetToolPacking</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolPos"><strong>GetToolPos</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetToolPos">GetToolPos</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolSeparation"><strong>GetToolSeparation</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetToolSeparation">GetToolSeparation</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolShortHelp"><strong>GetToolShortHelp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetToolShortHelp">GetToolShortHelp</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;String</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolSize"><strong>GetToolSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetToolSize">GetToolSize</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolState"><strong>GetToolState</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetToolState">GetToolState</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolsCount"><strong>GetToolsCount</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetToolsCount">GetToolsCount</a>(self)&nbsp;-&gt;&nbsp;size_t</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-InsertControl"><strong>InsertControl</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-InsertControl">InsertControl</a>(self,&nbsp;size_t&nbsp;pos,&nbsp;Control&nbsp;control)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-InsertLabelTool"><strong>InsertLabelTool</strong></a>(self, pos, id, label, bitmap, bmpDisabled<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, kind<font color="#909090">=0</font>, shortHelp<font color="#909090">=''</font>, longHelp<font color="#909090">=''</font>, clientData<font color="#909090">=None</font>)</dt><dd><tt>Insert&nbsp;the&nbsp;new&nbsp;tool&nbsp;at&nbsp;the&nbsp;given&nbsp;position,&nbsp;if&nbsp;pos&nbsp;==&nbsp;<a href="#Toolbar-GetToolsCount">GetToolsCount</a>(),&nbsp;it<br>
is&nbsp;equivalent&nbsp;to&nbsp;<a href="#Toolbar-AddTool">AddTool</a>()</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-InsertSeparator"><strong>InsertSeparator</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-InsertSeparator">InsertSeparator</a>(self,&nbsp;size_t&nbsp;pos)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-InsertSimpleTool"><strong>InsertSimpleTool</strong></a>(self, pos, id, bitmap, shortHelpString<font color="#909090">=''</font>, longHelpString<font color="#909090">=''</font>, isToggle<font color="#909090">=0</font>)</dt><dd><tt>Old&nbsp;style&nbsp;method&nbsp;to&nbsp;insert&nbsp;a&nbsp;tool&nbsp;in&nbsp;the&nbsp;toolbar.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-InsertTool"><strong>InsertTool</strong></a>(self, pos, id, bitmap, pushedBitmap<font color="#909090">=wxPython wrapper for UNBORN object! (The C++ object is not initialized yet.)</font>, isToggle<font color="#909090">=0</font>, clientData<font color="#909090">=None</font>, shortHelpString<font color="#909090">=''</font>, longHelpString<font color="#909090">=''</font>)</dt><dd><tt>Old&nbsp;style&nbsp;method&nbsp;to&nbsp;insert&nbsp;a&nbsp;tool&nbsp;in&nbsp;the&nbsp;toolbar.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-InsertToolItem"><strong>InsertToolItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-InsertToolItem">InsertToolItem</a>(self,&nbsp;size_t&nbsp;pos,&nbsp;ToolBarToolBase&nbsp;tool)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-IsVertical"><strong>IsVertical</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-IsVertical">IsVertical</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Realize"><strong>Realize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Realize">Realize</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-RemoveTool"><strong>RemoveTool</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-RemoveTool">RemoveTool</a>(self,&nbsp;int&nbsp;id)&nbsp;-&gt;&nbsp;ToolBarToolBase</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetMargins"><strong>SetMargins</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetMargins">SetMargins</a>(self,&nbsp;Size&nbsp;size)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetMarginsXY"><strong>SetMarginsXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetMarginsXY">SetMarginsXY</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetMaxRowsCols"><strong>SetMaxRowsCols</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetMaxRowsCols">SetMaxRowsCols</a>(self,&nbsp;int&nbsp;rows,&nbsp;int&nbsp;cols)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetRows"><strong>SetRows</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetRows">SetRows</a>(self,&nbsp;int&nbsp;nRows)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetToggle"><strong>SetToggle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetToggle">SetToggle</a>(self,&nbsp;int&nbsp;id,&nbsp;bool&nbsp;toggle)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetToolBitmapSize"><strong>SetToolBitmapSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetToolBitmapSize">SetToolBitmapSize</a>(self,&nbsp;Size&nbsp;size)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetToolClientData"><strong>SetToolClientData</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetToolClientData">SetToolClientData</a>(self,&nbsp;int&nbsp;id,&nbsp;PyObject&nbsp;clientData)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetToolLongHelp"><strong>SetToolLongHelp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetToolLongHelp">SetToolLongHelp</a>(self,&nbsp;int&nbsp;id,&nbsp;String&nbsp;helpString)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetToolPacking"><strong>SetToolPacking</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetToolPacking">SetToolPacking</a>(self,&nbsp;int&nbsp;packing)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetToolSeparation"><strong>SetToolSeparation</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetToolSeparation">SetToolSeparation</a>(self,&nbsp;int&nbsp;separation)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetToolShortHelp"><strong>SetToolShortHelp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetToolShortHelp">SetToolShortHelp</a>(self,&nbsp;int&nbsp;id,&nbsp;String&nbsp;helpString)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ToggleTool"><strong>ToggleTool</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-ToggleTool">ToggleTool</a>(self,&nbsp;int&nbsp;id,&nbsp;bool&nbsp;toggle)</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#Control">wx._core.Control</a>:<br>
<dl><dt><a name="NavigationToolbarWx-Command"><strong>Command</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Command">Command</a>(self,&nbsp;CommandEvent&nbsp;event)<br>
&nbsp;<br>
Simulates&nbsp;the&nbsp;effect&nbsp;of&nbsp;the&nbsp;user&nbsp;issuing&nbsp;a&nbsp;command&nbsp;to&nbsp;the&nbsp;item.<br>
&nbsp;<br>
:see:&nbsp;`wx.CommandEvent`</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetLabel"><strong>GetLabel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetLabel">GetLabel</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Return&nbsp;a&nbsp;control's&nbsp;text.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetLabel"><strong>SetLabel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetLabel">SetLabel</a>(self,&nbsp;String&nbsp;label)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;item's&nbsp;text.</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#Window">wx._core.Window</a>:<br>
<dl><dt><a name="NavigationToolbarWx-AcceptsFocus"><strong>AcceptsFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-AcceptsFocus">AcceptsFocus</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Can&nbsp;this&nbsp;window&nbsp;have&nbsp;focus?</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AcceptsFocusFromKeyboard"><strong>AcceptsFocusFromKeyboard</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-AcceptsFocusFromKeyboard">AcceptsFocusFromKeyboard</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Can&nbsp;this&nbsp;window&nbsp;be&nbsp;given&nbsp;focus&nbsp;by&nbsp;keyboard&nbsp;navigation?&nbsp;if&nbsp;not,&nbsp;the<br>
only&nbsp;way&nbsp;to&nbsp;give&nbsp;it&nbsp;focus&nbsp;(provided&nbsp;it&nbsp;accepts&nbsp;it&nbsp;at&nbsp;all)&nbsp;is&nbsp;to&nbsp;click<br>
it.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AddChild"><strong>AddChild</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-AddChild">AddChild</a>(self,&nbsp;Window&nbsp;child)<br>
&nbsp;<br>
Adds&nbsp;a&nbsp;child&nbsp;window.&nbsp;This&nbsp;is&nbsp;called&nbsp;automatically&nbsp;by&nbsp;window&nbsp;creation<br>
functions&nbsp;so&nbsp;should&nbsp;not&nbsp;be&nbsp;required&nbsp;by&nbsp;the&nbsp;application&nbsp;programmer.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-AssociateHandle"><strong>AssociateHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-AssociateHandle">AssociateHandle</a>(self,&nbsp;long&nbsp;handle)<br>
&nbsp;<br>
Associate&nbsp;the&nbsp;window&nbsp;with&nbsp;a&nbsp;new&nbsp;native&nbsp;handle</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-CacheBestSize"><strong>CacheBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-CacheBestSize">CacheBestSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Cache&nbsp;the&nbsp;best&nbsp;size&nbsp;so&nbsp;it&nbsp;doesn't&nbsp;need&nbsp;to&nbsp;be&nbsp;calculated&nbsp;again,&nbsp;(at&nbsp;least&nbsp;until<br>
some&nbsp;properties&nbsp;of&nbsp;the&nbsp;window&nbsp;change.)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-CaptureMouse"><strong>CaptureMouse</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-CaptureMouse">CaptureMouse</a>(self)<br>
&nbsp;<br>
Directs&nbsp;all&nbsp;mouse&nbsp;input&nbsp;to&nbsp;this&nbsp;window.&nbsp;Call&nbsp;wx.Window.ReleaseMouse&nbsp;to<br>
release&nbsp;the&nbsp;capture.<br>
&nbsp;<br>
Note&nbsp;that&nbsp;wxWindows&nbsp;maintains&nbsp;the&nbsp;stack&nbsp;of&nbsp;windows&nbsp;having&nbsp;captured&nbsp;the<br>
mouse&nbsp;and&nbsp;when&nbsp;the&nbsp;mouse&nbsp;is&nbsp;released&nbsp;the&nbsp;capture&nbsp;returns&nbsp;to&nbsp;the&nbsp;window<br>
which&nbsp;had&nbsp;had&nbsp;captured&nbsp;it&nbsp;previously&nbsp;and&nbsp;it&nbsp;is&nbsp;only&nbsp;really&nbsp;released&nbsp;if<br>
there&nbsp;were&nbsp;no&nbsp;previous&nbsp;window.&nbsp;In&nbsp;particular,&nbsp;this&nbsp;means&nbsp;that&nbsp;you&nbsp;must<br>
release&nbsp;the&nbsp;mouse&nbsp;as&nbsp;many&nbsp;times&nbsp;as&nbsp;you&nbsp;capture&nbsp;it.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Center"><strong>Center</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Center">Center</a>(self,&nbsp;int&nbsp;direction=BOTH)<br>
&nbsp;<br>
Centers&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;parameter&nbsp;specifies&nbsp;the&nbsp;direction&nbsp;for<br>
cetering,&nbsp;and&nbsp;may&nbsp;be&nbsp;wx.HORIZONTAL,&nbsp;wx.VERTICAL&nbsp;or&nbsp;wx.BOTH.&nbsp;It&nbsp;may<br>
also&nbsp;include&nbsp;wx.CENTER_ON_SCREEN&nbsp;flag&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;center&nbsp;the&nbsp;window<br>
on&nbsp;the&nbsp;entire&nbsp;screen&nbsp;and&nbsp;not&nbsp;on&nbsp;its&nbsp;parent&nbsp;window.&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a<br>
top-level&nbsp;window&nbsp;and&nbsp;has&nbsp;no&nbsp;parent&nbsp;then&nbsp;it&nbsp;will&nbsp;always&nbsp;be&nbsp;centered<br>
relative&nbsp;to&nbsp;the&nbsp;screen.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-CenterOnParent"><strong>CenterOnParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-CenterOnParent">CenterOnParent</a>(self,&nbsp;int&nbsp;dir=BOTH)<br>
&nbsp;<br>
Center&nbsp;with&nbsp;respect&nbsp;to&nbsp;the&nbsp;the&nbsp;parent&nbsp;window</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-CenterOnScreen"><strong>CenterOnScreen</strong></a> = deprecatedWrapper(*args, **kwargs)</dt><dd><tt>&lt;function&nbsp;CenterOnScreen&nbsp;at&nbsp;0x2b90d8dbcf50&gt;&nbsp;is&nbsp;deprecated</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Centre"><strong>Centre</strong></a> = Center(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Center">Center</a>(self,&nbsp;int&nbsp;direction=BOTH)<br>
&nbsp;<br>
Centers&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;parameter&nbsp;specifies&nbsp;the&nbsp;direction&nbsp;for<br>
cetering,&nbsp;and&nbsp;may&nbsp;be&nbsp;wx.HORIZONTAL,&nbsp;wx.VERTICAL&nbsp;or&nbsp;wx.BOTH.&nbsp;It&nbsp;may<br>
also&nbsp;include&nbsp;wx.CENTER_ON_SCREEN&nbsp;flag&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;center&nbsp;the&nbsp;window<br>
on&nbsp;the&nbsp;entire&nbsp;screen&nbsp;and&nbsp;not&nbsp;on&nbsp;its&nbsp;parent&nbsp;window.&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a<br>
top-level&nbsp;window&nbsp;and&nbsp;has&nbsp;no&nbsp;parent&nbsp;then&nbsp;it&nbsp;will&nbsp;always&nbsp;be&nbsp;centered<br>
relative&nbsp;to&nbsp;the&nbsp;screen.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-CentreOnParent"><strong>CentreOnParent</strong></a> = CenterOnParent(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-CenterOnParent">CenterOnParent</a>(self,&nbsp;int&nbsp;dir=BOTH)<br>
&nbsp;<br>
Center&nbsp;with&nbsp;respect&nbsp;to&nbsp;the&nbsp;the&nbsp;parent&nbsp;window</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-CentreOnScreen"><strong>CentreOnScreen</strong></a> = deprecatedWrapper(*args, **kwargs)</dt><dd><tt>&lt;function&nbsp;CenterOnScreen&nbsp;at&nbsp;0x2b90d8dbcf50&gt;&nbsp;is&nbsp;deprecated</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ClearBackground"><strong>ClearBackground</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-ClearBackground">ClearBackground</a>(self)<br>
&nbsp;<br>
Clears&nbsp;the&nbsp;window&nbsp;by&nbsp;filling&nbsp;it&nbsp;with&nbsp;the&nbsp;current&nbsp;background<br>
colour.&nbsp;Does&nbsp;not&nbsp;cause&nbsp;an&nbsp;erase&nbsp;background&nbsp;event&nbsp;to&nbsp;be&nbsp;generated.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ClientToScreen"><strong>ClientToScreen</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-ClientToScreen">ClientToScreen</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;to&nbsp;screen&nbsp;coordinates&nbsp;from&nbsp;coordinates&nbsp;relative&nbsp;to&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ClientToScreenXY"><strong>ClientToScreenXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-ClientToScreenXY">ClientToScreenXY</a>(int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Converts&nbsp;to&nbsp;screen&nbsp;coordinates&nbsp;from&nbsp;coordinates&nbsp;relative&nbsp;to&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Close"><strong>Close</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Close">Close</a>(self,&nbsp;bool&nbsp;force=False)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;function&nbsp;simply&nbsp;generates&nbsp;a&nbsp;EVT_CLOSE&nbsp;event&nbsp;whose&nbsp;handler&nbsp;usually<br>
tries&nbsp;to&nbsp;close&nbsp;the&nbsp;window.&nbsp;It&nbsp;doesn't&nbsp;close&nbsp;the&nbsp;window&nbsp;itself,<br>
however.&nbsp;&nbsp;If&nbsp;force&nbsp;is&nbsp;False&nbsp;(the&nbsp;default)&nbsp;then&nbsp;the&nbsp;window's&nbsp;close<br>
handler&nbsp;will&nbsp;be&nbsp;allowed&nbsp;to&nbsp;veto&nbsp;the&nbsp;destruction&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ConvertDialogPointToPixels"><strong>ConvertDialogPointToPixels</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-ConvertDialogPointToPixels">ConvertDialogPointToPixels</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ConvertDialogSizeToPixels"><strong>ConvertDialogSizeToPixels</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-ConvertDialogSizeToPixels">ConvertDialogSizeToPixels</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ConvertPixelPointToDialog"><strong>ConvertPixelPointToDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-ConvertPixelPointToDialog">ConvertPixelPointToDialog</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ConvertPixelSizeToDialog"><strong>ConvertPixelSizeToDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-ConvertPixelSizeToDialog">ConvertPixelSizeToDialog</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-DLG_PNT"><strong>DLG_PNT</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-DLG_PNT">DLG_PNT</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-DLG_SZE"><strong>DLG_SZE</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-DLG_SZE">DLG_SZE</a>(self,&nbsp;Size&nbsp;sz)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Converts&nbsp;a&nbsp;point&nbsp;or&nbsp;size&nbsp;from&nbsp;dialog&nbsp;units&nbsp;to&nbsp;pixels.&nbsp;&nbsp;Dialog&nbsp;units<br>
are&nbsp;used&nbsp;for&nbsp;maintaining&nbsp;a&nbsp;dialog's&nbsp;proportions&nbsp;even&nbsp;if&nbsp;the&nbsp;font<br>
changes.&nbsp;For&nbsp;the&nbsp;x&nbsp;dimension,&nbsp;the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the<br>
average&nbsp;character&nbsp;width&nbsp;and&nbsp;then&nbsp;divided&nbsp;by&nbsp;4.&nbsp;For&nbsp;the&nbsp;y&nbsp;dimension,<br>
the&nbsp;dialog&nbsp;units&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;the&nbsp;average&nbsp;character&nbsp;height&nbsp;and<br>
then&nbsp;divided&nbsp;by&nbsp;8.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Destroy"><strong>Destroy</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Destroy">Destroy</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Destroys&nbsp;the&nbsp;window&nbsp;safely.&nbsp;&nbsp;Frames&nbsp;and&nbsp;dialogs&nbsp;are&nbsp;not&nbsp;destroyed<br>
immediately&nbsp;when&nbsp;this&nbsp;function&nbsp;is&nbsp;called&nbsp;--&nbsp;they&nbsp;are&nbsp;added&nbsp;to&nbsp;a&nbsp;list<br>
of&nbsp;windows&nbsp;to&nbsp;be&nbsp;deleted&nbsp;on&nbsp;idle&nbsp;time,&nbsp;when&nbsp;all&nbsp;the&nbsp;window's&nbsp;events<br>
have&nbsp;been&nbsp;processed.&nbsp;This&nbsp;prevents&nbsp;problems&nbsp;with&nbsp;events&nbsp;being&nbsp;sent&nbsp;to<br>
non-existent&nbsp;windows.<br>
&nbsp;<br>
Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;window&nbsp;has&nbsp;either&nbsp;been&nbsp;successfully&nbsp;deleted,&nbsp;or&nbsp;it<br>
has&nbsp;been&nbsp;added&nbsp;to&nbsp;the&nbsp;list&nbsp;of&nbsp;windows&nbsp;pending&nbsp;real&nbsp;deletion.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-DestroyChildren"><strong>DestroyChildren</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-DestroyChildren">DestroyChildren</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Destroys&nbsp;all&nbsp;children&nbsp;of&nbsp;a&nbsp;window.&nbsp;Called&nbsp;automatically&nbsp;by&nbsp;the<br>
destructor.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Disable"><strong>Disable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Disable">Disable</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Disables&nbsp;the&nbsp;window,&nbsp;same&nbsp;as&nbsp;<a href="#Toolbar-Enable">Enable</a>(false).</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-DissociateHandle"><strong>DissociateHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-DissociateHandle">DissociateHandle</a>(self)<br>
&nbsp;<br>
Dissociate&nbsp;the&nbsp;current&nbsp;native&nbsp;handle&nbsp;from&nbsp;the&nbsp;window</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-DragAcceptFiles"><strong>DragAcceptFiles</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-DragAcceptFiles">DragAcceptFiles</a>(self,&nbsp;bool&nbsp;accept)<br>
&nbsp;<br>
Enables&nbsp;or&nbsp;disables&nbsp;eligibility&nbsp;for&nbsp;drop&nbsp;file&nbsp;events,&nbsp;EVT_DROP_FILES.<br>
Only&nbsp;functional&nbsp;on&nbsp;Windows.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Enable"><strong>Enable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Enable">Enable</a>(self,&nbsp;bool&nbsp;enable=True)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Enable&nbsp;or&nbsp;disable&nbsp;the&nbsp;window&nbsp;for&nbsp;user&nbsp;input.&nbsp;Note&nbsp;that&nbsp;when&nbsp;a&nbsp;parent<br>
window&nbsp;is&nbsp;disabled,&nbsp;all&nbsp;of&nbsp;its&nbsp;children&nbsp;are&nbsp;disabled&nbsp;as&nbsp;well&nbsp;and&nbsp;they<br>
are&nbsp;reenabled&nbsp;again&nbsp;when&nbsp;the&nbsp;parent&nbsp;is.&nbsp;&nbsp;Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window<br>
has&nbsp;been&nbsp;enabled&nbsp;or&nbsp;disabled,&nbsp;false&nbsp;if&nbsp;nothing&nbsp;was&nbsp;done,&nbsp;i.e.&nbsp;if&nbsp;the<br>
window&nbsp;had&nbsp;already&nbsp;been&nbsp;in&nbsp;the&nbsp;specified&nbsp;state.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-FindWindowById"><strong>FindWindowById</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-FindWindowById">FindWindowById</a>(self,&nbsp;long&nbsp;winid)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Find&nbsp;a&nbsp;chld&nbsp;of&nbsp;this&nbsp;window&nbsp;by&nbsp;window&nbsp;ID</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-FindWindowByName"><strong>FindWindowByName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-FindWindowByName">FindWindowByName</a>(self,&nbsp;String&nbsp;name)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Find&nbsp;a&nbsp;child&nbsp;of&nbsp;this&nbsp;window&nbsp;by&nbsp;name</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Fit"><strong>Fit</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Fit">Fit</a>(self)<br>
&nbsp;<br>
Sizes&nbsp;the&nbsp;window&nbsp;so&nbsp;that&nbsp;it&nbsp;fits&nbsp;around&nbsp;its&nbsp;subwindows.&nbsp;This&nbsp;function<br>
won't&nbsp;do&nbsp;anything&nbsp;if&nbsp;there&nbsp;are&nbsp;no&nbsp;subwindows&nbsp;and&nbsp;will&nbsp;only&nbsp;really&nbsp;work<br>
correctly&nbsp;if&nbsp;sizers&nbsp;are&nbsp;used&nbsp;for&nbsp;the&nbsp;subwindows&nbsp;layout.&nbsp;Also,&nbsp;if&nbsp;the<br>
window&nbsp;has&nbsp;exactly&nbsp;one&nbsp;subwindow&nbsp;it&nbsp;is&nbsp;better&nbsp;(faster&nbsp;and&nbsp;the&nbsp;result<br>
is&nbsp;more&nbsp;precise&nbsp;as&nbsp;Fit&nbsp;adds&nbsp;some&nbsp;margin&nbsp;to&nbsp;account&nbsp;for&nbsp;fuzziness&nbsp;of<br>
its&nbsp;calculations)&nbsp;to&nbsp;call&nbsp;window.<a href="#Toolbar-SetClientSize">SetClientSize</a>(child.<a href="#Toolbar-GetSize">GetSize</a>())<br>
instead&nbsp;of&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-FitInside"><strong>FitInside</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-FitInside">FitInside</a>(self)<br>
&nbsp;<br>
Similar&nbsp;to&nbsp;Fit,&nbsp;but&nbsp;sizes&nbsp;the&nbsp;interior&nbsp;(virtual)&nbsp;size&nbsp;of&nbsp;a<br>
window.&nbsp;Mainly&nbsp;useful&nbsp;with&nbsp;scrolled&nbsp;windows&nbsp;to&nbsp;reset&nbsp;scrollbars&nbsp;after<br>
sizing&nbsp;changes&nbsp;that&nbsp;do&nbsp;not&nbsp;trigger&nbsp;a&nbsp;size&nbsp;event,&nbsp;and/or&nbsp;scrolled<br>
windows&nbsp;without&nbsp;an&nbsp;interior&nbsp;sizer.&nbsp;This&nbsp;function&nbsp;similarly&nbsp;won't&nbsp;do<br>
anything&nbsp;if&nbsp;there&nbsp;are&nbsp;no&nbsp;subwindows.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Freeze"><strong>Freeze</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Freeze">Freeze</a>(self)<br>
&nbsp;<br>
Freezes&nbsp;the&nbsp;window&nbsp;or,&nbsp;in&nbsp;other&nbsp;words,&nbsp;prevents&nbsp;any&nbsp;updates&nbsp;from<br>
taking&nbsp;place&nbsp;on&nbsp;screen,&nbsp;the&nbsp;window&nbsp;is&nbsp;not&nbsp;redrawn&nbsp;at&nbsp;all.&nbsp;Thaw&nbsp;must&nbsp;be<br>
called&nbsp;to&nbsp;reenable&nbsp;window&nbsp;redrawing.&nbsp;&nbsp;Calls&nbsp;to&nbsp;Freeze/Thaw&nbsp;may&nbsp;be<br>
nested,&nbsp;with&nbsp;the&nbsp;actual&nbsp;Thaw&nbsp;being&nbsp;delayed&nbsp;until&nbsp;all&nbsp;the&nbsp;nesting&nbsp;has<br>
been&nbsp;undone.<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;useful&nbsp;for&nbsp;visual&nbsp;appearance&nbsp;optimization&nbsp;(for&nbsp;example,<br>
it&nbsp;is&nbsp;a&nbsp;good&nbsp;idea&nbsp;to&nbsp;use&nbsp;it&nbsp;before&nbsp;inserting&nbsp;large&nbsp;amount&nbsp;of&nbsp;text&nbsp;into<br>
a&nbsp;wxTextCtrl&nbsp;under&nbsp;wxGTK)&nbsp;but&nbsp;is&nbsp;not&nbsp;implemented&nbsp;on&nbsp;all&nbsp;platforms&nbsp;nor<br>
for&nbsp;all&nbsp;controls&nbsp;so&nbsp;it&nbsp;is&nbsp;mostly&nbsp;just&nbsp;a&nbsp;hint&nbsp;to&nbsp;wxWindows&nbsp;and&nbsp;not&nbsp;a<br>
mandatory&nbsp;directive.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetAcceleratorTable"><strong>GetAcceleratorTable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetAcceleratorTable">GetAcceleratorTable</a>(self)&nbsp;-&gt;&nbsp;AcceleratorTable<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;accelerator&nbsp;table&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetAdjustedBestSize"><strong>GetAdjustedBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetAdjustedBestSize">GetAdjustedBestSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;similar&nbsp;to&nbsp;GetBestSize,&nbsp;except&nbsp;in&nbsp;one<br>
thing.&nbsp;GetBestSize&nbsp;should&nbsp;return&nbsp;the&nbsp;minimum&nbsp;untruncated&nbsp;size&nbsp;of&nbsp;the<br>
window,&nbsp;while&nbsp;this&nbsp;method&nbsp;will&nbsp;return&nbsp;the&nbsp;largest&nbsp;of&nbsp;BestSize&nbsp;and&nbsp;any<br>
user&nbsp;specified&nbsp;minimum&nbsp;size.&nbsp;ie.&nbsp;it&nbsp;is&nbsp;the&nbsp;minimum&nbsp;size&nbsp;the&nbsp;window<br>
should&nbsp;currently&nbsp;be&nbsp;drawn&nbsp;at,&nbsp;not&nbsp;the&nbsp;minimal&nbsp;size&nbsp;it&nbsp;can&nbsp;possibly<br>
tolerate.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetAutoLayout"><strong>GetAutoLayout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetAutoLayout">GetAutoLayout</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;current&nbsp;autoLayout&nbsp;setting</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetBackgroundColour"><strong>GetBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetBackgroundColour">GetBackgroundColour</a>(self)&nbsp;-&gt;&nbsp;Colour<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetBackgroundStyle"><strong>GetBackgroundStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetBackgroundStyle">GetBackgroundStyle</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;style&nbsp;of&nbsp;the&nbsp;window.<br>
&nbsp;<br>
:see:&nbsp;`SetBackgroundStyle`</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetBestFittingSize"><strong>GetBestFittingSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetBestFittingSize">GetBestFittingSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;function&nbsp;will&nbsp;merge&nbsp;the&nbsp;window's&nbsp;best&nbsp;size&nbsp;into&nbsp;the&nbsp;window's<br>
minimum&nbsp;size,&nbsp;giving&nbsp;priority&nbsp;to&nbsp;the&nbsp;min&nbsp;size&nbsp;components,&nbsp;and&nbsp;returns<br>
the&nbsp;results.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetBestSize"><strong>GetBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetBestSize">GetBestSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;function&nbsp;returns&nbsp;the&nbsp;best&nbsp;acceptable&nbsp;minimal&nbsp;size&nbsp;for&nbsp;the<br>
window,&nbsp;if&nbsp;applicable.&nbsp;For&nbsp;example,&nbsp;for&nbsp;a&nbsp;static&nbsp;text&nbsp;control,&nbsp;it&nbsp;will<br>
be&nbsp;the&nbsp;minimal&nbsp;size&nbsp;such&nbsp;that&nbsp;the&nbsp;control&nbsp;label&nbsp;is&nbsp;not&nbsp;truncated.&nbsp;For<br>
windows&nbsp;containing&nbsp;subwindows&nbsp;(suzh&nbsp;aswx.<a href="wx._windows.html#Panel">Panel</a>),&nbsp;the&nbsp;size&nbsp;returned&nbsp;by<br>
this&nbsp;function&nbsp;will&nbsp;be&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;size&nbsp;the&nbsp;window&nbsp;would&nbsp;have&nbsp;had<br>
after&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetBestSizeTuple"><strong>GetBestSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetBestSizeTuple">GetBestSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
This&nbsp;function&nbsp;returns&nbsp;the&nbsp;best&nbsp;acceptable&nbsp;minimal&nbsp;size&nbsp;for&nbsp;the<br>
window,&nbsp;if&nbsp;applicable.&nbsp;For&nbsp;example,&nbsp;for&nbsp;a&nbsp;static&nbsp;text&nbsp;control,&nbsp;it&nbsp;will<br>
be&nbsp;the&nbsp;minimal&nbsp;size&nbsp;such&nbsp;that&nbsp;the&nbsp;control&nbsp;label&nbsp;is&nbsp;not&nbsp;truncated.&nbsp;For<br>
windows&nbsp;containing&nbsp;subwindows&nbsp;(suzh&nbsp;aswx.<a href="wx._windows.html#Panel">Panel</a>),&nbsp;the&nbsp;size&nbsp;returned&nbsp;by<br>
this&nbsp;function&nbsp;will&nbsp;be&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;size&nbsp;the&nbsp;window&nbsp;would&nbsp;have&nbsp;had<br>
after&nbsp;calling&nbsp;Fit.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetBestVirtualSize"><strong>GetBestVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetBestVirtualSize">GetBestVirtualSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Return&nbsp;the&nbsp;largest&nbsp;of&nbsp;ClientSize&nbsp;and&nbsp;BestSize&nbsp;(as&nbsp;determined&nbsp;by&nbsp;a<br>
sizer,&nbsp;interior&nbsp;children,&nbsp;or&nbsp;other&nbsp;means)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetBorder"><strong>GetBorder</strong></a>(*args)</dt><dd><tt><a href="#Toolbar-GetBorder">GetBorder</a>(self,&nbsp;long&nbsp;flags)&nbsp;-&gt;&nbsp;int<br>
<a href="#Toolbar-GetBorder">GetBorder</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;border&nbsp;for&nbsp;the&nbsp;flags&nbsp;of&nbsp;this&nbsp;window</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetCaret"><strong>GetCaret</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetCaret">GetCaret</a>(self)&nbsp;-&gt;&nbsp;Caret<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;caret&nbsp;associated&nbsp;with&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetCharHeight"><strong>GetCharHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetCharHeight">GetCharHeight</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;(average)&nbsp;character&nbsp;size&nbsp;for&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetCharWidth"><strong>GetCharWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetCharWidth">GetCharWidth</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;(average)&nbsp;character&nbsp;size&nbsp;for&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetChildren"><strong>GetChildren</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetChildren">GetChildren</a>(self)&nbsp;-&gt;&nbsp;PyObject<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;list&nbsp;of&nbsp;the&nbsp;window's&nbsp;children.&nbsp;&nbsp;NOTE:&nbsp;Currently&nbsp;this&nbsp;is&nbsp;a<br>
copy&nbsp;of&nbsp;the&nbsp;child&nbsp;window&nbsp;list&nbsp;maintained&nbsp;by&nbsp;the&nbsp;window,&nbsp;so&nbsp;the&nbsp;return<br>
value&nbsp;of&nbsp;this&nbsp;function&nbsp;is&nbsp;only&nbsp;valid&nbsp;as&nbsp;long&nbsp;as&nbsp;the&nbsp;window's&nbsp;children<br>
do&nbsp;not&nbsp;change.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetClientAreaOrigin"><strong>GetClientAreaOrigin</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetClientAreaOrigin">GetClientAreaOrigin</a>(self)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Get&nbsp;the&nbsp;origin&nbsp;of&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window&nbsp;relative&nbsp;to&nbsp;the<br>
window's&nbsp;top&nbsp;left&nbsp;corner&nbsp;(the&nbsp;client&nbsp;area&nbsp;may&nbsp;be&nbsp;shifted&nbsp;because&nbsp;of<br>
the&nbsp;borders,&nbsp;scrollbars,&nbsp;other&nbsp;decorations...)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetClientRect"><strong>GetClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetClientRect">GetClientRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Get&nbsp;the&nbsp;client&nbsp;area&nbsp;position&nbsp;and&nbsp;size&nbsp;as&nbsp;a&nbsp;`wx.Rect`&nbsp;object.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetClientSize"><strong>GetClientSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetClientSize">GetClientSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
This&nbsp;gets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window's&nbsp;'client&nbsp;area'&nbsp;in&nbsp;pixels.&nbsp;The&nbsp;client<br>
area&nbsp;is&nbsp;the&nbsp;area&nbsp;which&nbsp;may&nbsp;be&nbsp;drawn&nbsp;on&nbsp;by&nbsp;the&nbsp;programmer,&nbsp;excluding<br>
title&nbsp;bar,&nbsp;border,&nbsp;scrollbars,&nbsp;etc.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetClientSizeTuple"><strong>GetClientSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetClientSizeTuple">GetClientSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
This&nbsp;gets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window's&nbsp;'client&nbsp;area'&nbsp;in&nbsp;pixels.&nbsp;The&nbsp;client<br>
area&nbsp;is&nbsp;the&nbsp;area&nbsp;which&nbsp;may&nbsp;be&nbsp;drawn&nbsp;on&nbsp;by&nbsp;the&nbsp;programmer,&nbsp;excluding<br>
title&nbsp;bar,&nbsp;border,&nbsp;scrollbars,&nbsp;etc.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetConstraints"><strong>GetConstraints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetConstraints">GetConstraints</a>(self)&nbsp;-&gt;&nbsp;LayoutConstraints<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;pointer&nbsp;to&nbsp;the&nbsp;window's&nbsp;layout&nbsp;constraints,&nbsp;or&nbsp;None&nbsp;if&nbsp;there<br>
are&nbsp;none.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetContainingSizer"><strong>GetContainingSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetContainingSizer">GetContainingSizer</a>(self)&nbsp;-&gt;&nbsp;Sizer<br>
&nbsp;<br>
Return&nbsp;the&nbsp;sizer&nbsp;that&nbsp;this&nbsp;window&nbsp;is&nbsp;a&nbsp;member&nbsp;of,&nbsp;if&nbsp;any,&nbsp;otherwise&nbsp;None.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetCursor"><strong>GetCursor</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetCursor">GetCursor</a>(self)&nbsp;-&gt;&nbsp;Cursor<br>
&nbsp;<br>
Return&nbsp;the&nbsp;cursor&nbsp;associated&nbsp;with&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetDefaultAttributes"><strong>GetDefaultAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetDefaultAttributes">GetDefaultAttributes</a>(self)&nbsp;-&gt;&nbsp;VisualAttributes<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;attributes&nbsp;for&nbsp;an&nbsp;instance&nbsp;of&nbsp;this&nbsp;class.&nbsp;&nbsp;This&nbsp;is<br>
useful&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;use&nbsp;the&nbsp;same&nbsp;font&nbsp;or&nbsp;colour&nbsp;in&nbsp;your&nbsp;own&nbsp;control<br>
as&nbsp;in&nbsp;a&nbsp;standard&nbsp;control&nbsp;--&nbsp;which&nbsp;is&nbsp;a&nbsp;much&nbsp;better&nbsp;idea&nbsp;than&nbsp;hard<br>
coding&nbsp;specific&nbsp;colours&nbsp;or&nbsp;fonts&nbsp;which&nbsp;might&nbsp;look&nbsp;completely&nbsp;out&nbsp;of<br>
place&nbsp;on&nbsp;the&nbsp;user's&nbsp;system,&nbsp;especially&nbsp;if&nbsp;it&nbsp;uses&nbsp;themes.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetDefaultItem"><strong>GetDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetDefaultItem">GetDefaultItem</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Get&nbsp;the&nbsp;default&nbsp;child&nbsp;of&nbsp;this&nbsp;parent,&nbsp;i.e.&nbsp;the&nbsp;one&nbsp;which&nbsp;is&nbsp;activated<br>
by&nbsp;pressing&nbsp;&lt;Enter&gt;&nbsp;such&nbsp;as&nbsp;the&nbsp;OK&nbsp;button&nbsp;on&nbsp;a&nbsp;wx.Dialog.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetDropTarget"><strong>GetDropTarget</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetDropTarget">GetDropTarget</a>(self)&nbsp;-&gt;&nbsp;DropTarget<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;associated&nbsp;drop&nbsp;target,&nbsp;which&nbsp;may&nbsp;be&nbsp;None.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetEventHandler"><strong>GetEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetEventHandler">GetEventHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;event&nbsp;handler&nbsp;for&nbsp;this&nbsp;window.&nbsp;By&nbsp;default,&nbsp;the&nbsp;window&nbsp;is<br>
its&nbsp;own&nbsp;event&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetExtraStyle"><strong>GetExtraStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetExtraStyle">GetExtraStyle</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;extra&nbsp;style&nbsp;bits&nbsp;for&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetFont"><strong>GetFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetFont">GetFont</a>(self)&nbsp;-&gt;&nbsp;Font<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;default&nbsp;font&nbsp;used&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetForegroundColour"><strong>GetForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetForegroundColour">GetForegroundColour</a>(self)&nbsp;-&gt;&nbsp;Colour<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;foreground&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;The&nbsp;interpretation&nbsp;of<br>
foreground&nbsp;colour&nbsp;is&nbsp;dependent&nbsp;on&nbsp;the&nbsp;window&nbsp;class;&nbsp;it&nbsp;may&nbsp;be&nbsp;the&nbsp;text<br>
colour&nbsp;or&nbsp;other&nbsp;colour,&nbsp;or&nbsp;it&nbsp;may&nbsp;not&nbsp;be&nbsp;used&nbsp;at&nbsp;all.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetFullTextExtent"><strong>GetFullTextExtent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetFullTextExtent">GetFullTextExtent</a>(String&nbsp;string,&nbsp;Font&nbsp;font=None)&nbsp;-&gt;<br>
&nbsp;&nbsp;&nbsp;(width,&nbsp;height,&nbsp;descent,&nbsp;externalLeading)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;width,&nbsp;height,&nbsp;decent&nbsp;and&nbsp;leading&nbsp;of&nbsp;the&nbsp;text&nbsp;using&nbsp;the<br>
current&nbsp;or&nbsp;specified&nbsp;font.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetGrandParent"><strong>GetGrandParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetGrandParent">GetGrandParent</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;parent&nbsp;of&nbsp;the&nbsp;parent&nbsp;of&nbsp;this&nbsp;window,&nbsp;or&nbsp;None&nbsp;if&nbsp;there<br>
isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetHandle"><strong>GetHandle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetHandle">GetHandle</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;platform-specific&nbsp;handle&nbsp;(as&nbsp;a&nbsp;long&nbsp;integer)&nbsp;of&nbsp;the<br>
physical&nbsp;window.&nbsp;&nbsp;Currently&nbsp;on&nbsp;wxMac&nbsp;it&nbsp;returns&nbsp;the&nbsp;handle&nbsp;of&nbsp;the<br>
toplevel&nbsp;parent&nbsp;of&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetHelpText"><strong>GetHelpText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetHelpText">GetHelpText</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;help&nbsp;text&nbsp;to&nbsp;be&nbsp;used&nbsp;as&nbsp;context-sensitive&nbsp;help&nbsp;for&nbsp;this<br>
window.&nbsp;&nbsp;Note&nbsp;that&nbsp;the&nbsp;text&nbsp;is&nbsp;actually&nbsp;stored&nbsp;by&nbsp;the&nbsp;current<br>
wxHelpProvider&nbsp;implementation,&nbsp;and&nbsp;not&nbsp;in&nbsp;the&nbsp;window&nbsp;object&nbsp;itself.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetId"><strong>GetId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetId">GetId</a>(self)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;identifier&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Each&nbsp;window&nbsp;has&nbsp;an&nbsp;integer<br>
identifier.&nbsp;If&nbsp;the&nbsp;application&nbsp;has&nbsp;not&nbsp;provided&nbsp;one&nbsp;(or&nbsp;the&nbsp;default&nbsp;Id<br>
-1&nbsp;is&nbsp;used)&nbsp;then&nbsp;an&nbsp;unique&nbsp;identifier&nbsp;with&nbsp;a&nbsp;negative&nbsp;value&nbsp;will&nbsp;be<br>
generated.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetMaxHeight"><strong>GetMaxHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetMaxHeight">GetMaxHeight</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetMaxSize"><strong>GetMaxSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetMaxSize">GetMaxSize</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetMaxWidth"><strong>GetMaxWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetMaxWidth">GetMaxWidth</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetMinHeight"><strong>GetMinHeight</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetMinHeight">GetMinHeight</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetMinSize"><strong>GetMinSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetMinSize">GetMinSize</a>(self)&nbsp;-&gt;&nbsp;Size</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetMinWidth"><strong>GetMinWidth</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetMinWidth">GetMinWidth</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetName"><strong>GetName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetName">GetName</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;windows&nbsp;name.&nbsp;&nbsp;This&nbsp;name&nbsp;is&nbsp;not&nbsp;guaranteed&nbsp;to&nbsp;be&nbsp;unique;<br>
it&nbsp;is&nbsp;up&nbsp;to&nbsp;the&nbsp;programmer&nbsp;to&nbsp;supply&nbsp;an&nbsp;appropriate&nbsp;name&nbsp;in&nbsp;the&nbsp;window<br>
constructor&nbsp;or&nbsp;via&nbsp;wx.Window.SetName.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetParent"><strong>GetParent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetParent">GetParent</a>(self)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;parent&nbsp;window&nbsp;of&nbsp;this&nbsp;window,&nbsp;or&nbsp;None&nbsp;if&nbsp;there&nbsp;isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetPosition"><strong>GetPosition</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetPosition">GetPosition</a>(self)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window's&nbsp;position.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetPositionTuple"><strong>GetPositionTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetPositionTuple">GetPositionTuple</a>()&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window's&nbsp;position.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetRect"><strong>GetRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetRect">GetRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;size&nbsp;and&nbsp;position&nbsp;of&nbsp;the&nbsp;window&nbsp;as&nbsp;a&nbsp;wx.Rect&nbsp;object.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetScrollPos"><strong>GetScrollPos</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetScrollPos">GetScrollPos</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;position.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetScrollRange"><strong>GetScrollRange</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetScrollRange">GetScrollRange</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;range.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetScrollThumb"><strong>GetScrollThumb</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetScrollThumb">GetScrollThumb</a>(self,&nbsp;int&nbsp;orientation)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;built-in&nbsp;scrollbar&nbsp;thumb&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetSize"><strong>GetSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetSize">GetSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetSizeTuple"><strong>GetSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetSizeTuple">GetSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetSizer"><strong>GetSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetSizer">GetSizer</a>(self)&nbsp;-&gt;&nbsp;Sizer<br>
&nbsp;<br>
Return&nbsp;the&nbsp;sizer&nbsp;associated&nbsp;with&nbsp;the&nbsp;window&nbsp;by&nbsp;a&nbsp;previous&nbsp;call&nbsp;to<br>
SetSizer&nbsp;or&nbsp;None&nbsp;if&nbsp;there&nbsp;isn't&nbsp;one.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetTextExtent"><strong>GetTextExtent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetTextExtent">GetTextExtent</a>(String&nbsp;string)&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;width&nbsp;and&nbsp;height&nbsp;of&nbsp;the&nbsp;text&nbsp;using&nbsp;the&nbsp;current&nbsp;font.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetThemeEnabled"><strong>GetThemeEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetThemeEnabled">GetThemeEnabled</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Return&nbsp;the&nbsp;themeEnabled&nbsp;flag.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetTitle"><strong>GetTitle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetTitle">GetTitle</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window's&nbsp;title.&nbsp;Applicable&nbsp;only&nbsp;to&nbsp;frames&nbsp;and&nbsp;dialogs.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetToolTip"><strong>GetToolTip</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetToolTip">GetToolTip</a>(self)&nbsp;-&gt;&nbsp;ToolTip<br>
&nbsp;<br>
get&nbsp;the&nbsp;associated&nbsp;tooltip&nbsp;or&nbsp;None&nbsp;if&nbsp;none</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetUpdateClientRect"><strong>GetUpdateClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetUpdateClientRect">GetUpdateClientRect</a>(self)&nbsp;-&gt;&nbsp;Rect<br>
&nbsp;<br>
Get&nbsp;the&nbsp;update&nbsp;rectangle&nbsp;region&nbsp;bounding&nbsp;box&nbsp;in&nbsp;client&nbsp;coords.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetUpdateRegion"><strong>GetUpdateRegion</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetUpdateRegion">GetUpdateRegion</a>(self)&nbsp;-&gt;&nbsp;Region<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;region&nbsp;specifying&nbsp;which&nbsp;parts&nbsp;of&nbsp;the&nbsp;window&nbsp;have&nbsp;been<br>
damaged.&nbsp;Should&nbsp;only&nbsp;be&nbsp;called&nbsp;within&nbsp;an&nbsp;EVT_PAINT&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetValidator"><strong>GetValidator</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetValidator">GetValidator</a>(self)&nbsp;-&gt;&nbsp;Validator<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;pointer&nbsp;to&nbsp;the&nbsp;current&nbsp;validator&nbsp;for&nbsp;the&nbsp;window,&nbsp;or&nbsp;None&nbsp;if<br>
there&nbsp;is&nbsp;none.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetVirtualSize"><strong>GetVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetVirtualSize">GetVirtualSize</a>(self)&nbsp;-&gt;&nbsp;Size<br>
&nbsp;<br>
Get&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows<br>
this&nbsp;is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetVirtualSizeTuple"><strong>GetVirtualSizeTuple</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetVirtualSizeTuple">GetVirtualSizeTuple</a>()&nbsp;-&gt;&nbsp;(width,&nbsp;height)<br>
&nbsp;<br>
Get&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows<br>
this&nbsp;is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetWindowStyle"><strong>GetWindowStyle</strong></a> = GetWindowStyleFlag(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetWindowStyleFlag">GetWindowStyleFlag</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window&nbsp;style&nbsp;that&nbsp;was&nbsp;passed&nbsp;to&nbsp;the&nbsp;constructor&nbsp;or&nbsp;Create<br>
method.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetWindowStyleFlag"><strong>GetWindowStyleFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetWindowStyleFlag">GetWindowStyleFlag</a>(self)&nbsp;-&gt;&nbsp;long<br>
&nbsp;<br>
Gets&nbsp;the&nbsp;window&nbsp;style&nbsp;that&nbsp;was&nbsp;passed&nbsp;to&nbsp;the&nbsp;constructor&nbsp;or&nbsp;Create<br>
method.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetWindowVariant"><strong>GetWindowVariant</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetWindowVariant">GetWindowVariant</a>(self)&nbsp;-&gt;&nbsp;int</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-HasCapture"><strong>HasCapture</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-HasCapture">HasCapture</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;this&nbsp;window&nbsp;has&nbsp;the&nbsp;current&nbsp;mouse&nbsp;capture.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-HasFlag"><strong>HasFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-HasFlag">HasFlag</a>(self,&nbsp;int&nbsp;flag)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Test&nbsp;if&nbsp;the&nbsp;given&nbsp;style&nbsp;is&nbsp;set&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-HasScrollbar"><strong>HasScrollbar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-HasScrollbar">HasScrollbar</a>(self,&nbsp;int&nbsp;orient)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Does&nbsp;the&nbsp;window&nbsp;have&nbsp;the&nbsp;scrollbar&nbsp;for&nbsp;this&nbsp;orientation?</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-HasTransparentBackground"><strong>HasTransparentBackground</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-HasTransparentBackground">HasTransparentBackground</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;True&nbsp;if&nbsp;this&nbsp;window's&nbsp;background&nbsp;is&nbsp;transparent&nbsp;(as,&nbsp;for<br>
example,&nbsp;for&nbsp;`wx.StaticText`)&nbsp;and&nbsp;should&nbsp;show&nbsp;the&nbsp;parent&nbsp;window's<br>
background.<br>
&nbsp;<br>
This&nbsp;method&nbsp;is&nbsp;mostly&nbsp;used&nbsp;internally&nbsp;by&nbsp;the&nbsp;library&nbsp;itself&nbsp;and&nbsp;you<br>
normally&nbsp;shouldn't&nbsp;have&nbsp;to&nbsp;call&nbsp;it.&nbsp;You&nbsp;may,&nbsp;however,&nbsp;have&nbsp;to&nbsp;override<br>
it&nbsp;in&nbsp;your&nbsp;custom&nbsp;control&nbsp;classes&nbsp;to&nbsp;ensure&nbsp;that&nbsp;background&nbsp;is&nbsp;painted<br>
correctly.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Hide"><strong>Hide</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Hide">Hide</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Equivalent&nbsp;to&nbsp;calling&nbsp;<a href="#Toolbar-Show">Show</a>(False).</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-HitTest"><strong>HitTest</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-HitTest">HitTest</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Test&nbsp;where&nbsp;the&nbsp;given&nbsp;(in&nbsp;client&nbsp;coords)&nbsp;point&nbsp;lies</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-HitTestXY"><strong>HitTestXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-HitTestXY">HitTestXY</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Test&nbsp;where&nbsp;the&nbsp;given&nbsp;(in&nbsp;client&nbsp;coords)&nbsp;point&nbsp;lies</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-InheritAttributes"><strong>InheritAttributes</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-InheritAttributes">InheritAttributes</a>(self)<br>
&nbsp;<br>
This&nbsp;function&nbsp;is&nbsp;(or&nbsp;should&nbsp;be,&nbsp;in&nbsp;case&nbsp;of&nbsp;custom&nbsp;controls)&nbsp;called<br>
during&nbsp;window&nbsp;creation&nbsp;to&nbsp;intelligently&nbsp;set&nbsp;up&nbsp;the&nbsp;window&nbsp;visual<br>
attributes,&nbsp;that&nbsp;is&nbsp;the&nbsp;font&nbsp;and&nbsp;the&nbsp;foreground&nbsp;and&nbsp;background<br>
colours.<br>
&nbsp;<br>
By&nbsp;'intelligently'&nbsp;the&nbsp;following&nbsp;is&nbsp;meant:&nbsp;by&nbsp;default,&nbsp;all&nbsp;windows&nbsp;use<br>
their&nbsp;own&nbsp;default&nbsp;attributes.&nbsp;However&nbsp;if&nbsp;some&nbsp;of&nbsp;the&nbsp;parent's<br>
attributes&nbsp;are&nbsp;explicitly&nbsp;changed&nbsp;(that&nbsp;is,&nbsp;using&nbsp;SetFont&nbsp;and&nbsp;not<br>
SetOwnFont)&nbsp;and&nbsp;if&nbsp;the&nbsp;corresponding&nbsp;attribute&nbsp;hadn't&nbsp;been<br>
explicitly&nbsp;set&nbsp;for&nbsp;this&nbsp;window&nbsp;itself,&nbsp;then&nbsp;this&nbsp;window&nbsp;takes&nbsp;the&nbsp;same<br>
value&nbsp;as&nbsp;used&nbsp;by&nbsp;the&nbsp;parent.&nbsp;In&nbsp;addition,&nbsp;if&nbsp;the&nbsp;window&nbsp;overrides<br>
ShouldInheritColours&nbsp;to&nbsp;return&nbsp;false,&nbsp;the&nbsp;colours&nbsp;will&nbsp;not&nbsp;be&nbsp;changed<br>
no&nbsp;matter&nbsp;what&nbsp;and&nbsp;only&nbsp;the&nbsp;font&nbsp;might.<br>
&nbsp;<br>
This&nbsp;rather&nbsp;complicated&nbsp;logic&nbsp;is&nbsp;necessary&nbsp;in&nbsp;order&nbsp;to&nbsp;accommodate&nbsp;the<br>
different&nbsp;usage&nbsp;scenarios.&nbsp;The&nbsp;most&nbsp;common&nbsp;one&nbsp;is&nbsp;when&nbsp;all&nbsp;default<br>
attributes&nbsp;are&nbsp;used&nbsp;and&nbsp;in&nbsp;this&nbsp;case,&nbsp;nothing&nbsp;should&nbsp;be&nbsp;inherited&nbsp;as<br>
in&nbsp;modern&nbsp;GUIs&nbsp;different&nbsp;controls&nbsp;use&nbsp;different&nbsp;fonts&nbsp;(and&nbsp;colours)<br>
than&nbsp;their&nbsp;siblings&nbsp;so&nbsp;they&nbsp;can't&nbsp;inherit&nbsp;the&nbsp;same&nbsp;value&nbsp;from&nbsp;the<br>
parent.&nbsp;However&nbsp;it&nbsp;was&nbsp;also&nbsp;deemed&nbsp;desirable&nbsp;to&nbsp;allow&nbsp;to&nbsp;simply&nbsp;change<br>
the&nbsp;attributes&nbsp;of&nbsp;all&nbsp;children&nbsp;at&nbsp;once&nbsp;by&nbsp;just&nbsp;changing&nbsp;the&nbsp;font&nbsp;or<br>
colour&nbsp;of&nbsp;their&nbsp;common&nbsp;parent,&nbsp;hence&nbsp;in&nbsp;this&nbsp;case&nbsp;we&nbsp;do&nbsp;inherit&nbsp;the<br>
parents&nbsp;attributes.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-InheritsBackgroundColour"><strong>InheritsBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-InheritsBackgroundColour">InheritsBackgroundColour</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-InitDialog"><strong>InitDialog</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-InitDialog">InitDialog</a>(self)<br>
&nbsp;<br>
Sends&nbsp;an&nbsp;EVT_INIT_DIALOG&nbsp;event,&nbsp;whose&nbsp;handler&nbsp;usually&nbsp;transfers&nbsp;data<br>
to&nbsp;the&nbsp;dialog&nbsp;via&nbsp;validators.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-InvalidateBestSize"><strong>InvalidateBestSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-InvalidateBestSize">InvalidateBestSize</a>(self)<br>
&nbsp;<br>
Reset&nbsp;the&nbsp;cached&nbsp;best&nbsp;size&nbsp;value&nbsp;so&nbsp;it&nbsp;will&nbsp;be&nbsp;recalculated&nbsp;the&nbsp;next<br>
time&nbsp;it&nbsp;is&nbsp;needed.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-IsBeingDeleted"><strong>IsBeingDeleted</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-IsBeingDeleted">IsBeingDeleted</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Is&nbsp;the&nbsp;window&nbsp;in&nbsp;the&nbsp;process&nbsp;of&nbsp;being&nbsp;deleted?</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-IsEnabled"><strong>IsEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-IsEnabled">IsEnabled</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;enabled&nbsp;for&nbsp;input,&nbsp;false&nbsp;otherwise.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-IsExposed"><strong>IsExposed</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-IsExposed">IsExposed</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;w=1,&nbsp;int&nbsp;h=1)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-IsExposedPoint"><strong>IsExposedPoint</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-IsExposedPoint">IsExposedPoint</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-IsExposedRect"><strong>IsExposedRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-IsExposedRect">IsExposedRect</a>(self,&nbsp;Rect&nbsp;rect)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;point&nbsp;or&nbsp;rectangle&nbsp;area&nbsp;has&nbsp;been&nbsp;exposed<br>
since&nbsp;the&nbsp;last&nbsp;repaint.&nbsp;Call&nbsp;this&nbsp;in&nbsp;an&nbsp;paint&nbsp;event&nbsp;handler&nbsp;to<br>
optimize&nbsp;redrawing&nbsp;by&nbsp;only&nbsp;redrawing&nbsp;those&nbsp;areas,&nbsp;which&nbsp;have&nbsp;been<br>
exposed.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-IsRetained"><strong>IsRetained</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-IsRetained">IsRetained</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;retained,&nbsp;false&nbsp;otherwise.&nbsp;&nbsp;Retained<br>
windows&nbsp;are&nbsp;only&nbsp;available&nbsp;on&nbsp;X&nbsp;platforms.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-IsShown"><strong>IsShown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-IsShown">IsShown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;window&nbsp;is&nbsp;shown,&nbsp;false&nbsp;if&nbsp;it&nbsp;has&nbsp;been&nbsp;hidden.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-IsTopLevel"><strong>IsTopLevel</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-IsTopLevel">IsTopLevel</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;given&nbsp;window&nbsp;is&nbsp;a&nbsp;top-level&nbsp;one.&nbsp;Currently&nbsp;all<br>
frames&nbsp;and&nbsp;dialogs&nbsp;are&nbsp;always&nbsp;considered&nbsp;to&nbsp;be&nbsp;top-level&nbsp;windows&nbsp;(even<br>
if&nbsp;they&nbsp;have&nbsp;a&nbsp;parent&nbsp;window).</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Layout"><strong>Layout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Layout">Layout</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Invokes&nbsp;the&nbsp;constraint-based&nbsp;layout&nbsp;algorithm&nbsp;or&nbsp;the&nbsp;sizer-based<br>
algorithm&nbsp;for&nbsp;this&nbsp;window.&nbsp;&nbsp;See&nbsp;SetAutoLayout:&nbsp;when&nbsp;auto&nbsp;layout&nbsp;is&nbsp;on,<br>
this&nbsp;function&nbsp;gets&nbsp;called&nbsp;automatically&nbsp;by&nbsp;the&nbsp;default&nbsp;EVT_SIZE<br>
handler&nbsp;when&nbsp;the&nbsp;window&nbsp;is&nbsp;resized.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-LineDown"><strong>LineDown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-LineDown">LineDown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#Toolbar-ScrollLines">ScrollLines</a>(1).</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-LineUp"><strong>LineUp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-LineUp">LineUp</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#Toolbar-ScrollLines">ScrollLines</a>(-1).</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Lower"><strong>Lower</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Lower">Lower</a>(self)<br>
&nbsp;<br>
Lowers&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;bottom&nbsp;of&nbsp;the&nbsp;window&nbsp;hierarchy.&nbsp;&nbsp;In&nbsp;current<br>
version&nbsp;of&nbsp;wxWidgets&nbsp;this&nbsp;works&nbsp;both&nbsp;for&nbsp;manage&nbsp;and&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-MakeModal"><strong>MakeModal</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-MakeModal">MakeModal</a>(self,&nbsp;bool&nbsp;modal=True)<br>
&nbsp;<br>
Disables&nbsp;all&nbsp;other&nbsp;windows&nbsp;in&nbsp;the&nbsp;application&nbsp;so&nbsp;that&nbsp;the&nbsp;user&nbsp;can<br>
only&nbsp;interact&nbsp;with&nbsp;this&nbsp;window.&nbsp;&nbsp;Passing&nbsp;False&nbsp;will&nbsp;reverse&nbsp;this<br>
effect.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Move"><strong>Move</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Move">Move</a>(self,&nbsp;Point&nbsp;pt,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-MoveAfterInTabOrder"><strong>MoveAfterInTabOrder</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-MoveAfterInTabOrder">MoveAfterInTabOrder</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Moves&nbsp;this&nbsp;window&nbsp;in&nbsp;the&nbsp;tab&nbsp;navigation&nbsp;order&nbsp;after&nbsp;the&nbsp;specified<br>
sibling&nbsp;window.&nbsp;&nbsp;This&nbsp;means&nbsp;that&nbsp;when&nbsp;the&nbsp;user&nbsp;presses&nbsp;the&nbsp;TAB&nbsp;key&nbsp;on<br>
that&nbsp;other&nbsp;window,&nbsp;the&nbsp;focus&nbsp;switches&nbsp;to&nbsp;this&nbsp;window.<br>
&nbsp;<br>
The&nbsp;default&nbsp;tab&nbsp;order&nbsp;is&nbsp;the&nbsp;same&nbsp;as&nbsp;creation&nbsp;order.&nbsp;&nbsp;This&nbsp;function<br>
and&nbsp;`MoveBeforeInTabOrder`&nbsp;allow&nbsp;to&nbsp;change&nbsp;it&nbsp;after&nbsp;creating&nbsp;all&nbsp;the<br>
windows.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-MoveBeforeInTabOrder"><strong>MoveBeforeInTabOrder</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-MoveBeforeInTabOrder">MoveBeforeInTabOrder</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Same&nbsp;as&nbsp;`MoveAfterInTabOrder`&nbsp;except&nbsp;that&nbsp;it&nbsp;inserts&nbsp;this&nbsp;window&nbsp;just<br>
before&nbsp;win&nbsp;instead&nbsp;of&nbsp;putting&nbsp;it&nbsp;right&nbsp;after&nbsp;it.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-MoveXY"><strong>MoveXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-MoveXY">MoveXY</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Navigate"><strong>Navigate</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Navigate">Navigate</a>(self,&nbsp;int&nbsp;flags=NavigationKeyEvent.IsForward)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Does&nbsp;keyboard&nbsp;navigation&nbsp;from&nbsp;this&nbsp;window&nbsp;to&nbsp;another,&nbsp;by&nbsp;sending&nbsp;a<br>
`wx.NavigationKeyEvent`.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-PageDown"><strong>PageDown</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-PageDown">PageDown</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#Toolbar-ScrollPages">ScrollPages</a>(1).</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-PageUp"><strong>PageUp</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-PageUp">PageUp</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
This&nbsp;is&nbsp;just&nbsp;a&nbsp;wrapper&nbsp;for&nbsp;<a href="#Toolbar-ScrollPages">ScrollPages</a>(-1).</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-PopEventHandler"><strong>PopEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-PopEventHandler">PopEventHandler</a>(self,&nbsp;bool&nbsp;deleteHandler=False)&nbsp;-&gt;&nbsp;EvtHandler<br>
&nbsp;<br>
Removes&nbsp;and&nbsp;returns&nbsp;the&nbsp;top-most&nbsp;event&nbsp;handler&nbsp;on&nbsp;the&nbsp;event&nbsp;handler<br>
stack.&nbsp;&nbsp;If&nbsp;deleteHandler&nbsp;is&nbsp;True&nbsp;then&nbsp;the&nbsp;wx.EvtHandler&nbsp;object&nbsp;will&nbsp;be<br>
destroyed&nbsp;after&nbsp;it&nbsp;is&nbsp;popped.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-PopupMenu"><strong>PopupMenu</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-PopupMenu">PopupMenu</a>(self,&nbsp;Menu&nbsp;menu,&nbsp;Point&nbsp;pos=DefaultPosition)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Pops&nbsp;up&nbsp;the&nbsp;given&nbsp;menu&nbsp;at&nbsp;the&nbsp;specified&nbsp;coordinates,&nbsp;relative&nbsp;to&nbsp;this&nbsp;window,<br>
and&nbsp;returns&nbsp;control&nbsp;when&nbsp;the&nbsp;user&nbsp;has&nbsp;dismissed&nbsp;the&nbsp;menu.&nbsp;If&nbsp;a&nbsp;menu&nbsp;item&nbsp;is<br>
selected,&nbsp;the&nbsp;corresponding&nbsp;menu&nbsp;event&nbsp;is&nbsp;generated&nbsp;and&nbsp;will&nbsp;be&nbsp;processed&nbsp;as<br>
usual.&nbsp;&nbsp;If&nbsp;the&nbsp;default&nbsp;position&nbsp;is&nbsp;given&nbsp;then&nbsp;the&nbsp;current&nbsp;position&nbsp;of&nbsp;the<br>
mouse&nbsp;cursor&nbsp;will&nbsp;be&nbsp;used.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-PopupMenuXY"><strong>PopupMenuXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-PopupMenuXY">PopupMenuXY</a>(self,&nbsp;Menu&nbsp;menu,&nbsp;int&nbsp;x=-1,&nbsp;int&nbsp;y=-1)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Pops&nbsp;up&nbsp;the&nbsp;given&nbsp;menu&nbsp;at&nbsp;the&nbsp;specified&nbsp;coordinates,&nbsp;relative&nbsp;to&nbsp;this&nbsp;window,<br>
and&nbsp;returns&nbsp;control&nbsp;when&nbsp;the&nbsp;user&nbsp;has&nbsp;dismissed&nbsp;the&nbsp;menu.&nbsp;If&nbsp;a&nbsp;menu&nbsp;item&nbsp;is<br>
selected,&nbsp;the&nbsp;corresponding&nbsp;menu&nbsp;event&nbsp;is&nbsp;generated&nbsp;and&nbsp;will&nbsp;be&nbsp;processed&nbsp;as<br>
usual.&nbsp;&nbsp;If&nbsp;the&nbsp;default&nbsp;position&nbsp;is&nbsp;given&nbsp;then&nbsp;the&nbsp;current&nbsp;position&nbsp;of&nbsp;the<br>
mouse&nbsp;cursor&nbsp;will&nbsp;be&nbsp;used.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-PostCreate"><strong>PostCreate</strong></a>(self, pre)</dt><dd><tt>Phase&nbsp;3&nbsp;of&nbsp;the&nbsp;2-phase&nbsp;create&nbsp;&lt;wink!&gt;<br>
Call&nbsp;this&nbsp;method&nbsp;after&nbsp;precreating&nbsp;the&nbsp;window&nbsp;with&nbsp;the&nbsp;2-phase&nbsp;create&nbsp;method.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-PrepareDC"><strong>PrepareDC</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-PrepareDC">PrepareDC</a>(self,&nbsp;DC&nbsp;dc)<br>
&nbsp;<br>
Call&nbsp;this&nbsp;function&nbsp;to&nbsp;prepare&nbsp;the&nbsp;device&nbsp;context&nbsp;for&nbsp;drawing&nbsp;a<br>
scrolled&nbsp;image.&nbsp;It&nbsp;sets&nbsp;the&nbsp;device&nbsp;origin&nbsp;according&nbsp;to&nbsp;the&nbsp;current<br>
scroll&nbsp;position.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-PushEventHandler"><strong>PushEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-PushEventHandler">PushEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)<br>
&nbsp;<br>
Pushes&nbsp;this&nbsp;event&nbsp;handler&nbsp;onto&nbsp;the&nbsp;event&nbsp;handler&nbsp;stack&nbsp;for&nbsp;the&nbsp;window.<br>
An&nbsp;event&nbsp;handler&nbsp;is&nbsp;an&nbsp;object&nbsp;that&nbsp;is&nbsp;capable&nbsp;of&nbsp;processing&nbsp;the&nbsp;events<br>
sent&nbsp;to&nbsp;a&nbsp;window.&nbsp;By&nbsp;default,&nbsp;the&nbsp;window&nbsp;is&nbsp;its&nbsp;own&nbsp;event&nbsp;handler,&nbsp;but<br>
an&nbsp;application&nbsp;may&nbsp;wish&nbsp;to&nbsp;substitute&nbsp;another,&nbsp;for&nbsp;example&nbsp;to&nbsp;allow<br>
central&nbsp;implementation&nbsp;of&nbsp;event-handling&nbsp;for&nbsp;a&nbsp;variety&nbsp;of&nbsp;different<br>
window&nbsp;classes.<br>
&nbsp;<br>
wx.Window.PushEventHandler&nbsp;allows&nbsp;an&nbsp;application&nbsp;to&nbsp;set&nbsp;up&nbsp;a&nbsp;chain&nbsp;of<br>
event&nbsp;handlers,&nbsp;where&nbsp;an&nbsp;event&nbsp;not&nbsp;handled&nbsp;by&nbsp;one&nbsp;event&nbsp;handler&nbsp;is<br>
handed&nbsp;to&nbsp;the&nbsp;next&nbsp;one&nbsp;in&nbsp;the&nbsp;chain.&nbsp;Use&nbsp;`wx.Window.PopEventHandler`&nbsp;to<br>
remove&nbsp;the&nbsp;event&nbsp;handler.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Raise"><strong>Raise</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Raise">Raise</a>(self)<br>
&nbsp;<br>
Raises&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;top&nbsp;of&nbsp;the&nbsp;window&nbsp;hierarchy.&nbsp;&nbsp;In&nbsp;current<br>
version&nbsp;of&nbsp;wxWidgets&nbsp;this&nbsp;works&nbsp;both&nbsp;for&nbsp;manage&nbsp;and&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Refresh"><strong>Refresh</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Refresh">Refresh</a>(self,&nbsp;bool&nbsp;eraseBackground=True,&nbsp;Rect&nbsp;rect=None)<br>
&nbsp;<br>
Mark&nbsp;the&nbsp;specified&nbsp;rectangle&nbsp;(or&nbsp;the&nbsp;whole&nbsp;window)&nbsp;as&nbsp;"dirty"&nbsp;so&nbsp;it<br>
will&nbsp;be&nbsp;repainted.&nbsp;&nbsp;Causes&nbsp;an&nbsp;EVT_PAINT&nbsp;event&nbsp;to&nbsp;be&nbsp;generated&nbsp;and&nbsp;sent<br>
to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-RefreshRect"><strong>RefreshRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-RefreshRect">RefreshRect</a>(self,&nbsp;Rect&nbsp;rect,&nbsp;bool&nbsp;eraseBackground=True)<br>
&nbsp;<br>
Redraws&nbsp;the&nbsp;contents&nbsp;of&nbsp;the&nbsp;given&nbsp;rectangle:&nbsp;the&nbsp;area&nbsp;inside&nbsp;it&nbsp;will<br>
be&nbsp;repainted.&nbsp;&nbsp;This&nbsp;is&nbsp;the&nbsp;same&nbsp;as&nbsp;Refresh&nbsp;but&nbsp;has&nbsp;a&nbsp;nicer&nbsp;syntax.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-RegisterHotKey"><strong>RegisterHotKey</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-RegisterHotKey">RegisterHotKey</a>(self,&nbsp;int&nbsp;hotkeyId,&nbsp;int&nbsp;modifiers,&nbsp;int&nbsp;keycode)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Registers&nbsp;a&nbsp;system&nbsp;wide&nbsp;hotkey.&nbsp;Every&nbsp;time&nbsp;the&nbsp;user&nbsp;presses&nbsp;the&nbsp;hotkey<br>
registered&nbsp;here,&nbsp;this&nbsp;window&nbsp;will&nbsp;receive&nbsp;a&nbsp;hotkey&nbsp;event.&nbsp;It&nbsp;will<br>
receive&nbsp;the&nbsp;event&nbsp;even&nbsp;if&nbsp;the&nbsp;application&nbsp;is&nbsp;in&nbsp;the&nbsp;background&nbsp;and<br>
does&nbsp;not&nbsp;have&nbsp;the&nbsp;input&nbsp;focus&nbsp;because&nbsp;the&nbsp;user&nbsp;is&nbsp;working&nbsp;with&nbsp;some<br>
other&nbsp;application.&nbsp;&nbsp;To&nbsp;bind&nbsp;an&nbsp;event&nbsp;handler&nbsp;function&nbsp;to&nbsp;this&nbsp;hotkey<br>
use&nbsp;EVT_HOTKEY&nbsp;with&nbsp;an&nbsp;id&nbsp;equal&nbsp;to&nbsp;hotkeyId.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the<br>
hotkey&nbsp;was&nbsp;registered&nbsp;successfully.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ReleaseMouse"><strong>ReleaseMouse</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-ReleaseMouse">ReleaseMouse</a>(self)<br>
&nbsp;<br>
Releases&nbsp;mouse&nbsp;input&nbsp;captured&nbsp;with&nbsp;wx.Window.CaptureMouse.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-RemoveChild"><strong>RemoveChild</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-RemoveChild">RemoveChild</a>(self,&nbsp;Window&nbsp;child)<br>
&nbsp;<br>
Removes&nbsp;a&nbsp;child&nbsp;window.&nbsp;This&nbsp;is&nbsp;called&nbsp;automatically&nbsp;by&nbsp;window<br>
deletion&nbsp;functions&nbsp;so&nbsp;should&nbsp;not&nbsp;be&nbsp;required&nbsp;by&nbsp;the&nbsp;application<br>
programmer.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-RemoveEventHandler"><strong>RemoveEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-RemoveEventHandler">RemoveEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Find&nbsp;the&nbsp;given&nbsp;handler&nbsp;in&nbsp;the&nbsp;event&nbsp;handler&nbsp;chain&nbsp;and&nbsp;remove&nbsp;(but&nbsp;not<br>
delete)&nbsp;it&nbsp;from&nbsp;the&nbsp;event&nbsp;handler&nbsp;chain,&nbsp;return&nbsp;True&nbsp;if&nbsp;it&nbsp;was&nbsp;found<br>
and&nbsp;False&nbsp;otherwise&nbsp;(this&nbsp;also&nbsp;results&nbsp;in&nbsp;an&nbsp;assert&nbsp;failure&nbsp;so&nbsp;this<br>
function&nbsp;should&nbsp;only&nbsp;be&nbsp;called&nbsp;when&nbsp;the&nbsp;handler&nbsp;is&nbsp;supposed&nbsp;to&nbsp;be<br>
there.)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Reparent"><strong>Reparent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Reparent">Reparent</a>(self,&nbsp;Window&nbsp;newParent)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Reparents&nbsp;the&nbsp;window,&nbsp;i.e&nbsp;the&nbsp;window&nbsp;will&nbsp;be&nbsp;removed&nbsp;from&nbsp;its&nbsp;current<br>
parent&nbsp;window&nbsp;(e.g.&nbsp;a&nbsp;non-standard&nbsp;toolbar&nbsp;in&nbsp;a&nbsp;wxFrame)&nbsp;and&nbsp;then<br>
re-inserted&nbsp;into&nbsp;another.&nbsp;Available&nbsp;on&nbsp;Windows&nbsp;and&nbsp;GTK.&nbsp;&nbsp;Returns&nbsp;True<br>
if&nbsp;the&nbsp;parent&nbsp;was&nbsp;changed,&nbsp;False&nbsp;otherwise&nbsp;(error&nbsp;or&nbsp;newParent&nbsp;==<br>
oldParent)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ScreenToClient"><strong>ScreenToClient</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-ScreenToClient">ScreenToClient</a>(self,&nbsp;Point&nbsp;pt)&nbsp;-&gt;&nbsp;Point<br>
&nbsp;<br>
Converts&nbsp;from&nbsp;screen&nbsp;to&nbsp;client&nbsp;window&nbsp;coordinates.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ScreenToClientXY"><strong>ScreenToClientXY</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-ScreenToClientXY">ScreenToClientXY</a>(int&nbsp;x,&nbsp;int&nbsp;y)&nbsp;-&gt;&nbsp;(x,y)<br>
&nbsp;<br>
Converts&nbsp;from&nbsp;screen&nbsp;to&nbsp;client&nbsp;window&nbsp;coordinates.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ScrollLines"><strong>ScrollLines</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-ScrollLines">ScrollLines</a>(self,&nbsp;int&nbsp;lines)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
If&nbsp;the&nbsp;platform&nbsp;and&nbsp;window&nbsp;class&nbsp;supports&nbsp;it,&nbsp;scrolls&nbsp;the&nbsp;window&nbsp;by<br>
the&nbsp;given&nbsp;number&nbsp;of&nbsp;lines&nbsp;down,&nbsp;if&nbsp;lines&nbsp;is&nbsp;positive,&nbsp;or&nbsp;up&nbsp;if&nbsp;lines<br>
is&nbsp;negative.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;window&nbsp;was&nbsp;scrolled,&nbsp;False&nbsp;if&nbsp;it&nbsp;was<br>
already&nbsp;on&nbsp;top/bottom&nbsp;and&nbsp;nothing&nbsp;was&nbsp;done.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ScrollPages"><strong>ScrollPages</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-ScrollPages">ScrollPages</a>(self,&nbsp;int&nbsp;pages)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
If&nbsp;the&nbsp;platform&nbsp;and&nbsp;window&nbsp;class&nbsp;supports&nbsp;it,&nbsp;scrolls&nbsp;the&nbsp;window&nbsp;by<br>
the&nbsp;given&nbsp;number&nbsp;of&nbsp;pages&nbsp;down,&nbsp;if&nbsp;pages&nbsp;is&nbsp;positive,&nbsp;or&nbsp;up&nbsp;if&nbsp;pages<br>
is&nbsp;negative.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;window&nbsp;was&nbsp;scrolled,&nbsp;False&nbsp;if&nbsp;it&nbsp;was<br>
already&nbsp;on&nbsp;top/bottom&nbsp;and&nbsp;nothing&nbsp;was&nbsp;done.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ScrollWindow"><strong>ScrollWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-ScrollWindow">ScrollWindow</a>(self,&nbsp;int&nbsp;dx,&nbsp;int&nbsp;dy,&nbsp;Rect&nbsp;rect=None)<br>
&nbsp;<br>
Physically&nbsp;scrolls&nbsp;the&nbsp;pixels&nbsp;in&nbsp;the&nbsp;window&nbsp;and&nbsp;move&nbsp;child&nbsp;windows<br>
accordingly.&nbsp;&nbsp;Use&nbsp;this&nbsp;function&nbsp;to&nbsp;optimise&nbsp;your&nbsp;scrolling<br>
implementations,&nbsp;to&nbsp;minimise&nbsp;the&nbsp;area&nbsp;that&nbsp;must&nbsp;be&nbsp;redrawn.&nbsp;Note&nbsp;that<br>
it&nbsp;is&nbsp;rarely&nbsp;required&nbsp;to&nbsp;call&nbsp;this&nbsp;function&nbsp;from&nbsp;a&nbsp;user&nbsp;program.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SendSizeEvent"><strong>SendSizeEvent</strong></a>(self)</dt></dl>

<dl><dt><a name="NavigationToolbarWx-SetAcceleratorTable"><strong>SetAcceleratorTable</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetAcceleratorTable">SetAcceleratorTable</a>(self,&nbsp;AcceleratorTable&nbsp;accel)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;accelerator&nbsp;table&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetAutoLayout"><strong>SetAutoLayout</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetAutoLayout">SetAutoLayout</a>(self,&nbsp;bool&nbsp;autoLayout)<br>
&nbsp;<br>
Determines&nbsp;whether&nbsp;the&nbsp;Layout&nbsp;function&nbsp;will&nbsp;be&nbsp;called&nbsp;automatically<br>
when&nbsp;the&nbsp;window&nbsp;is&nbsp;resized.&nbsp;&nbsp;It&nbsp;is&nbsp;called&nbsp;implicitly&nbsp;by&nbsp;SetSizer&nbsp;but<br>
if&nbsp;you&nbsp;use&nbsp;SetConstraints&nbsp;you&nbsp;should&nbsp;call&nbsp;it&nbsp;manually&nbsp;or&nbsp;otherwise&nbsp;the<br>
window&nbsp;layout&nbsp;won't&nbsp;be&nbsp;correctly&nbsp;updated&nbsp;when&nbsp;its&nbsp;size&nbsp;changes.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetBackgroundColour"><strong>SetBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetBackgroundColour">SetBackgroundColour</a>(self,&nbsp;Colour&nbsp;colour)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;background&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;colour<br>
was&nbsp;changed.&nbsp;&nbsp;The&nbsp;background&nbsp;colour&nbsp;is&nbsp;usually&nbsp;painted&nbsp;by&nbsp;the&nbsp;default<br>
EVT_ERASE_BACKGROUND&nbsp;event&nbsp;handler&nbsp;function&nbsp;under&nbsp;Windows&nbsp;and<br>
automatically&nbsp;under&nbsp;GTK.&nbsp;&nbsp;Using&nbsp;`wx.NullColour`&nbsp;will&nbsp;reset&nbsp;the&nbsp;window<br>
to&nbsp;the&nbsp;default&nbsp;background&nbsp;colour.<br>
&nbsp;<br>
Note&nbsp;that&nbsp;setting&nbsp;the&nbsp;background&nbsp;colour&nbsp;may&nbsp;not&nbsp;cause&nbsp;an&nbsp;immediate<br>
refresh,&nbsp;so&nbsp;you&nbsp;may&nbsp;wish&nbsp;to&nbsp;call&nbsp;`ClearBackground`&nbsp;or&nbsp;`Refresh`&nbsp;after<br>
calling&nbsp;this&nbsp;function.<br>
&nbsp;<br>
Using&nbsp;this&nbsp;function&nbsp;will&nbsp;disable&nbsp;attempts&nbsp;to&nbsp;use&nbsp;themes&nbsp;for&nbsp;this<br>
window,&nbsp;if&nbsp;the&nbsp;system&nbsp;supports&nbsp;them.&nbsp;&nbsp;Use&nbsp;with&nbsp;care&nbsp;since&nbsp;usually&nbsp;the<br>
themes&nbsp;represent&nbsp;the&nbsp;appearance&nbsp;chosen&nbsp;by&nbsp;the&nbsp;user&nbsp;to&nbsp;be&nbsp;used&nbsp;for&nbsp;all<br>
applications&nbsp;on&nbsp;the&nbsp;system.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetBackgroundStyle"><strong>SetBackgroundStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetBackgroundStyle">SetBackgroundStyle</a>(self,&nbsp;int&nbsp;style)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;background&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;The&nbsp;background&nbsp;style<br>
indicates&nbsp;how&nbsp;the&nbsp;background&nbsp;of&nbsp;the&nbsp;window&nbsp;is&nbsp;drawn.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;======================&nbsp;&nbsp;========================================<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_SYSTEM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;colour&nbsp;or&nbsp;pattern&nbsp;should<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;be&nbsp;determined&nbsp;by&nbsp;the&nbsp;system<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_COLOUR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;should&nbsp;be&nbsp;a&nbsp;solid&nbsp;colour<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.BG_STYLE_CUSTOM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;background&nbsp;will&nbsp;be&nbsp;implemented&nbsp;by&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;application.<br>
&nbsp;&nbsp;&nbsp;&nbsp;======================&nbsp;&nbsp;========================================<br>
&nbsp;<br>
On&nbsp;GTK+,&nbsp;use&nbsp;of&nbsp;wx.BG_STYLE_CUSTOM&nbsp;allows&nbsp;the&nbsp;flicker-free&nbsp;drawing&nbsp;of<br>
a&nbsp;custom&nbsp;background,&nbsp;such&nbsp;as&nbsp;a&nbsp;tiled&nbsp;bitmap.&nbsp;Currently&nbsp;the&nbsp;style&nbsp;has<br>
no&nbsp;effect&nbsp;on&nbsp;other&nbsp;platforms.<br>
&nbsp;<br>
:see:&nbsp;`GetBackgroundStyle`,&nbsp;`SetBackgroundColour`</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetBestFittingSize"><strong>SetBestFittingSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetBestFittingSize">SetBestFittingSize</a>(self,&nbsp;Size&nbsp;size=DefaultSize)<br>
&nbsp;<br>
A&nbsp;'Smart'&nbsp;SetSize&nbsp;that&nbsp;will&nbsp;fill&nbsp;in&nbsp;default&nbsp;size&nbsp;components&nbsp;with&nbsp;the<br>
window's&nbsp;*best&nbsp;size*&nbsp;values.&nbsp;&nbsp;Also&nbsp;set's&nbsp;the&nbsp;minsize&nbsp;for&nbsp;use&nbsp;with&nbsp;sizers.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetCaret"><strong>SetCaret</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetCaret">SetCaret</a>(self,&nbsp;Caret&nbsp;caret)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;caret&nbsp;associated&nbsp;with&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetClientRect"><strong>SetClientRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetClientRect">SetClientRect</a>(self,&nbsp;Rect&nbsp;rect)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetClientSize"><strong>SetClientSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetClientSize">SetClientSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetClientSizeWH"><strong>SetClientSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetClientSizeWH">SetClientSizeWH</a>(self,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height)<br>
&nbsp;<br>
This&nbsp;sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;client&nbsp;area&nbsp;in&nbsp;pixels.&nbsp;Using&nbsp;this<br>
function&nbsp;to&nbsp;size&nbsp;a&nbsp;window&nbsp;tends&nbsp;to&nbsp;be&nbsp;more&nbsp;device-independent&nbsp;than<br>
wx.Window.SetSize,&nbsp;since&nbsp;the&nbsp;application&nbsp;need&nbsp;not&nbsp;worry&nbsp;about&nbsp;what<br>
dimensions&nbsp;the&nbsp;border&nbsp;or&nbsp;title&nbsp;bar&nbsp;have&nbsp;when&nbsp;trying&nbsp;to&nbsp;fit&nbsp;the&nbsp;window<br>
around&nbsp;panel&nbsp;items,&nbsp;for&nbsp;example.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetConstraints"><strong>SetConstraints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetConstraints">SetConstraints</a>(self,&nbsp;LayoutConstraints&nbsp;constraints)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window&nbsp;to&nbsp;have&nbsp;the&nbsp;given&nbsp;layout&nbsp;constraints.&nbsp;If&nbsp;an&nbsp;existing<br>
layout&nbsp;constraints&nbsp;object&nbsp;is&nbsp;already&nbsp;owned&nbsp;by&nbsp;the&nbsp;window,&nbsp;it&nbsp;will&nbsp;be<br>
deleted.&nbsp;&nbsp;Pass&nbsp;None&nbsp;to&nbsp;disassociate&nbsp;and&nbsp;delete&nbsp;the&nbsp;window's&nbsp;current<br>
constraints.<br>
&nbsp;<br>
You&nbsp;must&nbsp;call&nbsp;SetAutoLayout&nbsp;to&nbsp;tell&nbsp;a&nbsp;window&nbsp;to&nbsp;use&nbsp;the&nbsp;constraints<br>
automatically&nbsp;in&nbsp;its&nbsp;default&nbsp;EVT_SIZE&nbsp;handler;&nbsp;otherwise,&nbsp;you&nbsp;must<br>
handle&nbsp;EVT_SIZE&nbsp;yourself&nbsp;and&nbsp;call&nbsp;<a href="#Toolbar-Layout">Layout</a>()&nbsp;explicitly.&nbsp;When&nbsp;setting<br>
both&nbsp;a&nbsp;wx.LayoutConstraints&nbsp;and&nbsp;a&nbsp;wx.Sizer,&nbsp;only&nbsp;the&nbsp;sizer&nbsp;will&nbsp;have<br>
effect.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetContainingSizer"><strong>SetContainingSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetContainingSizer">SetContainingSizer</a>(self,&nbsp;Sizer&nbsp;sizer)<br>
&nbsp;<br>
This&nbsp;normally&nbsp;does&nbsp;not&nbsp;need&nbsp;to&nbsp;be&nbsp;called&nbsp;by&nbsp;application&nbsp;code.&nbsp;It&nbsp;is<br>
called&nbsp;internally&nbsp;when&nbsp;a&nbsp;window&nbsp;is&nbsp;added&nbsp;to&nbsp;a&nbsp;sizer,&nbsp;and&nbsp;is&nbsp;used&nbsp;so<br>
the&nbsp;window&nbsp;can&nbsp;remove&nbsp;itself&nbsp;from&nbsp;the&nbsp;sizer&nbsp;when&nbsp;it&nbsp;is&nbsp;destroyed.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetCursor"><strong>SetCursor</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetCursor">SetCursor</a>(self,&nbsp;Cursor&nbsp;cursor)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;cursor.&nbsp;Notice&nbsp;that&nbsp;the&nbsp;window&nbsp;cursor&nbsp;also&nbsp;sets&nbsp;it<br>
for&nbsp;the&nbsp;children&nbsp;of&nbsp;the&nbsp;window&nbsp;implicitly.<br>
&nbsp;<br>
The&nbsp;cursor&nbsp;may&nbsp;be&nbsp;wx.NullCursor&nbsp;in&nbsp;which&nbsp;case&nbsp;the&nbsp;window&nbsp;cursor&nbsp;will<br>
be&nbsp;reset&nbsp;back&nbsp;to&nbsp;default.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetDefaultItem"><strong>SetDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetDefaultItem">SetDefaultItem</a>(self,&nbsp;Window&nbsp;child)&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Set&nbsp;this&nbsp;child&nbsp;as&nbsp;default,&nbsp;return&nbsp;the&nbsp;old&nbsp;default.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetDimensions"><strong>SetDimensions</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetDimensions">SetDimensions</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height,&nbsp;int&nbsp;sizeFlags=SIZE_AUTO)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;and&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;The&nbsp;sizeFlags<br>
parameter&nbsp;indicates&nbsp;the&nbsp;interpretation&nbsp;of&nbsp;the&nbsp;other&nbsp;params&nbsp;if&nbsp;they&nbsp;are<br>
equal&nbsp;to&nbsp;-1.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;========================&nbsp;&nbsp;======================================<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.SIZE_AUTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;-1&nbsp;indicates&nbsp;that&nbsp;a&nbsp;class-specific<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;should&nbsp;be&nbsp;used.<br>
&nbsp;&nbsp;&nbsp;&nbsp;wx.SIZE_USE_EXISTING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Axisting&nbsp;dimensions&nbsp;should&nbsp;be&nbsp;used&nbsp;if<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;values&nbsp;are&nbsp;supplied.<br>
&nbsp;&nbsp;&nbsp;&nbsp;wxSIZE_ALLOW_MINUS_ONE&nbsp;&nbsp;&nbsp;&nbsp;Allow&nbsp;dimensions&nbsp;of&nbsp;-1&nbsp;and&nbsp;less&nbsp;to&nbsp;be<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interpreted&nbsp;as&nbsp;real&nbsp;dimensions,&nbsp;not<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;values.<br>
&nbsp;&nbsp;&nbsp;&nbsp;========================&nbsp;&nbsp;======================================</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetDropTarget"><strong>SetDropTarget</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetDropTarget">SetDropTarget</a>(self,&nbsp;DropTarget&nbsp;dropTarget)<br>
&nbsp;<br>
Associates&nbsp;a&nbsp;drop&nbsp;target&nbsp;with&nbsp;this&nbsp;window.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;already&nbsp;has<br>
a&nbsp;drop&nbsp;target,&nbsp;it&nbsp;is&nbsp;deleted.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetEventHandler"><strong>SetEventHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetEventHandler">SetEventHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;event&nbsp;handler&nbsp;for&nbsp;this&nbsp;window.&nbsp;&nbsp;An&nbsp;event&nbsp;handler&nbsp;is&nbsp;an&nbsp;object<br>
that&nbsp;is&nbsp;capable&nbsp;of&nbsp;processing&nbsp;the&nbsp;events&nbsp;sent&nbsp;to&nbsp;a&nbsp;window.&nbsp;By&nbsp;default,<br>
the&nbsp;window&nbsp;is&nbsp;its&nbsp;own&nbsp;event&nbsp;handler,&nbsp;but&nbsp;an&nbsp;application&nbsp;may&nbsp;wish&nbsp;to<br>
substitute&nbsp;another,&nbsp;for&nbsp;example&nbsp;to&nbsp;allow&nbsp;central&nbsp;implementation&nbsp;of<br>
event-handling&nbsp;for&nbsp;a&nbsp;variety&nbsp;of&nbsp;different&nbsp;window&nbsp;classes.<br>
&nbsp;<br>
It&nbsp;is&nbsp;usually&nbsp;better&nbsp;to&nbsp;use&nbsp;`wx.Window.PushEventHandler`&nbsp;since&nbsp;this&nbsp;sets<br>
up&nbsp;a&nbsp;chain&nbsp;of&nbsp;event&nbsp;handlers,&nbsp;where&nbsp;an&nbsp;event&nbsp;not&nbsp;handled&nbsp;by&nbsp;one&nbsp;event<br>
handler&nbsp;is&nbsp;handed&nbsp;to&nbsp;the&nbsp;next&nbsp;one&nbsp;in&nbsp;the&nbsp;chain.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetExtraStyle"><strong>SetExtraStyle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetExtraStyle">SetExtraStyle</a>(self,&nbsp;long&nbsp;exStyle)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;extra&nbsp;style&nbsp;bits&nbsp;for&nbsp;the&nbsp;window.&nbsp;&nbsp;Extra&nbsp;styles&nbsp;are&nbsp;the&nbsp;less<br>
often&nbsp;used&nbsp;style&nbsp;bits&nbsp;which&nbsp;can't&nbsp;be&nbsp;set&nbsp;with&nbsp;the&nbsp;constructor&nbsp;or&nbsp;with<br>
<a href="#Toolbar-SetWindowStyleFlag">SetWindowStyleFlag</a>()</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetFocus"><strong>SetFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetFocus">SetFocus</a>(self)<br>
&nbsp;<br>
Set's&nbsp;the&nbsp;focus&nbsp;to&nbsp;this&nbsp;window,&nbsp;allowing&nbsp;it&nbsp;to&nbsp;receive&nbsp;keyboard&nbsp;input.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetFocusFromKbd"><strong>SetFocusFromKbd</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetFocusFromKbd">SetFocusFromKbd</a>(self)<br>
&nbsp;<br>
Set&nbsp;focus&nbsp;to&nbsp;this&nbsp;window&nbsp;as&nbsp;the&nbsp;result&nbsp;of&nbsp;a&nbsp;keyboard&nbsp;action.&nbsp;&nbsp;Normally<br>
only&nbsp;called&nbsp;internally.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetFont"><strong>SetFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetFont">SetFont</a>(self,&nbsp;Font&nbsp;font)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;font&nbsp;for&nbsp;this&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetForegroundColour"><strong>SetForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetForegroundColour">SetForegroundColour</a>(self,&nbsp;Colour&nbsp;colour)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;foreground&nbsp;colour&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Returns&nbsp;True&nbsp;is&nbsp;the&nbsp;colour<br>
was&nbsp;changed.&nbsp;&nbsp;The&nbsp;interpretation&nbsp;of&nbsp;foreground&nbsp;colour&nbsp;is&nbsp;dependent&nbsp;on<br>
the&nbsp;window&nbsp;class;&nbsp;it&nbsp;may&nbsp;be&nbsp;the&nbsp;text&nbsp;colour&nbsp;or&nbsp;other&nbsp;colour,&nbsp;or&nbsp;it&nbsp;may<br>
not&nbsp;be&nbsp;used&nbsp;at&nbsp;all.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetHelpText"><strong>SetHelpText</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetHelpText">SetHelpText</a>(self,&nbsp;String&nbsp;text)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;help&nbsp;text&nbsp;to&nbsp;be&nbsp;used&nbsp;as&nbsp;context-sensitive&nbsp;help&nbsp;for&nbsp;this<br>
window.&nbsp;&nbsp;Note&nbsp;that&nbsp;the&nbsp;text&nbsp;is&nbsp;actually&nbsp;stored&nbsp;by&nbsp;the&nbsp;current<br>
wxHelpProvider&nbsp;implementation,&nbsp;and&nbsp;not&nbsp;in&nbsp;the&nbsp;window&nbsp;object&nbsp;itself.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetHelpTextForId"><strong>SetHelpTextForId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetHelpTextForId">SetHelpTextForId</a>(self,&nbsp;String&nbsp;text)<br>
&nbsp;<br>
Associate&nbsp;this&nbsp;help&nbsp;text&nbsp;with&nbsp;all&nbsp;windows&nbsp;with&nbsp;the&nbsp;same&nbsp;id&nbsp;as&nbsp;this<br>
one.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetId"><strong>SetId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetId">SetId</a>(self,&nbsp;int&nbsp;winid)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;identifier&nbsp;of&nbsp;the&nbsp;window.&nbsp;&nbsp;Each&nbsp;window&nbsp;has&nbsp;an&nbsp;integer<br>
identifier.&nbsp;If&nbsp;the&nbsp;application&nbsp;has&nbsp;not&nbsp;provided&nbsp;one,&nbsp;an&nbsp;identifier<br>
will&nbsp;be&nbsp;generated.&nbsp;Normally,&nbsp;the&nbsp;identifier&nbsp;should&nbsp;be&nbsp;provided&nbsp;on<br>
creation&nbsp;and&nbsp;should&nbsp;not&nbsp;be&nbsp;modified&nbsp;subsequently.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetMaxSize"><strong>SetMaxSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetMaxSize">SetMaxSize</a>(self,&nbsp;Size&nbsp;maxSize)<br>
&nbsp;<br>
A&nbsp;more&nbsp;convenient&nbsp;method&nbsp;than&nbsp;`SetSizeHints`&nbsp;for&nbsp;setting&nbsp;just&nbsp;the<br>
max&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetMinSize"><strong>SetMinSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetMinSize">SetMinSize</a>(self,&nbsp;Size&nbsp;minSize)<br>
&nbsp;<br>
A&nbsp;more&nbsp;convenient&nbsp;method&nbsp;than&nbsp;`SetSizeHints`&nbsp;for&nbsp;setting&nbsp;just&nbsp;the<br>
min&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetName"><strong>SetName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetName">SetName</a>(self,&nbsp;String&nbsp;name)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;name.&nbsp;&nbsp;The&nbsp;window&nbsp;name&nbsp;is&nbsp;used&nbsp;for&nbsp;ressource&nbsp;setting<br>
in&nbsp;X,&nbsp;it&nbsp;is&nbsp;not&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;window&nbsp;title/label</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetOwnBackgroundColour"><strong>SetOwnBackgroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetOwnBackgroundColour">SetOwnBackgroundColour</a>(self,&nbsp;Colour&nbsp;colour)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetOwnFont"><strong>SetOwnFont</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetOwnFont">SetOwnFont</a>(self,&nbsp;Font&nbsp;font)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetOwnForegroundColour"><strong>SetOwnForegroundColour</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetOwnForegroundColour">SetOwnForegroundColour</a>(self,&nbsp;Colour&nbsp;colour)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetPosition"><strong>SetPosition</strong></a> = Move(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Move">Move</a>(self,&nbsp;Point&nbsp;pt,&nbsp;int&nbsp;flags=SIZE_USE_EXISTING)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;window&nbsp;to&nbsp;the&nbsp;given&nbsp;position.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetRect"><strong>SetRect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetRect">SetRect</a>(self,&nbsp;Rect&nbsp;rect,&nbsp;int&nbsp;sizeFlags=SIZE_AUTO)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;and&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels&nbsp;using&nbsp;a&nbsp;wx.Rect.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetScrollPos"><strong>SetScrollPos</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetScrollPos">SetScrollPos</a>(self,&nbsp;int&nbsp;orientation,&nbsp;int&nbsp;pos,&nbsp;bool&nbsp;refresh=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;position&nbsp;of&nbsp;one&nbsp;of&nbsp;the&nbsp;built-in&nbsp;scrollbars.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetScrollbar"><strong>SetScrollbar</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetScrollbar">SetScrollbar</a>(self,&nbsp;int&nbsp;orientation,&nbsp;int&nbsp;position,&nbsp;int&nbsp;thumbSize,&nbsp;int&nbsp;range,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;refresh=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;scrollbar&nbsp;properties&nbsp;of&nbsp;a&nbsp;built-in&nbsp;scrollbar.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetSize"><strong>SetSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetSize">SetSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetSizeHints"><strong>SetSizeHints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetSizeHints">SetSizeHints</a>(self,&nbsp;int&nbsp;minW,&nbsp;int&nbsp;minH,&nbsp;int&nbsp;maxW=-1,&nbsp;int&nbsp;maxH=-1,&nbsp;int&nbsp;incW=-1,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;incH=-1)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;window&nbsp;sizes,&nbsp;and&nbsp;window<br>
size&nbsp;increments.&nbsp;If&nbsp;a&nbsp;pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the<br>
default&nbsp;values&nbsp;will&nbsp;be&nbsp;used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user<br>
will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds&nbsp;(if&nbsp;it&nbsp;is<br>
a&nbsp;top-level&nbsp;window.)&nbsp;&nbsp;Sizers&nbsp;will&nbsp;also&nbsp;inspect&nbsp;the&nbsp;minimum&nbsp;window&nbsp;size<br>
and&nbsp;will&nbsp;use&nbsp;that&nbsp;value&nbsp;if&nbsp;set&nbsp;when&nbsp;calculating&nbsp;layout.<br>
&nbsp;<br>
The&nbsp;resizing&nbsp;increments&nbsp;are&nbsp;only&nbsp;significant&nbsp;under&nbsp;Motif&nbsp;or&nbsp;Xt.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetSizeHintsSz"><strong>SetSizeHintsSz</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetSizeHintsSz">SetSizeHintsSz</a>(self,&nbsp;Size&nbsp;minSize,&nbsp;Size&nbsp;maxSize=DefaultSize,&nbsp;Size&nbsp;incSize=DefaultSize)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;window&nbsp;sizes,&nbsp;and&nbsp;window<br>
size&nbsp;increments.&nbsp;If&nbsp;a&nbsp;pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the<br>
default&nbsp;values&nbsp;will&nbsp;be&nbsp;used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user<br>
will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds&nbsp;(if&nbsp;it&nbsp;is<br>
a&nbsp;top-level&nbsp;window.)&nbsp;&nbsp;Sizers&nbsp;will&nbsp;also&nbsp;inspect&nbsp;the&nbsp;minimum&nbsp;window&nbsp;size<br>
and&nbsp;will&nbsp;use&nbsp;that&nbsp;value&nbsp;if&nbsp;set&nbsp;when&nbsp;calculating&nbsp;layout.<br>
&nbsp;<br>
The&nbsp;resizing&nbsp;increments&nbsp;are&nbsp;only&nbsp;significant&nbsp;under&nbsp;Motif&nbsp;or&nbsp;Xt.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetSizeWH"><strong>SetSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetSizeWH">SetSizeWH</a>(self,&nbsp;int&nbsp;width,&nbsp;int&nbsp;height)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;window&nbsp;in&nbsp;pixels.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetSizer"><strong>SetSizer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetSizer">SetSizer</a>(self,&nbsp;Sizer&nbsp;sizer,&nbsp;bool&nbsp;deleteOld=True)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window&nbsp;to&nbsp;have&nbsp;the&nbsp;given&nbsp;layout&nbsp;sizer.&nbsp;The&nbsp;window&nbsp;will&nbsp;then<br>
own&nbsp;the&nbsp;object,&nbsp;and&nbsp;will&nbsp;take&nbsp;care&nbsp;of&nbsp;its&nbsp;deletion.&nbsp;If&nbsp;an&nbsp;existing<br>
layout&nbsp;sizer&nbsp;object&nbsp;is&nbsp;already&nbsp;owned&nbsp;by&nbsp;the&nbsp;window,&nbsp;it&nbsp;will&nbsp;be&nbsp;deleted<br>
if&nbsp;the&nbsp;deleteOld&nbsp;parameter&nbsp;is&nbsp;true.&nbsp;Note&nbsp;that&nbsp;this&nbsp;function&nbsp;will&nbsp;also<br>
call&nbsp;SetAutoLayout&nbsp;implicitly&nbsp;with&nbsp;a&nbsp;True&nbsp;parameter&nbsp;if&nbsp;the&nbsp;sizer&nbsp;is<br>
non-None,&nbsp;and&nbsp;False&nbsp;otherwise.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetSizerAndFit"><strong>SetSizerAndFit</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetSizerAndFit">SetSizerAndFit</a>(self,&nbsp;Sizer&nbsp;sizer,&nbsp;bool&nbsp;deleteOld=True)<br>
&nbsp;<br>
The&nbsp;same&nbsp;as&nbsp;SetSizer,&nbsp;except&nbsp;it&nbsp;also&nbsp;sets&nbsp;the&nbsp;size&nbsp;hints&nbsp;for&nbsp;the<br>
window&nbsp;based&nbsp;on&nbsp;the&nbsp;sizer's&nbsp;minimum&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetThemeEnabled"><strong>SetThemeEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetThemeEnabled">SetThemeEnabled</a>(self,&nbsp;bool&nbsp;enableTheme)<br>
&nbsp;<br>
This&nbsp;function&nbsp;tells&nbsp;a&nbsp;window&nbsp;if&nbsp;it&nbsp;should&nbsp;use&nbsp;the&nbsp;system's&nbsp;"theme"<br>
&nbsp;code&nbsp;to&nbsp;draw&nbsp;the&nbsp;windows'&nbsp;background&nbsp;instead&nbsp;if&nbsp;its&nbsp;own&nbsp;background<br>
&nbsp;drawing&nbsp;code.&nbsp;This&nbsp;will&nbsp;only&nbsp;have&nbsp;an&nbsp;effect&nbsp;on&nbsp;platforms&nbsp;that&nbsp;support<br>
&nbsp;the&nbsp;notion&nbsp;of&nbsp;themes&nbsp;in&nbsp;user&nbsp;defined&nbsp;windows.&nbsp;One&nbsp;such&nbsp;platform&nbsp;is<br>
&nbsp;GTK+&nbsp;where&nbsp;windows&nbsp;can&nbsp;have&nbsp;(very&nbsp;colourful)&nbsp;backgrounds&nbsp;defined&nbsp;by&nbsp;a<br>
&nbsp;user's&nbsp;selected&nbsp;theme.<br>
&nbsp;<br>
Dialogs,&nbsp;notebook&nbsp;pages&nbsp;and&nbsp;the&nbsp;status&nbsp;bar&nbsp;have&nbsp;this&nbsp;flag&nbsp;set&nbsp;to&nbsp;true<br>
by&nbsp;default&nbsp;so&nbsp;that&nbsp;the&nbsp;default&nbsp;look&nbsp;and&nbsp;feel&nbsp;is&nbsp;simulated&nbsp;best.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetTitle"><strong>SetTitle</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetTitle">SetTitle</a>(self,&nbsp;String&nbsp;title)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;window's&nbsp;title.&nbsp;Applicable&nbsp;only&nbsp;to&nbsp;frames&nbsp;and&nbsp;dialogs.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetTmpDefaultItem"><strong>SetTmpDefaultItem</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetTmpDefaultItem">SetTmpDefaultItem</a>(self,&nbsp;Window&nbsp;win)<br>
&nbsp;<br>
Set&nbsp;this&nbsp;child&nbsp;as&nbsp;temporary&nbsp;default</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetToolTip"><strong>SetToolTip</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetToolTip">SetToolTip</a>(self,&nbsp;ToolTip&nbsp;tip)<br>
&nbsp;<br>
Attach&nbsp;a&nbsp;tooltip&nbsp;to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetToolTipString"><strong>SetToolTipString</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetToolTipString">SetToolTipString</a>(self,&nbsp;String&nbsp;tip)<br>
&nbsp;<br>
Attach&nbsp;a&nbsp;tooltip&nbsp;to&nbsp;the&nbsp;window.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetValidator"><strong>SetValidator</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetValidator">SetValidator</a>(self,&nbsp;Validator&nbsp;validator)<br>
&nbsp;<br>
Deletes&nbsp;the&nbsp;current&nbsp;validator&nbsp;(if&nbsp;any)&nbsp;and&nbsp;sets&nbsp;the&nbsp;window&nbsp;validator,<br>
having&nbsp;called&nbsp;wx.Validator.Clone&nbsp;to&nbsp;create&nbsp;a&nbsp;new&nbsp;validator&nbsp;of&nbsp;this<br>
type.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetVirtualSize"><strong>SetVirtualSize</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetVirtualSize">SetVirtualSize</a>(self,&nbsp;Size&nbsp;size)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;a&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows&nbsp;this<br>
is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetVirtualSizeHints"><strong>SetVirtualSizeHints</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetVirtualSizeHints">SetVirtualSizeHints</a>(self,&nbsp;int&nbsp;minW,&nbsp;int&nbsp;minH,&nbsp;int&nbsp;maxW=-1,&nbsp;int&nbsp;maxH=-1)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;virtual&nbsp;window&nbsp;sizes.&nbsp;If&nbsp;a<br>
pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the&nbsp;default&nbsp;values&nbsp;will&nbsp;be<br>
used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user&nbsp;will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size<br>
the&nbsp;virtual&nbsp;area&nbsp;of&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetVirtualSizeHintsSz"><strong>SetVirtualSizeHintsSz</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetVirtualSizeHintsSz">SetVirtualSizeHintsSz</a>(self,&nbsp;Size&nbsp;minSize,&nbsp;Size&nbsp;maxSize=DefaultSize)<br>
&nbsp;<br>
Allows&nbsp;specification&nbsp;of&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;virtual&nbsp;window&nbsp;sizes.&nbsp;If&nbsp;a<br>
pair&nbsp;of&nbsp;values&nbsp;is&nbsp;not&nbsp;set&nbsp;(or&nbsp;set&nbsp;to&nbsp;-1),&nbsp;the&nbsp;default&nbsp;values&nbsp;will&nbsp;be<br>
used.&nbsp;&nbsp;If&nbsp;this&nbsp;function&nbsp;is&nbsp;called,&nbsp;the&nbsp;user&nbsp;will&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;size<br>
the&nbsp;virtual&nbsp;area&nbsp;of&nbsp;the&nbsp;window&nbsp;outside&nbsp;the&nbsp;given&nbsp;bounds.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetVirtualSizeWH"><strong>SetVirtualSizeWH</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetVirtualSizeWH">SetVirtualSizeWH</a>(self,&nbsp;int&nbsp;w,&nbsp;int&nbsp;h)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;the&nbsp;virtual&nbsp;size&nbsp;of&nbsp;a&nbsp;window&nbsp;in&nbsp;pixels.&nbsp;&nbsp;For&nbsp;most&nbsp;windows&nbsp;this<br>
is&nbsp;just&nbsp;the&nbsp;client&nbsp;area&nbsp;of&nbsp;the&nbsp;window,&nbsp;but&nbsp;for&nbsp;some&nbsp;like&nbsp;scrolled<br>
windows&nbsp;it&nbsp;is&nbsp;more&nbsp;or&nbsp;less&nbsp;independent&nbsp;of&nbsp;the&nbsp;screen&nbsp;window&nbsp;size.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetWindowStyle"><strong>SetWindowStyle</strong></a> = SetWindowStyleFlag(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetWindowStyleFlag">SetWindowStyleFlag</a>(self,&nbsp;long&nbsp;style)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;Please&nbsp;note&nbsp;that&nbsp;some&nbsp;styles&nbsp;cannot&nbsp;be<br>
changed&nbsp;after&nbsp;the&nbsp;window&nbsp;creation&nbsp;and&nbsp;that&nbsp;<a href="#Toolbar-Refresh">Refresh</a>()&nbsp;might&nbsp;need&nbsp;to&nbsp;be<br>
called&nbsp;after&nbsp;changing&nbsp;the&nbsp;others&nbsp;for&nbsp;the&nbsp;change&nbsp;to&nbsp;take&nbsp;place<br>
immediately.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetWindowStyleFlag"><strong>SetWindowStyleFlag</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetWindowStyleFlag">SetWindowStyleFlag</a>(self,&nbsp;long&nbsp;style)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;style&nbsp;of&nbsp;the&nbsp;window.&nbsp;Please&nbsp;note&nbsp;that&nbsp;some&nbsp;styles&nbsp;cannot&nbsp;be<br>
changed&nbsp;after&nbsp;the&nbsp;window&nbsp;creation&nbsp;and&nbsp;that&nbsp;<a href="#Toolbar-Refresh">Refresh</a>()&nbsp;might&nbsp;need&nbsp;to&nbsp;be<br>
called&nbsp;after&nbsp;changing&nbsp;the&nbsp;others&nbsp;for&nbsp;the&nbsp;change&nbsp;to&nbsp;take&nbsp;place<br>
immediately.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetWindowVariant"><strong>SetWindowVariant</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetWindowVariant">SetWindowVariant</a>(self,&nbsp;int&nbsp;variant)<br>
&nbsp;<br>
Sets&nbsp;the&nbsp;variant&nbsp;of&nbsp;the&nbsp;window/font&nbsp;size&nbsp;to&nbsp;use&nbsp;for&nbsp;this&nbsp;window,&nbsp;if<br>
the&nbsp;platform&nbsp;supports&nbsp;variants,&nbsp;for&nbsp;example,&nbsp;wxMac.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ShouldInheritColours"><strong>ShouldInheritColours</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-ShouldInheritColours">ShouldInheritColours</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Return&nbsp;true&nbsp;from&nbsp;here&nbsp;to&nbsp;allow&nbsp;the&nbsp;colours&nbsp;of&nbsp;this&nbsp;window&nbsp;to&nbsp;be<br>
changed&nbsp;by&nbsp;InheritAttributes,&nbsp;returning&nbsp;false&nbsp;forbids&nbsp;inheriting&nbsp;them<br>
from&nbsp;the&nbsp;parent&nbsp;window.<br>
&nbsp;<br>
The&nbsp;base&nbsp;class&nbsp;version&nbsp;returns&nbsp;false,&nbsp;but&nbsp;this&nbsp;method&nbsp;is&nbsp;overridden&nbsp;in<br>
wxControl&nbsp;where&nbsp;it&nbsp;returns&nbsp;true.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Show"><strong>Show</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Show">Show</a>(self,&nbsp;bool&nbsp;show=True)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Shows&nbsp;or&nbsp;hides&nbsp;the&nbsp;window.&nbsp;You&nbsp;may&nbsp;need&nbsp;to&nbsp;call&nbsp;Raise&nbsp;for&nbsp;a&nbsp;top&nbsp;level<br>
window&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;bring&nbsp;it&nbsp;to&nbsp;top,&nbsp;although&nbsp;this&nbsp;is&nbsp;not&nbsp;needed&nbsp;if<br>
Show&nbsp;is&nbsp;called&nbsp;immediately&nbsp;after&nbsp;the&nbsp;frame&nbsp;creation.&nbsp;&nbsp;Returns&nbsp;True&nbsp;if<br>
the&nbsp;window&nbsp;has&nbsp;been&nbsp;shown&nbsp;or&nbsp;hidden&nbsp;or&nbsp;False&nbsp;if&nbsp;nothing&nbsp;was&nbsp;done<br>
because&nbsp;it&nbsp;already&nbsp;was&nbsp;in&nbsp;the&nbsp;requested&nbsp;state.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Thaw"><strong>Thaw</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Thaw">Thaw</a>(self)<br>
&nbsp;<br>
Reenables&nbsp;window&nbsp;updating&nbsp;after&nbsp;a&nbsp;previous&nbsp;call&nbsp;to&nbsp;Freeze.&nbsp;&nbsp;Calls&nbsp;to<br>
Freeze/Thaw&nbsp;may&nbsp;be&nbsp;nested,&nbsp;so&nbsp;Thaw&nbsp;must&nbsp;be&nbsp;called&nbsp;the&nbsp;same&nbsp;number&nbsp;of<br>
times&nbsp;that&nbsp;Freeze&nbsp;was&nbsp;before&nbsp;the&nbsp;window&nbsp;will&nbsp;be&nbsp;updated.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-TransferDataFromWindow"><strong>TransferDataFromWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-TransferDataFromWindow">TransferDataFromWindow</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Transfers&nbsp;values&nbsp;from&nbsp;child&nbsp;controls&nbsp;to&nbsp;data&nbsp;areas&nbsp;specified&nbsp;by&nbsp;their<br>
validators.&nbsp;Returns&nbsp;false&nbsp;if&nbsp;a&nbsp;transfer&nbsp;failed.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has<br>
wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra&nbsp;style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will<br>
also&nbsp;call&nbsp;<a href="#Toolbar-TransferDataFromWindow">TransferDataFromWindow</a>()&nbsp;of&nbsp;all&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-TransferDataToWindow"><strong>TransferDataToWindow</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-TransferDataToWindow">TransferDataToWindow</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Transfers&nbsp;values&nbsp;to&nbsp;child&nbsp;controls&nbsp;from&nbsp;data&nbsp;areas&nbsp;specified&nbsp;by&nbsp;their<br>
validators.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has&nbsp;wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra<br>
style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will&nbsp;also&nbsp;call&nbsp;<a href="#Toolbar-TransferDataToWindow">TransferDataToWindow</a>()&nbsp;of<br>
all&nbsp;child&nbsp;windows.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-UnregisterHotKey"><strong>UnregisterHotKey</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-UnregisterHotKey">UnregisterHotKey</a>(self,&nbsp;int&nbsp;hotkeyId)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Unregisters&nbsp;a&nbsp;system&nbsp;wide&nbsp;hotkey.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Update"><strong>Update</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Update">Update</a>(self)<br>
&nbsp;<br>
Calling&nbsp;this&nbsp;method&nbsp;immediately&nbsp;repaints&nbsp;the&nbsp;invalidated&nbsp;area&nbsp;of&nbsp;the<br>
window&nbsp;instead&nbsp;of&nbsp;waiting&nbsp;for&nbsp;the&nbsp;EVT_PAINT&nbsp;event&nbsp;to&nbsp;happen,&nbsp;(normally<br>
this&nbsp;would&nbsp;usually&nbsp;only&nbsp;happen&nbsp;when&nbsp;the&nbsp;flow&nbsp;of&nbsp;control&nbsp;returns&nbsp;to&nbsp;the<br>
event&nbsp;loop.)&nbsp;&nbsp;Notice&nbsp;that&nbsp;this&nbsp;function&nbsp;doesn't&nbsp;refresh&nbsp;the&nbsp;window&nbsp;and<br>
does&nbsp;nothing&nbsp;if&nbsp;the&nbsp;window&nbsp;has&nbsp;been&nbsp;already&nbsp;repainted.&nbsp;&nbsp;Use&nbsp;Refresh<br>
first&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;immediately&nbsp;redraw&nbsp;the&nbsp;window&nbsp;(or&nbsp;some&nbsp;portion&nbsp;of<br>
it)&nbsp;unconditionally.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-UpdateWindowUI"><strong>UpdateWindowUI</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-UpdateWindowUI">UpdateWindowUI</a>(self,&nbsp;long&nbsp;flags=UPDATE_UI_NONE)<br>
&nbsp;<br>
This&nbsp;function&nbsp;sends&nbsp;EVT_UPDATE_UI&nbsp;events&nbsp;to&nbsp;the&nbsp;window.&nbsp;The&nbsp;particular<br>
implementation&nbsp;depends&nbsp;on&nbsp;the&nbsp;window;&nbsp;for&nbsp;example&nbsp;a&nbsp;wx.<a href="wx._controls.html#ToolBar">ToolBar</a>&nbsp;will<br>
send&nbsp;an&nbsp;update&nbsp;UI&nbsp;event&nbsp;for&nbsp;each&nbsp;toolbar&nbsp;button,&nbsp;and&nbsp;a&nbsp;wx.<a href="wx._windows.html#Frame">Frame</a>&nbsp;will<br>
send&nbsp;an&nbsp;update&nbsp;UI&nbsp;event&nbsp;for&nbsp;each&nbsp;menubar&nbsp;menu&nbsp;item.&nbsp;You&nbsp;can&nbsp;call&nbsp;this<br>
function&nbsp;from&nbsp;your&nbsp;application&nbsp;to&nbsp;ensure&nbsp;that&nbsp;your&nbsp;UI&nbsp;is&nbsp;up-to-date&nbsp;at<br>
a&nbsp;particular&nbsp;point&nbsp;in&nbsp;time&nbsp;(as&nbsp;far&nbsp;as&nbsp;your&nbsp;EVT_UPDATE_UI&nbsp;handlers&nbsp;are<br>
concerned).&nbsp;This&nbsp;may&nbsp;be&nbsp;necessary&nbsp;if&nbsp;you&nbsp;have&nbsp;called<br>
`wx.UpdateUIEvent.SetMode`&nbsp;or&nbsp;`wx.UpdateUIEvent.SetUpdateInterval`&nbsp;to<br>
limit&nbsp;the&nbsp;overhead&nbsp;that&nbsp;wxWindows&nbsp;incurs&nbsp;by&nbsp;sending&nbsp;update&nbsp;UI&nbsp;events<br>
in&nbsp;idle&nbsp;time.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-UseBgCol"><strong>UseBgCol</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-UseBgCol">UseBgCol</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Validate"><strong>Validate</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Validate">Validate</a>(self)&nbsp;-&gt;&nbsp;bool<br>
&nbsp;<br>
Validates&nbsp;the&nbsp;current&nbsp;values&nbsp;of&nbsp;the&nbsp;child&nbsp;controls&nbsp;using&nbsp;their<br>
validators.&nbsp;&nbsp;If&nbsp;the&nbsp;window&nbsp;has&nbsp;wx.WS_EX_VALIDATE_RECURSIVELY&nbsp;extra<br>
style&nbsp;flag&nbsp;set,&nbsp;the&nbsp;method&nbsp;will&nbsp;also&nbsp;call&nbsp;<a href="#Toolbar-Validate">Validate</a>()&nbsp;of&nbsp;all&nbsp;child<br>
windows.&nbsp;&nbsp;Returns&nbsp;false&nbsp;if&nbsp;any&nbsp;of&nbsp;the&nbsp;validations&nbsp;failed.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-WarpPointer"><strong>WarpPointer</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-WarpPointer">WarpPointer</a>(self,&nbsp;int&nbsp;x,&nbsp;int&nbsp;y)<br>
&nbsp;<br>
Moves&nbsp;the&nbsp;pointer&nbsp;to&nbsp;the&nbsp;given&nbsp;position&nbsp;on&nbsp;the&nbsp;window.<br>
&nbsp;<br>
NOTE:&nbsp;This&nbsp;function&nbsp;is&nbsp;not&nbsp;supported&nbsp;under&nbsp;Mac&nbsp;because&nbsp;Apple&nbsp;Human<br>
Interface&nbsp;Guidelines&nbsp;forbid&nbsp;moving&nbsp;the&nbsp;mouse&nbsp;cursor&nbsp;programmatically.</tt></dd></dl>

<hr>
Static methods inherited from <a href="wx._core.html#Window">wx._core.Window</a>:<br>
<dl><dt><a name="NavigationToolbarWx-FindFocus"><strong>FindFocus</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-FindFocus">FindFocus</a>()&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;window&nbsp;or&nbsp;control&nbsp;that&nbsp;currently&nbsp;has&nbsp;the&nbsp;keyboard&nbsp;focus,<br>
or&nbsp;None.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetCapture"><strong>GetCapture</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetCapture">GetCapture</a>()&nbsp;-&gt;&nbsp;Window<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;window&nbsp;which&nbsp;currently&nbsp;captures&nbsp;the&nbsp;mouse&nbsp;or&nbsp;None</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-NewControlId"><strong>NewControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-NewControlId">NewControlId</a>()&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Generate&nbsp;a&nbsp;control&nbsp;id&nbsp;for&nbsp;the&nbsp;controls&nbsp;which&nbsp;were&nbsp;not&nbsp;given&nbsp;one.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-NextControlId"><strong>NextControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-NextControlId">NextControlId</a>(int&nbsp;winid)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;id&nbsp;of&nbsp;the&nbsp;control&nbsp;following&nbsp;the&nbsp;one&nbsp;with&nbsp;the&nbsp;given<br>
autogenerated)&nbsp;id</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-PrevControlId"><strong>PrevControlId</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-PrevControlId">PrevControlId</a>(int&nbsp;winid)&nbsp;-&gt;&nbsp;int<br>
&nbsp;<br>
Get&nbsp;the&nbsp;id&nbsp;of&nbsp;the&nbsp;control&nbsp;preceding&nbsp;the&nbsp;one&nbsp;with&nbsp;the&nbsp;given<br>
autogenerated)&nbsp;id</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#EvtHandler">wx._core.EvtHandler</a>:<br>
<dl><dt><a name="NavigationToolbarWx-AddPendingEvent"><strong>AddPendingEvent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-AddPendingEvent">AddPendingEvent</a>(self,&nbsp;Event&nbsp;event)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Bind"><strong>Bind</strong></a>(self, event, handler, source<font color="#909090">=None</font>, id<font color="#909090">=-1</font>, id2<font color="#909090">=-1</font>)</dt><dd><tt>Bind&nbsp;an&nbsp;event&nbsp;to&nbsp;an&nbsp;event&nbsp;handler.<br>
&nbsp;<br>
:param&nbsp;event:&nbsp;One&nbsp;of&nbsp;the&nbsp;EVT_*&nbsp;objects&nbsp;that&nbsp;specifies&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type&nbsp;of&nbsp;event&nbsp;to&nbsp;bind,<br>
&nbsp;<br>
:param&nbsp;handler:&nbsp;A&nbsp;callable&nbsp;object&nbsp;to&nbsp;be&nbsp;invoked&nbsp;when&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event&nbsp;is&nbsp;delivered&nbsp;to&nbsp;self.&nbsp;&nbsp;Pass&nbsp;None&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;disconnect&nbsp;an&nbsp;event&nbsp;handler.<br>
&nbsp;<br>
:param&nbsp;source:&nbsp;Sometimes&nbsp;the&nbsp;event&nbsp;originates&nbsp;from&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;different&nbsp;window&nbsp;than&nbsp;self,&nbsp;but&nbsp;you&nbsp;still<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;want&nbsp;to&nbsp;catch&nbsp;it&nbsp;in&nbsp;self.&nbsp;&nbsp;(For&nbsp;example,&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button&nbsp;event&nbsp;delivered&nbsp;to&nbsp;a&nbsp;frame.)&nbsp;&nbsp;By<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;passing&nbsp;the&nbsp;source&nbsp;of&nbsp;the&nbsp;event,&nbsp;the&nbsp;event<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handling&nbsp;system&nbsp;is&nbsp;able&nbsp;to&nbsp;differentiate<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;between&nbsp;the&nbsp;same&nbsp;event&nbsp;type&nbsp;from&nbsp;different<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controls.<br>
&nbsp;<br>
:param&nbsp;id:&nbsp;Used&nbsp;to&nbsp;spcify&nbsp;the&nbsp;event&nbsp;source&nbsp;by&nbsp;ID&nbsp;instead<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;instance.<br>
&nbsp;<br>
:param&nbsp;id2:&nbsp;Used&nbsp;when&nbsp;it&nbsp;is&nbsp;desirable&nbsp;to&nbsp;bind&nbsp;a&nbsp;handler<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;a&nbsp;range&nbsp;of&nbsp;IDs,&nbsp;such&nbsp;as&nbsp;with&nbsp;EVT_MENU_RANGE.</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Connect"><strong>Connect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Connect">Connect</a>(self,&nbsp;int&nbsp;id,&nbsp;int&nbsp;lastId,&nbsp;int&nbsp;eventType,&nbsp;PyObject&nbsp;func)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Disconnect"><strong>Disconnect</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-Disconnect">Disconnect</a>(self,&nbsp;int&nbsp;id,&nbsp;int&nbsp;lastId=-1,&nbsp;wxEventType&nbsp;eventType=wxEVT_NULL)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetEvtHandlerEnabled"><strong>GetEvtHandlerEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetEvtHandlerEnabled">GetEvtHandlerEnabled</a>(self)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetNextHandler"><strong>GetNextHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetNextHandler">GetNextHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-GetPreviousHandler"><strong>GetPreviousHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetPreviousHandler">GetPreviousHandler</a>(self)&nbsp;-&gt;&nbsp;EvtHandler</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ProcessEvent"><strong>ProcessEvent</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-ProcessEvent">ProcessEvent</a>(self,&nbsp;Event&nbsp;event)&nbsp;-&gt;&nbsp;bool</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-ProcessPendingEvents"><strong>ProcessPendingEvents</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-ProcessPendingEvents">ProcessPendingEvents</a>(self)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetEvtHandlerEnabled"><strong>SetEvtHandlerEnabled</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetEvtHandlerEnabled">SetEvtHandlerEnabled</a>(self,&nbsp;bool&nbsp;enabled)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetNextHandler"><strong>SetNextHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetNextHandler">SetNextHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-SetPreviousHandler"><strong>SetPreviousHandler</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-SetPreviousHandler">SetPreviousHandler</a>(self,&nbsp;EvtHandler&nbsp;handler)</tt></dd></dl>

<dl><dt><a name="NavigationToolbarWx-Unbind"><strong>Unbind</strong></a>(self, event, source<font color="#909090">=None</font>, id<font color="#909090">=-1</font>, id2<font color="#909090">=-1</font>)</dt><dd><tt>Disconencts&nbsp;the&nbsp;event&nbsp;handler&nbsp;binding&nbsp;for&nbsp;event&nbsp;from&nbsp;self.<br>
Returns&nbsp;True&nbsp;if&nbsp;successful.</tt></dd></dl>

<hr>
Methods inherited from <a href="wx._core.html#Object">wx._core.Object</a>:<br>
<dl><dt><a name="NavigationToolbarWx-GetClassName"><strong>GetClassName</strong></a>(*args, **kwargs)</dt><dd><tt><a href="#Toolbar-GetClassName">GetClassName</a>(self)&nbsp;-&gt;&nbsp;String<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;class&nbsp;name&nbsp;of&nbsp;the&nbsp;C++&nbsp;class&nbsp;using&nbsp;wxRTTI.</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="wx._core.html#Object">wx._core.Object</a>:<br>
<dl><dt><strong>__dict__</strong> = &lt;dictproxy object&gt;<dd><tt>dictionary&nbsp;for&nbsp;instance&nbsp;variables&nbsp;(if&nbsp;defined)</tt></dl>

<dl><dt><strong>__weakref__</strong> = &lt;attribute '__weakref__' of 'Object' objects&gt;<dd><tt>list&nbsp;of&nbsp;weak&nbsp;references&nbsp;to&nbsp;the&nbsp;object&nbsp;(if&nbsp;defined)</tt></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="fake_stderr">class <strong>fake_stderr</strong></a></font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Wx&nbsp;does&nbsp;strange&nbsp;things&nbsp;with&nbsp;stderr,&nbsp;as&nbsp;it&nbsp;makes&nbsp;the&nbsp;assumption&nbsp;that&nbsp;there<br>
is&nbsp;probably&nbsp;no&nbsp;console.&nbsp;This&nbsp;redirects&nbsp;stderr&nbsp;to&nbsp;the&nbsp;console,&nbsp;since&nbsp;we&nbsp;know<br>
that&nbsp;there&nbsp;is&nbsp;one!<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="fake_stderr-write"><strong>write</strong></a>(self, msg)</dt></dl>

</td></tr></table></td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#eeaa77">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Functions</strong></big></font></td></tr>
    
<tr><td bgcolor="#eeaa77"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl><dt><a name="-DEBUG_MSG"><strong>DEBUG_MSG</strong></a>(string, lvl<font color="#909090">=3</font>, o<font color="#909090">=None</font>)</dt></dl>
 <dl><dt><a name="-debug_on_error"><strong>debug_on_error</strong></a>(type, value, tb)</dt><dd><tt>Code&nbsp;due&nbsp;to&nbsp;Thomas&nbsp;Heller&nbsp;-&nbsp;published&nbsp;in&nbsp;Python&nbsp;Cookbook&nbsp;(O'Reilley)</tt></dd></dl>
 <dl><dt><a name="-draw_if_interactive"><strong>draw_if_interactive</strong></a>()</dt><dd><tt>This&nbsp;should&nbsp;be&nbsp;overriden&nbsp;in&nbsp;a&nbsp;windowing&nbsp;environment&nbsp;if&nbsp;drawing<br>
should&nbsp;be&nbsp;done&nbsp;in&nbsp;interactive&nbsp;python&nbsp;mode</tt></dd></dl>
 <dl><dt><a name="-error_msg_wx"><strong>error_msg_wx</strong></a>(msg, parent<font color="#909090">=None</font>)</dt><dd><tt>Signal&nbsp;an&nbsp;error&nbsp;condition&nbsp;--&nbsp;in&nbsp;a&nbsp;GUI,&nbsp;popup&nbsp;a&nbsp;error&nbsp;dialog</tt></dd></dl>
 <dl><dt><a name="-new_figure_manager"><strong>new_figure_manager</strong></a>(num, *args, **kwargs)</dt><dd><tt>Create&nbsp;a&nbsp;new&nbsp;figure&nbsp;manager&nbsp;instance</tt></dd></dl>
 <dl><dt><a name="-raise_msg_to_str"><strong>raise_msg_to_str</strong></a>(msg)</dt><dd><tt>msg&nbsp;is&nbsp;a&nbsp;return&nbsp;arg&nbsp;from&nbsp;a&nbsp;raise.&nbsp;&nbsp;Join&nbsp;with&nbsp;new&nbsp;lines</tt></dd></dl>
 <dl><dt><a name="-show"><strong>show</strong></a>()</dt><dd><tt>Current&nbsp;implementation&nbsp;assumes&nbsp;that&nbsp;matplotlib&nbsp;is&nbsp;executed&nbsp;in&nbsp;a&nbsp;PyCrust<br>
shell.&nbsp;It&nbsp;appears&nbsp;to&nbsp;be&nbsp;possible&nbsp;to&nbsp;execute&nbsp;wxPython&nbsp;applications&nbsp;from<br>
within&nbsp;a&nbsp;PyCrust&nbsp;without&nbsp;having&nbsp;to&nbsp;ensure&nbsp;that&nbsp;wxPython&nbsp;has&nbsp;been&nbsp;created<br>
in&nbsp;a&nbsp;secondary&nbsp;thread&nbsp;(e.g.&nbsp;SciPy&nbsp;gui_thread).<br>
&nbsp;<br>
Unfortunately,&nbsp;gui_thread&nbsp;seems&nbsp;to&nbsp;introduce&nbsp;a&nbsp;number&nbsp;of&nbsp;further<br>
dependencies&nbsp;on&nbsp;SciPy&nbsp;modules,&nbsp;which&nbsp;I&nbsp;do&nbsp;not&nbsp;wish&nbsp;to&nbsp;introduce<br>
into&nbsp;the&nbsp;backend&nbsp;at&nbsp;this&nbsp;point.&nbsp;If&nbsp;there&nbsp;is&nbsp;a&nbsp;need&nbsp;I&nbsp;will&nbsp;look<br>
into&nbsp;this&nbsp;in&nbsp;a&nbsp;later&nbsp;release.</tt></dd></dl>
</td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#55aa55">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Data</strong></big></font></td></tr>
    
<tr><td bgcolor="#55aa55"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><strong>PIXELS_PER_INCH</strong> = 75<br>
<strong>backend_version</strong> = '2.6.3.2'<br>
<strong>cursord</strong> = {0: 6, 1: 1, 2: 5, 3: 6}<br>
<strong>cursors</strong> = &lt;matplotlib.backend_bases.Cursors instance&gt;<br>
<strong>cvs_id</strong> = '$Id$'<br>
<strong>division</strong> = _Feature((2, 2, 0, 'alpha', 2), (3, 0, 0, 'alpha', 0), 8192)<br>
<strong>rcParams</strong> = {'axes.axisbelow': False, 'axes.edgecolor': 'k', 'axes.facecolor': 'w', 'axes.formatter.limits': (-7, 7), 'axes.grid': False, 'axes.hold': True, 'axes.labelcolor': 'k', 'axes.labelsize': 'medium', 'axes.linewidth': 1.0, 'axes.titlesize': 'medium', ...}<br>
<strong>verbose</strong> = &lt;matplotlib.Verbose instance&gt;<br>
<strong>wxapp</strong> = None</td></tr></table>
@footer@