@header@
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
<tr bgcolor="#7799ee">
<td valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong><a href="matplotlib.html"><font color="#ffffff">matplotlib</font></a>.axes</strong></big></big></font></td
><td align=right valign=bottom
><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/usr/local/lib/python2.5/site-packages/matplotlib/axes.py">/usr/local/lib/python2.5/site-packages/matplotlib/axes.py</a></font></td></tr></table>
    <p></p>
<p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#aa55cc">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
    
<tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="matplotlib._image.html">matplotlib._image</a><br>
<a href="matplotlib.agg.html">matplotlib.agg</a><br>
<a href="matplotlib.artist.html">matplotlib.artist</a><br>
</td><td width="25%" valign=top><a href="matplotlib.cm.html">matplotlib.cm</a><br>
<a href="matplotlib.lines.html">matplotlib.lines</a><br>
<a href="matplotlib.numerix.ma.html">matplotlib.numerix.ma</a><br>
</td><td width="25%" valign=top><a href="math.html">math</a><br>
<a href="matplotlib.html">matplotlib</a><br>
<a href="matplotlib.numerix.html">matplotlib.numerix</a><br>
</td><td width="25%" valign=top><a href="sys.html">sys</a><br>
<a href="matplotlib.table.html">matplotlib.table</a><br>
<a href="warnings.html">warnings</a><br>
</td></tr></table></td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ee77aa">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
    
<tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl>
<dt><font face="helvetica, arial"><a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.axes.html#Axes">Axes</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.axes.html#PolarAxes">PolarAxes</a>
</font></dt></dl>
</dd>
</dl>
</dd>
<dt><font face="helvetica, arial"><a href="matplotlib.axes.html#SubplotBase">SubplotBase</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.axes.html#PolarSubplot">PolarSubplot</a>(<a href="matplotlib.axes.html#SubplotBase">SubplotBase</a>, <a href="matplotlib.axes.html#PolarAxes">PolarAxes</a>)
</font></dt><dt><font face="helvetica, arial"><a href="matplotlib.axes.html#Subplot">Subplot</a>(<a href="matplotlib.axes.html#SubplotBase">SubplotBase</a>, <a href="matplotlib.axes.html#Axes">Axes</a>)
</font></dt></dl>
</dd>
</dl>
 <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="Axes">class <strong>Axes</strong></a>(<a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>The&nbsp;<a href="#Axes">Axes</a>&nbsp;contains&nbsp;most&nbsp;of&nbsp;the&nbsp;figure&nbsp;elements:&nbsp;Axis,&nbsp;Tick,&nbsp;Line2D,<br>
Text,&nbsp;Polygon&nbsp;etc,&nbsp;and&nbsp;sets&nbsp;the&nbsp;coordinate&nbsp;system<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="Axes-__init__"><strong>__init__</strong></a>(self, fig, rect, axisbg<font color="#909090">=None</font>, frameon<font color="#909090">=True</font>, sharex<font color="#909090">=None</font>, sharey<font color="#909090">=None</font>, label<font color="#909090">=''</font>, **kwargs)</dt><dd><tt>Build&nbsp;an&nbsp;<a href="#Axes">Axes</a>&nbsp;instance&nbsp;in&nbsp;Figure&nbsp;with<br>
rect=[left,&nbsp;bottom,&nbsp;width,height&nbsp;in&nbsp;Figure&nbsp;coords<br>
&nbsp;<br>
adjustable:&nbsp;['box'&nbsp;|&nbsp;'datalim']<br>
alpha:&nbsp;the&nbsp;alpha&nbsp;transparency<br>
anchor:&nbsp;['C',&nbsp;'SW',&nbsp;'S',&nbsp;'SE',&nbsp;'E',&nbsp;'NE',&nbsp;'N',&nbsp;'NW',&nbsp;'W']<br>
aspect:&nbsp;['auto'&nbsp;|&nbsp;'equal'&nbsp;|&nbsp;aspect_ratio]<br>
autoscale_on:&nbsp;boolean&nbsp;-&nbsp;whether&nbsp;or&nbsp;not&nbsp;to&nbsp;autoscale&nbsp;the&nbsp;viewlim<br>
axis_bgcolor:&nbsp;any&nbsp;matplotlib&nbsp;color&nbsp;-&nbsp;see&nbsp;help(colors)<br>
axisbelow:&nbsp;draw&nbsp;the&nbsp;grids&nbsp;and&nbsp;ticks&nbsp;below&nbsp;the&nbsp;other&nbsp;artists<br>
cursor_props:&nbsp;a&nbsp;(float,&nbsp;color)&nbsp;tuple<br>
figure:&nbsp;a&nbsp;Figure&nbsp;instance<br>
frame_on:&nbsp;a&nbsp;boolean&nbsp;-&nbsp;draw&nbsp;the&nbsp;axes&nbsp;frame<br>
label:&nbsp;the&nbsp;axes&nbsp;label<br>
navigate:&nbsp;True|False<br>
navigate_mode:&nbsp;the&nbsp;navigation&nbsp;toolbar&nbsp;button&nbsp;status:&nbsp;'PAN',&nbsp;'ZOOM',&nbsp;or&nbsp;None<br>
position:&nbsp;[left,&nbsp;bottom,&nbsp;width,height&nbsp;in&nbsp;Figure&nbsp;coords<br>
sharex&nbsp;:&nbsp;an&nbsp;<a href="#Axes">Axes</a>&nbsp;instance&nbsp;to&nbsp;share&nbsp;the&nbsp;x-axis&nbsp;with<br>
sharey&nbsp;:&nbsp;an&nbsp;<a href="#Axes">Axes</a>&nbsp;instance&nbsp;to&nbsp;share&nbsp;the&nbsp;y-axis&nbsp;with<br>
title:&nbsp;the&nbsp;title&nbsp;string<br>
visible:&nbsp;a&nbsp;boolean&nbsp;-&nbsp;whether&nbsp;the&nbsp;axes&nbsp;is&nbsp;visible<br>
xlabel:&nbsp;the&nbsp;xlabel<br>
xlim:&nbsp;(xmin,&nbsp;xmax)&nbsp;view&nbsp;limits<br>
xscale:&nbsp;['log'&nbsp;|&nbsp;'linear'&nbsp;]<br>
xticklabels:&nbsp;sequence&nbsp;of&nbsp;strings<br>
xticks:&nbsp;sequence&nbsp;of&nbsp;floats<br>
ylabel:&nbsp;the&nbsp;ylabel&nbsp;strings<br>
ylim:&nbsp;(ymin,&nbsp;ymax)&nbsp;view&nbsp;limits<br>
yscale:&nbsp;['log'&nbsp;|&nbsp;'linear']<br>
yticklabels:&nbsp;sequence&nbsp;of&nbsp;strings<br>
yticks:&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="Axes-acorr"><strong>acorr</strong></a>(self, x, **kwargs)</dt><dd><tt>ACORR(x,&nbsp;normed=False,&nbsp;detrend=detrend_none,&nbsp;usevlines=False,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maxlags=None,&nbsp;**kwargs)<br>
Plot&nbsp;the&nbsp;autocorrelation&nbsp;of&nbsp;x.&nbsp;&nbsp;If&nbsp;normed=True,&nbsp;normalize&nbsp;the<br>
data&nbsp;but&nbsp;the&nbsp;autocorrelation&nbsp;at&nbsp;0-th&nbsp;lag.&nbsp;&nbsp;x&nbsp;is&nbsp;detrended&nbsp;by<br>
the&nbsp;detrend&nbsp;callable&nbsp;(default&nbsp;no&nbsp;normalization.<br>
data&nbsp;are&nbsp;plotted&nbsp;as&nbsp;<a href="#Axes-plot">plot</a>(lags,&nbsp;c,&nbsp;**kwargs)<br>
return&nbsp;value&nbsp;is&nbsp;lags,&nbsp;c,&nbsp;line&nbsp;where&nbsp;lags&nbsp;are&nbsp;a&nbsp;length<br>
2*maxlags+1&nbsp;lag&nbsp;vector,&nbsp;c&nbsp;is&nbsp;the&nbsp;2*maxlags+1&nbsp;auto&nbsp;correlation<br>
vector,&nbsp;and&nbsp;line&nbsp;is&nbsp;a&nbsp;Line2D&nbsp;instance&nbsp;returned&nbsp;by&nbsp;plot.&nbsp;&nbsp;The<br>
default&nbsp;linestyle&nbsp;is&nbsp;None&nbsp;and&nbsp;the&nbsp;default&nbsp;marker&nbsp;is&nbsp;'o',<br>
though&nbsp;these&nbsp;can&nbsp;be&nbsp;overridden&nbsp;with&nbsp;keyword&nbsp;args.&nbsp;&nbsp;The&nbsp;cross<br>
correlation&nbsp;is&nbsp;performed&nbsp;with&nbsp;numerix&nbsp;cross_correlate&nbsp;with<br>
mode=2.<br>
If&nbsp;usevlines&nbsp;is&nbsp;True,&nbsp;<a href="#Axes">Axes</a>.vlines&nbsp;rather&nbsp;than&nbsp;<a href="#Axes">Axes</a>.plot&nbsp;is&nbsp;used<br>
to&nbsp;draw&nbsp;vertical&nbsp;lines&nbsp;from&nbsp;the&nbsp;origin&nbsp;to&nbsp;the&nbsp;acorr.<br>
Otherwise&nbsp;the&nbsp;plotstyle&nbsp;is&nbsp;determined&nbsp;by&nbsp;the&nbsp;kwargs,&nbsp;which&nbsp;are<br>
Line2D&nbsp;properties.&nbsp;&nbsp;If&nbsp;usevlines,&nbsp;the&nbsp;return&nbsp;value&nbsp;is&nbsp;lags,&nbsp;c,<br>
linecol,&nbsp;b&nbsp;where&nbsp;linecol&nbsp;is&nbsp;the&nbsp;LineCollection&nbsp;and&nbsp;b&nbsp;is&nbsp;the&nbsp;x-axis<br>
if&nbsp;usevlines=True,&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;onto&nbsp;<a href="#Axes">Axes</a>.vlines<br>
if&nbsp;usevlines=False,&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;onto&nbsp;<a href="#Axes">Axes</a>.plot<br>
maxlags&nbsp;is&nbsp;a&nbsp;positive&nbsp;integer&nbsp;detailing&nbsp;the&nbsp;number&nbsp;of&nbsp;lags&nbsp;to&nbsp;show.<br>
The&nbsp;default&nbsp;value&nbsp;of&nbsp;None&nbsp;will&nbsp;return&nbsp;all&nbsp;(2*len(x)-1)&nbsp;lags.<br>
See&nbsp;the&nbsp;respective&nbsp;function&nbsp;for&nbsp;documentation&nbsp;on&nbsp;valid&nbsp;kwargs</tt></dd></dl>

<dl><dt><a name="Axes-add_artist"><strong>add_artist</strong></a>(self, a)</dt><dd><tt>Add&nbsp;any&nbsp;artist&nbsp;to&nbsp;the&nbsp;axes</tt></dd></dl>

<dl><dt><a name="Axes-add_collection"><strong>add_collection</strong></a>(self, collection, autolim<font color="#909090">=False</font>)</dt><dd><tt>add&nbsp;a&nbsp;Collection&nbsp;instance&nbsp;to&nbsp;<a href="#Axes">Axes</a></tt></dd></dl>

<dl><dt><a name="Axes-add_line"><strong>add_line</strong></a>(self, line)</dt><dd><tt>Add&nbsp;a&nbsp;line&nbsp;to&nbsp;the&nbsp;list&nbsp;of&nbsp;plot&nbsp;lines</tt></dd></dl>

<dl><dt><a name="Axes-add_patch"><strong>add_patch</strong></a>(self, p)</dt><dd><tt>Add&nbsp;a&nbsp;patch&nbsp;to&nbsp;the&nbsp;list&nbsp;of&nbsp;<a href="#Axes">Axes</a>&nbsp;patches;&nbsp;the&nbsp;clipbox&nbsp;will&nbsp;be<br>
set&nbsp;to&nbsp;the&nbsp;<a href="#Axes">Axes</a>&nbsp;clipping&nbsp;box.&nbsp;&nbsp;If&nbsp;the&nbsp;transform&nbsp;is&nbsp;not&nbsp;set,&nbsp;it<br>
wil&nbsp;be&nbsp;set&nbsp;to&nbsp;self.<strong>transData</strong>.</tt></dd></dl>

<dl><dt><a name="Axes-add_table"><strong>add_table</strong></a>(self, tab)</dt><dd><tt>Add&nbsp;a&nbsp;table&nbsp;instance&nbsp;to&nbsp;the&nbsp;list&nbsp;of&nbsp;axes&nbsp;tables</tt></dd></dl>

<dl><dt><a name="Axes-annotate"><strong>annotate</strong></a>(self, *args, **kwargs)</dt><dd><tt><a href="#Axes-annotate">annotate</a>(self,&nbsp;s,&nbsp;xyloc,&nbsp;textloc,<br>
&nbsp;xycoords='data',&nbsp;textcoords='data',<br>
&nbsp;lineprops=None,<br>
&nbsp;markerprops=None<br>
&nbsp;**props)<br>
alpha:&nbsp;float<br>
animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
label:&nbsp;any&nbsp;string<br>
lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
picker:&nbsp;[None|float|boolean|callable]<br>
position:&nbsp;(x,y)<br>
rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
x:&nbsp;float<br>
y:&nbsp;float<br>
zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-apply_aspect"><strong>apply_aspect</strong></a>(self, data_ratio<font color="#909090">=None</font>)</dt><dd><tt>Use&nbsp;self.<strong>_aspect</strong>&nbsp;and&nbsp;self.<strong>_adjustable</strong>&nbsp;to&nbsp;modify&nbsp;the<br>
axes&nbsp;box&nbsp;or&nbsp;the&nbsp;view&nbsp;limits.<br>
The&nbsp;data_ratio&nbsp;kwarg&nbsp;is&nbsp;set&nbsp;to&nbsp;1&nbsp;for&nbsp;polar&nbsp;axes.&nbsp;&nbsp;It&nbsp;is<br>
used&nbsp;only&nbsp;when&nbsp;_adjustable&nbsp;is&nbsp;'box'.</tt></dd></dl>

<dl><dt><a name="Axes-arrow"><strong>arrow</strong></a>(self, x, y, dx, dy, **kwargs)</dt><dd><tt>Draws&nbsp;arrow&nbsp;on&nbsp;specified&nbsp;axis&nbsp;from&nbsp;(x,y)&nbsp;to&nbsp;(x+dx,y+dy).<br>
Optional&nbsp;kwargs&nbsp;control&nbsp;the&nbsp;arrow&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-autoscale_view"><strong>autoscale_view</strong></a>(self, tight<font color="#909090">=False</font>, scalex<font color="#909090">=True</font>, scaley<font color="#909090">=True</font>)</dt><dd><tt>autoscale&nbsp;the&nbsp;view&nbsp;limits&nbsp;using&nbsp;the&nbsp;data&nbsp;limits.&nbsp;You&nbsp;can<br>
selectively&nbsp;autoscale&nbsp;only&nbsp;a&nbsp;single&nbsp;axis,&nbsp;eg,&nbsp;the&nbsp;xaxis&nbsp;by<br>
setting&nbsp;scaley&nbsp;to&nbsp;False.&nbsp;&nbsp;The&nbsp;autoscaling&nbsp;preserves&nbsp;any<br>
axis&nbsp;direction&nbsp;reversal&nbsp;that&nbsp;has&nbsp;already&nbsp;been&nbsp;done.</tt></dd></dl>

<dl><dt><a name="Axes-axhline"><strong>axhline</strong></a>(self, y<font color="#909090">=0</font>, xmin<font color="#909090">=0</font>, xmax<font color="#909090">=1</font>, **kwargs)</dt><dd><tt>AXHLINE(y=0,&nbsp;xmin=0,&nbsp;xmax=1,&nbsp;**kwargs)<br>
Axis&nbsp;Horizontal&nbsp;Line<br>
Draw&nbsp;a&nbsp;horizontal&nbsp;line&nbsp;at&nbsp;y&nbsp;from&nbsp;xmin&nbsp;to&nbsp;xmax.&nbsp;&nbsp;With&nbsp;the&nbsp;default<br>
values&nbsp;of&nbsp;xmin=0&nbsp;and&nbsp;xmax=1,&nbsp;this&nbsp;line&nbsp;will&nbsp;always&nbsp;span&nbsp;the&nbsp;horizontal<br>
extent&nbsp;of&nbsp;the&nbsp;axes,&nbsp;regardless&nbsp;of&nbsp;the&nbsp;xlim&nbsp;settings,&nbsp;even&nbsp;if&nbsp;you<br>
change&nbsp;them,&nbsp;eg&nbsp;with&nbsp;the&nbsp;xlim&nbsp;command.&nbsp;&nbsp;That&nbsp;is,&nbsp;the&nbsp;horizontal&nbsp;extent<br>
is&nbsp;in&nbsp;axes&nbsp;coords:&nbsp;0=left,&nbsp;0.5=middle,&nbsp;1.0=right&nbsp;but&nbsp;the&nbsp;y&nbsp;location&nbsp;is<br>
in&nbsp;data&nbsp;coordinates.<br>
Return&nbsp;value&nbsp;is&nbsp;the&nbsp;Line2D&nbsp;instance.&nbsp;&nbsp;kwargs&nbsp;are&nbsp;the&nbsp;same&nbsp;as&nbsp;kwargs&nbsp;to<br>
plot,&nbsp;and&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;control&nbsp;the&nbsp;line&nbsp;properties.&nbsp;&nbsp;Eg<br>
&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;thick&nbsp;red&nbsp;hline&nbsp;at&nbsp;y=0&nbsp;that&nbsp;spans&nbsp;the&nbsp;xrange<br>
&nbsp;&nbsp;<a href="#Axes-axhline">axhline</a>(linewidth=4,&nbsp;color='r')<br>
&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;default&nbsp;hline&nbsp;at&nbsp;y=1&nbsp;that&nbsp;spans&nbsp;the&nbsp;xrange<br>
&nbsp;&nbsp;<a href="#Axes-axhline">axhline</a>(y=1)<br>
&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;default&nbsp;hline&nbsp;at&nbsp;y=.5&nbsp;that&nbsp;spans&nbsp;the&nbsp;the&nbsp;middle&nbsp;half&nbsp;of<br>
&nbsp;&nbsp;#&nbsp;the&nbsp;xrange<br>
&nbsp;&nbsp;<a href="#Axes-axhline">axhline</a>(y=.5,&nbsp;xmin=0.25,&nbsp;xmax=0.75)<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-axhspan"><strong>axhspan</strong></a>(self, ymin, ymax, xmin<font color="#909090">=0</font>, xmax<font color="#909090">=1</font>, **kwargs)</dt><dd><tt>AXHSPAN(ymin,&nbsp;ymax,&nbsp;xmin=0,&nbsp;xmax=1,&nbsp;**kwargs)<br>
Axis&nbsp;Horizontal&nbsp;Span.&nbsp;&nbsp;ycoords&nbsp;are&nbsp;in&nbsp;data&nbsp;units&nbsp;and&nbsp;x<br>
coords&nbsp;are&nbsp;in&nbsp;axes&nbsp;(relative&nbsp;0-1)&nbsp;units<br>
Draw&nbsp;a&nbsp;horizontal&nbsp;span&nbsp;(regtangle)&nbsp;from&nbsp;ymin&nbsp;to&nbsp;ymax.&nbsp;&nbsp;With&nbsp;the<br>
default&nbsp;values&nbsp;of&nbsp;xmin=0&nbsp;and&nbsp;xmax=1,&nbsp;this&nbsp;always&nbsp;span&nbsp;the&nbsp;xrange,<br>
regardless&nbsp;of&nbsp;the&nbsp;xlim&nbsp;settings,&nbsp;even&nbsp;if&nbsp;you&nbsp;change&nbsp;them,&nbsp;eg&nbsp;with&nbsp;the<br>
xlim&nbsp;command.&nbsp;&nbsp;That&nbsp;is,&nbsp;the&nbsp;horizontal&nbsp;extent&nbsp;is&nbsp;in&nbsp;axes&nbsp;coords:<br>
0=left,&nbsp;0.5=middle,&nbsp;1.0=right&nbsp;but&nbsp;the&nbsp;y&nbsp;location&nbsp;is&nbsp;in&nbsp;data<br>
coordinates.<br>
kwargs&nbsp;are&nbsp;the&nbsp;kwargs&nbsp;to&nbsp;Patch,&nbsp;eg<br>
&nbsp;&nbsp;antialiased,&nbsp;aa<br>
&nbsp;&nbsp;linewidth,&nbsp;&nbsp;&nbsp;lw<br>
&nbsp;&nbsp;edgecolor,&nbsp;&nbsp;&nbsp;ec<br>
&nbsp;&nbsp;facecolor,&nbsp;&nbsp;&nbsp;fc<br>
the&nbsp;terms&nbsp;on&nbsp;the&nbsp;right&nbsp;are&nbsp;aliases<br>
Return&nbsp;value&nbsp;is&nbsp;the&nbsp;patches.Polygon&nbsp;instance.<br>
&nbsp;&nbsp;&nbsp;&nbsp;#draws&nbsp;a&nbsp;gray&nbsp;rectangle&nbsp;from&nbsp;y=0.25-0.75&nbsp;that&nbsp;spans&nbsp;the&nbsp;horizontal<br>
&nbsp;&nbsp;&nbsp;&nbsp;#extent&nbsp;of&nbsp;the&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-axhspan">axhspan</a>(0.25,&nbsp;0.75,&nbsp;facecolor='0.5',&nbsp;alpha=0.5)<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Polygon&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-axis"><strong>axis</strong></a>(self, *v, **kwargs)</dt><dd><tt>Convenience&nbsp;method&nbsp;for&nbsp;manipulating&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;view&nbsp;limits<br>
and&nbsp;the&nbsp;aspect&nbsp;ratio&nbsp;of&nbsp;the&nbsp;plot.<br>
&nbsp;<br>
kwargs&nbsp;are&nbsp;passed&nbsp;on&nbsp;to&nbsp;set_xlim&nbsp;and&nbsp;set_ylim&nbsp;--&nbsp;see&nbsp;their&nbsp;docstrings&nbsp;for&nbsp;details</tt></dd></dl>

<dl><dt><a name="Axes-axvline"><strong>axvline</strong></a>(self, x<font color="#909090">=0</font>, ymin<font color="#909090">=0</font>, ymax<font color="#909090">=1</font>, **kwargs)</dt><dd><tt>AXVLINE(x=0,&nbsp;ymin=0,&nbsp;ymax=1,&nbsp;**kwargs)<br>
Axis&nbsp;Vertical&nbsp;Line<br>
Draw&nbsp;a&nbsp;vertical&nbsp;line&nbsp;at&nbsp;x&nbsp;from&nbsp;ymin&nbsp;to&nbsp;ymax.&nbsp;&nbsp;With&nbsp;the&nbsp;default&nbsp;values<br>
of&nbsp;ymin=0&nbsp;and&nbsp;ymax=1,&nbsp;this&nbsp;line&nbsp;will&nbsp;always&nbsp;span&nbsp;the&nbsp;vertical&nbsp;extent<br>
of&nbsp;the&nbsp;axes,&nbsp;regardless&nbsp;of&nbsp;the&nbsp;xlim&nbsp;settings,&nbsp;even&nbsp;if&nbsp;you&nbsp;change&nbsp;them,<br>
eg&nbsp;with&nbsp;the&nbsp;xlim&nbsp;command.&nbsp;&nbsp;That&nbsp;is,&nbsp;the&nbsp;vertical&nbsp;extent&nbsp;is&nbsp;in&nbsp;axes<br>
coords:&nbsp;0=bottom,&nbsp;0.5=middle,&nbsp;1.0=top&nbsp;but&nbsp;the&nbsp;x&nbsp;location&nbsp;is&nbsp;in&nbsp;data<br>
coordinates.<br>
Return&nbsp;value&nbsp;is&nbsp;the&nbsp;Line2D&nbsp;instance.&nbsp;&nbsp;kwargs&nbsp;are&nbsp;the&nbsp;same&nbsp;as<br>
kwargs&nbsp;to&nbsp;plot,&nbsp;and&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;control&nbsp;the&nbsp;line&nbsp;properties.&nbsp;&nbsp;Eg<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;thick&nbsp;red&nbsp;vline&nbsp;at&nbsp;x=0&nbsp;that&nbsp;spans&nbsp;the&nbsp;yrange<br>
&nbsp;&nbsp;&nbsp;&nbsp;l&nbsp;=&nbsp;<a href="#Axes-axvline">axvline</a>(linewidth=4,&nbsp;color='r')<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;default&nbsp;vline&nbsp;at&nbsp;x=1&nbsp;that&nbsp;spans&nbsp;the&nbsp;yrange<br>
&nbsp;&nbsp;&nbsp;&nbsp;l&nbsp;=&nbsp;<a href="#Axes-axvline">axvline</a>(x=1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;default&nbsp;vline&nbsp;at&nbsp;x=.5&nbsp;that&nbsp;spans&nbsp;the&nbsp;the&nbsp;middle&nbsp;half&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;yrange<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-axvline">axvline</a>(x=.5,&nbsp;ymin=0.25,&nbsp;ymax=0.75)<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-axvspan"><strong>axvspan</strong></a>(self, xmin, xmax, ymin<font color="#909090">=0</font>, ymax<font color="#909090">=1</font>, **kwargs)</dt><dd><tt>AXVSPAN(xmin,&nbsp;xmax,&nbsp;ymin=0,&nbsp;ymax=1,&nbsp;**kwargs)<br>
axvspan&nbsp;:&nbsp;Axis&nbsp;Vertical&nbsp;Span.&nbsp;&nbsp;xcoords&nbsp;are&nbsp;in&nbsp;data&nbsp;units&nbsp;and&nbsp;y&nbsp;coords<br>
are&nbsp;in&nbsp;axes&nbsp;(relative&nbsp;0-1)&nbsp;units<br>
Draw&nbsp;a&nbsp;vertical&nbsp;span&nbsp;(regtangle)&nbsp;from&nbsp;xmin&nbsp;to&nbsp;xmax.&nbsp;&nbsp;With&nbsp;the&nbsp;default<br>
values&nbsp;of&nbsp;ymin=0&nbsp;and&nbsp;ymax=1,&nbsp;this&nbsp;always&nbsp;span&nbsp;the&nbsp;yrange,&nbsp;regardless<br>
of&nbsp;the&nbsp;ylim&nbsp;settings,&nbsp;even&nbsp;if&nbsp;you&nbsp;change&nbsp;them,&nbsp;eg&nbsp;with&nbsp;the&nbsp;ylim<br>
command.&nbsp;&nbsp;That&nbsp;is,&nbsp;the&nbsp;vertical&nbsp;extent&nbsp;is&nbsp;in&nbsp;axes&nbsp;coords:&nbsp;0=bottom,<br>
0.5=middle,&nbsp;1.0=top&nbsp;but&nbsp;the&nbsp;y&nbsp;location&nbsp;is&nbsp;in&nbsp;data&nbsp;coordinates.<br>
kwargs&nbsp;are&nbsp;the&nbsp;kwargs&nbsp;to&nbsp;Patch,&nbsp;eg<br>
&nbsp;&nbsp;antialiased,&nbsp;aa<br>
&nbsp;&nbsp;linewidth,&nbsp;&nbsp;&nbsp;lw<br>
&nbsp;&nbsp;edgecolor,&nbsp;&nbsp;&nbsp;ec<br>
&nbsp;&nbsp;facecolor,&nbsp;&nbsp;&nbsp;fc<br>
the&nbsp;terms&nbsp;on&nbsp;the&nbsp;right&nbsp;are&nbsp;aliases<br>
return&nbsp;value&nbsp;is&nbsp;the&nbsp;patches.Polygon&nbsp;instance.<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;vertical&nbsp;green&nbsp;translucent&nbsp;rectangle&nbsp;from&nbsp;x=1.25&nbsp;to&nbsp;1.55&nbsp;that<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;spans&nbsp;the&nbsp;yrange&nbsp;of&nbsp;the&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-axvspan">axvspan</a>(1.25,&nbsp;1.55,&nbsp;facecolor='g',&nbsp;alpha=0.5)<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Polygon&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-bar"><strong>bar</strong></a>(self, left, height, width<font color="#909090">=0.80000000000000004</font>, bottom<font color="#909090">=None</font>, color<font color="#909090">=None</font>, edgecolor<font color="#909090">=None</font>, linewidth<font color="#909090">=None</font>, yerr<font color="#909090">=None</font>, xerr<font color="#909090">=None</font>, ecolor<font color="#909090">=None</font>, capsize<font color="#909090">=3</font>, align<font color="#909090">='edge'</font>, orientation<font color="#909090">='vertical'</font>, log<font color="#909090">=False</font>, **kwargs)</dt><dd><tt>BAR(left,&nbsp;height,&nbsp;width=0.8,&nbsp;bottom=0,<br>
&nbsp;&nbsp;&nbsp;&nbsp;color=None,&nbsp;edgecolor=None,&nbsp;linewidth=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;yerr=None,&nbsp;xerr=None,&nbsp;ecolor=None,&nbsp;capsize=3,<br>
&nbsp;&nbsp;&nbsp;&nbsp;align='edge',&nbsp;orientation='vertical',&nbsp;log=False)<br>
Make&nbsp;a&nbsp;bar&nbsp;plot&nbsp;with&nbsp;rectangles&nbsp;bounded&nbsp;by<br>
&nbsp;&nbsp;left,&nbsp;left+width,&nbsp;bottom,&nbsp;bottom+height<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(left,&nbsp;right,&nbsp;bottom&nbsp;and&nbsp;top&nbsp;edges)<br>
left,&nbsp;height,&nbsp;width,&nbsp;and&nbsp;bottom&nbsp;can&nbsp;be&nbsp;either&nbsp;scalars&nbsp;or&nbsp;sequences<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;Rectangle&nbsp;patch&nbsp;instances<br>
&nbsp;&nbsp;&nbsp;&nbsp;left&nbsp;-&nbsp;the&nbsp;x&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;left&nbsp;sides&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;height&nbsp;-&nbsp;the&nbsp;heights&nbsp;of&nbsp;the&nbsp;bars<br>
Optional&nbsp;arguments:<br>
&nbsp;&nbsp;&nbsp;&nbsp;width&nbsp;-&nbsp;the&nbsp;widths&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;bottom&nbsp;-&nbsp;the&nbsp;y&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;bottom&nbsp;edges&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;-&nbsp;the&nbsp;colors&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;-&nbsp;the&nbsp;colors&nbsp;of&nbsp;the&nbsp;bar&nbsp;edges<br>
&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;-&nbsp;width&nbsp;of&nbsp;bar&nbsp;edges;&nbsp;None&nbsp;means&nbsp;use&nbsp;default<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth;&nbsp;0&nbsp;means&nbsp;don't&nbsp;draw&nbsp;edges.<br>
&nbsp;&nbsp;&nbsp;&nbsp;xerr&nbsp;and&nbsp;yerr,&nbsp;if&nbsp;not&nbsp;None,&nbsp;will&nbsp;be&nbsp;used&nbsp;to&nbsp;generate&nbsp;errorbars<br>
&nbsp;&nbsp;&nbsp;&nbsp;on&nbsp;the&nbsp;bar&nbsp;chart<br>
&nbsp;&nbsp;&nbsp;&nbsp;ecolor&nbsp;specifies&nbsp;the&nbsp;color&nbsp;of&nbsp;any&nbsp;errorbar<br>
&nbsp;&nbsp;&nbsp;&nbsp;capsize&nbsp;(default&nbsp;3)&nbsp;determines&nbsp;the&nbsp;length&nbsp;in&nbsp;points&nbsp;of&nbsp;the&nbsp;error<br>
&nbsp;&nbsp;&nbsp;&nbsp;bar&nbsp;caps<br>
&nbsp;&nbsp;&nbsp;&nbsp;align&nbsp;=&nbsp;'edge'&nbsp;(default)&nbsp;|&nbsp;'center'<br>
&nbsp;&nbsp;&nbsp;&nbsp;orientation&nbsp;=&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;log&nbsp;=&nbsp;False&nbsp;|&nbsp;True&nbsp;-&nbsp;False&nbsp;(default)&nbsp;leaves&nbsp;the&nbsp;orientation<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axis&nbsp;as-is;&nbsp;True&nbsp;sets&nbsp;it&nbsp;to&nbsp;log&nbsp;scale<br>
For&nbsp;vertical&nbsp;bars,&nbsp;align='edge'&nbsp;aligns&nbsp;bars&nbsp;by&nbsp;their&nbsp;left&nbsp;edges&nbsp;in<br>
left,&nbsp;while&nbsp;'center'&nbsp;interprets&nbsp;these&nbsp;values&nbsp;as&nbsp;the&nbsp;x&nbsp;coordinates&nbsp;of<br>
the&nbsp;bar&nbsp;centers.&nbsp;For&nbsp;horizontal&nbsp;bars,&nbsp;'edge'&nbsp;aligns&nbsp;bars&nbsp;by&nbsp;their<br>
bottom&nbsp;edges&nbsp;in&nbsp;bottom,&nbsp;while&nbsp;'center'&nbsp;interprets&nbsp;these&nbsp;values&nbsp;as&nbsp;the<br>
y&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;bar&nbsp;centers.<br>
The&nbsp;optional&nbsp;arguments&nbsp;color,&nbsp;edgecolor,&nbsp;linewidth,&nbsp;xerr,&nbsp;and&nbsp;yerr&nbsp;can<br>
be&nbsp;either&nbsp;scalars&nbsp;or&nbsp;sequences&nbsp;of&nbsp;length&nbsp;equal&nbsp;to&nbsp;the&nbsp;number&nbsp;of&nbsp;bars.<br>
This&nbsp;enables&nbsp;you&nbsp;to&nbsp;use&nbsp;bar&nbsp;as&nbsp;the&nbsp;basis&nbsp;for&nbsp;stacked&nbsp;bar&nbsp;charts,&nbsp;or<br>
candlestick&nbsp;plots.<br>
Optional&nbsp;kwargs:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-barh"><strong>barh</strong></a>(self, bottom, width, height<font color="#909090">=0.80000000000000004</font>, left<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>BARH(bottom,&nbsp;width,&nbsp;height=0.8,&nbsp;left=0,&nbsp;**kwargs)<br>
Make&nbsp;a&nbsp;horizontal&nbsp;bar&nbsp;plot&nbsp;with&nbsp;rectangles&nbsp;bounded&nbsp;by<br>
&nbsp;&nbsp;left,&nbsp;left+width,&nbsp;bottom,&nbsp;bottom+height<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(left,&nbsp;right,&nbsp;bottom&nbsp;and&nbsp;top&nbsp;edges)<br>
bottom,&nbsp;width,&nbsp;height,&nbsp;and&nbsp;left&nbsp;can&nbsp;be&nbsp;either&nbsp;scalars&nbsp;or&nbsp;sequences<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;Rectangle&nbsp;patch&nbsp;instances<br>
&nbsp;&nbsp;&nbsp;&nbsp;bottom&nbsp;-&nbsp;the&nbsp;vertical&nbsp;positions&nbsp;of&nbsp;the&nbsp;bottom&nbsp;edges&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;width&nbsp;-&nbsp;the&nbsp;lengths&nbsp;of&nbsp;the&nbsp;bars<br>
Optional&nbsp;arguments:<br>
&nbsp;&nbsp;&nbsp;&nbsp;height&nbsp;-&nbsp;the&nbsp;heights&nbsp;(thicknesses)&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;left&nbsp;-&nbsp;the&nbsp;x&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;left&nbsp;edges&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;-&nbsp;the&nbsp;colors&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;-&nbsp;the&nbsp;colors&nbsp;of&nbsp;the&nbsp;bar&nbsp;edges<br>
&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;-&nbsp;width&nbsp;of&nbsp;bar&nbsp;edges;&nbsp;None&nbsp;means&nbsp;use&nbsp;default<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth;&nbsp;0&nbsp;means&nbsp;don't&nbsp;draw&nbsp;edges.<br>
&nbsp;&nbsp;&nbsp;&nbsp;xerr&nbsp;and&nbsp;yerr,&nbsp;if&nbsp;not&nbsp;None,&nbsp;will&nbsp;be&nbsp;used&nbsp;to&nbsp;generate&nbsp;errorbars<br>
&nbsp;&nbsp;&nbsp;&nbsp;on&nbsp;the&nbsp;bar&nbsp;chart<br>
&nbsp;&nbsp;&nbsp;&nbsp;ecolor&nbsp;specifies&nbsp;the&nbsp;color&nbsp;of&nbsp;any&nbsp;errorbar<br>
&nbsp;&nbsp;&nbsp;&nbsp;capsize&nbsp;(default&nbsp;3)&nbsp;determines&nbsp;the&nbsp;length&nbsp;in&nbsp;points&nbsp;of&nbsp;the&nbsp;error<br>
&nbsp;&nbsp;&nbsp;&nbsp;bar&nbsp;caps<br>
&nbsp;&nbsp;&nbsp;&nbsp;align&nbsp;=&nbsp;'edge'&nbsp;(default)&nbsp;|&nbsp;'center'<br>
&nbsp;&nbsp;&nbsp;&nbsp;log&nbsp;=&nbsp;False&nbsp;|&nbsp;True&nbsp;-&nbsp;False&nbsp;(default)&nbsp;leaves&nbsp;the&nbsp;horizontal<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axis&nbsp;as-is;&nbsp;True&nbsp;sets&nbsp;it&nbsp;to&nbsp;log&nbsp;scale<br>
Setting&nbsp;align='edge'&nbsp;aligns&nbsp;bars&nbsp;by&nbsp;their&nbsp;bottom&nbsp;edges&nbsp;in&nbsp;bottom,<br>
while&nbsp;'center'&nbsp;interprets&nbsp;these&nbsp;values&nbsp;as&nbsp;the&nbsp;y&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;bar<br>
centers.<br>
The&nbsp;optional&nbsp;arguments&nbsp;color,&nbsp;edgecolor,&nbsp;linewidth,&nbsp;xerr,&nbsp;and&nbsp;yerr&nbsp;can<br>
be&nbsp;either&nbsp;scalars&nbsp;or&nbsp;sequences&nbsp;of&nbsp;length&nbsp;equal&nbsp;to&nbsp;the&nbsp;number&nbsp;of&nbsp;bars.<br>
This&nbsp;enables&nbsp;you&nbsp;to&nbsp;use&nbsp;barh&nbsp;as&nbsp;the&nbsp;basis&nbsp;for&nbsp;stacked&nbsp;bar&nbsp;charts,&nbsp;or<br>
candlestick&nbsp;plots.<br>
Optional&nbsp;kwargs:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-boxplot"><strong>boxplot</strong></a>(self, x, notch<font color="#909090">=0</font>, sym<font color="#909090">='b+'</font>, vert<font color="#909090">=1</font>, whis<font color="#909090">=1.5</font>, positions<font color="#909090">=None</font>, widths<font color="#909090">=None</font>)</dt><dd><tt><a href="#Axes-boxplot">boxplot</a>(x,&nbsp;notch=0,&nbsp;sym='+',&nbsp;vert=1,&nbsp;whis=1.5,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;positions=None,&nbsp;widths=None)<br>
&nbsp;<br>
Make&nbsp;a&nbsp;box&nbsp;and&nbsp;whisker&nbsp;plot&nbsp;for&nbsp;each&nbsp;column&nbsp;of&nbsp;x&nbsp;or<br>
each&nbsp;vector&nbsp;in&nbsp;sequence&nbsp;x.<br>
The&nbsp;box&nbsp;extends&nbsp;from&nbsp;the&nbsp;lower&nbsp;to&nbsp;upper&nbsp;quartile&nbsp;values<br>
of&nbsp;the&nbsp;data,&nbsp;with&nbsp;a&nbsp;line&nbsp;at&nbsp;the&nbsp;median.&nbsp;&nbsp;The&nbsp;whiskers<br>
extend&nbsp;from&nbsp;the&nbsp;box&nbsp;to&nbsp;show&nbsp;the&nbsp;range&nbsp;of&nbsp;the&nbsp;data.&nbsp;&nbsp;Flier<br>
points&nbsp;are&nbsp;those&nbsp;past&nbsp;the&nbsp;end&nbsp;of&nbsp;the&nbsp;whiskers.<br>
&nbsp;<br>
notch&nbsp;=&nbsp;0&nbsp;(default)&nbsp;produces&nbsp;a&nbsp;rectangular&nbsp;box&nbsp;plot.<br>
notch&nbsp;=&nbsp;1&nbsp;will&nbsp;produce&nbsp;a&nbsp;notched&nbsp;box&nbsp;plot<br>
&nbsp;<br>
sym&nbsp;(default&nbsp;'b+')&nbsp;is&nbsp;the&nbsp;default&nbsp;symbol&nbsp;for&nbsp;flier&nbsp;points.<br>
Enter&nbsp;an&nbsp;empty&nbsp;string&nbsp;('')&nbsp;if&nbsp;you&nbsp;don't&nbsp;want&nbsp;to&nbsp;show&nbsp;fliers.<br>
&nbsp;<br>
vert&nbsp;=&nbsp;1&nbsp;(default)&nbsp;makes&nbsp;the&nbsp;boxes&nbsp;vertical.<br>
vert&nbsp;=&nbsp;0&nbsp;makes&nbsp;horizontal&nbsp;boxes.&nbsp;&nbsp;This&nbsp;seems&nbsp;goofy,&nbsp;but<br>
that's&nbsp;how&nbsp;Matlab&nbsp;did&nbsp;it.<br>
&nbsp;<br>
whis&nbsp;(default&nbsp;1.5)&nbsp;defines&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;whiskers&nbsp;as<br>
a&nbsp;function&nbsp;of&nbsp;the&nbsp;inner&nbsp;quartile&nbsp;range.&nbsp;&nbsp;They&nbsp;extend&nbsp;to&nbsp;the<br>
most&nbsp;extreme&nbsp;data&nbsp;point&nbsp;within&nbsp;(&nbsp;whis*(75%-25%)&nbsp;)&nbsp;data&nbsp;range.<br>
&nbsp;<br>
positions&nbsp;(default&nbsp;1,2,...,n)&nbsp;sets&nbsp;the&nbsp;horizontal&nbsp;positions&nbsp;of<br>
the&nbsp;boxes.&nbsp;The&nbsp;ticks&nbsp;and&nbsp;limits&nbsp;are&nbsp;automatically&nbsp;set&nbsp;to&nbsp;match<br>
the&nbsp;positions.<br>
&nbsp;<br>
widths&nbsp;is&nbsp;either&nbsp;a&nbsp;scalar&nbsp;or&nbsp;a&nbsp;vector&nbsp;and&nbsp;sets&nbsp;the&nbsp;width&nbsp;of<br>
each&nbsp;box.&nbsp;The&nbsp;default&nbsp;is&nbsp;0.5,&nbsp;or&nbsp;0.15*(distance&nbsp;between&nbsp;extreme<br>
positions)&nbsp;if&nbsp;that&nbsp;is&nbsp;smaller.<br>
&nbsp;<br>
x&nbsp;is&nbsp;an&nbsp;array&nbsp;or&nbsp;a&nbsp;sequence&nbsp;of&nbsp;vectors.<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;list&nbsp;of&nbsp;the&nbsp;lines&nbsp;added.</tt></dd></dl>

<dl><dt><a name="Axes-broken_barh"><strong>broken_barh</strong></a>(self, xranges, yrange, **kwargs)</dt><dd><tt>A&nbsp;collection&nbsp;of&nbsp;horizontal&nbsp;bars&nbsp;spanning&nbsp;yrange&nbsp;with&nbsp;a&nbsp;sequence&nbsp;of<br>
xranges<br>
xranges&nbsp;:&nbsp;sequence&nbsp;of&nbsp;(xmin,&nbsp;xwidth)<br>
yrange&nbsp;&nbsp;:&nbsp;(ymin,&nbsp;ywidth)<br>
kwargs&nbsp;are&nbsp;collections.BrokenBarHCollection&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clim:&nbsp;a&nbsp;length&nbsp;2&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap:&nbsp;a&nbsp;colormap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colorbar:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
these&nbsp;can&nbsp;either&nbsp;be&nbsp;a&nbsp;single&nbsp;argument,&nbsp;ie&nbsp;facecolors='black'<br>
or&nbsp;a&nbsp;sequence&nbsp;of&nbsp;arguments&nbsp;for&nbsp;the&nbsp;various&nbsp;bars,&nbsp;ie<br>
facecolors='black',&nbsp;'red',&nbsp;'green'</tt></dd></dl>

<dl><dt><a name="Axes-cla"><strong>cla</strong></a>(self)</dt><dd><tt>Clear&nbsp;the&nbsp;current&nbsp;axes</tt></dd></dl>

<dl><dt><a name="Axes-clabel"><strong>clabel</strong></a>(self, CS, *args, **kwargs)</dt><dd><tt><a href="#Axes-clabel">clabel</a>(CS,&nbsp;**kwargs)&nbsp;-&nbsp;add&nbsp;labels&nbsp;to&nbsp;line&nbsp;contours&nbsp;in&nbsp;CS,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;where&nbsp;CS&nbsp;is&nbsp;a&nbsp;ContourSet&nbsp;object&nbsp;returned&nbsp;by&nbsp;contour.<br>
&nbsp;<br>
<a href="#Axes-clabel">clabel</a>(CS,&nbsp;V,&nbsp;**kwargs)&nbsp;-&nbsp;only&nbsp;label&nbsp;contours&nbsp;listed&nbsp;in&nbsp;V<br>
&nbsp;<br>
keyword&nbsp;arguments:<br>
&nbsp;<br>
*&nbsp;fontsize&nbsp;=&nbsp;None:&nbsp;as&nbsp;described&nbsp;in&nbsp;<a href="http://matplotlib.sf.net/fonts.html">http://matplotlib.sf.net/fonts.html</a><br>
&nbsp;<br>
*&nbsp;colors&nbsp;=&nbsp;None:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;tuple&nbsp;of&nbsp;matplotlib&nbsp;color&nbsp;args&nbsp;(string,&nbsp;float,&nbsp;rgb,&nbsp;etc),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;different&nbsp;labels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;different&nbsp;colors&nbsp;in&nbsp;the&nbsp;order<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specified<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;-&nbsp;one&nbsp;string&nbsp;color,&nbsp;e.g.&nbsp;colors&nbsp;=&nbsp;'r'&nbsp;or&nbsp;colors&nbsp;=&nbsp;'red',&nbsp;all&nbsp;labels<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;this&nbsp;color<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;colors&nbsp;==&nbsp;None,&nbsp;the&nbsp;color&nbsp;of&nbsp;each&nbsp;label&nbsp;matches&nbsp;the&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;corresponding&nbsp;contour<br>
&nbsp;<br>
*&nbsp;inline&nbsp;=&nbsp;True:&nbsp;controls&nbsp;whether&nbsp;the&nbsp;underlying&nbsp;contour&nbsp;is&nbsp;removed<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(inline&nbsp;=&nbsp;True)&nbsp;or&nbsp;not&nbsp;(False)<br>
&nbsp;<br>
*&nbsp;fmt&nbsp;=&nbsp;'%1.3f':&nbsp;a&nbsp;format&nbsp;string&nbsp;for&nbsp;the&nbsp;label</tt></dd></dl>

<dl><dt><a name="Axes-clear"><strong>clear</strong></a>(self)</dt><dd><tt>clear&nbsp;the&nbsp;axes</tt></dd></dl>

<dl><dt><a name="Axes-cohere"><strong>cohere</strong></a>(self, x, y, NFFT<font color="#909090">=256</font>, Fs<font color="#909090">=2</font>, detrend<font color="#909090">=&lt;function detrend_none at 0x847d844&gt;</font>, window<font color="#909090">=&lt;function window_hanning at 0x847d72c&gt;</font>, noverlap<font color="#909090">=0</font>, **kwargs)</dt><dd><tt>COHERE(x,&nbsp;y,&nbsp;NFFT=256,&nbsp;Fs=2,&nbsp;detrend=detrend_none,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window=window_hanning,&nbsp;noverlap=0,&nbsp;**kwargs)<br>
cohere&nbsp;the&nbsp;coherence&nbsp;between&nbsp;x&nbsp;and&nbsp;y.&nbsp;&nbsp;Coherence&nbsp;is&nbsp;the&nbsp;normalized<br>
cross&nbsp;spectral&nbsp;density<br>
&nbsp;&nbsp;Cxy&nbsp;=&nbsp;|Pxy|^2/(Pxx*Pyy)<br>
The&nbsp;return&nbsp;value&nbsp;is&nbsp;(Cxy,&nbsp;f),&nbsp;where&nbsp;f&nbsp;are&nbsp;the&nbsp;frequencies&nbsp;of&nbsp;the<br>
coherence&nbsp;vector.<br>
See&nbsp;the&nbsp;PSD&nbsp;help&nbsp;for&nbsp;a&nbsp;description&nbsp;of&nbsp;the&nbsp;optional&nbsp;parameters.<br>
kwargs&nbsp;are&nbsp;applied&nbsp;to&nbsp;the&nbsp;lines<br>
Returns&nbsp;the&nbsp;tuple&nbsp;Cxy,&nbsp;freqs<br>
Refs:&nbsp;Bendat&nbsp;&amp;&nbsp;Piersol&nbsp;--&nbsp;Random&nbsp;Data:&nbsp;Analysis&nbsp;and&nbsp;Measurement<br>
&nbsp;&nbsp;Procedures,&nbsp;John&nbsp;Wiley&nbsp;&amp;&nbsp;Sons&nbsp;(1986)<br>
kwargs&nbsp;control&nbsp;the&nbsp;Line2D&nbsp;properties&nbsp;of&nbsp;the&nbsp;coherence&nbsp;plot:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-connect"><strong>connect</strong></a>(self, s, func)</dt><dd><tt>Register&nbsp;observers&nbsp;to&nbsp;be&nbsp;notified&nbsp;when&nbsp;certain&nbsp;events&nbsp;occur.&nbsp;&nbsp;Register<br>
with&nbsp;callback&nbsp;functions&nbsp;with&nbsp;the&nbsp;following&nbsp;signatures.&nbsp;&nbsp;The&nbsp;function<br>
has&nbsp;the&nbsp;following&nbsp;signature<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;func(ax)&nbsp;&nbsp;#&nbsp;where&nbsp;ax&nbsp;is&nbsp;the&nbsp;instance&nbsp;making&nbsp;the&nbsp;callback.<br>
&nbsp;<br>
The&nbsp;following&nbsp;events&nbsp;can&nbsp;be&nbsp;connected&nbsp;to:<br>
&nbsp;<br>
&nbsp;&nbsp;'xlim_changed','ylim_changed'<br>
&nbsp;<br>
The&nbsp;connection&nbsp;id&nbsp;is&nbsp;is&nbsp;returned&nbsp;-&nbsp;you&nbsp;can&nbsp;use&nbsp;this&nbsp;with<br>
disconnect&nbsp;to&nbsp;disconnect&nbsp;from&nbsp;the&nbsp;axes&nbsp;event</tt></dd></dl>

<dl><dt><a name="Axes-contour"><strong>contour</strong></a>(self, *args, **kwargs)</dt><dd><tt>contour&nbsp;and&nbsp;contourf&nbsp;draw&nbsp;contour&nbsp;lines&nbsp;and&nbsp;filled&nbsp;contours,<br>
respectively.&nbsp;&nbsp;Except&nbsp;as&nbsp;noted,&nbsp;function&nbsp;signatures&nbsp;and&nbsp;return<br>
values&nbsp;are&nbsp;the&nbsp;same&nbsp;for&nbsp;both&nbsp;versions.<br>
&nbsp;<br>
contourf&nbsp;differs&nbsp;from&nbsp;the&nbsp;Matlab&nbsp;(TM)&nbsp;version&nbsp;in&nbsp;that&nbsp;it&nbsp;does&nbsp;not<br>
&nbsp;&nbsp;&nbsp;&nbsp;draw&nbsp;the&nbsp;polygon&nbsp;edges,&nbsp;because&nbsp;the&nbsp;contouring&nbsp;engine&nbsp;yields<br>
&nbsp;&nbsp;&nbsp;&nbsp;simply&nbsp;connected&nbsp;regions&nbsp;with&nbsp;branch&nbsp;cuts.&nbsp;&nbsp;To&nbsp;draw&nbsp;the&nbsp;edges,<br>
&nbsp;&nbsp;&nbsp;&nbsp;add&nbsp;line&nbsp;contours&nbsp;with&nbsp;calls&nbsp;to&nbsp;contour.<br>
&nbsp;<br>
&nbsp;<br>
Function&nbsp;signatures<br>
&nbsp;<br>
<a href="#Axes-contour">contour</a>(Z)&nbsp;-&nbsp;make&nbsp;a&nbsp;contour&nbsp;plot&nbsp;of&nbsp;an&nbsp;array&nbsp;Z.&nbsp;The&nbsp;level<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values&nbsp;are&nbsp;chosen&nbsp;automatically.<br>
&nbsp;<br>
<a href="#Axes-contour">contour</a>(X,Y,Z)&nbsp;-&nbsp;X,Y&nbsp;specify&nbsp;the&nbsp;(x,y)&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;surface<br>
&nbsp;<br>
<a href="#Axes-contour">contour</a>(Z,N)&nbsp;and&nbsp;<a href="#Axes-contour">contour</a>(X,Y,Z,N)&nbsp;-&nbsp;contour&nbsp;N&nbsp;automatically-chosen<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;levels.<br>
&nbsp;<br>
<a href="#Axes-contour">contour</a>(Z,V)&nbsp;and&nbsp;<a href="#Axes-contour">contour</a>(X,Y,Z,V)&nbsp;-&nbsp;draw&nbsp;len(V)&nbsp;contour&nbsp;lines,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;the&nbsp;values&nbsp;specified&nbsp;in&nbsp;sequence&nbsp;V<br>
&nbsp;<br>
<a href="#Axes-contourf">contourf</a>(...,&nbsp;V)&nbsp;-&nbsp;fill&nbsp;the&nbsp;(len(V)-1)&nbsp;regions&nbsp;between&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values&nbsp;in&nbsp;V<br>
&nbsp;<br>
<a href="#Axes-contour">contour</a>(Z,&nbsp;**kwargs)&nbsp;-&nbsp;Use&nbsp;keyword&nbsp;args&nbsp;to&nbsp;control&nbsp;colors,&nbsp;linewidth,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;origin,&nbsp;cmap&nbsp;...&nbsp;see&nbsp;below<br>
&nbsp;<br>
X,&nbsp;Y,&nbsp;and&nbsp;Z&nbsp;must&nbsp;be&nbsp;arrays&nbsp;with&nbsp;the&nbsp;same&nbsp;dimensions.<br>
Z&nbsp;may&nbsp;be&nbsp;a&nbsp;masked&nbsp;array,&nbsp;but&nbsp;filled&nbsp;contouring&nbsp;may&nbsp;not&nbsp;handle<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;internal&nbsp;masked&nbsp;regions&nbsp;correctly.<br>
&nbsp;<br>
C&nbsp;=&nbsp;<a href="#Axes-contour">contour</a>(...)&nbsp;returns&nbsp;a&nbsp;ContourSet&nbsp;object.<br>
&nbsp;<br>
&nbsp;<br>
Optional&nbsp;keyword&nbsp;args&nbsp;are&nbsp;shown&nbsp;with&nbsp;their&nbsp;defaults&nbsp;below&nbsp;(you&nbsp;must<br>
use&nbsp;kwargs&nbsp;for&nbsp;these):<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;colors&nbsp;=&nbsp;None;&nbsp;or&nbsp;one&nbsp;of&nbsp;the&nbsp;following:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;tuple&nbsp;of&nbsp;matplotlib&nbsp;color&nbsp;args&nbsp;(string,&nbsp;float,&nbsp;rgb,&nbsp;etc),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;different&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;different&nbsp;colors&nbsp;in&nbsp;the&nbsp;order<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specified<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;one&nbsp;string&nbsp;color,&nbsp;e.g.&nbsp;colors&nbsp;=&nbsp;'r'&nbsp;or&nbsp;colors&nbsp;=&nbsp;'red',&nbsp;all&nbsp;levels<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;this&nbsp;color<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;colors&nbsp;==&nbsp;None,&nbsp;the&nbsp;colormap&nbsp;specified&nbsp;by&nbsp;cmap&nbsp;will&nbsp;be&nbsp;used<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;alpha=1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;blending&nbsp;value<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;cmap&nbsp;=&nbsp;None:&nbsp;a&nbsp;cm&nbsp;Colormap&nbsp;instance&nbsp;from&nbsp;matplotlib.cm.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;cmap&nbsp;==&nbsp;None&nbsp;and&nbsp;colors&nbsp;==&nbsp;None,&nbsp;a&nbsp;default&nbsp;Colormap&nbsp;is&nbsp;used.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;norm&nbsp;=&nbsp;None:&nbsp;a&nbsp;matplotlib.colors.Normalize&nbsp;instance&nbsp;for<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scaling&nbsp;data&nbsp;values&nbsp;to&nbsp;colors.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;norm&nbsp;==&nbsp;None,&nbsp;and&nbsp;colors&nbsp;==&nbsp;None,&nbsp;the&nbsp;default<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linear&nbsp;scaling&nbsp;is&nbsp;used.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;origin&nbsp;=&nbsp;None:&nbsp;'upper'|'lower'|'image'|None.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;'image',&nbsp;the&nbsp;rc&nbsp;value&nbsp;for&nbsp;image.origin&nbsp;will&nbsp;be&nbsp;used.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;None&nbsp;(default),&nbsp;the&nbsp;first&nbsp;value&nbsp;of&nbsp;Z&nbsp;will&nbsp;correspond<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;the&nbsp;lower&nbsp;left&nbsp;corner,&nbsp;location&nbsp;(0,0).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This&nbsp;keyword&nbsp;is&nbsp;active&nbsp;only&nbsp;if&nbsp;contourf&nbsp;is&nbsp;called&nbsp;with<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;one&nbsp;or&nbsp;two&nbsp;arguments,&nbsp;that&nbsp;is,&nbsp;without&nbsp;explicitly<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specifying&nbsp;X&nbsp;and&nbsp;Y.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;extent&nbsp;=&nbsp;None:&nbsp;(x0,x1,y0,y1);&nbsp;also&nbsp;active&nbsp;only&nbsp;if&nbsp;X&nbsp;and&nbsp;Y<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;not&nbsp;specified.&nbsp;&nbsp;If&nbsp;origin&nbsp;is&nbsp;not&nbsp;None,&nbsp;then&nbsp;extent&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interpreted&nbsp;as&nbsp;in&nbsp;imshow:&nbsp;it&nbsp;gives&nbsp;the&nbsp;outer&nbsp;pixel&nbsp;boundaries.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;this&nbsp;case,&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[0,0]&nbsp;is&nbsp;the&nbsp;center&nbsp;of&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixel,&nbsp;not&nbsp;a&nbsp;corner.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;origin&nbsp;is&nbsp;None,&nbsp;then&nbsp;(x0,y0)&nbsp;is&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[0,0],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and&nbsp;(x1,y1)&nbsp;is&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[-1,-1].<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;locator&nbsp;=&nbsp;None:&nbsp;an&nbsp;instance&nbsp;of&nbsp;a&nbsp;ticker.Locator&nbsp;subclass;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;is&nbsp;MaxNLocator.&nbsp;&nbsp;It&nbsp;is&nbsp;used&nbsp;to&nbsp;determine&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contour&nbsp;levels&nbsp;if&nbsp;they&nbsp;are&nbsp;not&nbsp;given&nbsp;explicitly&nbsp;via&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;V&nbsp;argument.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*****&nbsp;New:&nbsp;*****<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;extend&nbsp;=&nbsp;'neither',&nbsp;'both',&nbsp;'min',&nbsp;'max'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Unless&nbsp;this&nbsp;is&nbsp;'neither'&nbsp;(default),&nbsp;contour&nbsp;levels&nbsp;are<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;automatically&nbsp;added&nbsp;to&nbsp;one&nbsp;or&nbsp;both&nbsp;ends&nbsp;of&nbsp;the&nbsp;range&nbsp;so&nbsp;that<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;all&nbsp;data&nbsp;are&nbsp;included.&nbsp;&nbsp;These&nbsp;added&nbsp;ranges&nbsp;are&nbsp;then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapped&nbsp;to&nbsp;the&nbsp;special&nbsp;colormap&nbsp;values&nbsp;which&nbsp;default&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;ends&nbsp;of&nbsp;the&nbsp;colormap&nbsp;range,&nbsp;but&nbsp;can&nbsp;be&nbsp;set&nbsp;via<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Colormap.set_under()&nbsp;and&nbsp;Colormap.set_over()&nbsp;methods.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;replace&nbsp;clip_ends=True&nbsp;and&nbsp;V&nbsp;=&nbsp;[-100,&nbsp;2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2,&nbsp;100],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;use&nbsp;extend='both'&nbsp;and&nbsp;V&nbsp;=&nbsp;[2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2].<br>
&nbsp;&nbsp;&nbsp;&nbsp;****************<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;contour&nbsp;only:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;linewidths&nbsp;=&nbsp;None:&nbsp;or&nbsp;one&nbsp;of&nbsp;these:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;number&nbsp;-&nbsp;all&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;with&nbsp;this&nbsp;linewidth,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.g.&nbsp;linewidths&nbsp;=&nbsp;0.6<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;tuple&nbsp;of&nbsp;numbers,&nbsp;e.g.&nbsp;linewidths&nbsp;=&nbsp;(0.4,&nbsp;0.8,&nbsp;1.2)&nbsp;different<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;with&nbsp;different&nbsp;linewidths&nbsp;in&nbsp;the&nbsp;order<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specified<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;linewidths&nbsp;==&nbsp;None,&nbsp;the&nbsp;default&nbsp;width&nbsp;in&nbsp;lines.linewidth&nbsp;in<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;matplotlibrc&nbsp;is&nbsp;used<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;contourf&nbsp;only:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*****&nbsp;Obsolete:&nbsp;****<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;clip_ends&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;False,&nbsp;the&nbsp;limits&nbsp;for&nbsp;color&nbsp;scaling&nbsp;are&nbsp;set&nbsp;to&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;contour&nbsp;levels.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;True&nbsp;(default)&nbsp;clips&nbsp;the&nbsp;scaling&nbsp;limits.&nbsp;&nbsp;Example:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;the&nbsp;contour&nbsp;boundaries&nbsp;are&nbsp;V&nbsp;=&nbsp;[-100,&nbsp;2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2,&nbsp;100],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;then&nbsp;the&nbsp;scaling&nbsp;limits&nbsp;will&nbsp;be&nbsp;[-100,&nbsp;100]&nbsp;if&nbsp;clip_ends<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;False,&nbsp;and&nbsp;[-3,&nbsp;3]&nbsp;if&nbsp;clip_ends&nbsp;is&nbsp;True.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;linewidths&nbsp;=&nbsp;None&nbsp;or&nbsp;a&nbsp;number;&nbsp;default&nbsp;of&nbsp;0.05&nbsp;works&nbsp;for<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Postscript;&nbsp;a&nbsp;value&nbsp;of&nbsp;about&nbsp;0.5&nbsp;seems&nbsp;better&nbsp;for&nbsp;Agg.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;antialiased&nbsp;=&nbsp;True&nbsp;(default)&nbsp;or&nbsp;False;&nbsp;if&nbsp;False,&nbsp;there&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;no&nbsp;need&nbsp;to&nbsp;increase&nbsp;the&nbsp;linewidths&nbsp;for&nbsp;Agg,&nbsp;but&nbsp;True&nbsp;gives<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nicer&nbsp;color&nbsp;boundaries.&nbsp;&nbsp;If&nbsp;antialiased&nbsp;is&nbsp;True&nbsp;and&nbsp;linewidths<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;too&nbsp;small,&nbsp;then&nbsp;there&nbsp;may&nbsp;be&nbsp;light-colored&nbsp;lines&nbsp;at&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;boundaries&nbsp;caused&nbsp;by&nbsp;the&nbsp;antialiasing.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;nchunk&nbsp;=&nbsp;0&nbsp;(default)&nbsp;for&nbsp;no&nbsp;subdivision&nbsp;of&nbsp;the&nbsp;domain;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specify&nbsp;a&nbsp;positive&nbsp;integer&nbsp;to&nbsp;divide&nbsp;the&nbsp;domain&nbsp;into<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;subdomains&nbsp;of&nbsp;roughly&nbsp;nchunk&nbsp;by&nbsp;nchunk&nbsp;points.&nbsp;This&nbsp;may<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;never&nbsp;actually&nbsp;be&nbsp;advantageous,&nbsp;so&nbsp;this&nbsp;option&nbsp;may&nbsp;be<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removed.&nbsp;&nbsp;Chunking&nbsp;introduces&nbsp;artifacts&nbsp;at&nbsp;the&nbsp;chunk<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boundaries&nbsp;unless&nbsp;antialiased&nbsp;=&nbsp;False,&nbsp;or&nbsp;linewidths&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set&nbsp;to&nbsp;a&nbsp;large&nbsp;enough&nbsp;value&nbsp;for&nbsp;the&nbsp;particular&nbsp;renderer&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolution.</tt></dd></dl>

<dl><dt><a name="Axes-contourf"><strong>contourf</strong></a>(self, *args, **kwargs)</dt><dd><tt>contour&nbsp;and&nbsp;contourf&nbsp;draw&nbsp;contour&nbsp;lines&nbsp;and&nbsp;filled&nbsp;contours,<br>
respectively.&nbsp;&nbsp;Except&nbsp;as&nbsp;noted,&nbsp;function&nbsp;signatures&nbsp;and&nbsp;return<br>
values&nbsp;are&nbsp;the&nbsp;same&nbsp;for&nbsp;both&nbsp;versions.<br>
&nbsp;<br>
contourf&nbsp;differs&nbsp;from&nbsp;the&nbsp;Matlab&nbsp;(TM)&nbsp;version&nbsp;in&nbsp;that&nbsp;it&nbsp;does&nbsp;not<br>
&nbsp;&nbsp;&nbsp;&nbsp;draw&nbsp;the&nbsp;polygon&nbsp;edges,&nbsp;because&nbsp;the&nbsp;contouring&nbsp;engine&nbsp;yields<br>
&nbsp;&nbsp;&nbsp;&nbsp;simply&nbsp;connected&nbsp;regions&nbsp;with&nbsp;branch&nbsp;cuts.&nbsp;&nbsp;To&nbsp;draw&nbsp;the&nbsp;edges,<br>
&nbsp;&nbsp;&nbsp;&nbsp;add&nbsp;line&nbsp;contours&nbsp;with&nbsp;calls&nbsp;to&nbsp;contour.<br>
&nbsp;<br>
&nbsp;<br>
Function&nbsp;signatures<br>
&nbsp;<br>
<a href="#Axes-contour">contour</a>(Z)&nbsp;-&nbsp;make&nbsp;a&nbsp;contour&nbsp;plot&nbsp;of&nbsp;an&nbsp;array&nbsp;Z.&nbsp;The&nbsp;level<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values&nbsp;are&nbsp;chosen&nbsp;automatically.<br>
&nbsp;<br>
<a href="#Axes-contour">contour</a>(X,Y,Z)&nbsp;-&nbsp;X,Y&nbsp;specify&nbsp;the&nbsp;(x,y)&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;surface<br>
&nbsp;<br>
<a href="#Axes-contour">contour</a>(Z,N)&nbsp;and&nbsp;<a href="#Axes-contour">contour</a>(X,Y,Z,N)&nbsp;-&nbsp;contour&nbsp;N&nbsp;automatically-chosen<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;levels.<br>
&nbsp;<br>
<a href="#Axes-contour">contour</a>(Z,V)&nbsp;and&nbsp;<a href="#Axes-contour">contour</a>(X,Y,Z,V)&nbsp;-&nbsp;draw&nbsp;len(V)&nbsp;contour&nbsp;lines,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;the&nbsp;values&nbsp;specified&nbsp;in&nbsp;sequence&nbsp;V<br>
&nbsp;<br>
<a href="#Axes-contourf">contourf</a>(...,&nbsp;V)&nbsp;-&nbsp;fill&nbsp;the&nbsp;(len(V)-1)&nbsp;regions&nbsp;between&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values&nbsp;in&nbsp;V<br>
&nbsp;<br>
<a href="#Axes-contour">contour</a>(Z,&nbsp;**kwargs)&nbsp;-&nbsp;Use&nbsp;keyword&nbsp;args&nbsp;to&nbsp;control&nbsp;colors,&nbsp;linewidth,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;origin,&nbsp;cmap&nbsp;...&nbsp;see&nbsp;below<br>
&nbsp;<br>
X,&nbsp;Y,&nbsp;and&nbsp;Z&nbsp;must&nbsp;be&nbsp;arrays&nbsp;with&nbsp;the&nbsp;same&nbsp;dimensions.<br>
Z&nbsp;may&nbsp;be&nbsp;a&nbsp;masked&nbsp;array,&nbsp;but&nbsp;filled&nbsp;contouring&nbsp;may&nbsp;not&nbsp;handle<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;internal&nbsp;masked&nbsp;regions&nbsp;correctly.<br>
&nbsp;<br>
C&nbsp;=&nbsp;<a href="#Axes-contour">contour</a>(...)&nbsp;returns&nbsp;a&nbsp;ContourSet&nbsp;object.<br>
&nbsp;<br>
&nbsp;<br>
Optional&nbsp;keyword&nbsp;args&nbsp;are&nbsp;shown&nbsp;with&nbsp;their&nbsp;defaults&nbsp;below&nbsp;(you&nbsp;must<br>
use&nbsp;kwargs&nbsp;for&nbsp;these):<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;colors&nbsp;=&nbsp;None;&nbsp;or&nbsp;one&nbsp;of&nbsp;the&nbsp;following:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;tuple&nbsp;of&nbsp;matplotlib&nbsp;color&nbsp;args&nbsp;(string,&nbsp;float,&nbsp;rgb,&nbsp;etc),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;different&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;different&nbsp;colors&nbsp;in&nbsp;the&nbsp;order<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specified<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;one&nbsp;string&nbsp;color,&nbsp;e.g.&nbsp;colors&nbsp;=&nbsp;'r'&nbsp;or&nbsp;colors&nbsp;=&nbsp;'red',&nbsp;all&nbsp;levels<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;this&nbsp;color<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;colors&nbsp;==&nbsp;None,&nbsp;the&nbsp;colormap&nbsp;specified&nbsp;by&nbsp;cmap&nbsp;will&nbsp;be&nbsp;used<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;alpha=1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;blending&nbsp;value<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;cmap&nbsp;=&nbsp;None:&nbsp;a&nbsp;cm&nbsp;Colormap&nbsp;instance&nbsp;from&nbsp;matplotlib.cm.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;cmap&nbsp;==&nbsp;None&nbsp;and&nbsp;colors&nbsp;==&nbsp;None,&nbsp;a&nbsp;default&nbsp;Colormap&nbsp;is&nbsp;used.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;norm&nbsp;=&nbsp;None:&nbsp;a&nbsp;matplotlib.colors.Normalize&nbsp;instance&nbsp;for<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scaling&nbsp;data&nbsp;values&nbsp;to&nbsp;colors.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;norm&nbsp;==&nbsp;None,&nbsp;and&nbsp;colors&nbsp;==&nbsp;None,&nbsp;the&nbsp;default<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linear&nbsp;scaling&nbsp;is&nbsp;used.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;origin&nbsp;=&nbsp;None:&nbsp;'upper'|'lower'|'image'|None.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;'image',&nbsp;the&nbsp;rc&nbsp;value&nbsp;for&nbsp;image.origin&nbsp;will&nbsp;be&nbsp;used.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;None&nbsp;(default),&nbsp;the&nbsp;first&nbsp;value&nbsp;of&nbsp;Z&nbsp;will&nbsp;correspond<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;the&nbsp;lower&nbsp;left&nbsp;corner,&nbsp;location&nbsp;(0,0).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This&nbsp;keyword&nbsp;is&nbsp;active&nbsp;only&nbsp;if&nbsp;contourf&nbsp;is&nbsp;called&nbsp;with<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;one&nbsp;or&nbsp;two&nbsp;arguments,&nbsp;that&nbsp;is,&nbsp;without&nbsp;explicitly<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specifying&nbsp;X&nbsp;and&nbsp;Y.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;extent&nbsp;=&nbsp;None:&nbsp;(x0,x1,y0,y1);&nbsp;also&nbsp;active&nbsp;only&nbsp;if&nbsp;X&nbsp;and&nbsp;Y<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;not&nbsp;specified.&nbsp;&nbsp;If&nbsp;origin&nbsp;is&nbsp;not&nbsp;None,&nbsp;then&nbsp;extent&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interpreted&nbsp;as&nbsp;in&nbsp;imshow:&nbsp;it&nbsp;gives&nbsp;the&nbsp;outer&nbsp;pixel&nbsp;boundaries.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;this&nbsp;case,&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[0,0]&nbsp;is&nbsp;the&nbsp;center&nbsp;of&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixel,&nbsp;not&nbsp;a&nbsp;corner.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;origin&nbsp;is&nbsp;None,&nbsp;then&nbsp;(x0,y0)&nbsp;is&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[0,0],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and&nbsp;(x1,y1)&nbsp;is&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[-1,-1].<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;locator&nbsp;=&nbsp;None:&nbsp;an&nbsp;instance&nbsp;of&nbsp;a&nbsp;ticker.Locator&nbsp;subclass;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;is&nbsp;MaxNLocator.&nbsp;&nbsp;It&nbsp;is&nbsp;used&nbsp;to&nbsp;determine&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contour&nbsp;levels&nbsp;if&nbsp;they&nbsp;are&nbsp;not&nbsp;given&nbsp;explicitly&nbsp;via&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;V&nbsp;argument.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*****&nbsp;New:&nbsp;*****<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;extend&nbsp;=&nbsp;'neither',&nbsp;'both',&nbsp;'min',&nbsp;'max'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Unless&nbsp;this&nbsp;is&nbsp;'neither'&nbsp;(default),&nbsp;contour&nbsp;levels&nbsp;are<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;automatically&nbsp;added&nbsp;to&nbsp;one&nbsp;or&nbsp;both&nbsp;ends&nbsp;of&nbsp;the&nbsp;range&nbsp;so&nbsp;that<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;all&nbsp;data&nbsp;are&nbsp;included.&nbsp;&nbsp;These&nbsp;added&nbsp;ranges&nbsp;are&nbsp;then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapped&nbsp;to&nbsp;the&nbsp;special&nbsp;colormap&nbsp;values&nbsp;which&nbsp;default&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;ends&nbsp;of&nbsp;the&nbsp;colormap&nbsp;range,&nbsp;but&nbsp;can&nbsp;be&nbsp;set&nbsp;via<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Colormap.set_under()&nbsp;and&nbsp;Colormap.set_over()&nbsp;methods.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;replace&nbsp;clip_ends=True&nbsp;and&nbsp;V&nbsp;=&nbsp;[-100,&nbsp;2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2,&nbsp;100],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;use&nbsp;extend='both'&nbsp;and&nbsp;V&nbsp;=&nbsp;[2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2].<br>
&nbsp;&nbsp;&nbsp;&nbsp;****************<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;contour&nbsp;only:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;linewidths&nbsp;=&nbsp;None:&nbsp;or&nbsp;one&nbsp;of&nbsp;these:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;number&nbsp;-&nbsp;all&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;with&nbsp;this&nbsp;linewidth,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.g.&nbsp;linewidths&nbsp;=&nbsp;0.6<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;tuple&nbsp;of&nbsp;numbers,&nbsp;e.g.&nbsp;linewidths&nbsp;=&nbsp;(0.4,&nbsp;0.8,&nbsp;1.2)&nbsp;different<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;with&nbsp;different&nbsp;linewidths&nbsp;in&nbsp;the&nbsp;order<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specified<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;linewidths&nbsp;==&nbsp;None,&nbsp;the&nbsp;default&nbsp;width&nbsp;in&nbsp;lines.linewidth&nbsp;in<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;matplotlibrc&nbsp;is&nbsp;used<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;contourf&nbsp;only:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*****&nbsp;Obsolete:&nbsp;****<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;clip_ends&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;False,&nbsp;the&nbsp;limits&nbsp;for&nbsp;color&nbsp;scaling&nbsp;are&nbsp;set&nbsp;to&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;contour&nbsp;levels.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;True&nbsp;(default)&nbsp;clips&nbsp;the&nbsp;scaling&nbsp;limits.&nbsp;&nbsp;Example:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;the&nbsp;contour&nbsp;boundaries&nbsp;are&nbsp;V&nbsp;=&nbsp;[-100,&nbsp;2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2,&nbsp;100],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;then&nbsp;the&nbsp;scaling&nbsp;limits&nbsp;will&nbsp;be&nbsp;[-100,&nbsp;100]&nbsp;if&nbsp;clip_ends<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;False,&nbsp;and&nbsp;[-3,&nbsp;3]&nbsp;if&nbsp;clip_ends&nbsp;is&nbsp;True.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;linewidths&nbsp;=&nbsp;None&nbsp;or&nbsp;a&nbsp;number;&nbsp;default&nbsp;of&nbsp;0.05&nbsp;works&nbsp;for<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Postscript;&nbsp;a&nbsp;value&nbsp;of&nbsp;about&nbsp;0.5&nbsp;seems&nbsp;better&nbsp;for&nbsp;Agg.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;antialiased&nbsp;=&nbsp;True&nbsp;(default)&nbsp;or&nbsp;False;&nbsp;if&nbsp;False,&nbsp;there&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;no&nbsp;need&nbsp;to&nbsp;increase&nbsp;the&nbsp;linewidths&nbsp;for&nbsp;Agg,&nbsp;but&nbsp;True&nbsp;gives<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nicer&nbsp;color&nbsp;boundaries.&nbsp;&nbsp;If&nbsp;antialiased&nbsp;is&nbsp;True&nbsp;and&nbsp;linewidths<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;too&nbsp;small,&nbsp;then&nbsp;there&nbsp;may&nbsp;be&nbsp;light-colored&nbsp;lines&nbsp;at&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;boundaries&nbsp;caused&nbsp;by&nbsp;the&nbsp;antialiasing.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;nchunk&nbsp;=&nbsp;0&nbsp;(default)&nbsp;for&nbsp;no&nbsp;subdivision&nbsp;of&nbsp;the&nbsp;domain;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specify&nbsp;a&nbsp;positive&nbsp;integer&nbsp;to&nbsp;divide&nbsp;the&nbsp;domain&nbsp;into<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;subdomains&nbsp;of&nbsp;roughly&nbsp;nchunk&nbsp;by&nbsp;nchunk&nbsp;points.&nbsp;This&nbsp;may<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;never&nbsp;actually&nbsp;be&nbsp;advantageous,&nbsp;so&nbsp;this&nbsp;option&nbsp;may&nbsp;be<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removed.&nbsp;&nbsp;Chunking&nbsp;introduces&nbsp;artifacts&nbsp;at&nbsp;the&nbsp;chunk<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boundaries&nbsp;unless&nbsp;antialiased&nbsp;=&nbsp;False,&nbsp;or&nbsp;linewidths&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set&nbsp;to&nbsp;a&nbsp;large&nbsp;enough&nbsp;value&nbsp;for&nbsp;the&nbsp;particular&nbsp;renderer&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolution.</tt></dd></dl>

<dl><dt><a name="Axes-csd"><strong>csd</strong></a>(self, x, y, NFFT<font color="#909090">=256</font>, Fs<font color="#909090">=2</font>, detrend<font color="#909090">=&lt;function detrend_none at 0x847d844&gt;</font>, window<font color="#909090">=&lt;function window_hanning at 0x847d72c&gt;</font>, noverlap<font color="#909090">=0</font>, **kwargs)</dt><dd><tt>CSD(x,&nbsp;y,&nbsp;NFFT=256,&nbsp;Fs=2,&nbsp;detrend=detrend_none,<br>
&nbsp;&nbsp;&nbsp;&nbsp;window=window_hanning,&nbsp;noverlap=0,&nbsp;**kwargs)<br>
The&nbsp;cross&nbsp;spectral&nbsp;density&nbsp;Pxy&nbsp;by&nbsp;Welches&nbsp;average&nbsp;periodogram&nbsp;method.<br>
The&nbsp;vectors&nbsp;x&nbsp;and&nbsp;y&nbsp;are&nbsp;divided&nbsp;into&nbsp;NFFT&nbsp;length&nbsp;segments.&nbsp;&nbsp;Each<br>
segment&nbsp;is&nbsp;detrended&nbsp;by&nbsp;function&nbsp;detrend&nbsp;and&nbsp;windowed&nbsp;by&nbsp;function<br>
window.&nbsp;&nbsp;The&nbsp;product&nbsp;of&nbsp;the&nbsp;direct&nbsp;FFTs&nbsp;of&nbsp;x&nbsp;and&nbsp;y&nbsp;are&nbsp;averaged&nbsp;over<br>
each&nbsp;segment&nbsp;to&nbsp;compute&nbsp;Pxy,&nbsp;with&nbsp;a&nbsp;scaling&nbsp;to&nbsp;correct&nbsp;for&nbsp;power&nbsp;loss<br>
due&nbsp;to&nbsp;windowing.<br>
See&nbsp;the&nbsp;PSD&nbsp;help&nbsp;for&nbsp;a&nbsp;description&nbsp;of&nbsp;the&nbsp;optional&nbsp;parameters.<br>
Returns&nbsp;the&nbsp;tuple&nbsp;Pxy,&nbsp;freqs.&nbsp;&nbsp;Pxy&nbsp;is&nbsp;the&nbsp;cross&nbsp;spectrum&nbsp;(complex<br>
valued),&nbsp;and&nbsp;10*log10(|Pxy|)&nbsp;is&nbsp;plotted<br>
Refs:<br>
&nbsp;&nbsp;Bendat&nbsp;&amp;&nbsp;Piersol&nbsp;--&nbsp;Random&nbsp;Data:&nbsp;Analysis&nbsp;and&nbsp;Measurement<br>
&nbsp;&nbsp;&nbsp;&nbsp;Procedures,&nbsp;John&nbsp;Wiley&nbsp;&amp;&nbsp;Sons&nbsp;(1986)<br>
kwargs&nbsp;control&nbsp;the&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-disconnect"><strong>disconnect</strong></a>(self, cid)</dt><dd><tt>disconnect&nbsp;from&nbsp;the&nbsp;<a href="#Axes">Axes</a>&nbsp;event.</tt></dd></dl>

<dl><dt><a name="Axes-draw"><strong>draw</strong></a>(self, renderer<font color="#909090">=None</font>, inframe<font color="#909090">=False</font>)</dt><dd><tt>Draw&nbsp;everything&nbsp;(plot&nbsp;lines,&nbsp;axes,&nbsp;labels)</tt></dd></dl>

<dl><dt><a name="Axes-draw_artist"><strong>draw_artist</strong></a>(self, a)</dt><dd><tt>This&nbsp;method&nbsp;can&nbsp;only&nbsp;be&nbsp;used&nbsp;after&nbsp;an&nbsp;initial&nbsp;draw&nbsp;which<br>
caches&nbsp;the&nbsp;renderer.&nbsp;&nbsp;It&nbsp;is&nbsp;used&nbsp;to&nbsp;efficiently&nbsp;update&nbsp;<a href="#Axes">Axes</a><br>
data&nbsp;(axis&nbsp;ticks,&nbsp;labels,&nbsp;etc&nbsp;are&nbsp;not&nbsp;updated)</tt></dd></dl>

<dl><dt><a name="Axes-errorbar"><strong>errorbar</strong></a>(self, x, y, yerr<font color="#909090">=None</font>, xerr<font color="#909090">=None</font>, fmt<font color="#909090">='b-'</font>, ecolor<font color="#909090">=None</font>, capsize<font color="#909090">=3</font>, barsabove<font color="#909090">=False</font>, **kwargs)</dt><dd><tt>ERRORBAR(x,&nbsp;y,&nbsp;yerr=None,&nbsp;xerr=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fmt='b-',&nbsp;ecolor=None,&nbsp;capsize=3,&nbsp;barsabove=False)<br>
Plot&nbsp;x&nbsp;versus&nbsp;y&nbsp;with&nbsp;error&nbsp;deltas&nbsp;in&nbsp;yerr&nbsp;and&nbsp;xerr.<br>
Vertical&nbsp;errorbars&nbsp;are&nbsp;plotted&nbsp;if&nbsp;yerr&nbsp;is&nbsp;not&nbsp;None<br>
Horizontal&nbsp;errorbars&nbsp;are&nbsp;plotted&nbsp;if&nbsp;xerr&nbsp;is&nbsp;not&nbsp;None<br>
xerr&nbsp;and&nbsp;yerr&nbsp;may&nbsp;be&nbsp;any&nbsp;of:<br>
&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;rank-0,&nbsp;Nx1&nbsp;Numpy&nbsp;array&nbsp;&nbsp;-&nbsp;symmetric&nbsp;errorbars&nbsp;+/-&nbsp;value<br>
&nbsp;&nbsp;&nbsp;&nbsp;an&nbsp;N-element&nbsp;list&nbsp;or&nbsp;tuple&nbsp;-&nbsp;symmetric&nbsp;errorbars&nbsp;+/-&nbsp;value<br>
&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;rank-1,&nbsp;Nx2&nbsp;Numpy&nbsp;array&nbsp;&nbsp;-&nbsp;asymmetric&nbsp;errorbars&nbsp;-column1/+column2<br>
Alternatively,&nbsp;x,&nbsp;y,&nbsp;xerr,&nbsp;and&nbsp;yerr&nbsp;can&nbsp;all&nbsp;be&nbsp;scalars,&nbsp;which<br>
plots&nbsp;a&nbsp;single&nbsp;error&nbsp;bar&nbsp;at&nbsp;x,&nbsp;y.<br>
&nbsp;&nbsp;&nbsp;&nbsp;fmt&nbsp;is&nbsp;the&nbsp;plot&nbsp;format&nbsp;symbol&nbsp;for&nbsp;y.&nbsp;&nbsp;if&nbsp;fmt&nbsp;is&nbsp;None,&nbsp;just<br>
&nbsp;&nbsp;&nbsp;&nbsp;plot&nbsp;the&nbsp;errorbars&nbsp;with&nbsp;no&nbsp;line&nbsp;symbols.&nbsp;&nbsp;This&nbsp;can&nbsp;be&nbsp;useful<br>
&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;creating&nbsp;a&nbsp;bar&nbsp;plot&nbsp;with&nbsp;errorbars<br>
&nbsp;&nbsp;&nbsp;&nbsp;ecolor&nbsp;is&nbsp;a&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;which&nbsp;gives&nbsp;the&nbsp;color&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;errorbar&nbsp;lines;&nbsp;if&nbsp;None,&nbsp;use&nbsp;the&nbsp;marker&nbsp;color.<br>
&nbsp;&nbsp;&nbsp;&nbsp;capsize&nbsp;is&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;error&nbsp;bar&nbsp;caps&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;barsabove,&nbsp;if&nbsp;True,&nbsp;will&nbsp;plot&nbsp;the&nbsp;errorbars&nbsp;above&nbsp;the&nbsp;plot&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;default&nbsp;is&nbsp;below<br>
&nbsp;&nbsp;&nbsp;&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;on&nbsp;to&nbsp;the&nbsp;plot&nbsp;command&nbsp;for&nbsp;the&nbsp;markers.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;So&nbsp;you&nbsp;can&nbsp;add&nbsp;additional&nbsp;key=value&nbsp;pairs&nbsp;to&nbsp;control&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errorbar&nbsp;markers.&nbsp;&nbsp;For&nbsp;example,&nbsp;this&nbsp;code&nbsp;makes&nbsp;big&nbsp;red<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;squares&nbsp;with&nbsp;thick&nbsp;green&nbsp;edges<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&gt;&gt;&gt;&nbsp;x,y,yerr&nbsp;=&nbsp;rand(3,10)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&gt;&gt;&gt;&nbsp;<a href="#Axes-errorbar">errorbar</a>(x,&nbsp;y,&nbsp;yerr,&nbsp;marker='s',<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mfc='red',&nbsp;mec='green',&nbsp;ms=20,&nbsp;mew=4)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mfc,&nbsp;mec,&nbsp;ms&nbsp;and&nbsp;mew&nbsp;are&nbsp;aliases&nbsp;for&nbsp;the&nbsp;longer&nbsp;property<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;names,&nbsp;markerfacecolor,&nbsp;markeredgecolor,&nbsp;markersize&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewith.<br>
valid&nbsp;kwargs&nbsp;for&nbsp;the&nbsp;marker&nbsp;properties&nbsp;are<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;length&nbsp;3&nbsp;tuple.&nbsp;&nbsp;The&nbsp;first&nbsp;element&nbsp;is&nbsp;the<br>
Line2D&nbsp;instance&nbsp;for&nbsp;the&nbsp;y&nbsp;symbol&nbsp;lines.&nbsp;&nbsp;The&nbsp;second&nbsp;element&nbsp;is<br>
a&nbsp;list&nbsp;of&nbsp;error&nbsp;bar&nbsp;cap&nbsp;lines,&nbsp;the&nbsp;third&nbsp;element&nbsp;is&nbsp;a&nbsp;list&nbsp;of<br>
line&nbsp;collections&nbsp;for&nbsp;the&nbsp;horizontal&nbsp;and&nbsp;vertical&nbsp;error&nbsp;ranges</tt></dd></dl>

<dl><dt><a name="Axes-fill"><strong>fill</strong></a>(self, *args, **kwargs)</dt><dd><tt>FILL(*args,&nbsp;**kwargs)<br>
plot&nbsp;filled&nbsp;polygons.&nbsp;&nbsp;*args&nbsp;is&nbsp;a&nbsp;variable&nbsp;length&nbsp;argument,&nbsp;allowing<br>
for&nbsp;multiple&nbsp;x,y&nbsp;pairs&nbsp;with&nbsp;an&nbsp;optional&nbsp;color&nbsp;format&nbsp;string;&nbsp;see&nbsp;plot<br>
for&nbsp;details&nbsp;on&nbsp;the&nbsp;argument&nbsp;parsing.&nbsp;&nbsp;For&nbsp;example,&nbsp;all&nbsp;of&nbsp;the<br>
following&nbsp;are&nbsp;legal,&nbsp;assuming&nbsp;ax&nbsp;is&nbsp;an&nbsp;<a href="#Axes">Axes</a>&nbsp;instance:<br>
&nbsp;&nbsp;ax.<a href="#Axes-fill">fill</a>(x,y)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;plot&nbsp;polygon&nbsp;with&nbsp;vertices&nbsp;at&nbsp;x,y<br>
&nbsp;&nbsp;ax.<a href="#Axes-fill">fill</a>(x,y,&nbsp;'b'&nbsp;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;plot&nbsp;polygon&nbsp;with&nbsp;vertices&nbsp;at&nbsp;x,y&nbsp;in&nbsp;blue<br>
An&nbsp;arbitrary&nbsp;number&nbsp;of&nbsp;x,&nbsp;y,&nbsp;color&nbsp;groups&nbsp;can&nbsp;be&nbsp;specified,&nbsp;as&nbsp;in<br>
&nbsp;&nbsp;ax.<a href="#Axes-fill">fill</a>(x1,&nbsp;y1,&nbsp;'g',&nbsp;x2,&nbsp;y2,&nbsp;'r')<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;patches&nbsp;that&nbsp;were&nbsp;added<br>
The&nbsp;same&nbsp;color&nbsp;strings&nbsp;that&nbsp;plot&nbsp;supports&nbsp;are&nbsp;supported&nbsp;by&nbsp;the&nbsp;fill<br>
format&nbsp;string.<br>
kwargs&nbsp;control&nbsp;the&nbsp;Polygon&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-format_coord"><strong>format_coord</strong></a>(self, x, y)</dt><dd><tt>return&nbsp;a&nbsp;format&nbsp;string&nbsp;formatting&nbsp;the&nbsp;x,&nbsp;y&nbsp;coord</tt></dd></dl>

<dl><dt><a name="Axes-format_xdata"><strong>format_xdata</strong></a>(self, x)</dt><dd><tt>Return&nbsp;x&nbsp;string&nbsp;formatted.&nbsp;&nbsp;This&nbsp;function&nbsp;will&nbsp;use&nbsp;the&nbsp;attribute<br>
self.<strong>fmt_xdata</strong>&nbsp;if&nbsp;it&nbsp;is&nbsp;callable,&nbsp;else&nbsp;will&nbsp;fall&nbsp;back&nbsp;on&nbsp;the&nbsp;xaxis<br>
major&nbsp;formatter</tt></dd></dl>

<dl><dt><a name="Axes-format_ydata"><strong>format_ydata</strong></a>(self, y)</dt><dd><tt>Return&nbsp;y&nbsp;string&nbsp;formatted.&nbsp;&nbsp;This&nbsp;function&nbsp;will&nbsp;use&nbsp;the&nbsp;attribute<br>
self.<strong>fmt_ydata</strong>&nbsp;if&nbsp;it&nbsp;is&nbsp;callable,&nbsp;else&nbsp;will&nbsp;fall&nbsp;back&nbsp;on&nbsp;the&nbsp;yaxis<br>
major&nbsp;formatter</tt></dd></dl>

<dl><dt><a name="Axes-get_adjustable"><strong>get_adjustable</strong></a>(self)</dt></dl>

<dl><dt><a name="Axes-get_anchor"><strong>get_anchor</strong></a>(self)</dt></dl>

<dl><dt><a name="Axes-get_aspect"><strong>get_aspect</strong></a>(self)</dt></dl>

<dl><dt><a name="Axes-get_autoscale_on"><strong>get_autoscale_on</strong></a>(self)</dt><dd><tt>Get&nbsp;whether&nbsp;autoscaling&nbsp;is&nbsp;applied&nbsp;on&nbsp;plot&nbsp;commands</tt></dd></dl>

<dl><dt><a name="Axes-get_axis_bgcolor"><strong>get_axis_bgcolor</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;axis&nbsp;background&nbsp;color</tt></dd></dl>

<dl><dt><a name="Axes-get_axisbelow"><strong>get_axisbelow</strong></a>(self)</dt><dd><tt>Get&nbsp;whether&nbsp;axist&nbsp;below&nbsp;is&nbsp;true&nbsp;or&nbsp;not</tt></dd></dl>

<dl><dt><a name="Axes-get_child_artists"><strong>get_child_artists</strong></a>(self)</dt><dd><tt>Return&nbsp;a&nbsp;list&nbsp;of&nbsp;artists&nbsp;the&nbsp;axes&nbsp;contains.&nbsp;&nbsp;Deprecated</tt></dd></dl>

<dl><dt><a name="Axes-get_children"><strong>get_children</strong></a>(self)</dt><dd><tt>return&nbsp;a&nbsp;list&nbsp;of&nbsp;child&nbsp;artists</tt></dd></dl>

<dl><dt><a name="Axes-get_cursor_props"><strong>get_cursor_props</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;cursor&nbsp;props&nbsp;as&nbsp;a&nbsp;linewidth,&nbsp;color&nbsp;tuple&nbsp;where<br>
linewidth&nbsp;is&nbsp;a&nbsp;float&nbsp;and&nbsp;color&nbsp;is&nbsp;an&nbsp;RGBA&nbsp;tuple</tt></dd></dl>

<dl><dt><a name="Axes-get_frame"><strong>get_frame</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;axes&nbsp;Rectangle&nbsp;frame</tt></dd></dl>

<dl><dt><a name="Axes-get_frame_on"><strong>get_frame_on</strong></a>(self)</dt><dd><tt>Get&nbsp;whether&nbsp;the&nbsp;axes&nbsp;rectangle&nbsp;patch&nbsp;is&nbsp;drawn</tt></dd></dl>

<dl><dt><a name="Axes-get_images"><strong>get_images</strong></a>(self)</dt><dd><tt>return&nbsp;a&nbsp;list&nbsp;of&nbsp;<a href="#Axes">Axes</a>&nbsp;images&nbsp;contained&nbsp;by&nbsp;the&nbsp;<a href="#Axes">Axes</a></tt></dd></dl>

<dl><dt><a name="Axes-get_legend"><strong>get_legend</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;Legend&nbsp;instance,&nbsp;or&nbsp;None&nbsp;if&nbsp;no&nbsp;legend&nbsp;is&nbsp;defined</tt></dd></dl>

<dl><dt><a name="Axes-get_lines"><strong>get_lines</strong></a>(self)</dt><dd><tt>Return&nbsp;a&nbsp;list&nbsp;of&nbsp;lines&nbsp;contained&nbsp;by&nbsp;the&nbsp;<a href="#Axes">Axes</a></tt></dd></dl>

<dl><dt><a name="Axes-get_navigate"><strong>get_navigate</strong></a>(self)</dt><dd><tt>Get&nbsp;whether&nbsp;the&nbsp;axes&nbsp;responds&nbsp;to&nbsp;navigation&nbsp;commands</tt></dd></dl>

<dl><dt><a name="Axes-get_navigate_mode"><strong>get_navigate_mode</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;navigation&nbsp;toolbar&nbsp;button&nbsp;status:&nbsp;'PAN',&nbsp;'ZOOM',&nbsp;or&nbsp;None</tt></dd></dl>

<dl><dt><a name="Axes-get_position"><strong>get_position</strong></a>(self, original<font color="#909090">=False</font>)</dt><dd><tt>Return&nbsp;the&nbsp;axes&nbsp;rectangle&nbsp;left,&nbsp;bottom,&nbsp;width,&nbsp;height</tt></dd></dl>

<dl><dt><a name="Axes-get_renderer_cache"><strong>get_renderer_cache</strong></a>(self)</dt></dl>

<dl><dt><a name="Axes-get_window_extent"><strong>get_window_extent</strong></a>(self, *args, **kwargs)</dt><dd><tt>get&nbsp;the&nbsp;axes&nbsp;bounding&nbsp;box&nbsp;in&nbsp;display&nbsp;space;&nbsp;args&nbsp;and&nbsp;kwargs&nbsp;are&nbsp;empty</tt></dd></dl>

<dl><dt><a name="Axes-get_xaxis"><strong>get_xaxis</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;XAxis&nbsp;instance</tt></dd></dl>

<dl><dt><a name="Axes-get_xgridlines"><strong>get_xgridlines</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;x&nbsp;grid&nbsp;lines&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Line2D&nbsp;instances</tt></dd></dl>

<dl><dt><a name="Axes-get_xlim"><strong>get_xlim</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;x&nbsp;axis&nbsp;range&nbsp;[xmin,&nbsp;xmax]</tt></dd></dl>

<dl><dt><a name="Axes-get_xscale"><strong>get_xscale</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;xaxis&nbsp;scale&nbsp;string:&nbsp;log&nbsp;or&nbsp;linear</tt></dd></dl>

<dl><dt><a name="Axes-get_xticklabels"><strong>get_xticklabels</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;xtick&nbsp;labels&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Text&nbsp;instances</tt></dd></dl>

<dl><dt><a name="Axes-get_xticklines"><strong>get_xticklines</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;xtick&nbsp;lines&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Line2D&nbsp;instances</tt></dd></dl>

<dl><dt><a name="Axes-get_xticks"><strong>get_xticks</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;x&nbsp;ticks&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;locations</tt></dd></dl>

<dl><dt><a name="Axes-get_yaxis"><strong>get_yaxis</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;YAxis&nbsp;instance</tt></dd></dl>

<dl><dt><a name="Axes-get_ygridlines"><strong>get_ygridlines</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;y&nbsp;grid&nbsp;lines&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Line2D&nbsp;instances</tt></dd></dl>

<dl><dt><a name="Axes-get_ylim"><strong>get_ylim</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;y&nbsp;axis&nbsp;range&nbsp;[ymin,&nbsp;ymax]</tt></dd></dl>

<dl><dt><a name="Axes-get_yscale"><strong>get_yscale</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;yaxis&nbsp;scale&nbsp;string:&nbsp;log&nbsp;or&nbsp;linear</tt></dd></dl>

<dl><dt><a name="Axes-get_yticklabels"><strong>get_yticklabels</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;ytick&nbsp;labels&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Text&nbsp;instances</tt></dd></dl>

<dl><dt><a name="Axes-get_yticklines"><strong>get_yticklines</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;ytick&nbsp;lines&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Line2D&nbsp;instances</tt></dd></dl>

<dl><dt><a name="Axes-get_yticks"><strong>get_yticks</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;y&nbsp;ticks&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;locations</tt></dd></dl>

<dl><dt><a name="Axes-grid"><strong>grid</strong></a>(self, b<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>GRID(self,&nbsp;b=None,&nbsp;**kwargs)<br>
Set&nbsp;the&nbsp;axes&nbsp;grids&nbsp;on&nbsp;or&nbsp;off;&nbsp;b&nbsp;is&nbsp;a&nbsp;boolean<br>
if&nbsp;b&nbsp;is&nbsp;None&nbsp;and&nbsp;len(kwargs)==0,&nbsp;toggle&nbsp;the&nbsp;grid&nbsp;state.&nbsp;&nbsp;if<br>
kwargs&nbsp;are&nbsp;supplied,&nbsp;it&nbsp;is&nbsp;assumed&nbsp;that&nbsp;you&nbsp;want&nbsp;a&nbsp;grid&nbsp;and&nbsp;b<br>
is&nbsp;thus&nbsp;set&nbsp;to&nbsp;True<br>
kawrgs&nbsp;are&nbsp;used&nbsp;to&nbsp;set&nbsp;the&nbsp;grid&nbsp;line&nbsp;properties,&nbsp;eg<br>
&nbsp;&nbsp;ax.<a href="#Axes-grid">grid</a>(color='r',&nbsp;linestyle='-',&nbsp;linewidth=2)<br>
Valid&nbsp;Line2D&nbsp;kwargs&nbsp;are<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-has_data"><strong>has_data</strong></a>(self)</dt><dd><tt>Return&nbsp;true&nbsp;if&nbsp;any&nbsp;artists&nbsp;have&nbsp;been&nbsp;added&nbsp;to&nbsp;axes.<br>
&nbsp;<br>
This&nbsp;should&nbsp;not&nbsp;be&nbsp;used&nbsp;to&nbsp;determine&nbsp;whether&nbsp;the&nbsp;dataLim<br>
need&nbsp;to&nbsp;be&nbsp;updated,&nbsp;and&nbsp;may&nbsp;not&nbsp;actually&nbsp;be&nbsp;useful&nbsp;for<br>
anything.</tt></dd></dl>

<dl><dt><a name="Axes-hist"><strong>hist</strong></a>(self, x, bins<font color="#909090">=10</font>, normed<font color="#909090">=0</font>, bottom<font color="#909090">=None</font>, align<font color="#909090">='edge'</font>, orientation<font color="#909090">='vertical'</font>, width<font color="#909090">=None</font>, log<font color="#909090">=False</font>, **kwargs)</dt><dd><tt>HIST(x,&nbsp;bins=10,&nbsp;normed=0,&nbsp;bottom=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;align='edge',&nbsp;orientation='vertical',&nbsp;width=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log=False,&nbsp;**kwargs)<br>
Compute&nbsp;the&nbsp;histogram&nbsp;of&nbsp;x.&nbsp;&nbsp;bins&nbsp;is&nbsp;either&nbsp;an&nbsp;integer&nbsp;number&nbsp;of<br>
bins&nbsp;or&nbsp;a&nbsp;sequence&nbsp;giving&nbsp;the&nbsp;bins.&nbsp;&nbsp;x&nbsp;are&nbsp;the&nbsp;data&nbsp;to&nbsp;be&nbsp;binned.<br>
The&nbsp;return&nbsp;values&nbsp;is&nbsp;(n,&nbsp;bins,&nbsp;patches)<br>
If&nbsp;normed&nbsp;is&nbsp;true,&nbsp;the&nbsp;first&nbsp;element&nbsp;of&nbsp;the&nbsp;return&nbsp;tuple&nbsp;will<br>
be&nbsp;the&nbsp;counts&nbsp;normalized&nbsp;to&nbsp;form&nbsp;a&nbsp;probability&nbsp;density,&nbsp;ie,<br>
n/(len(x)*dbin).&nbsp;&nbsp;In&nbsp;a&nbsp;probability&nbsp;density,&nbsp;the&nbsp;integral&nbsp;of<br>
the&nbsp;histogram&nbsp;should&nbsp;be&nbsp;one&nbsp;(we&nbsp;assume&nbsp;equally&nbsp;spaced&nbsp;bins);<br>
you&nbsp;can&nbsp;verify&nbsp;that&nbsp;with<br>
&nbsp;&nbsp;#&nbsp;trapezoidal&nbsp;integration&nbsp;of&nbsp;the&nbsp;probability&nbsp;density&nbsp;function<br>
&nbsp;&nbsp;from&nbsp;matplotlib.mlab&nbsp;import&nbsp;trapz<br>
&nbsp;&nbsp;pdf,&nbsp;bins,&nbsp;patches&nbsp;=&nbsp;ax.<a href="#Axes-hist">hist</a>(...)<br>
&nbsp;&nbsp;print&nbsp;trapz(bins,&nbsp;pdf)<br>
align&nbsp;=&nbsp;'edge'&nbsp;|&nbsp;'center'.&nbsp;&nbsp;Interprets&nbsp;bins&nbsp;either&nbsp;as&nbsp;edge<br>
or&nbsp;center&nbsp;values<br>
orientation&nbsp;=&nbsp;'horizontal'&nbsp;|&nbsp;'vertical'.&nbsp;&nbsp;If&nbsp;horizontal,&nbsp;barh<br>
will&nbsp;be&nbsp;used&nbsp;and&nbsp;the&nbsp;"bottom"&nbsp;kwarg&nbsp;will&nbsp;be&nbsp;the&nbsp;left&nbsp;edges.<br>
width:&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;bars.&nbsp;&nbsp;If&nbsp;None,&nbsp;automatically&nbsp;compute<br>
the&nbsp;width.<br>
log:&nbsp;if&nbsp;True,&nbsp;the&nbsp;histogram&nbsp;axis&nbsp;will&nbsp;be&nbsp;set&nbsp;to&nbsp;a&nbsp;log&nbsp;scale<br>
kwargs&nbsp;are&nbsp;used&nbsp;to&nbsp;update&nbsp;the&nbsp;properties&nbsp;of&nbsp;the<br>
hist&nbsp;Rectangles:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-hlines"><strong>hlines</strong></a>(self, y, xmin, xmax, colors<font color="#909090">='k'</font>, linestyle<font color="#909090">='solid'</font>, label<font color="#909090">=''</font>, **kwargs)</dt><dd><tt>HLINES(y,&nbsp;xmin,&nbsp;xmax,&nbsp;colors='k',&nbsp;linestyle='solid',&nbsp;**kwargs)<br>
plot&nbsp;horizontal&nbsp;lines&nbsp;at&nbsp;each&nbsp;y&nbsp;from&nbsp;xmin&nbsp;to&nbsp;xmax.&nbsp;&nbsp;xmin&nbsp;or&nbsp;xmax&nbsp;can<br>
be&nbsp;scalars&nbsp;or&nbsp;len(x)&nbsp;numpy&nbsp;arrays.&nbsp;&nbsp;If&nbsp;they&nbsp;are&nbsp;scalars,&nbsp;then&nbsp;the<br>
respective&nbsp;values&nbsp;are&nbsp;constant,&nbsp;else&nbsp;the&nbsp;widths&nbsp;of&nbsp;the&nbsp;lines&nbsp;are<br>
determined&nbsp;by&nbsp;xmin&nbsp;and&nbsp;xmax<br>
colors&nbsp;is&nbsp;a&nbsp;line&nbsp;collections&nbsp;color&nbsp;args,&nbsp;either&nbsp;a&nbsp;single&nbsp;color&nbsp;or&nbsp;a&nbsp;len(x)&nbsp;list&nbsp;of&nbsp;colors<br>
linestyle&nbsp;is&nbsp;one&nbsp;of&nbsp;solid|dashed|dashdot|dotted<br>
Returns&nbsp;the&nbsp;LineCollection&nbsp;that&nbsp;was&nbsp;added</tt></dd></dl>

<dl><dt><a name="Axes-hold"><strong>hold</strong></a>(self, b<font color="#909090">=None</font>)</dt><dd><tt>HOLD(b=None)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;hold&nbsp;state.&nbsp;&nbsp;If&nbsp;hold&nbsp;is&nbsp;None&nbsp;(default),&nbsp;toggle&nbsp;the<br>
hold&nbsp;state.&nbsp;&nbsp;Else&nbsp;set&nbsp;the&nbsp;hold&nbsp;state&nbsp;to&nbsp;boolean&nbsp;value&nbsp;b.<br>
&nbsp;<br>
Eg<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-hold">hold</a>()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;toggle&nbsp;hold<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-hold">hold</a>(True)&nbsp;&nbsp;#&nbsp;hold&nbsp;is&nbsp;on<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-hold">hold</a>(False)&nbsp;#&nbsp;hold&nbsp;is&nbsp;off<br>
&nbsp;<br>
&nbsp;<br>
When&nbsp;hold&nbsp;is&nbsp;True,&nbsp;subsequent&nbsp;plot&nbsp;commands&nbsp;will&nbsp;be&nbsp;added&nbsp;to<br>
the&nbsp;current&nbsp;axes.&nbsp;&nbsp;When&nbsp;hold&nbsp;is&nbsp;False,&nbsp;the&nbsp;current&nbsp;axes&nbsp;and<br>
figure&nbsp;will&nbsp;be&nbsp;cleared&nbsp;on&nbsp;the&nbsp;next&nbsp;plot&nbsp;command</tt></dd></dl>

<dl><dt><a name="Axes-imshow"><strong>imshow</strong></a>(self, X, cmap<font color="#909090">=None</font>, norm<font color="#909090">=None</font>, aspect<font color="#909090">=None</font>, interpolation<font color="#909090">=None</font>, alpha<font color="#909090">=1.0</font>, vmin<font color="#909090">=None</font>, vmax<font color="#909090">=None</font>, origin<font color="#909090">=None</font>, extent<font color="#909090">=None</font>, shape<font color="#909090">=None</font>, filternorm<font color="#909090">=1</font>, filterrad<font color="#909090">=4.0</font>, imlim<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>IMSHOW(X,&nbsp;cmap=None,&nbsp;norm=None,&nbsp;aspect=None,&nbsp;interpolation=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha=1.0,&nbsp;vmin=None,&nbsp;vmax=None,&nbsp;origin=None,&nbsp;extent=None)<br>
&nbsp;<br>
IMSHOW(X)&nbsp;-&nbsp;plot&nbsp;image&nbsp;X&nbsp;to&nbsp;current&nbsp;axes,&nbsp;resampling&nbsp;to&nbsp;scale&nbsp;to&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;(X&nbsp;may&nbsp;be&nbsp;numarray/Numeric&nbsp;array&nbsp;or&nbsp;PIL&nbsp;image)<br>
&nbsp;<br>
IMSHOW(X,&nbsp;**kwargs)&nbsp;-&nbsp;Use&nbsp;keyword&nbsp;args&nbsp;to&nbsp;control&nbsp;image&nbsp;scaling,<br>
colormapping&nbsp;etc.&nbsp;See&nbsp;below&nbsp;for&nbsp;details<br>
&nbsp;<br>
&nbsp;<br>
Display&nbsp;the&nbsp;image&nbsp;in&nbsp;X&nbsp;to&nbsp;current&nbsp;axes.&nbsp;&nbsp;X&nbsp;may&nbsp;be&nbsp;a&nbsp;float&nbsp;array,&nbsp;a<br>
UInt8&nbsp;array&nbsp;or&nbsp;a&nbsp;PIL&nbsp;image.&nbsp;If&nbsp;X&nbsp;is&nbsp;an&nbsp;array,&nbsp;X&nbsp;can&nbsp;have&nbsp;the&nbsp;following<br>
shapes:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;MxN&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;luminance&nbsp;(grayscale,&nbsp;float&nbsp;array&nbsp;only)<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;MxNx3&nbsp;&nbsp;:&nbsp;RGB&nbsp;(float&nbsp;or&nbsp;UInt8&nbsp;array)<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;MxNx4&nbsp;&nbsp;:&nbsp;RGBA&nbsp;(float&nbsp;or&nbsp;UInt8&nbsp;array)<br>
&nbsp;<br>
The&nbsp;value&nbsp;for&nbsp;each&nbsp;component&nbsp;of&nbsp;MxNx3&nbsp;and&nbsp;MxNx4&nbsp;float&nbsp;arrays&nbsp;should&nbsp;be<br>
in&nbsp;the&nbsp;range&nbsp;0.0&nbsp;to&nbsp;1.0;&nbsp;MxN&nbsp;float&nbsp;arrays&nbsp;may&nbsp;be&nbsp;normalised.<br>
&nbsp;<br>
A&nbsp;matplotlib.image.AxesImage&nbsp;instance&nbsp;is&nbsp;returned<br>
&nbsp;<br>
The&nbsp;following&nbsp;kwargs&nbsp;are&nbsp;allowed:<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;cmap&nbsp;is&nbsp;a&nbsp;cm&nbsp;colormap&nbsp;instance,&nbsp;eg&nbsp;cm.jet.&nbsp;&nbsp;If&nbsp;None,&nbsp;default&nbsp;to&nbsp;rc<br>
&nbsp;&nbsp;&nbsp;&nbsp;image.cmap&nbsp;value&nbsp;(Ignored&nbsp;when&nbsp;X&nbsp;has&nbsp;RGB(A)&nbsp;information)<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;aspect&nbsp;is&nbsp;one&nbsp;of:&nbsp;auto,&nbsp;equal,&nbsp;or&nbsp;a&nbsp;number.&nbsp;&nbsp;If&nbsp;None,&nbsp;default&nbsp;to&nbsp;rc<br>
&nbsp;&nbsp;&nbsp;&nbsp;image.aspect&nbsp;value<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;interpolation&nbsp;is&nbsp;one&nbsp;of:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'nearest',&nbsp;'bilinear',&nbsp;'bicubic',&nbsp;'spline16',&nbsp;'spline36',<br>
&nbsp;&nbsp;&nbsp;&nbsp;'hanning',&nbsp;'hamming',&nbsp;'hermite',&nbsp;'kaiser',&nbsp;'quadric',<br>
&nbsp;&nbsp;&nbsp;&nbsp;'catrom',&nbsp;'gaussian',&nbsp;'bessel',&nbsp;'mitchell',&nbsp;'sinc',<br>
&nbsp;&nbsp;&nbsp;&nbsp;'lanczos',&nbsp;'blackman'<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;interpolation&nbsp;is&nbsp;None,&nbsp;default&nbsp;to&nbsp;rc<br>
&nbsp;&nbsp;&nbsp;&nbsp;image.interpolation.&nbsp;&nbsp;See&nbsp;also&nbsp;th&nbsp;the&nbsp;filternorm&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;filterrad&nbsp;parameters<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;norm&nbsp;is&nbsp;a&nbsp;matplotlib.colors.Normalize&nbsp;instance;&nbsp;default&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;normalization().&nbsp;&nbsp;This&nbsp;scales&nbsp;luminance&nbsp;-&gt;&nbsp;0-1&nbsp;(only&nbsp;used&nbsp;for&nbsp;an<br>
&nbsp;&nbsp;&nbsp;&nbsp;MxN&nbsp;float&nbsp;array).<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;are&nbsp;used&nbsp;to&nbsp;scale&nbsp;a&nbsp;luminance&nbsp;image&nbsp;to&nbsp;0-1.&nbsp;&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;either&nbsp;is&nbsp;None,&nbsp;the&nbsp;min&nbsp;and&nbsp;max&nbsp;of&nbsp;the&nbsp;luminance&nbsp;values&nbsp;will&nbsp;be<br>
&nbsp;&nbsp;&nbsp;&nbsp;used.&nbsp;&nbsp;Note&nbsp;if&nbsp;you&nbsp;pass&nbsp;a&nbsp;norm&nbsp;instance,&nbsp;the&nbsp;settings&nbsp;for&nbsp;vmin&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;vmax&nbsp;will&nbsp;be&nbsp;ignored.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;alpha&nbsp;=&nbsp;1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;blending&nbsp;value<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;origin&nbsp;is&nbsp;'upper'&nbsp;or&nbsp;'lower',&nbsp;to&nbsp;place&nbsp;the&nbsp;[0,0]<br>
&nbsp;&nbsp;&nbsp;&nbsp;index&nbsp;of&nbsp;the&nbsp;array&nbsp;in&nbsp;the&nbsp;upper&nbsp;left&nbsp;or&nbsp;lower&nbsp;left&nbsp;corner&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;axes.&nbsp;&nbsp;If&nbsp;None,&nbsp;default&nbsp;to&nbsp;rc&nbsp;image.origin<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;extent&nbsp;is&nbsp;(left,&nbsp;right,&nbsp;bottom,&nbsp;top)&nbsp;data&nbsp;values&nbsp;of&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;axes.&nbsp;&nbsp;The&nbsp;default&nbsp;assigns&nbsp;zero-based&nbsp;row,&nbsp;column&nbsp;indices<br>
&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;the&nbsp;x,&nbsp;y&nbsp;centers&nbsp;of&nbsp;the&nbsp;pixels.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;shape&nbsp;is&nbsp;for&nbsp;raw&nbsp;buffer&nbsp;images<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;filternorm&nbsp;is&nbsp;a&nbsp;parameter&nbsp;for&nbsp;the&nbsp;antigrain&nbsp;image&nbsp;resize<br>
&nbsp;&nbsp;&nbsp;&nbsp;filter.&nbsp;&nbsp;From&nbsp;the&nbsp;antigrain&nbsp;documentation,&nbsp;if&nbsp;normalize=1,<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;filter&nbsp;normalizes&nbsp;integer&nbsp;values&nbsp;and&nbsp;corrects&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;rounding&nbsp;errors.&nbsp;It&nbsp;doesn't&nbsp;do&nbsp;anything&nbsp;with&nbsp;the&nbsp;source<br>
&nbsp;&nbsp;&nbsp;&nbsp;floating&nbsp;point&nbsp;values,&nbsp;it&nbsp;corrects&nbsp;only&nbsp;integers&nbsp;according<br>
&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;the&nbsp;rule&nbsp;of&nbsp;1.0&nbsp;which&nbsp;means&nbsp;that&nbsp;any&nbsp;sum&nbsp;of&nbsp;pixel<br>
&nbsp;&nbsp;&nbsp;&nbsp;weights&nbsp;must&nbsp;be&nbsp;equal&nbsp;to&nbsp;1.0.&nbsp;&nbsp;So,&nbsp;the&nbsp;filter&nbsp;function<br>
&nbsp;&nbsp;&nbsp;&nbsp;must&nbsp;produce&nbsp;a&nbsp;graph&nbsp;of&nbsp;the&nbsp;proper&nbsp;shape.<br>
&nbsp;<br>
&nbsp;*&nbsp;filterrad:&nbsp;the&nbsp;filter&nbsp;radius&nbsp;for&nbsp;filters&nbsp;that&nbsp;have&nbsp;a&nbsp;radius<br>
&nbsp;&nbsp;&nbsp;parameter,&nbsp;ie&nbsp;when&nbsp;interpolation&nbsp;is&nbsp;one&nbsp;of:&nbsp;'sinc',<br>
&nbsp;&nbsp;&nbsp;'lanczos'&nbsp;or&nbsp;'blackman'<br>
&nbsp;<br>
Additional&nbsp;kwargs&nbsp;are&nbsp;matplotlib.artist&nbsp;properties</tt></dd></dl>

<dl><dt><a name="Axes-in_axes"><strong>in_axes</strong></a>(self, xwin, ywin)</dt><dd><tt>return&nbsp;True&nbsp;is&nbsp;the&nbsp;point&nbsp;xwin,&nbsp;ywin&nbsp;(display&nbsp;coords)&nbsp;are&nbsp;in&nbsp;the&nbsp;<a href="#Axes">Axes</a></tt></dd></dl>

<dl><dt><a name="Axes-ishold"><strong>ishold</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;HOLD&nbsp;status&nbsp;of&nbsp;the&nbsp;axes</tt></dd></dl>

<dl><dt><a name="Axes-legend"><strong>legend</strong></a>(self, *args, **kwargs)</dt><dd><tt>LEGEND(*args,&nbsp;**kwargs)<br>
&nbsp;<br>
Place&nbsp;a&nbsp;legend&nbsp;on&nbsp;the&nbsp;current&nbsp;axes&nbsp;at&nbsp;location&nbsp;loc.&nbsp;&nbsp;Labels&nbsp;are&nbsp;a<br>
sequence&nbsp;of&nbsp;strings&nbsp;and&nbsp;loc&nbsp;can&nbsp;be&nbsp;a&nbsp;string&nbsp;or&nbsp;an&nbsp;integer&nbsp;specifying<br>
the&nbsp;legend&nbsp;location<br>
&nbsp;<br>
USAGE:<br>
&nbsp;<br>
&nbsp;&nbsp;Make&nbsp;a&nbsp;legend&nbsp;with&nbsp;existing&nbsp;lines<br>
&nbsp;<br>
&nbsp;&nbsp;&gt;&gt;&gt;&nbsp;<a href="#Axes-legend">legend</a>()<br>
&nbsp;<br>
&nbsp;&nbsp;legend&nbsp;by&nbsp;itself&nbsp;will&nbsp;try&nbsp;and&nbsp;build&nbsp;a&nbsp;legend&nbsp;using&nbsp;the&nbsp;label<br>
&nbsp;&nbsp;property&nbsp;of&nbsp;the&nbsp;lines/patches/collections.&nbsp;&nbsp;You&nbsp;can&nbsp;set&nbsp;the&nbsp;label&nbsp;of<br>
&nbsp;&nbsp;a&nbsp;line&nbsp;by&nbsp;doing&nbsp;<a href="#Axes-plot">plot</a>(x,&nbsp;y,&nbsp;label='my&nbsp;data')&nbsp;or&nbsp;line.<a href="#Axes-set_label">set_label</a>('my<br>
&nbsp;&nbsp;data').&nbsp;If&nbsp;label&nbsp;is&nbsp;set&nbsp;to&nbsp;'_nolegend_',&nbsp;the&nbsp;item&nbsp;will&nbsp;not&nbsp;be&nbsp;shown<br>
&nbsp;&nbsp;in&nbsp;legend.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;automatically&nbsp;generate&nbsp;the&nbsp;legend&nbsp;from&nbsp;labels<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-legend">legend</a>(&nbsp;('label1',&nbsp;'label2',&nbsp;'label3')&nbsp;)<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;Make&nbsp;a&nbsp;legend&nbsp;for&nbsp;a&nbsp;list&nbsp;of&nbsp;lines&nbsp;and&nbsp;labels<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-legend">legend</a>(&nbsp;(line1,&nbsp;line2,&nbsp;line3),&nbsp;('label1',&nbsp;'label2',&nbsp;'label3')&nbsp;)<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;Make&nbsp;a&nbsp;legend&nbsp;at&nbsp;a&nbsp;given&nbsp;location,&nbsp;using&nbsp;a&nbsp;location&nbsp;argument<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;<a href="#Axes-legend">legend</a>(&nbsp;LABELS,&nbsp;LOC&nbsp;)&nbsp;&nbsp;or<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;<a href="#Axes-legend">legend</a>(&nbsp;LINES,&nbsp;LABELS,&nbsp;LOC&nbsp;)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-legend">legend</a>(&nbsp;('label1',&nbsp;'label2',&nbsp;'label3'),&nbsp;loc='upper&nbsp;left')<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-legend">legend</a>(&nbsp;(line1,&nbsp;line2,&nbsp;line3),&nbsp;&nbsp;('label1',&nbsp;'label2',&nbsp;'label3'),&nbsp;loc=2)<br>
&nbsp;<br>
The&nbsp;location&nbsp;codes&nbsp;are<br>
&nbsp;<br>
&nbsp;&nbsp;'best'&nbsp;:&nbsp;0,<br>
&nbsp;&nbsp;'upper&nbsp;right'&nbsp;&nbsp;:&nbsp;1,&nbsp;(default)<br>
&nbsp;&nbsp;'upper&nbsp;left'&nbsp;&nbsp;&nbsp;:&nbsp;2,<br>
&nbsp;&nbsp;'lower&nbsp;left'&nbsp;&nbsp;&nbsp;:&nbsp;3,<br>
&nbsp;&nbsp;'lower&nbsp;right'&nbsp;&nbsp;:&nbsp;4,<br>
&nbsp;&nbsp;'right'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;5,<br>
&nbsp;&nbsp;'center&nbsp;left'&nbsp;&nbsp;:&nbsp;6,<br>
&nbsp;&nbsp;'center&nbsp;right'&nbsp;:&nbsp;7,<br>
&nbsp;&nbsp;'lower&nbsp;center'&nbsp;:&nbsp;8,<br>
&nbsp;&nbsp;'upper&nbsp;center'&nbsp;:&nbsp;9,<br>
&nbsp;&nbsp;'center'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;10,<br>
&nbsp;<br>
If&nbsp;none&nbsp;of&nbsp;these&nbsp;are&nbsp;suitable,&nbsp;loc&nbsp;can&nbsp;be&nbsp;a&nbsp;2-tuple&nbsp;giving&nbsp;x,y<br>
in&nbsp;axes&nbsp;coords,&nbsp;ie,<br>
&nbsp;<br>
&nbsp;&nbsp;loc&nbsp;=&nbsp;0,&nbsp;1&nbsp;is&nbsp;left&nbsp;top<br>
&nbsp;&nbsp;loc&nbsp;=&nbsp;0.5,&nbsp;0.5&nbsp;is&nbsp;center,&nbsp;center<br>
&nbsp;<br>
and&nbsp;so&nbsp;on.&nbsp;&nbsp;The&nbsp;following&nbsp;kwargs&nbsp;are&nbsp;supported:<br>
&nbsp;<br>
isaxes=True&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;whether&nbsp;this&nbsp;is&nbsp;an&nbsp;axes&nbsp;legend<br>
numpoints&nbsp;=&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;number&nbsp;of&nbsp;points&nbsp;in&nbsp;the&nbsp;legend&nbsp;line<br>
prop&nbsp;=&nbsp;FontProperties(size='smaller')&nbsp;&nbsp;#&nbsp;the&nbsp;font&nbsp;property<br>
pad&nbsp;=&nbsp;0.2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;fractional&nbsp;whitespace&nbsp;inside&nbsp;the&nbsp;legend&nbsp;border<br>
markerscale&nbsp;=&nbsp;0.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;relative&nbsp;size&nbsp;of&nbsp;legend&nbsp;markers&nbsp;vs.&nbsp;original<br>
shadow&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;if&nbsp;True,&nbsp;draw&nbsp;a&nbsp;shadow&nbsp;behind&nbsp;legend<br>
labelsep&nbsp;=&nbsp;0.005&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;vertical&nbsp;space&nbsp;between&nbsp;the&nbsp;legend&nbsp;entries<br>
handlelen&nbsp;=&nbsp;0.05&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;legend&nbsp;lines<br>
handletextsep&nbsp;=&nbsp;0.02&nbsp;#&nbsp;the&nbsp;space&nbsp;between&nbsp;the&nbsp;legend&nbsp;line&nbsp;and&nbsp;legend&nbsp;text<br>
axespad&nbsp;=&nbsp;0.02&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;border&nbsp;between&nbsp;the&nbsp;axes&nbsp;and&nbsp;legend&nbsp;edge</tt></dd></dl>

<dl><dt><a name="Axes-loglog"><strong>loglog</strong></a>(self, *args, **kwargs)</dt><dd><tt>LOGLOG(*args,&nbsp;**kwargs)<br>
Make&nbsp;a&nbsp;loglog&nbsp;plot&nbsp;with&nbsp;log&nbsp;scaling&nbsp;on&nbsp;the&nbsp;a&nbsp;and&nbsp;y&nbsp;axis.&nbsp;&nbsp;The&nbsp;args<br>
to&nbsp;semilog&nbsp;x&nbsp;are&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;args&nbsp;to&nbsp;plot.&nbsp;&nbsp;See&nbsp;help&nbsp;plot&nbsp;for<br>
more&nbsp;info.<br>
Optional&nbsp;keyword&nbsp;args&nbsp;supported&nbsp;are&nbsp;any&nbsp;of&nbsp;the&nbsp;kwargs<br>
supported&nbsp;by&nbsp;plot&nbsp;or&nbsp;set_xscale&nbsp;or&nbsp;set_yscale.&nbsp;&nbsp;Notable,&nbsp;for<br>
log&nbsp;scaling:<br>
&nbsp;&nbsp;*&nbsp;basex:&nbsp;base&nbsp;of&nbsp;the&nbsp;x&nbsp;logarithm<br>
&nbsp;&nbsp;*&nbsp;subsx:&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;ticks;&nbsp;None&nbsp;defaults&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of&nbsp;decades&nbsp;in&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;plot;&nbsp;see&nbsp;set_xscale&nbsp;for&nbsp;details<br>
&nbsp;&nbsp;*&nbsp;basey:&nbsp;base&nbsp;of&nbsp;the&nbsp;y&nbsp;logarithm<br>
&nbsp;&nbsp;*&nbsp;subsy:&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;yticks;&nbsp;None&nbsp;defaults&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of&nbsp;decades&nbsp;in&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;plot;&nbsp;see&nbsp;set_yscale&nbsp;for&nbsp;details<br>
The&nbsp;remaining&nbsp;valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-matshow"><strong>matshow</strong></a>(self, Z, **kwargs)</dt><dd><tt>Plot&nbsp;a&nbsp;matrix&nbsp;as&nbsp;an&nbsp;image.<br>
&nbsp;<br>
The&nbsp;matrix&nbsp;will&nbsp;be&nbsp;shown&nbsp;the&nbsp;way&nbsp;it&nbsp;would&nbsp;be&nbsp;printed,<br>
with&nbsp;the&nbsp;first&nbsp;row&nbsp;at&nbsp;the&nbsp;top.&nbsp;&nbsp;Row&nbsp;and&nbsp;column&nbsp;numbering<br>
is&nbsp;zero-based.<br>
&nbsp;<br>
Argument:<br>
&nbsp;&nbsp;&nbsp;&nbsp;Z&nbsp;&nbsp;&nbsp;anything&nbsp;that&nbsp;can&nbsp;be&nbsp;interpreted&nbsp;as&nbsp;a&nbsp;2-D&nbsp;array<br>
&nbsp;<br>
kwargs:&nbsp;all&nbsp;are&nbsp;passed&nbsp;to&nbsp;imshow.&nbsp;&nbsp;matshow&nbsp;sets&nbsp;defaults<br>
for&nbsp;extent,&nbsp;origin,&nbsp;interpolation,&nbsp;and&nbsp;aspect;&nbsp;use&nbsp;care<br>
in&nbsp;overriding&nbsp;the&nbsp;extent&nbsp;and&nbsp;origin&nbsp;kwargs,&nbsp;because&nbsp;they<br>
interact.&nbsp;&nbsp;(Also,&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;change&nbsp;them,&nbsp;you&nbsp;probably<br>
should&nbsp;be&nbsp;using&nbsp;imshow&nbsp;directly&nbsp;in&nbsp;your&nbsp;own&nbsp;version&nbsp;of<br>
matshow.)<br>
&nbsp;<br>
Returns:&nbsp;an&nbsp;AxesImage&nbsp;instance</tt></dd></dl>

<dl><dt><a name="Axes-panx"><strong>panx</strong></a>(self, numsteps)</dt><dd><tt>Pan&nbsp;the&nbsp;x&nbsp;axis&nbsp;numsteps&nbsp;(plus&nbsp;pan&nbsp;right,&nbsp;minus&nbsp;pan&nbsp;left)</tt></dd></dl>

<dl><dt><a name="Axes-pany"><strong>pany</strong></a>(self, numsteps)</dt><dd><tt>Pan&nbsp;the&nbsp;x&nbsp;axis&nbsp;numsteps&nbsp;(plus&nbsp;pan&nbsp;up,&nbsp;minus&nbsp;pan&nbsp;down)</tt></dd></dl>

<dl><dt><a name="Axes-pcolor"><strong>pcolor</strong></a>(self, *args, **kwargs)</dt><dd><tt><a href="#Axes-pcolor">pcolor</a>(*args,&nbsp;**kwargs):&nbsp;pseudocolor&nbsp;plot&nbsp;of&nbsp;a&nbsp;2-D&nbsp;array<br>
Function&nbsp;signatures<br>
&nbsp;&nbsp;<a href="#Axes-pcolor">pcolor</a>(C,&nbsp;**kwargs)<br>
&nbsp;&nbsp;<a href="#Axes-pcolor">pcolor</a>(X,&nbsp;Y,&nbsp;C,&nbsp;**kwargs)<br>
C&nbsp;is&nbsp;the&nbsp;array&nbsp;of&nbsp;color&nbsp;values<br>
X&nbsp;and&nbsp;Y,&nbsp;if&nbsp;given,&nbsp;specify&nbsp;the&nbsp;(x,y)&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;colored<br>
quadrilaterals;&nbsp;the&nbsp;quadrilateral&nbsp;for&nbsp;C[i,j]&nbsp;has&nbsp;corners&nbsp;at<br>
(X[i,j],Y[i,j]),&nbsp;(X[i,j+1],Y[i,j+1]),&nbsp;(X[i+1,j],Y[i+1,j]),<br>
(X[i+1,j+1],Y[i+1,j+1]).&nbsp;&nbsp;Ideally&nbsp;the&nbsp;dimensions&nbsp;of&nbsp;X&nbsp;and&nbsp;Y<br>
should&nbsp;be&nbsp;one&nbsp;greater&nbsp;than&nbsp;those&nbsp;of&nbsp;C;&nbsp;if&nbsp;the&nbsp;dimensions&nbsp;are&nbsp;the<br>
same,&nbsp;then&nbsp;the&nbsp;last&nbsp;row&nbsp;and&nbsp;column&nbsp;of&nbsp;C&nbsp;will&nbsp;be&nbsp;ignored.<br>
Note&nbsp;that&nbsp;the&nbsp;the&nbsp;column&nbsp;index&nbsp;corresponds&nbsp;to&nbsp;the&nbsp;x-coordinate,<br>
and&nbsp;the&nbsp;row&nbsp;index&nbsp;corresponds&nbsp;to&nbsp;y;&nbsp;for&nbsp;details,&nbsp;see<br>
the&nbsp;"Grid&nbsp;Orientation"&nbsp;section&nbsp;below.<br>
If&nbsp;either&nbsp;or&nbsp;both&nbsp;of&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;1-D&nbsp;arrays&nbsp;or&nbsp;column&nbsp;vectors,<br>
they&nbsp;will&nbsp;be&nbsp;expanded&nbsp;as&nbsp;needed&nbsp;into&nbsp;the&nbsp;appropriate&nbsp;2-D&nbsp;arrays,<br>
making&nbsp;a&nbsp;rectangular&nbsp;grid.<br>
X,Y&nbsp;and&nbsp;C&nbsp;may&nbsp;be&nbsp;masked&nbsp;arrays.&nbsp;&nbsp;If&nbsp;either&nbsp;C[i,j],&nbsp;or&nbsp;one<br>
of&nbsp;the&nbsp;vertices&nbsp;surrounding&nbsp;C[i,j]&nbsp;(X&nbsp;or&nbsp;Y&nbsp;at&nbsp;[i,j],[i+1,j],<br>
[i,j+1],[i=1,j+1])&nbsp;is&nbsp;masked,&nbsp;nothing&nbsp;is&nbsp;plotted.<br>
Optional&nbsp;keyword&nbsp;args&nbsp;are&nbsp;shown&nbsp;with&nbsp;their&nbsp;defaults&nbsp;below&nbsp;(you&nbsp;must<br>
use&nbsp;kwargs&nbsp;for&nbsp;these):<br>
&nbsp;&nbsp;*&nbsp;cmap&nbsp;=&nbsp;cm.jet&nbsp;:&nbsp;a&nbsp;cm&nbsp;Colormap&nbsp;instance&nbsp;from&nbsp;matplotlib.cm.<br>
&nbsp;&nbsp;&nbsp;&nbsp;defaults&nbsp;to&nbsp;cm.jet<br>
&nbsp;&nbsp;*&nbsp;norm&nbsp;=&nbsp;Normalize()&nbsp;:&nbsp;matplotlib.colors.Normalize&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;used&nbsp;to&nbsp;scale&nbsp;luminance&nbsp;data&nbsp;to&nbsp;0,1.<br>
&nbsp;&nbsp;*&nbsp;vmin=None&nbsp;and&nbsp;vmax=None&nbsp;:&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;are&nbsp;used&nbsp;in&nbsp;conjunction<br>
&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;norm&nbsp;to&nbsp;normalize&nbsp;luminance&nbsp;data.&nbsp;&nbsp;If&nbsp;either&nbsp;are&nbsp;None,&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;min&nbsp;and&nbsp;max&nbsp;of&nbsp;the&nbsp;color&nbsp;array&nbsp;C&nbsp;is&nbsp;used.&nbsp;&nbsp;If&nbsp;you&nbsp;pass&nbsp;a&nbsp;norm<br>
&nbsp;&nbsp;&nbsp;&nbsp;instance,&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;will&nbsp;be&nbsp;None<br>
&nbsp;&nbsp;*&nbsp;shading&nbsp;=&nbsp;'flat'&nbsp;:&nbsp;or&nbsp;'faceted'.&nbsp;&nbsp;If&nbsp;'faceted',&nbsp;a&nbsp;black&nbsp;grid&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;drawn&nbsp;around&nbsp;each&nbsp;rectangle;&nbsp;if&nbsp;'flat',&nbsp;edges&nbsp;are&nbsp;not&nbsp;drawn<br>
&nbsp;&nbsp;*&nbsp;alpha=1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;blending&nbsp;value<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;matplotlib.collections.PatchCollection<br>
object<br>
Grid&nbsp;Orientation<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;orientation&nbsp;follows&nbsp;the&nbsp;Matlab(TM)&nbsp;convention:&nbsp;an<br>
&nbsp;&nbsp;&nbsp;&nbsp;array&nbsp;C&nbsp;with&nbsp;shape&nbsp;(nrows,&nbsp;ncolumns)&nbsp;is&nbsp;plotted&nbsp;with<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;column&nbsp;number&nbsp;as&nbsp;X&nbsp;and&nbsp;the&nbsp;row&nbsp;number&nbsp;as&nbsp;Y,&nbsp;increasing<br>
&nbsp;&nbsp;&nbsp;&nbsp;up;&nbsp;hence&nbsp;it&nbsp;is&nbsp;plotted&nbsp;the&nbsp;way&nbsp;the&nbsp;array&nbsp;would&nbsp;be&nbsp;printed,<br>
&nbsp;&nbsp;&nbsp;&nbsp;except&nbsp;that&nbsp;the&nbsp;Y&nbsp;axis&nbsp;is&nbsp;reversed.&nbsp;&nbsp;That&nbsp;is,&nbsp;C&nbsp;is&nbsp;taken<br>
&nbsp;&nbsp;&nbsp;&nbsp;as&nbsp;C(y,x).<br>
&nbsp;&nbsp;&nbsp;&nbsp;Similarly&nbsp;for&nbsp;meshgrid:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;arange(5)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;=&nbsp;arange(3)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X,&nbsp;Y&nbsp;=&nbsp;meshgrid(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;equivalent&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X&nbsp;=&nbsp;array([[0,&nbsp;1,&nbsp;2,&nbsp;3,&nbsp;4],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,&nbsp;1,&nbsp;2,&nbsp;3,&nbsp;4],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,&nbsp;1,&nbsp;2,&nbsp;3,&nbsp;4]])<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Y&nbsp;=&nbsp;array([[0,&nbsp;0,&nbsp;0,&nbsp;0,&nbsp;0],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,&nbsp;1,&nbsp;1,&nbsp;1,&nbsp;1],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2,&nbsp;2,&nbsp;2,&nbsp;2,&nbsp;2]])<br>
&nbsp;&nbsp;&nbsp;&nbsp;so&nbsp;if&nbsp;you&nbsp;have<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C&nbsp;=&nbsp;rand(&nbsp;len(x),&nbsp;len(y))<br>
&nbsp;&nbsp;&nbsp;&nbsp;then&nbsp;you&nbsp;need<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-pcolor">pcolor</a>(X,&nbsp;Y,&nbsp;transpose(C))<br>
&nbsp;&nbsp;&nbsp;&nbsp;or<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-pcolor">pcolor</a>(transpose(C))<br>
Dimensions<br>
&nbsp;&nbsp;&nbsp;&nbsp;Matlab&nbsp;pcolor&nbsp;always&nbsp;discards<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;last&nbsp;row&nbsp;and&nbsp;column&nbsp;of&nbsp;C,&nbsp;but&nbsp;matplotlib&nbsp;displays<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;last&nbsp;row&nbsp;and&nbsp;column&nbsp;if&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;not&nbsp;specified,&nbsp;or<br>
&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;X&nbsp;and&nbsp;Y&nbsp;have&nbsp;one&nbsp;more&nbsp;row&nbsp;and&nbsp;column&nbsp;than&nbsp;C.<br>
kwargs&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;control&nbsp;the&nbsp;PolyCollection&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clim:&nbsp;a&nbsp;length&nbsp;2&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap:&nbsp;a&nbsp;colormap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colorbar:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-pcolor_classic"><strong>pcolor_classic</strong></a>(self, *args)</dt><dd><tt>pcolor_classic&nbsp;is&nbsp;no&nbsp;longer&nbsp;available;&nbsp;please&nbsp;use&nbsp;pcolor,<br>
which&nbsp;is&nbsp;a&nbsp;drop-in&nbsp;replacement.</tt></dd></dl>

<dl><dt><a name="Axes-pcolormesh"><strong>pcolormesh</strong></a>(self, *args, **kwargs)</dt><dd><tt>PCOLORMESH(*args,&nbsp;**kwargs)<br>
Function&nbsp;signatures<br>
&nbsp;&nbsp;PCOLORMESH(C)&nbsp;-&nbsp;make&nbsp;a&nbsp;pseudocolor&nbsp;plot&nbsp;of&nbsp;matrix&nbsp;C<br>
&nbsp;&nbsp;PCOLORMESH(X,&nbsp;Y,&nbsp;C)&nbsp;-&nbsp;a&nbsp;pseudo&nbsp;color&nbsp;plot&nbsp;of&nbsp;C&nbsp;on&nbsp;the&nbsp;matrices&nbsp;X&nbsp;and&nbsp;Y<br>
&nbsp;&nbsp;PCOLORMESH(C,&nbsp;**kwargs)&nbsp;-&nbsp;Use&nbsp;keyword&nbsp;args&nbsp;to&nbsp;control&nbsp;colormapping&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scaling;&nbsp;see&nbsp;below<br>
C&nbsp;may&nbsp;be&nbsp;a&nbsp;masked&nbsp;array,&nbsp;but&nbsp;X&nbsp;and&nbsp;Y&nbsp;may&nbsp;not.&nbsp;&nbsp;Masked&nbsp;array&nbsp;support<br>
is&nbsp;implemented&nbsp;via&nbsp;cmap&nbsp;and&nbsp;norm;&nbsp;in&nbsp;contrast,&nbsp;pcolor&nbsp;simply&nbsp;does<br>
not&nbsp;draw&nbsp;quadrilaterals&nbsp;with&nbsp;masked&nbsp;colors&nbsp;or&nbsp;vertices.<br>
Optional&nbsp;keyword&nbsp;args&nbsp;are&nbsp;shown&nbsp;with&nbsp;their&nbsp;defaults&nbsp;below&nbsp;(you&nbsp;must<br>
use&nbsp;kwargs&nbsp;for&nbsp;these):<br>
&nbsp;&nbsp;*&nbsp;cmap&nbsp;=&nbsp;cm.jet&nbsp;:&nbsp;a&nbsp;cm&nbsp;Colormap&nbsp;instance&nbsp;from&nbsp;matplotlib.cm.<br>
&nbsp;&nbsp;&nbsp;&nbsp;defaults&nbsp;to&nbsp;cm.jet<br>
&nbsp;&nbsp;*&nbsp;norm&nbsp;=&nbsp;Normalize()&nbsp;:&nbsp;matplotlib.colors.Normalize&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;used&nbsp;to&nbsp;scale&nbsp;luminance&nbsp;data&nbsp;to&nbsp;0,1.&nbsp;&nbsp;Instantiate&nbsp;it<br>
&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;clip=False&nbsp;if&nbsp;C&nbsp;is&nbsp;a&nbsp;masked&nbsp;array.<br>
&nbsp;&nbsp;*&nbsp;vmin=None&nbsp;and&nbsp;vmax=None&nbsp;:&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;are&nbsp;used&nbsp;in&nbsp;conjunction<br>
&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;norm&nbsp;to&nbsp;normalize&nbsp;luminance&nbsp;data.&nbsp;&nbsp;If&nbsp;either&nbsp;are&nbsp;None,&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;min&nbsp;and&nbsp;max&nbsp;of&nbsp;the&nbsp;color&nbsp;array&nbsp;C&nbsp;is&nbsp;used.<br>
&nbsp;&nbsp;*&nbsp;shading&nbsp;=&nbsp;'flat'&nbsp;:&nbsp;or&nbsp;'faceted'.&nbsp;&nbsp;If&nbsp;'faceted',&nbsp;a&nbsp;black&nbsp;grid&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;drawn&nbsp;around&nbsp;each&nbsp;rectangle;&nbsp;if&nbsp;'flat',&nbsp;edge&nbsp;colors&nbsp;are&nbsp;same&nbsp;as<br>
&nbsp;&nbsp;&nbsp;&nbsp;face&nbsp;colors<br>
&nbsp;&nbsp;*&nbsp;alpha=1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;blending&nbsp;value<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;matplotlib.collections.PatchCollection<br>
object<br>
See&nbsp;pcolor&nbsp;for&nbsp;an&nbsp;explantion&nbsp;of&nbsp;the&nbsp;grid&nbsp;orientation&nbsp;and&nbsp;the<br>
expansion&nbsp;of&nbsp;1-D&nbsp;X&nbsp;and/or&nbsp;Y&nbsp;to&nbsp;2-D&nbsp;arrays.<br>
kwargs&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;control&nbsp;the&nbsp;QuadMesh&nbsp;polygon&nbsp;collection&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clim:&nbsp;a&nbsp;length&nbsp;2&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap:&nbsp;a&nbsp;colormap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colorbar:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-pick"><strong>pick</strong></a>(self, *args)</dt><dd><tt><a href="#Axes-pick">pick</a>(mouseevent)<br>
&nbsp;<br>
each&nbsp;child&nbsp;artist&nbsp;will&nbsp;fire&nbsp;a&nbsp;pick&nbsp;event&nbsp;if&nbsp;mouseevent&nbsp;is&nbsp;over<br>
the&nbsp;artist&nbsp;and&nbsp;the&nbsp;artist&nbsp;has&nbsp;picker&nbsp;set</tt></dd></dl>

<dl><dt><a name="Axes-pie"><strong>pie</strong></a>(self, x, explode<font color="#909090">=None</font>, labels<font color="#909090">=None</font>, colors<font color="#909090">=None</font>, autopct<font color="#909090">=None</font>, pctdistance<font color="#909090">=0.59999999999999998</font>, shadow<font color="#909090">=False</font>)</dt><dd><tt>PIE(x,&nbsp;explode=None,&nbsp;labels=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;colors=('b',&nbsp;'g',&nbsp;'r',&nbsp;'c',&nbsp;'m',&nbsp;'y',&nbsp;'k',&nbsp;'w'),<br>
&nbsp;&nbsp;&nbsp;&nbsp;autopct=None,&nbsp;pctdistance=0.6,&nbsp;shadow=False)<br>
&nbsp;<br>
Make&nbsp;a&nbsp;pie&nbsp;chart&nbsp;of&nbsp;array&nbsp;x.&nbsp;&nbsp;The&nbsp;fractional&nbsp;area&nbsp;of&nbsp;each&nbsp;wedge&nbsp;is<br>
given&nbsp;by&nbsp;x/sum(x).&nbsp;&nbsp;If&nbsp;sum(x)&lt;=1,&nbsp;then&nbsp;the&nbsp;values&nbsp;of&nbsp;x&nbsp;give&nbsp;the<br>
fractional&nbsp;area&nbsp;directly&nbsp;and&nbsp;the&nbsp;array&nbsp;will&nbsp;not&nbsp;be&nbsp;normalized.<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;explode,&nbsp;if&nbsp;not&nbsp;None,&nbsp;is&nbsp;a&nbsp;len(x)&nbsp;array&nbsp;which&nbsp;specifies&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;fraction&nbsp;of&nbsp;the&nbsp;radius&nbsp;to&nbsp;offset&nbsp;that&nbsp;wedge.<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;colors&nbsp;is&nbsp;a&nbsp;sequence&nbsp;of&nbsp;matplotlib&nbsp;color&nbsp;args&nbsp;that&nbsp;the&nbsp;pie&nbsp;chart<br>
&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;cycle.<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;labels,&nbsp;if&nbsp;not&nbsp;None,&nbsp;is&nbsp;a&nbsp;len(x)&nbsp;list&nbsp;of&nbsp;labels.<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;autopct,&nbsp;if&nbsp;not&nbsp;None,&nbsp;is&nbsp;a&nbsp;string&nbsp;or&nbsp;function&nbsp;used&nbsp;to&nbsp;label&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;wedges&nbsp;with&nbsp;their&nbsp;numeric&nbsp;value.&nbsp;&nbsp;The&nbsp;label&nbsp;will&nbsp;be&nbsp;placed&nbsp;inside<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;wedge.&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a&nbsp;format&nbsp;string,&nbsp;the&nbsp;label&nbsp;will&nbsp;be&nbsp;fmt%pct.<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a&nbsp;function,&nbsp;it&nbsp;will&nbsp;be&nbsp;called<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;pctdistance&nbsp;is&nbsp;the&nbsp;ratio&nbsp;between&nbsp;the&nbsp;center&nbsp;of&nbsp;each&nbsp;pie&nbsp;slice<br>
&nbsp;&nbsp;&nbsp;&nbsp;and&nbsp;the&nbsp;start&nbsp;of&nbsp;the&nbsp;text&nbsp;generated&nbsp;by&nbsp;autopct.&nbsp;&nbsp;Ignored&nbsp;if&nbsp;autopct<br>
&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;None;&nbsp;default&nbsp;is&nbsp;0.6.<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;shadow,&nbsp;if&nbsp;True,&nbsp;will&nbsp;draw&nbsp;a&nbsp;shadow&nbsp;beneath&nbsp;the&nbsp;pie.<br>
&nbsp;<br>
The&nbsp;pie&nbsp;chart&nbsp;will&nbsp;probably&nbsp;look&nbsp;best&nbsp;if&nbsp;the&nbsp;figure&nbsp;and&nbsp;axes&nbsp;are<br>
square.&nbsp;&nbsp;Eg,<br>
&nbsp;<br>
&nbsp;&nbsp;figure(figsize=(8,8))<br>
&nbsp;&nbsp;ax&nbsp;=&nbsp;axes([0.1,&nbsp;0.1,&nbsp;0.8,&nbsp;0.8])<br>
&nbsp;<br>
Return&nbsp;value:<br>
&nbsp;<br>
&nbsp;&nbsp;If&nbsp;autopct&nbsp;is&nbsp;None,&nbsp;return&nbsp;a&nbsp;list&nbsp;of&nbsp;(patches,&nbsp;texts),&nbsp;where&nbsp;patches<br>
&nbsp;&nbsp;is&nbsp;a&nbsp;sequence&nbsp;of&nbsp;matplotlib.patches.Wedge&nbsp;instances&nbsp;and&nbsp;texts&nbsp;is&nbsp;a<br>
&nbsp;&nbsp;list&nbsp;of&nbsp;the&nbsp;label&nbsp;Text&nbsp;instnaces<br>
&nbsp;<br>
&nbsp;&nbsp;If&nbsp;autopct&nbsp;is&nbsp;not&nbsp;None,&nbsp;return&nbsp;(patches,&nbsp;texts,&nbsp;autotexts),&nbsp;where<br>
&nbsp;&nbsp;patches&nbsp;and&nbsp;texts&nbsp;are&nbsp;as&nbsp;above,&nbsp;and&nbsp;autotexts&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;text<br>
&nbsp;&nbsp;instances&nbsp;for&nbsp;the&nbsp;numeric&nbsp;labels</tt></dd></dl>

<dl><dt><a name="Axes-plot"><strong>plot</strong></a>(self, *args, **kwargs)</dt><dd><tt>PLOT(*args,&nbsp;**kwargs)<br>
Plot&nbsp;lines&nbsp;and/or&nbsp;markers&nbsp;to&nbsp;the&nbsp;<a href="#Axes">Axes</a>.&nbsp;&nbsp;*args&nbsp;is&nbsp;a&nbsp;variable&nbsp;length<br>
argument,&nbsp;allowing&nbsp;for&nbsp;multiple&nbsp;x,y&nbsp;pairs&nbsp;with&nbsp;an&nbsp;optional&nbsp;format<br>
string.&nbsp;&nbsp;For&nbsp;example,&nbsp;each&nbsp;of&nbsp;the&nbsp;following&nbsp;is&nbsp;legal<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-plot">plot</a>(x,y)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;plot&nbsp;x&nbsp;and&nbsp;y&nbsp;using&nbsp;the&nbsp;default&nbsp;line&nbsp;style&nbsp;and&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-plot">plot</a>(x,y,&nbsp;'bo')&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;plot&nbsp;x&nbsp;and&nbsp;y&nbsp;using&nbsp;blue&nbsp;circle&nbsp;markers<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-plot">plot</a>(y)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;plot&nbsp;y&nbsp;using&nbsp;x&nbsp;as&nbsp;index&nbsp;array&nbsp;0..N-1<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-plot">plot</a>(y,&nbsp;'r+')&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;ditto,&nbsp;but&nbsp;with&nbsp;red&nbsp;plusses<br>
If&nbsp;x&nbsp;and/or&nbsp;y&nbsp;is&nbsp;2-Dimensional,&nbsp;then&nbsp;the&nbsp;corresponding&nbsp;columns<br>
will&nbsp;be&nbsp;plotted.<br>
An&nbsp;arbitrary&nbsp;number&nbsp;of&nbsp;x,&nbsp;y,&nbsp;fmt&nbsp;groups&nbsp;can&nbsp;be&nbsp;specified,&nbsp;as&nbsp;in<br>
a.<a href="#Axes-plot">plot</a>(x1,&nbsp;y1,&nbsp;'g^',&nbsp;x2,&nbsp;y2,&nbsp;'g-')<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;lines&nbsp;that&nbsp;were&nbsp;added.<br>
The&nbsp;following&nbsp;line&nbsp;styles&nbsp;are&nbsp;supported:<br>
&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;solid&nbsp;line<br>
&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;dashed&nbsp;line<br>
&nbsp;&nbsp;&nbsp;&nbsp;-.&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;dash-dot&nbsp;line<br>
&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;dotted&nbsp;line<br>
&nbsp;&nbsp;&nbsp;&nbsp;.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;pixels<br>
&nbsp;&nbsp;&nbsp;&nbsp;o&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;circle&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;^&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;triangle&nbsp;up&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;v&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;triangle&nbsp;down&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;triangle&nbsp;left&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;triangle&nbsp;right&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;s&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;square&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;plus&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;cross&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;D&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;diamond&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;thin&nbsp;diamond&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;tripod&nbsp;down&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;tripod&nbsp;up&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;tripod&nbsp;left&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;tripod&nbsp;right&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;hexagon&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;H&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;rotated&nbsp;hexagon&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;pentagon&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;vertical&nbsp;line&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;_&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;horizontal&nbsp;line&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;steps&nbsp;:&nbsp;use&nbsp;gnuplot&nbsp;style&nbsp;'steps'&nbsp;#&nbsp;kwarg&nbsp;only<br>
The&nbsp;following&nbsp;color&nbsp;abbreviations&nbsp;are&nbsp;supported<br>
&nbsp;&nbsp;&nbsp;&nbsp;b&nbsp;&nbsp;:&nbsp;blue<br>
&nbsp;&nbsp;&nbsp;&nbsp;g&nbsp;&nbsp;:&nbsp;green<br>
&nbsp;&nbsp;&nbsp;&nbsp;r&nbsp;&nbsp;:&nbsp;red<br>
&nbsp;&nbsp;&nbsp;&nbsp;c&nbsp;&nbsp;:&nbsp;cyan<br>
&nbsp;&nbsp;&nbsp;&nbsp;m&nbsp;&nbsp;:&nbsp;magenta<br>
&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;&nbsp;:&nbsp;yellow<br>
&nbsp;&nbsp;&nbsp;&nbsp;k&nbsp;&nbsp;:&nbsp;black<br>
&nbsp;&nbsp;&nbsp;&nbsp;w&nbsp;&nbsp;:&nbsp;white<br>
In&nbsp;addition,&nbsp;you&nbsp;can&nbsp;specify&nbsp;colors&nbsp;in&nbsp;many&nbsp;weird&nbsp;and<br>
wonderful&nbsp;ways,&nbsp;including&nbsp;full&nbsp;names&nbsp;'green',&nbsp;hex&nbsp;strings<br>
'#008000',&nbsp;RGB&nbsp;or&nbsp;RGBA&nbsp;tuples&nbsp;(0,1,0,1)&nbsp;or&nbsp;grayscale<br>
intensities&nbsp;as&nbsp;a&nbsp;string&nbsp;'0.8'.<br>
Line&nbsp;styles&nbsp;and&nbsp;colors&nbsp;are&nbsp;combined&nbsp;in&nbsp;a&nbsp;single&nbsp;format&nbsp;string,&nbsp;as&nbsp;in<br>
'bo'&nbsp;for&nbsp;blue&nbsp;circles.<br>
The&nbsp;**kwargs&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;set&nbsp;line&nbsp;properties&nbsp;(any&nbsp;property&nbsp;that&nbsp;has<br>
a&nbsp;set_*&nbsp;method).&nbsp;&nbsp;You&nbsp;can&nbsp;use&nbsp;this&nbsp;to&nbsp;set&nbsp;a&nbsp;line&nbsp;label&nbsp;(for&nbsp;auto<br>
legends),&nbsp;linewidth,&nbsp;anitialising,&nbsp;marker&nbsp;face&nbsp;color,&nbsp;etc.&nbsp;&nbsp;Here&nbsp;is&nbsp;an<br>
example:<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-plot">plot</a>([1,2,3],&nbsp;[1,2,3],&nbsp;'go-',&nbsp;label='line&nbsp;1',&nbsp;linewidth=2)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-plot">plot</a>([1,2,3],&nbsp;[1,4,9],&nbsp;'rs',&nbsp;&nbsp;label='line&nbsp;2')<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-axis">axis</a>([0,&nbsp;4,&nbsp;0,&nbsp;10])<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-legend">legend</a>()<br>
If&nbsp;you&nbsp;make&nbsp;multiple&nbsp;lines&nbsp;with&nbsp;one&nbsp;plot&nbsp;command,&nbsp;the&nbsp;kwargs&nbsp;apply<br>
to&nbsp;all&nbsp;those&nbsp;lines,&nbsp;eg<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-plot">plot</a>(x1,&nbsp;y1,&nbsp;x2,&nbsp;y2,&nbsp;antialised=False)<br>
Neither&nbsp;line&nbsp;will&nbsp;be&nbsp;antialiased.<br>
The&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
kwargs&nbsp;scalex&nbsp;and&nbsp;scaley,&nbsp;if&nbsp;defined,&nbsp;are&nbsp;passed&nbsp;on<br>
to&nbsp;autoscale_view&nbsp;to&nbsp;determine&nbsp;whether&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;axes&nbsp;are<br>
autoscaled;&nbsp;default&nbsp;True.&nbsp;&nbsp;See&nbsp;<a href="#Axes">Axes</a>.autoscale_view&nbsp;for&nbsp;more<br>
information</tt></dd></dl>

<dl><dt><a name="Axes-plot_date"><strong>plot_date</strong></a>(self, x, y, fmt<font color="#909090">='bo'</font>, tz<font color="#909090">=None</font>, xdate<font color="#909090">=True</font>, ydate<font color="#909090">=False</font>, **kwargs)</dt><dd><tt>PLOT_DATE(x,&nbsp;y,&nbsp;fmt='bo',&nbsp;tz=None,&nbsp;xdate=True,&nbsp;ydate=False,&nbsp;**kwargs)<br>
Similar&nbsp;to&nbsp;the&nbsp;<a href="#Axes-plot">plot</a>()&nbsp;command,&nbsp;except&nbsp;the&nbsp;x&nbsp;or&nbsp;y&nbsp;(or&nbsp;both)&nbsp;data<br>
is&nbsp;considered&nbsp;to&nbsp;be&nbsp;dates,&nbsp;and&nbsp;the&nbsp;axis&nbsp;is&nbsp;labeled&nbsp;accordingly.<br>
x&nbsp;or&nbsp;y&nbsp;(or&nbsp;both)&nbsp;can&nbsp;be&nbsp;a&nbsp;sequence&nbsp;of&nbsp;dates&nbsp;represented&nbsp;as<br>
float&nbsp;days&nbsp;since&nbsp;0001-01-01&nbsp;UTC.<br>
fmt&nbsp;is&nbsp;a&nbsp;plot&nbsp;format&nbsp;string.<br>
tz&nbsp;is&nbsp;the&nbsp;time&nbsp;zone&nbsp;to&nbsp;use&nbsp;in&nbsp;labelling&nbsp;dates.&nbsp;&nbsp;Defaults&nbsp;to&nbsp;rc&nbsp;value.<br>
If&nbsp;xdate&nbsp;is&nbsp;True,&nbsp;the&nbsp;x-axis&nbsp;will&nbsp;be&nbsp;labeled&nbsp;with&nbsp;dates.<br>
If&nbsp;ydate&nbsp;is&nbsp;True,&nbsp;the&nbsp;y-axis&nbsp;will&nbsp;be&nbsp;labeled&nbsp;with&nbsp;dates.<br>
Note&nbsp;if&nbsp;you&nbsp;are&nbsp;using&nbsp;custom&nbsp;date&nbsp;tickers&nbsp;and&nbsp;formatters,&nbsp;it<br>
may&nbsp;be&nbsp;necessary&nbsp;to&nbsp;set&nbsp;the&nbsp;formatters/locators&nbsp;after&nbsp;the&nbsp;call<br>
to&nbsp;plot_date&nbsp;since&nbsp;plot_date&nbsp;will&nbsp;set&nbsp;the&nbsp;default&nbsp;tick&nbsp;locator<br>
to&nbsp;AutoDateLocator&nbsp;(if&nbsp;the&nbsp;tick&nbsp;locator&nbsp;is&nbsp;not&nbsp;already&nbsp;set&nbsp;to<br>
a&nbsp;DateLocator&nbsp;instance)&nbsp;and&nbsp;the&nbsp;default&nbsp;tick&nbsp;formatter&nbsp;to<br>
AutoDateFormatter&nbsp;(if&nbsp;the&nbsp;tick&nbsp;formatter&nbsp;is&nbsp;not&nbsp;already&nbsp;set&nbsp;to<br>
a&nbsp;DateFormatter&nbsp;instance).<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
See&nbsp;matplotlib.dates&nbsp;for&nbsp;helper&nbsp;functions&nbsp;date2num,&nbsp;num2date<br>
and&nbsp;drange&nbsp;for&nbsp;help&nbsp;on&nbsp;creating&nbsp;the&nbsp;required&nbsp;floating&nbsp;point&nbsp;dates</tt></dd></dl>

<dl><dt><a name="Axes-psd"><strong>psd</strong></a>(self, x, NFFT<font color="#909090">=256</font>, Fs<font color="#909090">=2</font>, detrend<font color="#909090">=&lt;function detrend_none at 0x847d844&gt;</font>, window<font color="#909090">=&lt;function window_hanning at 0x847d72c&gt;</font>, noverlap<font color="#909090">=0</font>, **kwargs)</dt><dd><tt>PSD(x,&nbsp;NFFT=256,&nbsp;Fs=2,&nbsp;detrend=detrend_none,<br>
&nbsp;&nbsp;&nbsp;&nbsp;window=window_hanning,&nbsp;noverlap=0,&nbsp;**kwargs)<br>
The&nbsp;power&nbsp;spectral&nbsp;density&nbsp;by&nbsp;Welches&nbsp;average&nbsp;periodogram&nbsp;method.&nbsp;&nbsp;The<br>
vector&nbsp;x&nbsp;is&nbsp;divided&nbsp;into&nbsp;NFFT&nbsp;length&nbsp;segments.&nbsp;&nbsp;Each&nbsp;segment&nbsp;is<br>
detrended&nbsp;by&nbsp;function&nbsp;detrend&nbsp;and&nbsp;windowed&nbsp;by&nbsp;function&nbsp;window.<br>
noperlap&nbsp;gives&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;overlap&nbsp;between&nbsp;segments.&nbsp;&nbsp;The<br>
absolute(fft(segment))**2&nbsp;of&nbsp;each&nbsp;segment&nbsp;are&nbsp;averaged&nbsp;to&nbsp;compute&nbsp;Pxx,<br>
with&nbsp;a&nbsp;scaling&nbsp;to&nbsp;correct&nbsp;for&nbsp;power&nbsp;loss&nbsp;due&nbsp;to&nbsp;windowing.&nbsp;&nbsp;Fs&nbsp;is&nbsp;the<br>
sampling&nbsp;frequency.<br>
&nbsp;&nbsp;&nbsp;&nbsp;NFFT&nbsp;is&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;fft&nbsp;segment;&nbsp;must&nbsp;be&nbsp;a&nbsp;power&nbsp;of&nbsp;2<br>
&nbsp;&nbsp;&nbsp;&nbsp;Fs&nbsp;is&nbsp;the&nbsp;sampling&nbsp;frequency.<br>
&nbsp;&nbsp;&nbsp;&nbsp;detrend&nbsp;-&nbsp;the&nbsp;function&nbsp;applied&nbsp;to&nbsp;each&nbsp;segment&nbsp;before&nbsp;fft-ing,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;designed&nbsp;to&nbsp;remove&nbsp;the&nbsp;mean&nbsp;or&nbsp;linear&nbsp;trend.&nbsp;&nbsp;Unlike&nbsp;in&nbsp;matlab,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;where&nbsp;the&nbsp;detrend&nbsp;parameter&nbsp;is&nbsp;a&nbsp;vector,&nbsp;in&nbsp;matplotlib&nbsp;is&nbsp;it&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function.&nbsp;&nbsp;The&nbsp;mlab&nbsp;module&nbsp;defines&nbsp;detrend_none,&nbsp;detrend_mean,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;detrend_linear,&nbsp;but&nbsp;you&nbsp;can&nbsp;use&nbsp;a&nbsp;custom&nbsp;function&nbsp;as&nbsp;well.<br>
&nbsp;&nbsp;&nbsp;&nbsp;window&nbsp;-&nbsp;the&nbsp;function&nbsp;used&nbsp;to&nbsp;window&nbsp;the&nbsp;segments.&nbsp;&nbsp;window&nbsp;is&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function,&nbsp;unlike&nbsp;in&nbsp;matlab(TM)&nbsp;where&nbsp;it&nbsp;is&nbsp;a&nbsp;vector.&nbsp;&nbsp;mlab&nbsp;defines<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window_none,&nbsp;window_hanning,&nbsp;but&nbsp;you&nbsp;can&nbsp;use&nbsp;a&nbsp;custom&nbsp;function<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;as&nbsp;well.<br>
&nbsp;&nbsp;&nbsp;&nbsp;noverlap&nbsp;gives&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;overlap&nbsp;between&nbsp;segments.<br>
Returns&nbsp;the&nbsp;tuple&nbsp;Pxx,&nbsp;freqs<br>
For&nbsp;plotting,&nbsp;the&nbsp;power&nbsp;is&nbsp;plotted&nbsp;as&nbsp;10*log10(pxx))&nbsp;for&nbsp;decibels,<br>
though&nbsp;pxx&nbsp;itself&nbsp;is&nbsp;returned<br>
Refs:<br>
&nbsp;&nbsp;Bendat&nbsp;&amp;&nbsp;Piersol&nbsp;--&nbsp;Random&nbsp;Data:&nbsp;Analysis&nbsp;and&nbsp;Measurement<br>
&nbsp;&nbsp;Procedures,&nbsp;John&nbsp;Wiley&nbsp;&amp;&nbsp;Sons&nbsp;(1986)<br>
kwargs&nbsp;control&nbsp;the&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-quiver"><strong>quiver</strong></a>(self, *args, **kw)</dt><dd><tt>Plot&nbsp;a&nbsp;2-D&nbsp;field&nbsp;of&nbsp;arrows.<br>
&nbsp;<br>
Function&nbsp;signatures:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-quiver">quiver</a>(U,&nbsp;V,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-quiver">quiver</a>(U,&nbsp;V,&nbsp;C,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-quiver">quiver</a>(X,&nbsp;Y,&nbsp;U,&nbsp;V,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-quiver">quiver</a>(X,&nbsp;Y,&nbsp;U,&nbsp;V,&nbsp;C,&nbsp;**kw)<br>
&nbsp;<br>
Arguments:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;X,&nbsp;Y&nbsp;give&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;arrow&nbsp;locations<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(default&nbsp;is&nbsp;tail&nbsp;of&nbsp;arrow;&nbsp;see&nbsp;'pivot'&nbsp;kwarg)<br>
&nbsp;&nbsp;&nbsp;&nbsp;U,&nbsp;V&nbsp;give&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;components&nbsp;of&nbsp;the&nbsp;arrow&nbsp;vectors<br>
&nbsp;&nbsp;&nbsp;&nbsp;C&nbsp;is&nbsp;an&nbsp;optional&nbsp;array&nbsp;used&nbsp;to&nbsp;map&nbsp;colors&nbsp;to&nbsp;the&nbsp;arrows<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;All&nbsp;arguments&nbsp;may&nbsp;be&nbsp;1-D&nbsp;or&nbsp;2-D&nbsp;arrays&nbsp;or&nbsp;sequences.<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;absent,&nbsp;they&nbsp;will&nbsp;be&nbsp;generated&nbsp;as&nbsp;a&nbsp;uniform&nbsp;grid.<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;U&nbsp;and&nbsp;V&nbsp;are&nbsp;2-D&nbsp;arrays&nbsp;but&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;1-D,&nbsp;and&nbsp;if<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;len(X)&nbsp;and&nbsp;len(Y)&nbsp;match&nbsp;the&nbsp;column&nbsp;and&nbsp;row&nbsp;dimensions<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;U,&nbsp;then&nbsp;X&nbsp;and&nbsp;Y&nbsp;will&nbsp;be&nbsp;expanded&nbsp;with&nbsp;meshgrid.<br>
&nbsp;<br>
Keyword&nbsp;arguments&nbsp;(default&nbsp;given&nbsp;first):<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;units&nbsp;=&nbsp;'width'&nbsp;|&nbsp;'height'&nbsp;|&nbsp;'dots'&nbsp;|&nbsp;'inches'&nbsp;|&nbsp;'x'&nbsp;|&nbsp;'y'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arrow&nbsp;units;&nbsp;the&nbsp;arrow&nbsp;dimensions&nbsp;*except&nbsp;for&nbsp;length*<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;in&nbsp;multiples&nbsp;of&nbsp;this&nbsp;unit.<br>
&nbsp;&nbsp;*&nbsp;scale&nbsp;=&nbsp;None&nbsp;|&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;units&nbsp;per&nbsp;arrow&nbsp;unit,&nbsp;e.g.&nbsp;m/s&nbsp;per&nbsp;plot&nbsp;width;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;smaller&nbsp;scale&nbsp;parameter&nbsp;makes&nbsp;the&nbsp;arrow&nbsp;longer.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;None,&nbsp;a&nbsp;simple&nbsp;autoscaling&nbsp;algorithm&nbsp;is&nbsp;used,&nbsp;based<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on&nbsp;the&nbsp;average&nbsp;vector&nbsp;length&nbsp;and&nbsp;the&nbsp;number&nbsp;of&nbsp;vectors.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Arrow&nbsp;dimensions&nbsp;and&nbsp;scales&nbsp;can&nbsp;be&nbsp;in&nbsp;any&nbsp;of&nbsp;several&nbsp;units:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'width'&nbsp;or&nbsp;'height':&nbsp;the&nbsp;width&nbsp;or&nbsp;height&nbsp;of&nbsp;the&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;'dots'&nbsp;or&nbsp;'inches':&nbsp;&nbsp;pixels&nbsp;or&nbsp;inches,&nbsp;based&nbsp;on&nbsp;the&nbsp;figure&nbsp;dpi<br>
&nbsp;&nbsp;&nbsp;&nbsp;'x'&nbsp;or&nbsp;'y':&nbsp;X&nbsp;or&nbsp;Y&nbsp;data&nbsp;units<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;all&nbsp;cases&nbsp;the&nbsp;arrow&nbsp;aspect&nbsp;ratio&nbsp;is&nbsp;1,&nbsp;so&nbsp;that&nbsp;if&nbsp;U==V&nbsp;the&nbsp;angle<br>
&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;arrow&nbsp;on&nbsp;the&nbsp;plot&nbsp;is&nbsp;45&nbsp;degrees&nbsp;CCW&nbsp;from&nbsp;the&nbsp;X-axis.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;arrows&nbsp;scale&nbsp;differently&nbsp;depending&nbsp;on&nbsp;the&nbsp;units,&nbsp;however.<br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;'x'&nbsp;or&nbsp;'y',&nbsp;the&nbsp;arrows&nbsp;get&nbsp;larger&nbsp;as&nbsp;one&nbsp;zooms&nbsp;in;&nbsp;for&nbsp;other<br>
&nbsp;&nbsp;&nbsp;&nbsp;units,&nbsp;the&nbsp;arrow&nbsp;size&nbsp;is&nbsp;independent&nbsp;of&nbsp;the&nbsp;zoom&nbsp;state.&nbsp;&nbsp;For<br>
&nbsp;&nbsp;&nbsp;&nbsp;'width&nbsp;or&nbsp;'height',&nbsp;the&nbsp;arrow&nbsp;size&nbsp;increases&nbsp;with&nbsp;the&nbsp;width&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;height&nbsp;of&nbsp;the&nbsp;axes,&nbsp;respectively,&nbsp;when&nbsp;the&nbsp;the&nbsp;window&nbsp;is&nbsp;resized;<br>
&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;'dots'&nbsp;or&nbsp;'inches',&nbsp;resizing&nbsp;does&nbsp;not&nbsp;change&nbsp;the&nbsp;arrows.<br>
&nbsp;<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;width&nbsp;=&nbsp;?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shaft&nbsp;width&nbsp;in&nbsp;arrow&nbsp;units;&nbsp;default&nbsp;depends&nbsp;on<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;choice&nbsp;of&nbsp;units,&nbsp;above,&nbsp;and&nbsp;number&nbsp;of&nbsp;vectors;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;typical&nbsp;starting&nbsp;value&nbsp;is&nbsp;about<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.005&nbsp;times&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;plot.<br>
&nbsp;&nbsp;*&nbsp;headwidth&nbsp;=&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;head&nbsp;width&nbsp;as&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width<br>
&nbsp;&nbsp;*&nbsp;headlength&nbsp;=&nbsp;5&nbsp;&nbsp;&nbsp;head&nbsp;length&nbsp;as&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width<br>
&nbsp;&nbsp;*&nbsp;headaxislength&nbsp;=&nbsp;4.5&nbsp;&nbsp;head&nbsp;length&nbsp;at&nbsp;shaft&nbsp;intersection<br>
&nbsp;&nbsp;*&nbsp;minshaft&nbsp;=&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length&nbsp;below&nbsp;which&nbsp;arrow&nbsp;scales,&nbsp;in&nbsp;units<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;head&nbsp;length.&nbsp;Do&nbsp;not&nbsp;set&nbsp;this&nbsp;to&nbsp;less<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;than&nbsp;1,&nbsp;or&nbsp;small&nbsp;arrows&nbsp;will&nbsp;look&nbsp;terrible!<br>
&nbsp;&nbsp;*&nbsp;minlength&nbsp;=&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;minimum&nbsp;length&nbsp;as&nbsp;a&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;an&nbsp;arrow&nbsp;length&nbsp;is&nbsp;less&nbsp;than&nbsp;this,&nbsp;plot&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dot&nbsp;(hexagon)&nbsp;of&nbsp;this&nbsp;diameter&nbsp;instead.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;defaults&nbsp;give&nbsp;a&nbsp;slightly&nbsp;swept-back&nbsp;arrow;&nbsp;to&nbsp;make&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;head&nbsp;a&nbsp;triangle,&nbsp;make&nbsp;headaxislength&nbsp;the&nbsp;same&nbsp;as&nbsp;headlength.<br>
&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;make&nbsp;the&nbsp;arrow&nbsp;more&nbsp;pointed,&nbsp;reduce&nbsp;headwidth&nbsp;or&nbsp;increase<br>
&nbsp;&nbsp;&nbsp;&nbsp;headlength&nbsp;and&nbsp;headaxislength.<br>
&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;make&nbsp;the&nbsp;head&nbsp;smaller&nbsp;relative&nbsp;to&nbsp;the&nbsp;shaft,&nbsp;scale&nbsp;down<br>
&nbsp;&nbsp;&nbsp;&nbsp;all&nbsp;the&nbsp;head*&nbsp;parameters.<br>
&nbsp;&nbsp;&nbsp;&nbsp;You&nbsp;will&nbsp;probably&nbsp;do&nbsp;best&nbsp;to&nbsp;leave&nbsp;minshaft&nbsp;alone.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;pivot&nbsp;=&nbsp;'tail'&nbsp;|&nbsp;'middle'&nbsp;|&nbsp;'tip'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;part&nbsp;of&nbsp;the&nbsp;arrow&nbsp;that&nbsp;is&nbsp;at&nbsp;the&nbsp;grid&nbsp;point;&nbsp;the&nbsp;arrow<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotates&nbsp;about&nbsp;this&nbsp;point,&nbsp;hence&nbsp;the&nbsp;name&nbsp;'pivot'.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;color&nbsp;=&nbsp;'k'&nbsp;|&nbsp;any&nbsp;matplotlib&nbsp;color&nbsp;spec&nbsp;or&nbsp;sequence&nbsp;of&nbsp;color&nbsp;specs.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This&nbsp;is&nbsp;a&nbsp;synonym&nbsp;for&nbsp;the&nbsp;PolyCollection&nbsp;facecolor&nbsp;kwarg.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;C&nbsp;has&nbsp;been&nbsp;set,&nbsp;'color'&nbsp;has&nbsp;no&nbsp;effect.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;*&nbsp;All&nbsp;PolyCollection&nbsp;kwargs&nbsp;are&nbsp;valid,&nbsp;in&nbsp;the&nbsp;sense&nbsp;that&nbsp;they<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;be&nbsp;passed&nbsp;on&nbsp;to&nbsp;the&nbsp;PolyCollection&nbsp;constructor.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;particular,&nbsp;one&nbsp;might&nbsp;want&nbsp;to&nbsp;use,&nbsp;for&nbsp;example:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidths&nbsp;=&nbsp;(1,),&nbsp;edgecolors&nbsp;=&nbsp;('g',)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;make&nbsp;the&nbsp;arrows&nbsp;have&nbsp;green&nbsp;outlines&nbsp;of&nbsp;unit&nbsp;width.</tt></dd></dl>

<dl><dt><a name="Axes-quiver2"><strong>quiver2</strong></a>(self, *args, **kw)</dt><dd><tt>Plot&nbsp;a&nbsp;2-D&nbsp;field&nbsp;of&nbsp;arrows.<br>
&nbsp;<br>
Function&nbsp;signatures:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-quiver">quiver</a>(U,&nbsp;V,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-quiver">quiver</a>(U,&nbsp;V,&nbsp;C,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-quiver">quiver</a>(X,&nbsp;Y,&nbsp;U,&nbsp;V,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-quiver">quiver</a>(X,&nbsp;Y,&nbsp;U,&nbsp;V,&nbsp;C,&nbsp;**kw)<br>
&nbsp;<br>
Arguments:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;X,&nbsp;Y&nbsp;give&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;arrow&nbsp;locations<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(default&nbsp;is&nbsp;tail&nbsp;of&nbsp;arrow;&nbsp;see&nbsp;'pivot'&nbsp;kwarg)<br>
&nbsp;&nbsp;&nbsp;&nbsp;U,&nbsp;V&nbsp;give&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;components&nbsp;of&nbsp;the&nbsp;arrow&nbsp;vectors<br>
&nbsp;&nbsp;&nbsp;&nbsp;C&nbsp;is&nbsp;an&nbsp;optional&nbsp;array&nbsp;used&nbsp;to&nbsp;map&nbsp;colors&nbsp;to&nbsp;the&nbsp;arrows<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;All&nbsp;arguments&nbsp;may&nbsp;be&nbsp;1-D&nbsp;or&nbsp;2-D&nbsp;arrays&nbsp;or&nbsp;sequences.<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;absent,&nbsp;they&nbsp;will&nbsp;be&nbsp;generated&nbsp;as&nbsp;a&nbsp;uniform&nbsp;grid.<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;U&nbsp;and&nbsp;V&nbsp;are&nbsp;2-D&nbsp;arrays&nbsp;but&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;1-D,&nbsp;and&nbsp;if<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;len(X)&nbsp;and&nbsp;len(Y)&nbsp;match&nbsp;the&nbsp;column&nbsp;and&nbsp;row&nbsp;dimensions<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;U,&nbsp;then&nbsp;X&nbsp;and&nbsp;Y&nbsp;will&nbsp;be&nbsp;expanded&nbsp;with&nbsp;meshgrid.<br>
&nbsp;<br>
Keyword&nbsp;arguments&nbsp;(default&nbsp;given&nbsp;first):<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;units&nbsp;=&nbsp;'width'&nbsp;|&nbsp;'height'&nbsp;|&nbsp;'dots'&nbsp;|&nbsp;'inches'&nbsp;|&nbsp;'x'&nbsp;|&nbsp;'y'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arrow&nbsp;units;&nbsp;the&nbsp;arrow&nbsp;dimensions&nbsp;*except&nbsp;for&nbsp;length*<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;in&nbsp;multiples&nbsp;of&nbsp;this&nbsp;unit.<br>
&nbsp;&nbsp;*&nbsp;scale&nbsp;=&nbsp;None&nbsp;|&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;units&nbsp;per&nbsp;arrow&nbsp;unit,&nbsp;e.g.&nbsp;m/s&nbsp;per&nbsp;plot&nbsp;width;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;smaller&nbsp;scale&nbsp;parameter&nbsp;makes&nbsp;the&nbsp;arrow&nbsp;longer.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;None,&nbsp;a&nbsp;simple&nbsp;autoscaling&nbsp;algorithm&nbsp;is&nbsp;used,&nbsp;based<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on&nbsp;the&nbsp;average&nbsp;vector&nbsp;length&nbsp;and&nbsp;the&nbsp;number&nbsp;of&nbsp;vectors.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Arrow&nbsp;dimensions&nbsp;and&nbsp;scales&nbsp;can&nbsp;be&nbsp;in&nbsp;any&nbsp;of&nbsp;several&nbsp;units:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'width'&nbsp;or&nbsp;'height':&nbsp;the&nbsp;width&nbsp;or&nbsp;height&nbsp;of&nbsp;the&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;'dots'&nbsp;or&nbsp;'inches':&nbsp;&nbsp;pixels&nbsp;or&nbsp;inches,&nbsp;based&nbsp;on&nbsp;the&nbsp;figure&nbsp;dpi<br>
&nbsp;&nbsp;&nbsp;&nbsp;'x'&nbsp;or&nbsp;'y':&nbsp;X&nbsp;or&nbsp;Y&nbsp;data&nbsp;units<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;all&nbsp;cases&nbsp;the&nbsp;arrow&nbsp;aspect&nbsp;ratio&nbsp;is&nbsp;1,&nbsp;so&nbsp;that&nbsp;if&nbsp;U==V&nbsp;the&nbsp;angle<br>
&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;arrow&nbsp;on&nbsp;the&nbsp;plot&nbsp;is&nbsp;45&nbsp;degrees&nbsp;CCW&nbsp;from&nbsp;the&nbsp;X-axis.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;arrows&nbsp;scale&nbsp;differently&nbsp;depending&nbsp;on&nbsp;the&nbsp;units,&nbsp;however.<br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;'x'&nbsp;or&nbsp;'y',&nbsp;the&nbsp;arrows&nbsp;get&nbsp;larger&nbsp;as&nbsp;one&nbsp;zooms&nbsp;in;&nbsp;for&nbsp;other<br>
&nbsp;&nbsp;&nbsp;&nbsp;units,&nbsp;the&nbsp;arrow&nbsp;size&nbsp;is&nbsp;independent&nbsp;of&nbsp;the&nbsp;zoom&nbsp;state.&nbsp;&nbsp;For<br>
&nbsp;&nbsp;&nbsp;&nbsp;'width&nbsp;or&nbsp;'height',&nbsp;the&nbsp;arrow&nbsp;size&nbsp;increases&nbsp;with&nbsp;the&nbsp;width&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;height&nbsp;of&nbsp;the&nbsp;axes,&nbsp;respectively,&nbsp;when&nbsp;the&nbsp;the&nbsp;window&nbsp;is&nbsp;resized;<br>
&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;'dots'&nbsp;or&nbsp;'inches',&nbsp;resizing&nbsp;does&nbsp;not&nbsp;change&nbsp;the&nbsp;arrows.<br>
&nbsp;<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;width&nbsp;=&nbsp;?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shaft&nbsp;width&nbsp;in&nbsp;arrow&nbsp;units;&nbsp;default&nbsp;depends&nbsp;on<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;choice&nbsp;of&nbsp;units,&nbsp;above,&nbsp;and&nbsp;number&nbsp;of&nbsp;vectors;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;typical&nbsp;starting&nbsp;value&nbsp;is&nbsp;about<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.005&nbsp;times&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;plot.<br>
&nbsp;&nbsp;*&nbsp;headwidth&nbsp;=&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;head&nbsp;width&nbsp;as&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width<br>
&nbsp;&nbsp;*&nbsp;headlength&nbsp;=&nbsp;5&nbsp;&nbsp;&nbsp;head&nbsp;length&nbsp;as&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width<br>
&nbsp;&nbsp;*&nbsp;headaxislength&nbsp;=&nbsp;4.5&nbsp;&nbsp;head&nbsp;length&nbsp;at&nbsp;shaft&nbsp;intersection<br>
&nbsp;&nbsp;*&nbsp;minshaft&nbsp;=&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length&nbsp;below&nbsp;which&nbsp;arrow&nbsp;scales,&nbsp;in&nbsp;units<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;head&nbsp;length.&nbsp;Do&nbsp;not&nbsp;set&nbsp;this&nbsp;to&nbsp;less<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;than&nbsp;1,&nbsp;or&nbsp;small&nbsp;arrows&nbsp;will&nbsp;look&nbsp;terrible!<br>
&nbsp;&nbsp;*&nbsp;minlength&nbsp;=&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;minimum&nbsp;length&nbsp;as&nbsp;a&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;an&nbsp;arrow&nbsp;length&nbsp;is&nbsp;less&nbsp;than&nbsp;this,&nbsp;plot&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dot&nbsp;(hexagon)&nbsp;of&nbsp;this&nbsp;diameter&nbsp;instead.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;defaults&nbsp;give&nbsp;a&nbsp;slightly&nbsp;swept-back&nbsp;arrow;&nbsp;to&nbsp;make&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;head&nbsp;a&nbsp;triangle,&nbsp;make&nbsp;headaxislength&nbsp;the&nbsp;same&nbsp;as&nbsp;headlength.<br>
&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;make&nbsp;the&nbsp;arrow&nbsp;more&nbsp;pointed,&nbsp;reduce&nbsp;headwidth&nbsp;or&nbsp;increase<br>
&nbsp;&nbsp;&nbsp;&nbsp;headlength&nbsp;and&nbsp;headaxislength.<br>
&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;make&nbsp;the&nbsp;head&nbsp;smaller&nbsp;relative&nbsp;to&nbsp;the&nbsp;shaft,&nbsp;scale&nbsp;down<br>
&nbsp;&nbsp;&nbsp;&nbsp;all&nbsp;the&nbsp;head*&nbsp;parameters.<br>
&nbsp;&nbsp;&nbsp;&nbsp;You&nbsp;will&nbsp;probably&nbsp;do&nbsp;best&nbsp;to&nbsp;leave&nbsp;minshaft&nbsp;alone.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;pivot&nbsp;=&nbsp;'tail'&nbsp;|&nbsp;'middle'&nbsp;|&nbsp;'tip'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;part&nbsp;of&nbsp;the&nbsp;arrow&nbsp;that&nbsp;is&nbsp;at&nbsp;the&nbsp;grid&nbsp;point;&nbsp;the&nbsp;arrow<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotates&nbsp;about&nbsp;this&nbsp;point,&nbsp;hence&nbsp;the&nbsp;name&nbsp;'pivot'.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;color&nbsp;=&nbsp;'k'&nbsp;|&nbsp;any&nbsp;matplotlib&nbsp;color&nbsp;spec&nbsp;or&nbsp;sequence&nbsp;of&nbsp;color&nbsp;specs.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This&nbsp;is&nbsp;a&nbsp;synonym&nbsp;for&nbsp;the&nbsp;PolyCollection&nbsp;facecolor&nbsp;kwarg.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;C&nbsp;has&nbsp;been&nbsp;set,&nbsp;'color'&nbsp;has&nbsp;no&nbsp;effect.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;*&nbsp;All&nbsp;PolyCollection&nbsp;kwargs&nbsp;are&nbsp;valid,&nbsp;in&nbsp;the&nbsp;sense&nbsp;that&nbsp;they<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;be&nbsp;passed&nbsp;on&nbsp;to&nbsp;the&nbsp;PolyCollection&nbsp;constructor.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;particular,&nbsp;one&nbsp;might&nbsp;want&nbsp;to&nbsp;use,&nbsp;for&nbsp;example:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidths&nbsp;=&nbsp;(1,),&nbsp;edgecolors&nbsp;=&nbsp;('g',)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;make&nbsp;the&nbsp;arrows&nbsp;have&nbsp;green&nbsp;outlines&nbsp;of&nbsp;unit&nbsp;width.</tt></dd></dl>

<dl><dt><a name="Axes-quiver_classic"><strong>quiver_classic</strong></a>(self, U, V, *args, **kwargs)</dt><dd><tt>QUIVER(&nbsp;X,&nbsp;Y,&nbsp;U,&nbsp;V&nbsp;)<br>
QUIVER(&nbsp;U,&nbsp;V&nbsp;)<br>
QUIVER(&nbsp;X,&nbsp;Y,&nbsp;U,&nbsp;V,&nbsp;S)<br>
QUIVER(&nbsp;U,&nbsp;V,&nbsp;S&nbsp;)<br>
QUIVER(&nbsp;...,&nbsp;color=None,&nbsp;width=1.0,&nbsp;cmap=None,&nbsp;norm=None&nbsp;)<br>
&nbsp;<br>
Make&nbsp;a&nbsp;vector&nbsp;plot&nbsp;(U,&nbsp;V)&nbsp;with&nbsp;arrows&nbsp;on&nbsp;a&nbsp;grid&nbsp;(X,&nbsp;Y)<br>
&nbsp;<br>
If&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;not&nbsp;specified,&nbsp;U&nbsp;and&nbsp;V&nbsp;must&nbsp;be&nbsp;2D&nbsp;arrays.&nbsp;&nbsp;Equally&nbsp;spaced<br>
X&nbsp;and&nbsp;Y&nbsp;grids&nbsp;are&nbsp;then&nbsp;generated&nbsp;using&nbsp;the&nbsp;meshgrid&nbsp;command.<br>
&nbsp;<br>
color&nbsp;can&nbsp;be&nbsp;a&nbsp;color&nbsp;value&nbsp;or&nbsp;an&nbsp;array&nbsp;of&nbsp;colors,&nbsp;so&nbsp;that&nbsp;the&nbsp;arrows&nbsp;can&nbsp;be<br>
colored&nbsp;according&nbsp;to&nbsp;another&nbsp;dataset.&nbsp;&nbsp;If&nbsp;cmap&nbsp;is&nbsp;specified&nbsp;and&nbsp;color&nbsp;is&nbsp;'length',<br>
the&nbsp;colormap&nbsp;is&nbsp;used&nbsp;to&nbsp;give&nbsp;a&nbsp;color&nbsp;according&nbsp;to&nbsp;the&nbsp;vector's&nbsp;length.<br>
&nbsp;<br>
If&nbsp;color&nbsp;is&nbsp;a&nbsp;scalar&nbsp;field,&nbsp;the&nbsp;colormap&nbsp;is&nbsp;used&nbsp;to&nbsp;map&nbsp;the&nbsp;scalar&nbsp;to&nbsp;a&nbsp;color<br>
If&nbsp;a&nbsp;colormap&nbsp;is&nbsp;specified&nbsp;and&nbsp;color&nbsp;is&nbsp;an&nbsp;array&nbsp;of&nbsp;color&nbsp;triplets,&nbsp;then&nbsp;the<br>
colormap&nbsp;is&nbsp;ignored<br>
&nbsp;<br>
width&nbsp;is&nbsp;a&nbsp;scalar&nbsp;that&nbsp;controls&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;arrows<br>
&nbsp;<br>
if&nbsp;S&nbsp;is&nbsp;specified&nbsp;it&nbsp;is&nbsp;used&nbsp;to&nbsp;scale&nbsp;the&nbsp;vectors.&nbsp;Use&nbsp;S=0&nbsp;to&nbsp;disable&nbsp;automatic<br>
scaling.<br>
If&nbsp;S!=0,&nbsp;vectors&nbsp;are&nbsp;scaled&nbsp;to&nbsp;fit&nbsp;within&nbsp;the&nbsp;grid&nbsp;and&nbsp;then&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;S.</tt></dd></dl>

<dl><dt><a name="Axes-quiverkey"><strong>quiverkey</strong></a>(self, *args, **kw)</dt><dd><tt>Add&nbsp;a&nbsp;key&nbsp;to&nbsp;a&nbsp;quiver&nbsp;plot.<br>
&nbsp;<br>
Function&nbsp;signature:<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-quiverkey">quiverkey</a>(Q,&nbsp;X,&nbsp;Y,&nbsp;U,&nbsp;label,&nbsp;**kw)<br>
&nbsp;<br>
Arguments:<br>
&nbsp;&nbsp;&nbsp;&nbsp;Q&nbsp;is&nbsp;the&nbsp;Quiver&nbsp;instance&nbsp;returned&nbsp;by&nbsp;a&nbsp;call&nbsp;to&nbsp;quiver.<br>
&nbsp;&nbsp;&nbsp;&nbsp;X,&nbsp;Y&nbsp;give&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;key;&nbsp;additional&nbsp;explanation&nbsp;follows.<br>
&nbsp;&nbsp;&nbsp;&nbsp;U&nbsp;is&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;key<br>
&nbsp;&nbsp;&nbsp;&nbsp;label&nbsp;is&nbsp;a&nbsp;string&nbsp;with&nbsp;the&nbsp;length&nbsp;and&nbsp;units&nbsp;of&nbsp;the&nbsp;key<br>
&nbsp;<br>
Keyword&nbsp;arguments&nbsp;(default&nbsp;given&nbsp;first):<br>
&nbsp;&nbsp;*&nbsp;coordinates&nbsp;=&nbsp;'axes'&nbsp;|&nbsp;'figure'&nbsp;|&nbsp;'data'&nbsp;|&nbsp;'inches'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Coordinate&nbsp;system&nbsp;and&nbsp;units&nbsp;for&nbsp;X,&nbsp;Y:&nbsp;'axes'&nbsp;and&nbsp;'figure'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;normalized&nbsp;coordinate&nbsp;systems&nbsp;with&nbsp;0,0&nbsp;in&nbsp;the&nbsp;lower<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left&nbsp;and&nbsp;1,1&nbsp;in&nbsp;the&nbsp;upper&nbsp;right;&nbsp;'data'&nbsp;are&nbsp;the&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;coordinates&nbsp;(used&nbsp;for&nbsp;the&nbsp;locations&nbsp;of&nbsp;the&nbsp;vectors<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in&nbsp;the&nbsp;quiver&nbsp;plot&nbsp;itself);&nbsp;'inches'&nbsp;is&nbsp;position&nbsp;in&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure&nbsp;in&nbsp;inches,&nbsp;with&nbsp;0,0&nbsp;at&nbsp;the&nbsp;lower&nbsp;left&nbsp;corner.<br>
&nbsp;&nbsp;*&nbsp;color&nbsp;overrides&nbsp;face&nbsp;and&nbsp;edge&nbsp;colors&nbsp;from&nbsp;Q.<br>
&nbsp;&nbsp;*&nbsp;labelpos&nbsp;=&nbsp;'N'&nbsp;|&nbsp;'S'&nbsp;|&nbsp;'E'&nbsp;|&nbsp;'W'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Position&nbsp;the&nbsp;label&nbsp;above,&nbsp;below,&nbsp;to&nbsp;the&nbsp;right,&nbsp;to&nbsp;the&nbsp;left<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;arrow,&nbsp;respectively.<br>
&nbsp;&nbsp;*&nbsp;labelsep&nbsp;=&nbsp;0.1&nbsp;inches&nbsp;distance&nbsp;between&nbsp;the&nbsp;arrow&nbsp;and&nbsp;the&nbsp;label<br>
&nbsp;&nbsp;*&nbsp;labelcolor&nbsp;(defaults&nbsp;to&nbsp;default&nbsp;Text&nbsp;color)<br>
&nbsp;&nbsp;*&nbsp;fontproperties&nbsp;is&nbsp;a&nbsp;dictionary&nbsp;with&nbsp;keyword&nbsp;arguments&nbsp;accepted<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;by&nbsp;the&nbsp;FontProperties&nbsp;initializer:&nbsp;family,&nbsp;style,&nbsp;variant,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size,&nbsp;weight<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Any&nbsp;additional&nbsp;keyword&nbsp;arguments&nbsp;are&nbsp;used&nbsp;to&nbsp;override&nbsp;vector<br>
&nbsp;&nbsp;&nbsp;&nbsp;properties&nbsp;taken&nbsp;from&nbsp;Q.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;positioning&nbsp;of&nbsp;the&nbsp;key&nbsp;depends&nbsp;on&nbsp;X,&nbsp;Y,&nbsp;coordinates,&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;labelpos.&nbsp;&nbsp;If&nbsp;labelpos&nbsp;is&nbsp;'N'&nbsp;or&nbsp;'S',&nbsp;X,Y&nbsp;give&nbsp;the&nbsp;position<br>
&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;middle&nbsp;of&nbsp;the&nbsp;key&nbsp;arrow.&nbsp;&nbsp;If&nbsp;labelpos&nbsp;is&nbsp;'E',&nbsp;X,Y<br>
&nbsp;&nbsp;&nbsp;&nbsp;positions&nbsp;the&nbsp;head,&nbsp;and&nbsp;if&nbsp;labelpos&nbsp;is&nbsp;'W',&nbsp;X,Y&nbsp;positions&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;tail;&nbsp;in&nbsp;either&nbsp;of&nbsp;these&nbsp;two&nbsp;cases,&nbsp;X,Y&nbsp;is&nbsp;somewhere&nbsp;in&nbsp;the&nbsp;middle<br>
&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;arrow+label&nbsp;key&nbsp;object.</tt></dd></dl>

<dl><dt><a name="Axes-redraw_in_frame"><strong>redraw_in_frame</strong></a>(self)</dt><dd><tt>This&nbsp;method&nbsp;can&nbsp;only&nbsp;be&nbsp;used&nbsp;after&nbsp;an&nbsp;initial&nbsp;draw&nbsp;which<br>
caches&nbsp;the&nbsp;renderer.&nbsp;&nbsp;It&nbsp;is&nbsp;used&nbsp;to&nbsp;efficiently&nbsp;update&nbsp;<a href="#Axes">Axes</a><br>
data&nbsp;(axis&nbsp;ticks,&nbsp;labels,&nbsp;etc&nbsp;are&nbsp;not&nbsp;updated)</tt></dd></dl>

<dl><dt><a name="Axes-relim"><strong>relim</strong></a>(self)</dt><dd><tt>recompute&nbsp;the&nbsp;datalimits&nbsp;based&nbsp;on&nbsp;current&nbsp;artists</tt></dd></dl>

<dl><dt><a name="Axes-scatter"><strong>scatter</strong></a>(self, x, y, s<font color="#909090">=20</font>, c<font color="#909090">='b'</font>, marker<font color="#909090">='o'</font>, cmap<font color="#909090">=None</font>, norm<font color="#909090">=None</font>, vmin<font color="#909090">=None</font>, vmax<font color="#909090">=None</font>, alpha<font color="#909090">=1.0</font>, linewidths<font color="#909090">=None</font>, faceted<font color="#909090">=True</font>, verts<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>SCATTER(x,&nbsp;y,&nbsp;s=20,&nbsp;c='b',&nbsp;marker='o',&nbsp;cmap=None,&nbsp;norm=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;vmin=None,&nbsp;vmax=None,&nbsp;alpha=1.0,&nbsp;linewidths=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;faceted=True,&nbsp;**kwargs)<br>
Supported&nbsp;function&nbsp;signatures:<br>
&nbsp;&nbsp;&nbsp;&nbsp;SCATTER(x,&nbsp;y,&nbsp;**kwargs)<br>
&nbsp;&nbsp;&nbsp;&nbsp;SCATTER(x,&nbsp;y,&nbsp;s,&nbsp;**kwargs)<br>
&nbsp;&nbsp;&nbsp;&nbsp;SCATTER(x,&nbsp;y,&nbsp;s,&nbsp;c,&nbsp;**kwargs)<br>
Make&nbsp;a&nbsp;scatter&nbsp;plot&nbsp;of&nbsp;x&nbsp;versus&nbsp;y,&nbsp;where&nbsp;x,&nbsp;y&nbsp;are&nbsp;1-D&nbsp;sequences<br>
of&nbsp;the&nbsp;same&nbsp;length,&nbsp;N.<br>
Arguments&nbsp;s&nbsp;and&nbsp;c&nbsp;can&nbsp;also&nbsp;be&nbsp;given&nbsp;as&nbsp;kwargs;&nbsp;this&nbsp;is&nbsp;encouraged<br>
for&nbsp;readability.<br>
&nbsp;&nbsp;&nbsp;&nbsp;s&nbsp;is&nbsp;a&nbsp;size&nbsp;in&nbsp;points^2.&nbsp;&nbsp;It&nbsp;is&nbsp;a&nbsp;scalar<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;or&nbsp;an&nbsp;array&nbsp;of&nbsp;the&nbsp;same&nbsp;length&nbsp;as&nbsp;x&nbsp;and&nbsp;y.<br>
&nbsp;&nbsp;&nbsp;&nbsp;c&nbsp;is&nbsp;a&nbsp;color&nbsp;and&nbsp;can&nbsp;be&nbsp;a&nbsp;single&nbsp;color&nbsp;format&nbsp;string,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;or&nbsp;a&nbsp;sequence&nbsp;of&nbsp;color&nbsp;specifications&nbsp;of&nbsp;length&nbsp;N,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;or&nbsp;a&nbsp;sequence&nbsp;of&nbsp;N&nbsp;numbers&nbsp;to&nbsp;be&nbsp;mapped&nbsp;to&nbsp;colors<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;the&nbsp;cmap&nbsp;and&nbsp;norm&nbsp;specified&nbsp;via&nbsp;kwargs&nbsp;(see&nbsp;below).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Note&nbsp;that&nbsp;c&nbsp;should&nbsp;not&nbsp;be&nbsp;a&nbsp;single&nbsp;numeric&nbsp;RGB&nbsp;or&nbsp;RGBA<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sequence&nbsp;because&nbsp;that&nbsp;is&nbsp;indistinguishable&nbsp;from&nbsp;an&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;values&nbsp;to&nbsp;be&nbsp;colormapped.&nbsp;c&nbsp;can&nbsp;be&nbsp;a&nbsp;2-D&nbsp;array&nbsp;in&nbsp;which<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;rows&nbsp;are&nbsp;RGB&nbsp;or&nbsp;RGBA,&nbsp;however.<br>
The&nbsp;marker&nbsp;can&nbsp;be&nbsp;one&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;'s'&nbsp;:&nbsp;square<br>
&nbsp;&nbsp;&nbsp;&nbsp;'o'&nbsp;:&nbsp;circle<br>
&nbsp;&nbsp;&nbsp;&nbsp;'^'&nbsp;:&nbsp;triangle&nbsp;up<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&gt;'&nbsp;:&nbsp;triangle&nbsp;right<br>
&nbsp;&nbsp;&nbsp;&nbsp;'v'&nbsp;:&nbsp;triangle&nbsp;down<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&lt;'&nbsp;:&nbsp;triangle&nbsp;left<br>
&nbsp;&nbsp;&nbsp;&nbsp;'d'&nbsp;:&nbsp;diamond<br>
&nbsp;&nbsp;&nbsp;&nbsp;'p'&nbsp;:&nbsp;pentagram<br>
&nbsp;&nbsp;&nbsp;&nbsp;'h'&nbsp;:&nbsp;hexagon<br>
&nbsp;&nbsp;&nbsp;&nbsp;'8'&nbsp;:&nbsp;octagon<br>
If&nbsp;marker&nbsp;is&nbsp;None&nbsp;and&nbsp;verts&nbsp;is&nbsp;not&nbsp;None,&nbsp;verts&nbsp;is&nbsp;a&nbsp;sequence<br>
of&nbsp;(x,y)&nbsp;vertices&nbsp;for&nbsp;a&nbsp;custom&nbsp;scatter&nbsp;symbol.<br>
s&nbsp;is&nbsp;a&nbsp;size&nbsp;argument&nbsp;in&nbsp;points&nbsp;squared.<br>
Any&nbsp;or&nbsp;all&nbsp;of&nbsp;x,&nbsp;y,&nbsp;s,&nbsp;and&nbsp;c&nbsp;may&nbsp;be&nbsp;masked&nbsp;arrays,&nbsp;in&nbsp;which<br>
case&nbsp;all&nbsp;masks&nbsp;will&nbsp;be&nbsp;combined&nbsp;and&nbsp;only&nbsp;unmasked&nbsp;points<br>
will&nbsp;be&nbsp;plotted.<br>
Other&nbsp;keyword&nbsp;args;&nbsp;the&nbsp;color&nbsp;mapping&nbsp;and&nbsp;normalization&nbsp;arguments&nbsp;will<br>
on&nbsp;be&nbsp;used&nbsp;if&nbsp;c&nbsp;is&nbsp;an&nbsp;array&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;*&nbsp;cmap&nbsp;=&nbsp;cm.jet&nbsp;:&nbsp;a&nbsp;colors.Colormap&nbsp;instance&nbsp;from&nbsp;matplotlib.cm.<br>
&nbsp;&nbsp;&nbsp;&nbsp;defaults&nbsp;to&nbsp;rc&nbsp;image.cmap<br>
&nbsp;&nbsp;*&nbsp;norm&nbsp;=&nbsp;Normalize()&nbsp;:&nbsp;matplotlib.colors.Normalize&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;used&nbsp;to&nbsp;scale&nbsp;luminance&nbsp;data&nbsp;to&nbsp;0,1.<br>
&nbsp;&nbsp;*&nbsp;vmin=None&nbsp;and&nbsp;vmax=None&nbsp;:&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;are&nbsp;used&nbsp;in&nbsp;conjunction<br>
&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;norm&nbsp;to&nbsp;normalize&nbsp;luminance&nbsp;data.&nbsp;&nbsp;If&nbsp;either&nbsp;are&nbsp;None,&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;min&nbsp;and&nbsp;max&nbsp;of&nbsp;the&nbsp;color&nbsp;array&nbsp;C&nbsp;is&nbsp;used.&nbsp;&nbsp;Note&nbsp;if&nbsp;you&nbsp;pass&nbsp;a&nbsp;norm<br>
&nbsp;&nbsp;&nbsp;&nbsp;instance,&nbsp;your&nbsp;settings&nbsp;for&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;will&nbsp;be&nbsp;ignored<br>
&nbsp;&nbsp;*&nbsp;alpha&nbsp;=1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;value&nbsp;for&nbsp;the&nbsp;patches<br>
&nbsp;&nbsp;*&nbsp;linewidths,&nbsp;if&nbsp;None,&nbsp;defaults&nbsp;to&nbsp;(lines.linewidth,).&nbsp;&nbsp;Note<br>
&nbsp;&nbsp;&nbsp;&nbsp;that&nbsp;this&nbsp;is&nbsp;a&nbsp;tuple,&nbsp;and&nbsp;if&nbsp;you&nbsp;set&nbsp;the&nbsp;linewidths<br>
&nbsp;&nbsp;&nbsp;&nbsp;argument&nbsp;you&nbsp;must&nbsp;set&nbsp;it&nbsp;as&nbsp;a&nbsp;sequence&nbsp;of&nbsp;floats,&nbsp;as<br>
&nbsp;&nbsp;&nbsp;&nbsp;required&nbsp;by&nbsp;RegularPolyCollection&nbsp;--&nbsp;see<br>
&nbsp;&nbsp;&nbsp;&nbsp;matplotlib.collections.RegularPolyCollection&nbsp;for&nbsp;details<br>
&nbsp;*&nbsp;faceted:&nbsp;if&nbsp;True,&nbsp;will&nbsp;use&nbsp;the&nbsp;default&nbsp;edgecolor&nbsp;for&nbsp;the<br>
&nbsp;&nbsp;&nbsp;markers.&nbsp;&nbsp;If&nbsp;False,&nbsp;will&nbsp;set&nbsp;the&nbsp;edgecolors&nbsp;to&nbsp;be&nbsp;the&nbsp;same<br>
&nbsp;&nbsp;&nbsp;as&nbsp;the&nbsp;facecolors<br>
&nbsp;&nbsp;&nbsp;Optional&nbsp;kwargs&nbsp;control&nbsp;the&nbsp;PatchCollection&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clim:&nbsp;a&nbsp;length&nbsp;2&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap:&nbsp;a&nbsp;colormap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colorbar:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-scatter_classic"><strong>scatter_classic</strong></a>(self, x, y, s<font color="#909090">=None</font>, c<font color="#909090">='b'</font>)</dt><dd><tt>scatter_classic&nbsp;is&nbsp;no&nbsp;longer&nbsp;available;&nbsp;please&nbsp;use&nbsp;scatter.<br>
To&nbsp;help&nbsp;in&nbsp;porting,&nbsp;for&nbsp;comparison&nbsp;to&nbsp;the&nbsp;scatter&nbsp;docstring,<br>
here&nbsp;is&nbsp;the&nbsp;scatter_classic&nbsp;docstring:<br>
&nbsp;<br>
SCATTER_CLASSIC(x,&nbsp;y,&nbsp;s=None,&nbsp;c='b')<br>
&nbsp;<br>
Make&nbsp;a&nbsp;scatter&nbsp;plot&nbsp;of&nbsp;x&nbsp;versus&nbsp;y.&nbsp;&nbsp;s&nbsp;is&nbsp;a&nbsp;size&nbsp;(in&nbsp;data&nbsp;coords)&nbsp;and<br>
can&nbsp;be&nbsp;either&nbsp;a&nbsp;scalar&nbsp;or&nbsp;an&nbsp;array&nbsp;of&nbsp;the&nbsp;same&nbsp;length&nbsp;as&nbsp;x&nbsp;or&nbsp;y.&nbsp;&nbsp;c&nbsp;is<br>
a&nbsp;color&nbsp;and&nbsp;can&nbsp;be&nbsp;a&nbsp;single&nbsp;color&nbsp;format&nbsp;string&nbsp;or&nbsp;an&nbsp;length(x)&nbsp;array<br>
of&nbsp;intensities&nbsp;which&nbsp;will&nbsp;be&nbsp;mapped&nbsp;by&nbsp;the&nbsp;colormap&nbsp;jet.<br>
&nbsp;<br>
If&nbsp;size&nbsp;is&nbsp;None&nbsp;a&nbsp;default&nbsp;size&nbsp;will&nbsp;be&nbsp;used</tt></dd></dl>

<dl><dt><a name="Axes-semilogx"><strong>semilogx</strong></a>(self, *args, **kwargs)</dt><dd><tt>SEMILOGX(*args,&nbsp;**kwargs)<br>
Make&nbsp;a&nbsp;semilog&nbsp;plot&nbsp;with&nbsp;log&nbsp;scaling&nbsp;on&nbsp;the&nbsp;x&nbsp;axis.&nbsp;&nbsp;The&nbsp;args&nbsp;to<br>
semilog&nbsp;x&nbsp;are&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;args&nbsp;to&nbsp;plot.&nbsp;&nbsp;See&nbsp;help&nbsp;plot&nbsp;for&nbsp;more<br>
info.<br>
Optional&nbsp;keyword&nbsp;args&nbsp;supported&nbsp;are&nbsp;any&nbsp;of&nbsp;the&nbsp;kwargs&nbsp;supported&nbsp;by<br>
plot&nbsp;or&nbsp;set_xscale.&nbsp;&nbsp;Notable,&nbsp;for&nbsp;log&nbsp;scaling:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;basex:&nbsp;base&nbsp;of&nbsp;the&nbsp;logarithm<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;subsx:&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;ticks;&nbsp;None&nbsp;defaults&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of&nbsp;decades&nbsp;in&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plot;&nbsp;see&nbsp;set_xscale&nbsp;for&nbsp;details<br>
The&nbsp;remaining&nbsp;valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-semilogy"><strong>semilogy</strong></a>(self, *args, **kwargs)</dt><dd><tt>SEMILOGY(*args,&nbsp;**kwargs):<br>
Make&nbsp;a&nbsp;semilog&nbsp;plot&nbsp;with&nbsp;log&nbsp;scaling&nbsp;on&nbsp;the&nbsp;y&nbsp;axis.&nbsp;&nbsp;The&nbsp;args&nbsp;to<br>
semilogy&nbsp;are&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;args&nbsp;to&nbsp;plot.&nbsp;&nbsp;See&nbsp;help&nbsp;plot&nbsp;for&nbsp;more<br>
info.<br>
Optional&nbsp;keyword&nbsp;args&nbsp;supported&nbsp;are&nbsp;any&nbsp;of&nbsp;the&nbsp;kwargs&nbsp;supported&nbsp;by<br>
plot&nbsp;or&nbsp;set_yscale.&nbsp;&nbsp;Notable,&nbsp;for&nbsp;log&nbsp;scaling:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;basey:&nbsp;base&nbsp;of&nbsp;the&nbsp;logarithm<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;subsy:&nbsp;a&nbsp;sequence&nbsp;of&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;ticks;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;None&nbsp;defaults&nbsp;to&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;decades&nbsp;in&nbsp;the&nbsp;plot;&nbsp;see&nbsp;set_yscale&nbsp;for&nbsp;details<br>
The&nbsp;remaining&nbsp;valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-set_adjustable"><strong>set_adjustable</strong></a>(self, adjustable)</dt><dd><tt>ACCEPTS:&nbsp;['box'&nbsp;|&nbsp;'datalim']</tt></dd></dl>

<dl><dt><a name="Axes-set_anchor"><strong>set_anchor</strong></a>(self, anchor)</dt><dd><tt>ACCEPTS:&nbsp;['C',&nbsp;'SW',&nbsp;'S',&nbsp;'SE',&nbsp;'E',&nbsp;'NE',&nbsp;'N',&nbsp;'NW',&nbsp;'W']</tt></dd></dl>

<dl><dt><a name="Axes-set_aspect"><strong>set_aspect</strong></a>(self, aspect, adjustable<font color="#909090">=None</font>, anchor<font color="#909090">=None</font>)</dt><dd><tt>aspect:<br>
&nbsp;&nbsp;&nbsp;'auto'&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;automatic;&nbsp;fill&nbsp;position&nbsp;rectangle&nbsp;with&nbsp;data<br>
&nbsp;&nbsp;&nbsp;'normal'&nbsp;-&nbsp;&nbsp;same&nbsp;as&nbsp;'auto';&nbsp;deprecated<br>
&nbsp;&nbsp;&nbsp;'equal'&nbsp;&nbsp;-&nbsp;&nbsp;same&nbsp;scaling&nbsp;from&nbsp;data&nbsp;to&nbsp;plot&nbsp;units&nbsp;for&nbsp;x&nbsp;and&nbsp;y<br>
&nbsp;&nbsp;&nbsp;&nbsp;num&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;a&nbsp;circle&nbsp;will&nbsp;be&nbsp;stretched&nbsp;such&nbsp;that&nbsp;the&nbsp;height<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;num&nbsp;times&nbsp;the&nbsp;width.&nbsp;aspect=1&nbsp;is&nbsp;the&nbsp;same&nbsp;as<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;aspect='equal'.<br>
&nbsp;<br>
adjustable:<br>
&nbsp;&nbsp;&nbsp;&nbsp;'box'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;change&nbsp;physical&nbsp;size&nbsp;of&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;'datalim'&nbsp;&nbsp;-&nbsp;change&nbsp;xlim&nbsp;or&nbsp;ylim<br>
&nbsp;<br>
anchor:<br>
&nbsp;&nbsp;&nbsp;&nbsp;'C'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;centered<br>
&nbsp;&nbsp;&nbsp;&nbsp;'SW'&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;lower&nbsp;left&nbsp;corner<br>
&nbsp;&nbsp;&nbsp;&nbsp;'S'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;middle&nbsp;of&nbsp;bottom&nbsp;edge<br>
&nbsp;&nbsp;&nbsp;&nbsp;'SE'&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;lower&nbsp;right&nbsp;corner<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;etc.<br>
&nbsp;<br>
ACCEPTS:&nbsp;['auto'&nbsp;|&nbsp;'equal'&nbsp;|&nbsp;aspect_ratio]</tt></dd></dl>

<dl><dt><a name="Axes-set_autoscale_on"><strong>set_autoscale_on</strong></a>(self, b)</dt><dd><tt>Set&nbsp;whether&nbsp;autoscaling&nbsp;is&nbsp;applied&nbsp;on&nbsp;plot&nbsp;commands<br>
&nbsp;<br>
ACCEPTS:&nbsp;True|False</tt></dd></dl>

<dl><dt><a name="Axes-set_axis_bgcolor"><strong>set_axis_bgcolor</strong></a>(self, color)</dt><dd><tt>set&nbsp;the&nbsp;axes&nbsp;background&nbsp;color<br>
&nbsp;<br>
ACCEPTS:&nbsp;any&nbsp;matplotlib&nbsp;color&nbsp;-&nbsp;see&nbsp;help(colors)</tt></dd></dl>

<dl><dt><a name="Axes-set_axis_off"><strong>set_axis_off</strong></a>(self)</dt><dd><tt>turn&nbsp;off&nbsp;the&nbsp;axis<br>
&nbsp;<br>
ACCEPTS:&nbsp;void</tt></dd></dl>

<dl><dt><a name="Axes-set_axis_on"><strong>set_axis_on</strong></a>(self)</dt><dd><tt>turn&nbsp;on&nbsp;the&nbsp;axis<br>
&nbsp;<br>
ACCEPTS:&nbsp;void</tt></dd></dl>

<dl><dt><a name="Axes-set_axisbelow"><strong>set_axisbelow</strong></a>(self, b)</dt><dd><tt>Set&nbsp;whether&nbsp;the&nbsp;axis&nbsp;ticks&nbsp;and&nbsp;gridlines&nbsp;are&nbsp;above&nbsp;or&nbsp;below&nbsp;most&nbsp;artists<br>
&nbsp;<br>
ACCEPTS:&nbsp;True|False</tt></dd></dl>

<dl><dt><a name="Axes-set_cursor_props"><strong>set_cursor_props</strong></a>(self, *args)</dt><dd><tt>Set&nbsp;the&nbsp;cursor&nbsp;property&nbsp;as<br>
ax.<a href="#Axes-set_cursor_props">set_cursor_props</a>(linewidth,&nbsp;color)&nbsp;&nbsp;OR<br>
ax.<a href="#Axes-set_cursor_props">set_cursor_props</a>((linewidth,&nbsp;color))<br>
&nbsp;<br>
ACCEPTS:&nbsp;a&nbsp;(float,&nbsp;color)&nbsp;tuple</tt></dd></dl>

<dl><dt><a name="Axes-set_figure"><strong>set_figure</strong></a>(self, fig)</dt><dd><tt>Set&nbsp;the&nbsp;<a href="#Axes">Axes</a>&nbsp;figure<br>
&nbsp;<br>
ACCEPTS:&nbsp;a&nbsp;Figure&nbsp;instance</tt></dd></dl>

<dl><dt><a name="Axes-set_frame_on"><strong>set_frame_on</strong></a>(self, b)</dt><dd><tt>Set&nbsp;whether&nbsp;the&nbsp;axes&nbsp;rectangle&nbsp;patch&nbsp;is&nbsp;drawn<br>
&nbsp;<br>
ACCEPTS:&nbsp;True|False</tt></dd></dl>

<dl><dt><a name="Axes-set_navigate"><strong>set_navigate</strong></a>(self, b)</dt><dd><tt>Set&nbsp;whether&nbsp;the&nbsp;axes&nbsp;responds&nbsp;to&nbsp;navigation&nbsp;toolbar&nbsp;commands<br>
&nbsp;<br>
ACCEPTS:&nbsp;True|False</tt></dd></dl>

<dl><dt><a name="Axes-set_navigate_mode"><strong>set_navigate_mode</strong></a>(self, b)</dt><dd><tt>Set&nbsp;the&nbsp;navigation&nbsp;toolbar&nbsp;button&nbsp;status;<br>
this&nbsp;is&nbsp;not&nbsp;a&nbsp;user-API&nbsp;function.</tt></dd></dl>

<dl><dt><a name="Axes-set_position"><strong>set_position</strong></a>(self, pos, which<font color="#909090">='both'</font>)</dt><dd><tt>Set&nbsp;the&nbsp;axes&nbsp;position&nbsp;with&nbsp;pos&nbsp;=&nbsp;[left,&nbsp;bottom,&nbsp;width,&nbsp;height]<br>
in&nbsp;relative&nbsp;0,1&nbsp;coords<br>
&nbsp;<br>
There&nbsp;are&nbsp;two&nbsp;position&nbsp;variables:&nbsp;one&nbsp;which&nbsp;is&nbsp;ultimately<br>
used,&nbsp;but&nbsp;which&nbsp;may&nbsp;be&nbsp;modified&nbsp;by&nbsp;apply_aspect,&nbsp;and&nbsp;a&nbsp;second<br>
which&nbsp;is&nbsp;the&nbsp;starting&nbsp;point&nbsp;for&nbsp;apply_aspect.<br>
&nbsp;<br>
which&nbsp;=&nbsp;'active'&nbsp;to&nbsp;change&nbsp;the&nbsp;first;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'original'&nbsp;to&nbsp;change&nbsp;the&nbsp;second;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'both'&nbsp;to&nbsp;change&nbsp;both<br>
&nbsp;<br>
ACCEPTS:&nbsp;len(4)&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="Axes-set_title"><strong>set_title</strong></a>(self, label, fontdict<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>SET_TITLE(label,&nbsp;fontdict=None,&nbsp;**kwargs):<br>
Set&nbsp;the&nbsp;title&nbsp;for&nbsp;the&nbsp;axes.&nbsp;&nbsp;See&nbsp;the&nbsp;text&nbsp;docstring&nbsp;for&nbsp;information<br>
of&nbsp;how&nbsp;override&nbsp;and&nbsp;the&nbsp;optional&nbsp;args&nbsp;work<br>
kwargs&nbsp;are&nbsp;Text&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
ACCEPTS:&nbsp;str</tt></dd></dl>

<dl><dt><a name="Axes-set_xlabel"><strong>set_xlabel</strong></a>(self, xlabel, fontdict<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>SET_XLABEL(xlabel,&nbsp;fontdict=None,&nbsp;**kwargs)<br>
Set&nbsp;the&nbsp;label&nbsp;for&nbsp;the&nbsp;xaxis.&nbsp;&nbsp;See&nbsp;the&nbsp;text&nbsp;docstring&nbsp;for&nbsp;information<br>
of&nbsp;how&nbsp;override&nbsp;and&nbsp;the&nbsp;optional&nbsp;args&nbsp;work.<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Text&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
ACCEPTS:&nbsp;str</tt></dd></dl>

<dl><dt><a name="Axes-set_xlim"><strong>set_xlim</strong></a>(self, xmin<font color="#909090">=None</font>, xmax<font color="#909090">=None</font>, emit<font color="#909090">=False</font>, **kwargs)</dt><dd><tt><a href="#Axes-set_xlim">set_xlim</a>(self,&nbsp;*args,&nbsp;**kwargs):<br>
&nbsp;<br>
Set&nbsp;the&nbsp;limits&nbsp;for&nbsp;the&nbsp;xaxis;&nbsp;v&nbsp;=&nbsp;[xmin,&nbsp;xmax]<br>
&nbsp;<br>
<a href="#Axes-set_xlim">set_xlim</a>((valmin,&nbsp;valmax))<br>
<a href="#Axes-set_xlim">set_xlim</a>(valmin,&nbsp;valmax)<br>
<a href="#Axes-set_xlim">set_xlim</a>(xmin=1)&nbsp;#&nbsp;xmax&nbsp;unchanged<br>
<a href="#Axes-set_xlim">set_xlim</a>(xmax=1)&nbsp;#&nbsp;xmin&nbsp;unchanged<br>
&nbsp;<br>
Valid&nbsp;kwargs:<br>
&nbsp;<br>
xmin&nbsp;:&nbsp;the&nbsp;min&nbsp;of&nbsp;the&nbsp;xlim<br>
xmax&nbsp;:&nbsp;the&nbsp;max&nbsp;of&nbsp;the&nbsp;xlim<br>
emit&nbsp;:&nbsp;notify&nbsp;observers&nbsp;of&nbsp;lim&nbsp;change<br>
&nbsp;<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;current&nbsp;xlimits&nbsp;as&nbsp;a&nbsp;length&nbsp;2&nbsp;tuple<br>
&nbsp;<br>
ACCEPTS:&nbsp;len(2)&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="Axes-set_xscale"><strong>set_xscale</strong></a>(self, value, basex<font color="#909090">=10</font>, subsx<font color="#909090">=None</font>)</dt><dd><tt>SET_XSCALE(value,&nbsp;basex=10,&nbsp;subsx=None)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;xscaling:&nbsp;'log'&nbsp;or&nbsp;'linear'<br>
&nbsp;<br>
If&nbsp;value&nbsp;is&nbsp;'log',&nbsp;the&nbsp;additional&nbsp;kwargs&nbsp;have&nbsp;the&nbsp;following&nbsp;meaning<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;basex:&nbsp;base&nbsp;of&nbsp;the&nbsp;logarithm<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;subsx:&nbsp;a&nbsp;sequence&nbsp;of&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;ticks;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;None&nbsp;defaults&nbsp;to&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;decades&nbsp;in&nbsp;the&nbsp;plot.&nbsp;&nbsp;Eg&nbsp;for&nbsp;base&nbsp;10,&nbsp;subsx=(1,2,5)&nbsp;will<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;put&nbsp;minor&nbsp;ticks&nbsp;on&nbsp;1,2,5,11,12,15,21,&nbsp;....To&nbsp;turn&nbsp;off<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minor&nbsp;ticking,&nbsp;set&nbsp;subsx=[]<br>
&nbsp;<br>
ACCEPTS:&nbsp;['log'&nbsp;|&nbsp;'linear'&nbsp;]</tt></dd></dl>

<dl><dt><a name="Axes-set_xticklabels"><strong>set_xticklabels</strong></a>(self, labels, fontdict<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>SET_XTICKLABELS(labels,&nbsp;fontdict=None,&nbsp;**kwargs)<br>
Set&nbsp;the&nbsp;xtick&nbsp;labels&nbsp;with&nbsp;list&nbsp;of&nbsp;strings&nbsp;labels&nbsp;Return&nbsp;a&nbsp;list&nbsp;of&nbsp;axis<br>
text&nbsp;instances.<br>
kwargs&nbsp;set&nbsp;the&nbsp;Text&nbsp;properties.&nbsp;&nbsp;Valid&nbsp;properties&nbsp;are<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
ACCEPTS:&nbsp;sequence&nbsp;of&nbsp;strings</tt></dd></dl>

<dl><dt><a name="Axes-set_xticks"><strong>set_xticks</strong></a>(self, ticks)</dt><dd><tt>Set&nbsp;the&nbsp;x&nbsp;ticks&nbsp;with&nbsp;list&nbsp;of&nbsp;ticks<br>
&nbsp;<br>
ACCEPTS:&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="Axes-set_ylabel"><strong>set_ylabel</strong></a>(self, ylabel, fontdict<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>SET_YLABEL(ylabel,&nbsp;fontdict=None,&nbsp;**kwargs)<br>
Set&nbsp;the&nbsp;label&nbsp;for&nbsp;the&nbsp;yaxis<br>
See&nbsp;the&nbsp;text&nbsp;doctstring&nbsp;for&nbsp;information&nbsp;of&nbsp;how&nbsp;override&nbsp;and<br>
the&nbsp;optional&nbsp;args&nbsp;work<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Text&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
ACCEPTS:&nbsp;str</tt></dd></dl>

<dl><dt><a name="Axes-set_ylim"><strong>set_ylim</strong></a>(self, ymin<font color="#909090">=None</font>, ymax<font color="#909090">=None</font>, emit<font color="#909090">=False</font>, **kwargs)</dt><dd><tt><a href="#Axes-set_ylim">set_ylim</a>(self,&nbsp;*args,&nbsp;**kwargs):<br>
&nbsp;<br>
Set&nbsp;the&nbsp;limits&nbsp;for&nbsp;the&nbsp;yaxis;&nbsp;v&nbsp;=&nbsp;[ymin,&nbsp;ymax]<br>
&nbsp;<br>
<a href="#Axes-set_ylim">set_ylim</a>((valmin,&nbsp;valmax))<br>
<a href="#Axes-set_ylim">set_ylim</a>(valmin,&nbsp;valmax)<br>
<a href="#Axes-set_ylim">set_ylim</a>(ymin=1)&nbsp;#&nbsp;ymax&nbsp;unchanged<br>
<a href="#Axes-set_ylim">set_ylim</a>(ymax=1)&nbsp;#&nbsp;ymin&nbsp;unchanged<br>
&nbsp;<br>
Valid&nbsp;kwargs:<br>
&nbsp;<br>
ymin&nbsp;:&nbsp;the&nbsp;min&nbsp;of&nbsp;the&nbsp;ylim<br>
ymax&nbsp;:&nbsp;the&nbsp;max&nbsp;of&nbsp;the&nbsp;ylim<br>
emit&nbsp;:&nbsp;notify&nbsp;observers&nbsp;of&nbsp;lim&nbsp;change<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;current&nbsp;ylimits&nbsp;as&nbsp;a&nbsp;length&nbsp;2&nbsp;tuple<br>
&nbsp;<br>
ACCEPTS:&nbsp;len(2)&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="Axes-set_yscale"><strong>set_yscale</strong></a>(self, value, basey<font color="#909090">=10</font>, subsy<font color="#909090">=None</font>)</dt><dd><tt>SET_YSCALE(value,&nbsp;basey=10,&nbsp;subsy=None)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;yscaling:&nbsp;'log'&nbsp;or&nbsp;'linear'<br>
&nbsp;<br>
If&nbsp;value&nbsp;is&nbsp;'log',&nbsp;the&nbsp;additional&nbsp;kwargs&nbsp;have&nbsp;the&nbsp;following&nbsp;meaning<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;basey:&nbsp;base&nbsp;of&nbsp;the&nbsp;logarithm<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;subsy:&nbsp;a&nbsp;sequence&nbsp;of&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;ticks;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;None&nbsp;defaults&nbsp;to&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;decades&nbsp;in&nbsp;the&nbsp;plot.&nbsp;&nbsp;Eg&nbsp;for&nbsp;base&nbsp;10,&nbsp;subsy=(1,2,5)&nbsp;will<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;put&nbsp;minor&nbsp;ticks&nbsp;on&nbsp;1,2,5,11,12,15,&nbsp;21,&nbsp;....To&nbsp;turn&nbsp;off<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minor&nbsp;ticking,&nbsp;set&nbsp;subsy=[]<br>
&nbsp;<br>
ACCEPTS:&nbsp;['log'&nbsp;|&nbsp;'linear']</tt></dd></dl>

<dl><dt><a name="Axes-set_yticklabels"><strong>set_yticklabels</strong></a>(self, labels, fontdict<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>SET_YTICKLABELS(labels,&nbsp;fontdict=None,&nbsp;**kwargs)<br>
Set&nbsp;the&nbsp;ytick&nbsp;labels&nbsp;with&nbsp;list&nbsp;of&nbsp;strings&nbsp;labels.&nbsp;&nbsp;Return&nbsp;a&nbsp;list&nbsp;of<br>
Text&nbsp;instances.<br>
kwargs&nbsp;set&nbsp;Text&nbsp;properties&nbsp;for&nbsp;the&nbsp;labels.&nbsp;&nbsp;Valid&nbsp;properties&nbsp;are<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
ACCEPTS:&nbsp;sequence&nbsp;of&nbsp;strings</tt></dd></dl>

<dl><dt><a name="Axes-set_yticks"><strong>set_yticks</strong></a>(self, ticks)</dt><dd><tt>Set&nbsp;the&nbsp;y&nbsp;ticks&nbsp;with&nbsp;list&nbsp;of&nbsp;ticks<br>
&nbsp;<br>
ACCEPTS:&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="Axes-specgram"><strong>specgram</strong></a>(self, x, NFFT<font color="#909090">=256</font>, Fs<font color="#909090">=2</font>, detrend<font color="#909090">=&lt;function detrend_none at 0x847d844&gt;</font>, window<font color="#909090">=&lt;function window_hanning at 0x847d72c&gt;</font>, noverlap<font color="#909090">=128</font>, cmap<font color="#909090">=None</font>, xextent<font color="#909090">=None</font>)</dt><dd><tt>SPECGRAM(x,&nbsp;NFFT=256,&nbsp;Fs=2,&nbsp;detrend=detrend_none,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window=window_hanning,&nbsp;noverlap=128,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap=None,&nbsp;xextent=None)<br>
&nbsp;<br>
Compute&nbsp;a&nbsp;spectrogram&nbsp;of&nbsp;data&nbsp;in&nbsp;x.&nbsp;&nbsp;Data&nbsp;are&nbsp;split&nbsp;into&nbsp;NFFT&nbsp;length<br>
segements&nbsp;and&nbsp;the&nbsp;PSD&nbsp;of&nbsp;each&nbsp;section&nbsp;is&nbsp;computed.&nbsp;&nbsp;The&nbsp;windowing<br>
function&nbsp;window&nbsp;is&nbsp;applied&nbsp;to&nbsp;each&nbsp;segment,&nbsp;and&nbsp;the&nbsp;amount&nbsp;of&nbsp;overlap<br>
of&nbsp;each&nbsp;segment&nbsp;is&nbsp;specified&nbsp;with&nbsp;noverlap.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;cmap&nbsp;is&nbsp;a&nbsp;colormap;&nbsp;if&nbsp;None&nbsp;use&nbsp;default&nbsp;determined&nbsp;by&nbsp;rc<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;xextent&nbsp;is&nbsp;the&nbsp;image&nbsp;extent&nbsp;in&nbsp;the&nbsp;xaxes&nbsp;xextent=xmin,&nbsp;xmax&nbsp;-<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;0,&nbsp;max(bins),&nbsp;0,&nbsp;max(freqs)&nbsp;where&nbsp;bins&nbsp;is&nbsp;the&nbsp;return<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value&nbsp;from&nbsp;matplotlib.matplotlib.mlab.specgram<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;See&nbsp;help(psd)&nbsp;for&nbsp;information&nbsp;on&nbsp;the&nbsp;other&nbsp;keyword&nbsp;arguments.<br>
&nbsp;<br>
Return&nbsp;value&nbsp;is&nbsp;(Pxx,&nbsp;freqs,&nbsp;bins,&nbsp;im),&nbsp;where<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;bins&nbsp;are&nbsp;the&nbsp;time&nbsp;points&nbsp;the&nbsp;spectrogram&nbsp;is&nbsp;calculated&nbsp;over<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;freqs&nbsp;is&nbsp;an&nbsp;array&nbsp;of&nbsp;frequencies<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Pxx&nbsp;is&nbsp;a&nbsp;len(times)&nbsp;x&nbsp;len(freqs)&nbsp;array&nbsp;of&nbsp;power<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;im&nbsp;is&nbsp;a&nbsp;matplotlib.image.AxesImage.<br>
&nbsp;<br>
Note:&nbsp;If&nbsp;x&nbsp;is&nbsp;real&nbsp;(i.e.&nbsp;non-complex)&nbsp;only&nbsp;the&nbsp;positive&nbsp;spectrum&nbsp;is<br>
shown.&nbsp;&nbsp;If&nbsp;x&nbsp;is&nbsp;complex&nbsp;both&nbsp;positive&nbsp;and&nbsp;negative&nbsp;parts&nbsp;of&nbsp;the<br>
spectrum&nbsp;are&nbsp;shown.</tt></dd></dl>

<dl><dt><a name="Axes-spy"><strong>spy</strong></a>(self, Z, precision<font color="#909090">=None</font>, marker<font color="#909090">=None</font>, markersize<font color="#909090">=None</font>, aspect<font color="#909090">='equal'</font>, **kwargs)</dt><dd><tt><a href="#Axes-spy">spy</a>(Z)&nbsp;plots&nbsp;the&nbsp;sparsity&nbsp;pattern&nbsp;of&nbsp;the&nbsp;2-D&nbsp;array&nbsp;Z<br>
&nbsp;<br>
If&nbsp;precision&nbsp;is&nbsp;None,&nbsp;any&nbsp;non-zero&nbsp;value&nbsp;will&nbsp;be&nbsp;plotted;<br>
else,&nbsp;values&nbsp;of&nbsp;absolute(Z)&gt;precision&nbsp;will&nbsp;be&nbsp;plotted.<br>
&nbsp;<br>
The&nbsp;array&nbsp;will&nbsp;be&nbsp;plotted&nbsp;as&nbsp;it&nbsp;would&nbsp;be&nbsp;printed,&nbsp;with<br>
the&nbsp;first&nbsp;index&nbsp;(row)&nbsp;increasing&nbsp;down&nbsp;and&nbsp;the&nbsp;second<br>
index&nbsp;(column)&nbsp;increasing&nbsp;to&nbsp;the&nbsp;right.<br>
&nbsp;<br>
By&nbsp;default&nbsp;aspect&nbsp;is&nbsp;'equal'&nbsp;so&nbsp;that&nbsp;each&nbsp;array&nbsp;element<br>
occupies&nbsp;a&nbsp;square&nbsp;space;&nbsp;set&nbsp;the&nbsp;aspect&nbsp;kwarg&nbsp;to&nbsp;'auto'<br>
to&nbsp;allow&nbsp;the&nbsp;plot&nbsp;to&nbsp;fill&nbsp;the&nbsp;plot&nbsp;box,&nbsp;or&nbsp;to&nbsp;any&nbsp;scalar<br>
number&nbsp;to&nbsp;specify&nbsp;the&nbsp;aspect&nbsp;ratio&nbsp;of&nbsp;an&nbsp;array&nbsp;element<br>
directly.<br>
&nbsp;<br>
Two&nbsp;plotting&nbsp;styles&nbsp;are&nbsp;available:&nbsp;image&nbsp;or&nbsp;marker.&nbsp;Both<br>
are&nbsp;available&nbsp;for&nbsp;full&nbsp;arrays,&nbsp;but&nbsp;only&nbsp;the&nbsp;marker&nbsp;style<br>
works&nbsp;for&nbsp;scipy.sparse.spmatrix&nbsp;instances.<br>
&nbsp;<br>
If&nbsp;marker&nbsp;and&nbsp;markersize&nbsp;are&nbsp;None,&nbsp;an&nbsp;image&nbsp;will&nbsp;be<br>
returned&nbsp;and&nbsp;any&nbsp;remaining&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;to&nbsp;imshow;<br>
else,&nbsp;a&nbsp;Line2D&nbsp;object&nbsp;will&nbsp;be&nbsp;returned&nbsp;with&nbsp;the&nbsp;value<br>
of&nbsp;marker&nbsp;determining&nbsp;the&nbsp;marker&nbsp;type,&nbsp;and&nbsp;any&nbsp;remaining<br>
kwargs&nbsp;passed&nbsp;to&nbsp;the&nbsp;axes&nbsp;plot&nbsp;method.<br>
&nbsp;<br>
If&nbsp;marker&nbsp;and&nbsp;markersize&nbsp;are&nbsp;None,&nbsp;useful&nbsp;kwargs&nbsp;include:<br>
&nbsp;&nbsp;&nbsp;&nbsp;cmap<br>
&nbsp;&nbsp;&nbsp;&nbsp;alpha<br>
See&nbsp;documentation&nbsp;for&nbsp;<a href="#Axes-imshow">imshow</a>()&nbsp;for&nbsp;details.<br>
For&nbsp;controlling&nbsp;colors,&nbsp;e.g.&nbsp;cyan&nbsp;background&nbsp;and&nbsp;red&nbsp;marks,&nbsp;use:<br>
&nbsp;&nbsp;&nbsp;&nbsp;cmap&nbsp;=&nbsp;matplotlib.colors.ListedColormap(['c','r'])<br>
&nbsp;<br>
If&nbsp;marker&nbsp;or&nbsp;markersize&nbsp;is&nbsp;not&nbsp;None,&nbsp;useful&nbsp;kwargs&nbsp;include:<br>
&nbsp;&nbsp;&nbsp;&nbsp;marker<br>
&nbsp;&nbsp;&nbsp;&nbsp;markersize<br>
&nbsp;&nbsp;&nbsp;&nbsp;color<br>
See&nbsp;documentation&nbsp;for&nbsp;<a href="#Axes-plot">plot</a>()&nbsp;for&nbsp;details.<br>
&nbsp;<br>
Useful&nbsp;values&nbsp;for&nbsp;marker&nbsp;include:<br>
&nbsp;&nbsp;&nbsp;&nbsp;'s'&nbsp;&nbsp;square&nbsp;(default)<br>
&nbsp;&nbsp;&nbsp;&nbsp;'o'&nbsp;&nbsp;circle<br>
&nbsp;&nbsp;&nbsp;&nbsp;'.'&nbsp;&nbsp;point<br>
&nbsp;&nbsp;&nbsp;&nbsp;','&nbsp;&nbsp;pixel</tt></dd></dl>

<dl><dt><a name="Axes-stem"><strong>stem</strong></a>(self, x, y, linefmt<font color="#909090">='b-'</font>, markerfmt<font color="#909090">='bo'</font>, basefmt<font color="#909090">='r-'</font>)</dt><dd><tt>STEM(x,&nbsp;y,&nbsp;linefmt='b-',&nbsp;markerfmt='bo',&nbsp;basefmt='r-')<br>
&nbsp;<br>
A&nbsp;stem&nbsp;plot&nbsp;plots&nbsp;vertical&nbsp;lines&nbsp;(using&nbsp;linefmt)&nbsp;at&nbsp;each&nbsp;x&nbsp;location<br>
from&nbsp;the&nbsp;baseline&nbsp;to&nbsp;y,&nbsp;and&nbsp;places&nbsp;a&nbsp;marker&nbsp;there&nbsp;using&nbsp;markerfmt.&nbsp;&nbsp;A<br>
horizontal&nbsp;line&nbsp;at&nbsp;0&nbsp;is&nbsp;is&nbsp;plotted&nbsp;using&nbsp;basefmt<br>
&nbsp;<br>
Return&nbsp;value&nbsp;is&nbsp;(markerline,&nbsp;stemlines,&nbsp;baseline)&nbsp;.<br>
&nbsp;<br>
See<br>
<a href="http://www.mathworks.com/access/helpdesk/help/techdoc/ref/stem.html">http://www.mathworks.com/access/helpdesk/help/techdoc/ref/stem.html</a><br>
for&nbsp;details&nbsp;and&nbsp;examples/stem_plot.py&nbsp;for&nbsp;a&nbsp;demo.</tt></dd></dl>

<dl><dt><a name="Axes-table"><strong>table</strong></a>(self, **kwargs)</dt><dd><tt>TABLE(cellText=None,&nbsp;cellColours=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cellLoc='right',&nbsp;colWidths=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rowLabels=None,&nbsp;rowColours=None,&nbsp;rowLoc='left',<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colLabels=None,&nbsp;colColours=None,&nbsp;colLoc='center',<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loc='bottom',&nbsp;bbox=None):<br>
Add&nbsp;a&nbsp;table&nbsp;to&nbsp;the&nbsp;current&nbsp;axes.&nbsp;&nbsp;Returns&nbsp;a&nbsp;table&nbsp;instance.&nbsp;&nbsp;For<br>
finer&nbsp;grained&nbsp;control&nbsp;over&nbsp;tables,&nbsp;use&nbsp;the&nbsp;Table&nbsp;class&nbsp;and&nbsp;add&nbsp;it<br>
to&nbsp;the&nbsp;axes&nbsp;with&nbsp;add_table.<br>
Thanks&nbsp;to&nbsp;John&nbsp;Gill&nbsp;for&nbsp;providing&nbsp;the&nbsp;class&nbsp;and&nbsp;table.<br>
kwargs&nbsp;control&nbsp;the&nbsp;Table&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontsize:&nbsp;a&nbsp;float&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-text"><strong>text</strong></a>(self, x, y, s, fontdict<font color="#909090">=None</font>, withdash<font color="#909090">=False</font>, **kwargs)</dt><dd><tt>TEXT(x,&nbsp;y,&nbsp;s,&nbsp;fontdict=None,&nbsp;**kwargs)<br>
Add&nbsp;text&nbsp;in&nbsp;string&nbsp;s&nbsp;to&nbsp;axis&nbsp;at&nbsp;location&nbsp;x,y&nbsp;(data&nbsp;coords)<br>
&nbsp;&nbsp;fontdict&nbsp;is&nbsp;a&nbsp;dictionary&nbsp;to&nbsp;override&nbsp;the&nbsp;default&nbsp;text&nbsp;properties.<br>
&nbsp;&nbsp;If&nbsp;fontdict&nbsp;is&nbsp;None,&nbsp;the&nbsp;defaults&nbsp;are&nbsp;determined&nbsp;by&nbsp;your&nbsp;rc<br>
&nbsp;&nbsp;parameters.<br>
&nbsp;&nbsp;withdash=True&nbsp;will&nbsp;create&nbsp;a&nbsp;TextWithDash&nbsp;instance&nbsp;instead<br>
&nbsp;&nbsp;of&nbsp;a&nbsp;Text&nbsp;instance.<br>
Individual&nbsp;keyword&nbsp;arguments&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;override&nbsp;any&nbsp;given<br>
parameter<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-text">text</a>(x,&nbsp;y,&nbsp;s,&nbsp;fontsize=12)<br>
The&nbsp;default&nbsp;transform&nbsp;specifies&nbsp;that&nbsp;text&nbsp;is&nbsp;in&nbsp;data&nbsp;coords,<br>
alternatively,&nbsp;you&nbsp;can&nbsp;specify&nbsp;text&nbsp;in&nbsp;axis&nbsp;coords&nbsp;(0,0&nbsp;lower&nbsp;left&nbsp;and<br>
1,1&nbsp;upper&nbsp;right).&nbsp;&nbsp;The&nbsp;example&nbsp;below&nbsp;places&nbsp;text&nbsp;in&nbsp;the&nbsp;center&nbsp;of&nbsp;the<br>
axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Axes-text">text</a>(0.5,&nbsp;0.5,'matplotlib',<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment='center',<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment='center',<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform&nbsp;=&nbsp;ax.transAxes,<br>
&nbsp;&nbsp;&nbsp;&nbsp;)<br>
You&nbsp;can&nbsp;put&nbsp;a&nbsp;rectangular&nbsp;box&nbsp;around&nbsp;the&nbsp;text&nbsp;instance&nbsp;(eg&nbsp;to<br>
set&nbsp;a&nbsp;background&nbsp;color)&nbsp;by&nbsp;using&nbsp;the&nbsp;keyword&nbsp;bbox.&nbsp;&nbsp;bbox&nbsp;is&nbsp;a<br>
dictionary&nbsp;of&nbsp;matplotlib.patches.Rectangle&nbsp;properties&nbsp;(see&nbsp;help<br>
for&nbsp;Rectangle&nbsp;for&nbsp;a&nbsp;list&nbsp;of&nbsp;these).&nbsp;&nbsp;For&nbsp;example<br>
&nbsp;<a href="#Axes-text">text</a>(x,&nbsp;y,&nbsp;s,&nbsp;bbox=dict(facecolor='red',&nbsp;alpha=0.5))<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Text&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-ticklabel_format"><strong>ticklabel_format</strong></a>(self, **kwargs)</dt><dd><tt>Convenience&nbsp;method&nbsp;for&nbsp;manipulating&nbsp;the&nbsp;ScalarFormatter<br>
used&nbsp;by&nbsp;default&nbsp;for&nbsp;linear&nbsp;axes.<br>
&nbsp;<br>
kwargs:<br>
&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;=&nbsp;'sci'&nbsp;(or&nbsp;'scientific')&nbsp;or&nbsp;'plain';<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plain&nbsp;turns&nbsp;off&nbsp;scientific&nbsp;notation<br>
&nbsp;&nbsp;&nbsp;&nbsp;axis&nbsp;=&nbsp;'x',&nbsp;'y',&nbsp;or&nbsp;'both'<br>
&nbsp;<br>
Only&nbsp;the&nbsp;major&nbsp;ticks&nbsp;are&nbsp;affected.<br>
If&nbsp;the&nbsp;method&nbsp;is&nbsp;called&nbsp;when&nbsp;the&nbsp;ScalarFormatter&nbsp;is&nbsp;not<br>
the&nbsp;one&nbsp;being&nbsp;used,&nbsp;an&nbsp;AttributeError&nbsp;will&nbsp;be&nbsp;raised&nbsp;with<br>
no&nbsp;additional&nbsp;error&nbsp;message.<br>
&nbsp;<br>
Additional&nbsp;capabilities&nbsp;and/or&nbsp;friendlier&nbsp;error&nbsp;checking&nbsp;may&nbsp;be&nbsp;added.</tt></dd></dl>

<dl><dt><a name="Axes-toggle_log_lineary"><strong>toggle_log_lineary</strong></a>(self)</dt><dd><tt>toggle&nbsp;between&nbsp;log&nbsp;and&nbsp;linear&nbsp;on&nbsp;the&nbsp;y&nbsp;axis</tt></dd></dl>

<dl><dt><a name="Axes-update_datalim"><strong>update_datalim</strong></a>(self, xys)</dt><dd><tt>Update&nbsp;the&nbsp;data&nbsp;lim&nbsp;bbox&nbsp;with&nbsp;seq&nbsp;of&nbsp;xy&nbsp;tups&nbsp;or&nbsp;equiv.&nbsp;2-D&nbsp;array</tt></dd></dl>

<dl><dt><a name="Axes-update_datalim_numerix"><strong>update_datalim_numerix</strong></a>(self, x, y)</dt><dd><tt>Update&nbsp;the&nbsp;data&nbsp;lim&nbsp;bbox&nbsp;with&nbsp;seq&nbsp;of&nbsp;xy&nbsp;tups</tt></dd></dl>

<dl><dt><a name="Axes-vlines"><strong>vlines</strong></a>(self, x, ymin, ymax, colors<font color="#909090">='k'</font>, linestyle<font color="#909090">='solid'</font>, label<font color="#909090">=''</font>, **kwargs)</dt><dd><tt>VLINES(x,&nbsp;ymin,&nbsp;ymax,&nbsp;color='k')<br>
Plot&nbsp;vertical&nbsp;lines&nbsp;at&nbsp;each&nbsp;x&nbsp;from&nbsp;ymin&nbsp;to&nbsp;ymax.&nbsp;&nbsp;ymin&nbsp;or&nbsp;ymax&nbsp;can&nbsp;be<br>
scalars&nbsp;or&nbsp;len(x)&nbsp;numpy&nbsp;arrays.&nbsp;&nbsp;If&nbsp;they&nbsp;are&nbsp;scalars,&nbsp;then&nbsp;the<br>
respective&nbsp;values&nbsp;are&nbsp;constant,&nbsp;else&nbsp;the&nbsp;heights&nbsp;of&nbsp;the&nbsp;lines&nbsp;are<br>
determined&nbsp;by&nbsp;ymin&nbsp;and&nbsp;ymax<br>
colors&nbsp;is&nbsp;a&nbsp;line&nbsp;collections&nbsp;color&nbsp;args,&nbsp;either&nbsp;a&nbsp;single&nbsp;color<br>
or&nbsp;a&nbsp;len(x)&nbsp;list&nbsp;of&nbsp;colors<br>
linestyle&nbsp;is&nbsp;one&nbsp;of&nbsp;solid|dashed|dashdot|dotted<br>
Returns&nbsp;the&nbsp;LineCollection&nbsp;that&nbsp;was&nbsp;added<br>
kwargs&nbsp;are&nbsp;LineCollection&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clim:&nbsp;a&nbsp;length&nbsp;2&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap:&nbsp;a&nbsp;colormap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colorbar:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle:&nbsp;['solid'&nbsp;|&nbsp;'dashed',&nbsp;'dashdot',&nbsp;'dotted'&nbsp;|&nbsp;&nbsp;(offset,&nbsp;on-off-dash-seq)&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;segments:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verts:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-xaxis_date"><strong>xaxis_date</strong></a>(self, tz<font color="#909090">=None</font>)</dt><dd><tt>Sets&nbsp;up&nbsp;x-axis&nbsp;ticks&nbsp;and&nbsp;labels&nbsp;that&nbsp;treat&nbsp;the&nbsp;x&nbsp;data&nbsp;as&nbsp;dates.<br>
&nbsp;<br>
tz&nbsp;is&nbsp;the&nbsp;time&nbsp;zone&nbsp;to&nbsp;use&nbsp;in&nbsp;labeling&nbsp;dates.&nbsp;&nbsp;Defaults&nbsp;to&nbsp;rc&nbsp;value.</tt></dd></dl>

<dl><dt><a name="Axes-xcorr"><strong>xcorr</strong></a>(self, x, y, normed<font color="#909090">=False</font>, detrend<font color="#909090">=&lt;function detrend_none at 0x847d844&gt;</font>, usevlines<font color="#909090">=False</font>, maxlags<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>XCORR(x,&nbsp;y,&nbsp;normed=False,&nbsp;detrend=detrend_none,&nbsp;usevlines=False,&nbsp;**kwargs):<br>
Plot&nbsp;the&nbsp;cross&nbsp;correlation&nbsp;between&nbsp;x&nbsp;and&nbsp;y.&nbsp;&nbsp;If&nbsp;normed=True,<br>
normalize&nbsp;the&nbsp;data&nbsp;but&nbsp;the&nbsp;cross&nbsp;correlation&nbsp;at&nbsp;0-th&nbsp;lag.&nbsp;&nbsp;x<br>
and&nbsp;y&nbsp;are&nbsp;detrended&nbsp;by&nbsp;the&nbsp;detrend&nbsp;callable&nbsp;(default&nbsp;no<br>
normalization.&nbsp;&nbsp;x&nbsp;and&nbsp;y&nbsp;must&nbsp;be&nbsp;equal&nbsp;length<br>
data&nbsp;are&nbsp;plotted&nbsp;as&nbsp;<a href="#Axes-plot">plot</a>(lags,&nbsp;c,&nbsp;**kwargs)<br>
return&nbsp;value&nbsp;is&nbsp;lags,&nbsp;c,&nbsp;line&nbsp;where&nbsp;lags&nbsp;are&nbsp;a&nbsp;length<br>
2*maxlags+1&nbsp;lag&nbsp;vector,&nbsp;c&nbsp;is&nbsp;the&nbsp;2*maxlags+1&nbsp;auto&nbsp;correlation<br>
vector,&nbsp;and&nbsp;line&nbsp;is&nbsp;a&nbsp;Line2D&nbsp;instance&nbsp;returned&nbsp;by&nbsp;plot.&nbsp;&nbsp;The<br>
default&nbsp;linestyle&nbsp;is&nbsp;None&nbsp;and&nbsp;the&nbsp;default&nbsp;marker&nbsp;is&nbsp;'o',<br>
though&nbsp;these&nbsp;can&nbsp;be&nbsp;overridden&nbsp;with&nbsp;keyword&nbsp;args.&nbsp;&nbsp;The&nbsp;cross<br>
correlation&nbsp;is&nbsp;performed&nbsp;with&nbsp;numerix&nbsp;cross_correlate&nbsp;with<br>
mode=2.<br>
If&nbsp;usevlines&nbsp;is&nbsp;True,&nbsp;<a href="#Axes">Axes</a>.vlines&nbsp;rather&nbsp;than&nbsp;<a href="#Axes">Axes</a>.plot&nbsp;is&nbsp;used<br>
to&nbsp;draw&nbsp;vertical&nbsp;lines&nbsp;from&nbsp;the&nbsp;origin&nbsp;to&nbsp;the&nbsp;acorr.<br>
Otherwise&nbsp;the&nbsp;plotstyle&nbsp;is&nbsp;determined&nbsp;by&nbsp;the&nbsp;kwargs,&nbsp;which&nbsp;are<br>
Line2D&nbsp;properties.&nbsp;&nbsp;If&nbsp;usevlines,&nbsp;the&nbsp;return&nbsp;value&nbsp;is&nbsp;lags,&nbsp;c,<br>
linecol,&nbsp;b&nbsp;where&nbsp;linecol&nbsp;is&nbsp;the&nbsp;LineCollection&nbsp;and&nbsp;b&nbsp;is&nbsp;the&nbsp;x-axis<br>
if&nbsp;usevlines=True,&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;onto&nbsp;<a href="#Axes">Axes</a>.vlines<br>
if&nbsp;usevlines=False,&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;onto&nbsp;<a href="#Axes">Axes</a>.plot<br>
maxlags&nbsp;is&nbsp;a&nbsp;positive&nbsp;integer&nbsp;detailing&nbsp;the&nbsp;number&nbsp;of&nbsp;lags&nbsp;to&nbsp;show.<br>
The&nbsp;default&nbsp;value&nbsp;of&nbsp;None&nbsp;will&nbsp;return&nbsp;all&nbsp;(2*len(x)-1)&nbsp;lags.<br>
See&nbsp;the&nbsp;respective&nbsp;function&nbsp;for&nbsp;documentation&nbsp;on&nbsp;valid&nbsp;kwargs</tt></dd></dl>

<dl><dt><a name="Axes-yaxis_date"><strong>yaxis_date</strong></a>(self, tz<font color="#909090">=None</font>)</dt><dd><tt>Sets&nbsp;up&nbsp;y-axis&nbsp;ticks&nbsp;and&nbsp;labels&nbsp;that&nbsp;treat&nbsp;the&nbsp;y&nbsp;data&nbsp;as&nbsp;dates.<br>
&nbsp;<br>
tz&nbsp;is&nbsp;the&nbsp;time&nbsp;zone&nbsp;to&nbsp;use&nbsp;in&nbsp;labeling&nbsp;dates.&nbsp;&nbsp;Defaults&nbsp;to&nbsp;rc&nbsp;value.</tt></dd></dl>

<dl><dt><a name="Axes-zoomx"><strong>zoomx</strong></a>(self, numsteps)</dt><dd><tt>Zoom&nbsp;in&nbsp;on&nbsp;the&nbsp;x&nbsp;xaxis&nbsp;numsteps&nbsp;(plus&nbsp;for&nbsp;zoom&nbsp;in,&nbsp;minus&nbsp;for&nbsp;zoom&nbsp;out)</tt></dd></dl>

<dl><dt><a name="Axes-zoomy"><strong>zoomy</strong></a>(self, numsteps)</dt><dd><tt>Zoom&nbsp;in&nbsp;on&nbsp;the&nbsp;x&nbsp;xaxis&nbsp;numsteps&nbsp;(plus&nbsp;for&nbsp;zoom&nbsp;in,&nbsp;minus&nbsp;for&nbsp;zoom&nbsp;out)</tt></dd></dl>

<hr>
Data and other attributes defined here:<br>
<dl><dt><strong>scaled</strong> = {0: 'linear', 1: 'log'}</dl>

<hr>
Methods inherited from <a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a>:<br>
<dl><dt><a name="Axes-add_callback"><strong>add_callback</strong></a>(self, func)</dt></dl>

<dl><dt><a name="Axes-convert_xunits"><strong>convert_xunits</strong></a>(self, x)</dt><dd><tt>for&nbsp;artists&nbsp;in&nbsp;an&nbsp;axes,&nbsp;if&nbsp;the&nbsp;xaxis&nbsp;as&nbsp;units&nbsp;support,<br>
convert&nbsp;x&nbsp;using&nbsp;xaxis&nbsp;unit&nbsp;type</tt></dd></dl>

<dl><dt><a name="Axes-convert_yunits"><strong>convert_yunits</strong></a>(self, y)</dt><dd><tt>for&nbsp;artists&nbsp;in&nbsp;an&nbsp;axes,&nbsp;if&nbsp;the&nbsp;yaxis&nbsp;as&nbsp;units&nbsp;support,<br>
convert&nbsp;y&nbsp;using&nbsp;yaxis&nbsp;unit&nbsp;type</tt></dd></dl>

<dl><dt><a name="Axes-get_alpha"><strong>get_alpha</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on&nbsp;all<br>
backends</tt></dd></dl>

<dl><dt><a name="Axes-get_animated"><strong>get_animated</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;artist's&nbsp;animated&nbsp;state</tt></dd></dl>

<dl><dt><a name="Axes-get_axes"><strong>get_axes</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;axes&nbsp;instance&nbsp;the&nbsp;artist&nbsp;resides&nbsp;in,&nbsp;or&nbsp;None</tt></dd></dl>

<dl><dt><a name="Axes-get_clip_box"><strong>get_clip_box</strong></a>(self)</dt><dd><tt>Return&nbsp;artist&nbsp;clipbox</tt></dd></dl>

<dl><dt><a name="Axes-get_clip_on"><strong>get_clip_on</strong></a>(self)</dt><dd><tt>Return&nbsp;whether&nbsp;artist&nbsp;uses&nbsp;clipping</tt></dd></dl>

<dl><dt><a name="Axes-get_clip_path"><strong>get_clip_path</strong></a>(self)</dt><dd><tt>Return&nbsp;artist&nbsp;clip&nbsp;path</tt></dd></dl>

<dl><dt><a name="Axes-get_figure"><strong>get_figure</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;figure&nbsp;instance</tt></dd></dl>

<dl><dt><a name="Axes-get_label"><strong>get_label</strong></a>(self)</dt></dl>

<dl><dt><a name="Axes-get_picker"><strong>get_picker</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;Pickeration&nbsp;instance&nbsp;used&nbsp;by&nbsp;this&nbsp;artist</tt></dd></dl>

<dl><dt><a name="Axes-get_transform"><strong>get_transform</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;Transformation&nbsp;instance&nbsp;used&nbsp;by&nbsp;this&nbsp;artist</tt></dd></dl>

<dl><dt><a name="Axes-get_visible"><strong>get_visible</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;artist's&nbsp;visiblity</tt></dd></dl>

<dl><dt><a name="Axes-get_zorder"><strong>get_zorder</strong></a>(self)</dt></dl>

<dl><dt><a name="Axes-have_units"><strong>have_units</strong></a>(self)</dt><dd><tt>return&nbsp;True&nbsp;if&nbsp;units&nbsp;are&nbsp;set&nbsp;on&nbsp;the&nbsp;x&nbsp;or&nbsp;y&nbsp;axes</tt></dd></dl>

<dl><dt><a name="Axes-is_figure_set"><strong>is_figure_set</strong></a>(self)</dt></dl>

<dl><dt><a name="Axes-is_transform_set"><strong>is_transform_set</strong></a>(self)</dt><dd><tt><a href="matplotlib.artist.html#Artist">Artist</a>&nbsp;has&nbsp;transform&nbsp;explicity&nbsp;let</tt></dd></dl>

<dl><dt><a name="Axes-pchanged"><strong>pchanged</strong></a>(self)</dt><dd><tt>fire&nbsp;event&nbsp;when&nbsp;property&nbsp;changed</tt></dd></dl>

<dl><dt><a name="Axes-pickable"><strong>pickable</strong></a>(self)</dt><dd><tt>return&nbsp;True&nbsp;if&nbsp;self&nbsp;is&nbsp;pickable</tt></dd></dl>

<dl><dt><a name="Axes-remove_callback"><strong>remove_callback</strong></a>(self, oid)</dt></dl>

<dl><dt><a name="Axes-set"><strong>set</strong></a>(self, **kwargs)</dt><dd><tt>A&nbsp;tkstyle&nbsp;set&nbsp;command,&nbsp;pass&nbsp;kwargs&nbsp;to&nbsp;set&nbsp;properties</tt></dd></dl>

<dl><dt><a name="Axes-set_alpha"><strong>set_alpha</strong></a>(self, alpha)</dt><dd><tt>Set&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on<br>
all&nbsp;backends<br>
&nbsp;<br>
ACCEPTS:&nbsp;float</tt></dd></dl>

<dl><dt><a name="Axes-set_animated"><strong>set_animated</strong></a>(self, b)</dt><dd><tt>set&nbsp;the&nbsp;artist's&nbsp;animation&nbsp;state<br>
&nbsp;<br>
ACCEPTS:&nbsp;[True&nbsp;|&nbsp;False]</tt></dd></dl>

<dl><dt><a name="Axes-set_axes"><strong>set_axes</strong></a>(self, axes)</dt><dd><tt>set&nbsp;the&nbsp;axes&nbsp;instance&nbsp;the&nbsp;artist&nbsp;resides&nbsp;in,&nbsp;if&nbsp;any<br>
&nbsp;<br>
ACCEPTS:&nbsp;an&nbsp;axes&nbsp;instance</tt></dd></dl>

<dl><dt><a name="Axes-set_clip_box"><strong>set_clip_box</strong></a>(self, clipbox)</dt><dd><tt>Set&nbsp;the&nbsp;artist's&nbsp;clip&nbsp;Bbox<br>
&nbsp;<br>
ACCEPTS:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance</tt></dd></dl>

<dl><dt><a name="Axes-set_clip_on"><strong>set_clip_on</strong></a>(self, b)</dt><dd><tt>Set&nbsp;&nbsp;whether&nbsp;artist&nbsp;uses&nbsp;clipping<br>
&nbsp;<br>
ACCEPTS:&nbsp;[True&nbsp;|&nbsp;False]</tt></dd></dl>

<dl><dt><a name="Axes-set_clip_path"><strong>set_clip_path</strong></a>(self, path)</dt><dd><tt>Set&nbsp;the&nbsp;artist's&nbsp;clip&nbsp;path<br>
&nbsp;<br>
ACCEPTS:&nbsp;an&nbsp;agg.path_storage&nbsp;instance</tt></dd></dl>

<dl><dt><a name="Axes-set_label"><strong>set_label</strong></a>(self, s)</dt><dd><tt>Set&nbsp;the&nbsp;line&nbsp;label&nbsp;to&nbsp;s&nbsp;for&nbsp;auto&nbsp;legend<br>
&nbsp;<br>
ACCEPTS:&nbsp;any&nbsp;string</tt></dd></dl>

<dl><dt><a name="Axes-set_lod"><strong>set_lod</strong></a>(self, on)</dt><dd><tt>Set&nbsp;Level&nbsp;of&nbsp;Detail&nbsp;on&nbsp;or&nbsp;off.&nbsp;&nbsp;If&nbsp;on,&nbsp;the&nbsp;artists&nbsp;may&nbsp;examine<br>
things&nbsp;like&nbsp;the&nbsp;pixel&nbsp;width&nbsp;of&nbsp;the&nbsp;axes&nbsp;and&nbsp;draw&nbsp;a&nbsp;subset&nbsp;of<br>
their&nbsp;contents&nbsp;accordingly<br>
&nbsp;<br>
ACCEPTS:&nbsp;[True&nbsp;|&nbsp;False]</tt></dd></dl>

<dl><dt><a name="Axes-set_picker"><strong>set_picker</strong></a>(self, picker)</dt><dd><tt>set&nbsp;the&nbsp;epsilon&nbsp;for&nbsp;picking&nbsp;used&nbsp;by&nbsp;this&nbsp;artist<br>
&nbsp;<br>
picker&nbsp;can&nbsp;be&nbsp;one&nbsp;of&nbsp;the&nbsp;following:<br>
&nbsp;<br>
&nbsp;&nbsp;None&nbsp;-&nbsp;&nbsp;picking&nbsp;is&nbsp;disabled&nbsp;for&nbsp;this&nbsp;artist&nbsp;(default)<br>
&nbsp;<br>
&nbsp;&nbsp;boolean&nbsp;-&nbsp;if&nbsp;True&nbsp;then&nbsp;picking&nbsp;will&nbsp;be&nbsp;enabled&nbsp;and&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;artist&nbsp;will&nbsp;fire&nbsp;a&nbsp;pick&nbsp;event&nbsp;if&nbsp;the&nbsp;mouse&nbsp;event&nbsp;is&nbsp;over<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;artist<br>
&nbsp;<br>
&nbsp;&nbsp;float&nbsp;-&nbsp;if&nbsp;picker&nbsp;is&nbsp;a&nbsp;number&nbsp;it&nbsp;is&nbsp;interpreted&nbsp;as&nbsp;an<br>
&nbsp;&nbsp;&nbsp;&nbsp;epsilon&nbsp;tolerance&nbsp;in&nbsp;points&nbsp;and&nbsp;the&nbsp;the&nbsp;artist&nbsp;will&nbsp;fire<br>
&nbsp;&nbsp;&nbsp;&nbsp;off&nbsp;an&nbsp;event&nbsp;if&nbsp;it's&nbsp;data&nbsp;is&nbsp;within&nbsp;epsilon&nbsp;of&nbsp;the&nbsp;mouse<br>
&nbsp;&nbsp;&nbsp;&nbsp;event.&nbsp;&nbsp;For&nbsp;some&nbsp;artists&nbsp;like&nbsp;lines&nbsp;and&nbsp;patch&nbsp;collections,<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;artist&nbsp;may&nbsp;provide&nbsp;additional&nbsp;data&nbsp;to&nbsp;the&nbsp;pick&nbsp;event<br>
&nbsp;&nbsp;&nbsp;&nbsp;that&nbsp;is&nbsp;generated,&nbsp;eg&nbsp;the&nbsp;indices&nbsp;of&nbsp;the&nbsp;data&nbsp;within<br>
&nbsp;&nbsp;&nbsp;&nbsp;epsilon&nbsp;of&nbsp;the&nbsp;pick&nbsp;event<br>
&nbsp;<br>
&nbsp;&nbsp;function&nbsp;-&nbsp;if&nbsp;picker&nbsp;is&nbsp;callable,&nbsp;it&nbsp;is&nbsp;a&nbsp;user&nbsp;supplied<br>
&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;which&nbsp;determines&nbsp;whether&nbsp;the&nbsp;artist&nbsp;is&nbsp;hit&nbsp;by&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;mouse&nbsp;event.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hit,&nbsp;props&nbsp;=&nbsp;picker(artist,&nbsp;mouseevent)<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;determine&nbsp;the&nbsp;hit&nbsp;test.&nbsp;&nbsp;if&nbsp;the&nbsp;mouse&nbsp;event&nbsp;is&nbsp;over&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;artist,&nbsp;return&nbsp;hit=True&nbsp;and&nbsp;props&nbsp;is&nbsp;a&nbsp;dictionary&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;properties&nbsp;you&nbsp;want&nbsp;added&nbsp;to&nbsp;the&nbsp;PickEvent&nbsp;attributes<br>
&nbsp;<br>
ACCEPTS:&nbsp;[None|float|boolean|callable]</tt></dd></dl>

<dl><dt><a name="Axes-set_transform"><strong>set_transform</strong></a>(self, t)</dt><dd><tt>set&nbsp;the&nbsp;Transformation&nbsp;instance&nbsp;used&nbsp;by&nbsp;this&nbsp;artist<br>
&nbsp;<br>
ACCEPTS:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance</tt></dd></dl>

<dl><dt><a name="Axes-set_visible"><strong>set_visible</strong></a>(self, b)</dt><dd><tt>set&nbsp;the&nbsp;artist's&nbsp;visiblity<br>
&nbsp;<br>
ACCEPTS:&nbsp;[True&nbsp;|&nbsp;False]</tt></dd></dl>

<dl><dt><a name="Axes-set_zorder"><strong>set_zorder</strong></a>(self, level)</dt><dd><tt>Set&nbsp;the&nbsp;zorder&nbsp;for&nbsp;the&nbsp;artist<br>
&nbsp;<br>
ACCEPTS:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Axes-update"><strong>update</strong></a>(self, props)</dt></dl>

<dl><dt><a name="Axes-update_from"><strong>update_from</strong></a>(self, other)</dt><dd><tt>copy&nbsp;properties&nbsp;from&nbsp;other&nbsp;to&nbsp;self</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a>:<br>
<dl><dt><strong>aname</strong> = 'Artist'</dl>

<dl><dt><strong>zorder</strong> = 0</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="PolarAxes">class <strong>PolarAxes</strong></a>(<a href="matplotlib.axes.html#Axes">Axes</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Make&nbsp;a&nbsp;<a href="#PolarAxes">PolarAxes</a>.&nbsp;&nbsp;The&nbsp;rectangular&nbsp;bounding&nbsp;box&nbsp;of&nbsp;the&nbsp;axes&nbsp;is&nbsp;given&nbsp;by<br>
&nbsp;<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;<a href="#PolarAxes">PolarAxes</a>(position=[left,&nbsp;bottom,&nbsp;width,&nbsp;height])<br>
&nbsp;<br>
where&nbsp;all&nbsp;the&nbsp;arguments&nbsp;are&nbsp;fractions&nbsp;in&nbsp;[0,1]&nbsp;which&nbsp;specify&nbsp;the<br>
fraction&nbsp;of&nbsp;the&nbsp;total&nbsp;figure&nbsp;window.<br>
&nbsp;<br>
axisbg&nbsp;is&nbsp;the&nbsp;color&nbsp;of&nbsp;the&nbsp;axis&nbsp;background<br>
&nbsp;<br>
Attributes:<br>
&nbsp;&nbsp;thetagridlines&nbsp;&nbsp;:&nbsp;a&nbsp;list&nbsp;of&nbsp;Line2D&nbsp;for&nbsp;the&nbsp;theta&nbsp;grids<br>
&nbsp;&nbsp;rgridlines&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;a&nbsp;list&nbsp;of&nbsp;Line2D&nbsp;for&nbsp;the&nbsp;radial&nbsp;grids<br>
&nbsp;&nbsp;thetagridlabels&nbsp;:&nbsp;a&nbsp;list&nbsp;of&nbsp;Text&nbsp;for&nbsp;the&nbsp;theta&nbsp;grid&nbsp;labels<br>
&nbsp;&nbsp;rgridlabels&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;a&nbsp;list&nbsp;of&nbsp;Text&nbsp;for&nbsp;the&nbsp;theta&nbsp;grid&nbsp;labels<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.axes.html#PolarAxes">PolarAxes</a></dd>
<dd><a href="matplotlib.axes.html#Axes">Axes</a></dd>
<dd><a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="PolarAxes-__init__"><strong>__init__</strong></a>(self, *args, **kwarg)</dt><dd><tt>See&nbsp;<a href="#Axes">Axes</a>&nbsp;base&nbsp;class&nbsp;for&nbsp;args&nbsp;and&nbsp;kwargs&nbsp;documentation</tt></dd></dl>

<dl><dt><a name="PolarAxes-autoscale_view"><strong>autoscale_view</strong></a>(self, scalex<font color="#909090">=True</font>, scaley<font color="#909090">=True</font>)</dt><dd><tt>set&nbsp;the&nbsp;view&nbsp;limits&nbsp;to&nbsp;include&nbsp;all&nbsp;the&nbsp;data&nbsp;in&nbsp;the&nbsp;axes</tt></dd></dl>

<dl><dt><a name="PolarAxes-cla"><strong>cla</strong></a>(self)</dt><dd><tt>Clear&nbsp;the&nbsp;current&nbsp;axes</tt></dd></dl>

<dl><dt><a name="PolarAxes-draw"><strong>draw</strong></a>(self, renderer)</dt></dl>

<dl><dt><a name="PolarAxes-format_coord"><strong>format_coord</strong></a>(self, theta, r)</dt><dd><tt>return&nbsp;a&nbsp;format&nbsp;string&nbsp;formatting&nbsp;the&nbsp;coordinate</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_children"><strong>get_children</strong></a>(self)</dt><dd><tt>return&nbsp;a&nbsp;list&nbsp;of&nbsp;child&nbsp;artists</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_rmax"><strong>get_rmax</strong></a>(self)</dt><dd><tt>get&nbsp;the&nbsp;maximum&nbsp;radius&nbsp;in&nbsp;the&nbsp;view&nbsp;limits&nbsp;dimension</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_xscale"><strong>get_xscale</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;xaxis&nbsp;scale&nbsp;string</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_yscale"><strong>get_yscale</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;yaxis&nbsp;scale&nbsp;string</tt></dd></dl>

<dl><dt><a name="PolarAxes-grid"><strong>grid</strong></a>(self, b)</dt><dd><tt>Set&nbsp;the&nbsp;axes&nbsp;grids&nbsp;on&nbsp;or&nbsp;off;&nbsp;b&nbsp;is&nbsp;a&nbsp;boolean</tt></dd></dl>

<dl><dt><a name="PolarAxes-has_data"><strong>has_data</strong></a>(self)</dt><dd><tt>return&nbsp;true&nbsp;if&nbsp;any&nbsp;artists&nbsp;have&nbsp;been&nbsp;added&nbsp;to&nbsp;axes</tt></dd></dl>

<dl><dt><a name="PolarAxes-regrid"><strong>regrid</strong></a>(self, rmax)</dt></dl>

<dl><dt><a name="PolarAxes-set_rgrids"><strong>set_rgrids</strong></a>(self, radii, labels<font color="#909090">=None</font>, angle<font color="#909090">=22.5</font>, rpad<font color="#909090">=0.050000000000000003</font>, **kwargs)</dt><dd><tt>set&nbsp;the&nbsp;radial&nbsp;locations&nbsp;and&nbsp;labels&nbsp;of&nbsp;the&nbsp;r&nbsp;grids<br>
The&nbsp;labels&nbsp;will&nbsp;appear&nbsp;at&nbsp;radial&nbsp;distances&nbsp;radii&nbsp;at&nbsp;angle<br>
labels,&nbsp;if&nbsp;not&nbsp;None,&nbsp;is&nbsp;a&nbsp;len(radii)&nbsp;list&nbsp;of&nbsp;strings&nbsp;of&nbsp;the<br>
labels&nbsp;to&nbsp;use&nbsp;at&nbsp;each&nbsp;angle.<br>
if&nbsp;labels&nbsp;is&nbsp;None,&nbsp;the&nbsp;self.<strong>rformatter</strong>&nbsp;will&nbsp;be&nbsp;used<br>
rpad&nbsp;is&nbsp;a&nbsp;fraction&nbsp;of&nbsp;the&nbsp;max&nbsp;of&nbsp;radii&nbsp;which&nbsp;will&nbsp;pad&nbsp;each&nbsp;of<br>
the&nbsp;radial&nbsp;labels&nbsp;in&nbsp;the&nbsp;radial&nbsp;direction.<br>
&nbsp;<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;lines,&nbsp;labels&nbsp;where&nbsp;the&nbsp;lines&nbsp;are<br>
matplotlib.Line2D&nbsp;instances&nbsp;and&nbsp;the&nbsp;labels&nbsp;are&nbsp;matplotlib.Text<br>
instances<br>
kwargs&nbsp;control&nbsp;the&nbsp;rgrid&nbsp;Text&nbsp;label&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
ACCEPTS:&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_rmax"><strong>set_rmax</strong></a>(self, rmax)</dt></dl>

<dl><dt><a name="PolarAxes-set_thetagrids"><strong>set_thetagrids</strong></a>(self, angles, labels<font color="#909090">=None</font>, fmt<font color="#909090">='%d'</font>, frac<font color="#909090">=1.1000000000000001</font>, **kwargs)</dt><dd><tt>set&nbsp;the&nbsp;angles&nbsp;at&nbsp;which&nbsp;to&nbsp;place&nbsp;the&nbsp;theta&nbsp;grids&nbsp;(these<br>
gridlines&nbsp;are&nbsp;equal&nbsp;along&nbsp;the&nbsp;theta&nbsp;dimension).&nbsp;&nbsp;angles&nbsp;is&nbsp;in<br>
degrees<br>
labels,&nbsp;if&nbsp;not&nbsp;None,&nbsp;is&nbsp;a&nbsp;len(angles)&nbsp;list&nbsp;of&nbsp;strings&nbsp;of&nbsp;the<br>
labels&nbsp;to&nbsp;use&nbsp;at&nbsp;each&nbsp;angle.<br>
if&nbsp;labels&nbsp;is&nbsp;None,&nbsp;the&nbsp;labels&nbsp;with&nbsp;be&nbsp;fmt%angle<br>
frac&nbsp;is&nbsp;the&nbsp;fraction&nbsp;of&nbsp;the&nbsp;polar&nbsp;axes&nbsp;radius&nbsp;at&nbsp;which&nbsp;to<br>
place&nbsp;the&nbsp;label&nbsp;(1&nbsp;is&nbsp;the&nbsp;edge).Eg&nbsp;1.05&nbsp;isd&nbsp;outside&nbsp;the&nbsp;axes<br>
and&nbsp;0.95&nbsp;is&nbsp;inside&nbsp;the&nbsp;axes<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;lines,&nbsp;labels&nbsp;where&nbsp;the&nbsp;lines&nbsp;are<br>
matplotlib.Line2D&nbsp;instances&nbsp;and&nbsp;the&nbsp;labels&nbsp;are&nbsp;matplotlib.Text<br>
instances:<br>
kwargs&nbsp;are&nbsp;optional&nbsp;text&nbsp;properties&nbsp;for&nbsp;the&nbsp;labels<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
ACCEPTS:&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_xlabel"><strong>set_xlabel</strong></a>(self, xlabel, fontdict<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>xlabel&nbsp;not&nbsp;implemented</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_xlim"><strong>set_xlim</strong></a>(self, xmin<font color="#909090">=None</font>, xmax<font color="#909090">=None</font>, emit<font color="#909090">=True</font>)</dt><dd><tt>set&nbsp;the&nbsp;xlimits<br>
ACCEPTS:&nbsp;len(2)&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_ylabel"><strong>set_ylabel</strong></a>(self, ylabel, fontdict<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>ylabel&nbsp;not&nbsp;implemented</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_ylim"><strong>set_ylim</strong></a>(self, ymin<font color="#909090">=None</font>, ymax<font color="#909090">=None</font>, emit<font color="#909090">=True</font>)</dt><dd><tt>set&nbsp;the&nbsp;ylimits<br>
ACCEPTS:&nbsp;len(2)&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="PolarAxes-table"><strong>table</strong></a>(self, *args, **kwargs)</dt><dd><tt>TABLE(*args,&nbsp;**kwargs)<br>
Not&nbsp;implemented&nbsp;for&nbsp;polar&nbsp;axes</tt></dd></dl>

<dl><dt><a name="PolarAxes-toggle_log_lineary"><strong>toggle_log_lineary</strong></a>(self)</dt><dd><tt>toggle&nbsp;between&nbsp;log&nbsp;and&nbsp;linear&nbsp;axes&nbsp;ignored&nbsp;for&nbsp;polar</tt></dd></dl>

<hr>
Data and other attributes defined here:<br>
<dl><dt><strong>RESOLUTION</strong> = 100</dl>

<hr>
Methods inherited from <a href="matplotlib.axes.html#Axes">Axes</a>:<br>
<dl><dt><a name="PolarAxes-acorr"><strong>acorr</strong></a>(self, x, **kwargs)</dt><dd><tt>ACORR(x,&nbsp;normed=False,&nbsp;detrend=detrend_none,&nbsp;usevlines=False,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maxlags=None,&nbsp;**kwargs)<br>
Plot&nbsp;the&nbsp;autocorrelation&nbsp;of&nbsp;x.&nbsp;&nbsp;If&nbsp;normed=True,&nbsp;normalize&nbsp;the<br>
data&nbsp;but&nbsp;the&nbsp;autocorrelation&nbsp;at&nbsp;0-th&nbsp;lag.&nbsp;&nbsp;x&nbsp;is&nbsp;detrended&nbsp;by<br>
the&nbsp;detrend&nbsp;callable&nbsp;(default&nbsp;no&nbsp;normalization.<br>
data&nbsp;are&nbsp;plotted&nbsp;as&nbsp;<a href="#PolarAxes-plot">plot</a>(lags,&nbsp;c,&nbsp;**kwargs)<br>
return&nbsp;value&nbsp;is&nbsp;lags,&nbsp;c,&nbsp;line&nbsp;where&nbsp;lags&nbsp;are&nbsp;a&nbsp;length<br>
2*maxlags+1&nbsp;lag&nbsp;vector,&nbsp;c&nbsp;is&nbsp;the&nbsp;2*maxlags+1&nbsp;auto&nbsp;correlation<br>
vector,&nbsp;and&nbsp;line&nbsp;is&nbsp;a&nbsp;Line2D&nbsp;instance&nbsp;returned&nbsp;by&nbsp;plot.&nbsp;&nbsp;The<br>
default&nbsp;linestyle&nbsp;is&nbsp;None&nbsp;and&nbsp;the&nbsp;default&nbsp;marker&nbsp;is&nbsp;'o',<br>
though&nbsp;these&nbsp;can&nbsp;be&nbsp;overridden&nbsp;with&nbsp;keyword&nbsp;args.&nbsp;&nbsp;The&nbsp;cross<br>
correlation&nbsp;is&nbsp;performed&nbsp;with&nbsp;numerix&nbsp;cross_correlate&nbsp;with<br>
mode=2.<br>
If&nbsp;usevlines&nbsp;is&nbsp;True,&nbsp;<a href="#Axes">Axes</a>.vlines&nbsp;rather&nbsp;than&nbsp;<a href="#Axes">Axes</a>.plot&nbsp;is&nbsp;used<br>
to&nbsp;draw&nbsp;vertical&nbsp;lines&nbsp;from&nbsp;the&nbsp;origin&nbsp;to&nbsp;the&nbsp;acorr.<br>
Otherwise&nbsp;the&nbsp;plotstyle&nbsp;is&nbsp;determined&nbsp;by&nbsp;the&nbsp;kwargs,&nbsp;which&nbsp;are<br>
Line2D&nbsp;properties.&nbsp;&nbsp;If&nbsp;usevlines,&nbsp;the&nbsp;return&nbsp;value&nbsp;is&nbsp;lags,&nbsp;c,<br>
linecol,&nbsp;b&nbsp;where&nbsp;linecol&nbsp;is&nbsp;the&nbsp;LineCollection&nbsp;and&nbsp;b&nbsp;is&nbsp;the&nbsp;x-axis<br>
if&nbsp;usevlines=True,&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;onto&nbsp;<a href="#Axes">Axes</a>.vlines<br>
if&nbsp;usevlines=False,&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;onto&nbsp;<a href="#Axes">Axes</a>.plot<br>
maxlags&nbsp;is&nbsp;a&nbsp;positive&nbsp;integer&nbsp;detailing&nbsp;the&nbsp;number&nbsp;of&nbsp;lags&nbsp;to&nbsp;show.<br>
The&nbsp;default&nbsp;value&nbsp;of&nbsp;None&nbsp;will&nbsp;return&nbsp;all&nbsp;(2*len(x)-1)&nbsp;lags.<br>
See&nbsp;the&nbsp;respective&nbsp;function&nbsp;for&nbsp;documentation&nbsp;on&nbsp;valid&nbsp;kwargs</tt></dd></dl>

<dl><dt><a name="PolarAxes-add_artist"><strong>add_artist</strong></a>(self, a)</dt><dd><tt>Add&nbsp;any&nbsp;artist&nbsp;to&nbsp;the&nbsp;axes</tt></dd></dl>

<dl><dt><a name="PolarAxes-add_collection"><strong>add_collection</strong></a>(self, collection, autolim<font color="#909090">=False</font>)</dt><dd><tt>add&nbsp;a&nbsp;Collection&nbsp;instance&nbsp;to&nbsp;<a href="#Axes">Axes</a></tt></dd></dl>

<dl><dt><a name="PolarAxes-add_line"><strong>add_line</strong></a>(self, line)</dt><dd><tt>Add&nbsp;a&nbsp;line&nbsp;to&nbsp;the&nbsp;list&nbsp;of&nbsp;plot&nbsp;lines</tt></dd></dl>

<dl><dt><a name="PolarAxes-add_patch"><strong>add_patch</strong></a>(self, p)</dt><dd><tt>Add&nbsp;a&nbsp;patch&nbsp;to&nbsp;the&nbsp;list&nbsp;of&nbsp;<a href="#Axes">Axes</a>&nbsp;patches;&nbsp;the&nbsp;clipbox&nbsp;will&nbsp;be<br>
set&nbsp;to&nbsp;the&nbsp;<a href="#Axes">Axes</a>&nbsp;clipping&nbsp;box.&nbsp;&nbsp;If&nbsp;the&nbsp;transform&nbsp;is&nbsp;not&nbsp;set,&nbsp;it<br>
wil&nbsp;be&nbsp;set&nbsp;to&nbsp;self.<strong>transData</strong>.</tt></dd></dl>

<dl><dt><a name="PolarAxes-add_table"><strong>add_table</strong></a>(self, tab)</dt><dd><tt>Add&nbsp;a&nbsp;table&nbsp;instance&nbsp;to&nbsp;the&nbsp;list&nbsp;of&nbsp;axes&nbsp;tables</tt></dd></dl>

<dl><dt><a name="PolarAxes-annotate"><strong>annotate</strong></a>(self, *args, **kwargs)</dt><dd><tt><a href="#PolarAxes-annotate">annotate</a>(self,&nbsp;s,&nbsp;xyloc,&nbsp;textloc,<br>
&nbsp;xycoords='data',&nbsp;textcoords='data',<br>
&nbsp;lineprops=None,<br>
&nbsp;markerprops=None<br>
&nbsp;**props)<br>
alpha:&nbsp;float<br>
animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
label:&nbsp;any&nbsp;string<br>
lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
picker:&nbsp;[None|float|boolean|callable]<br>
position:&nbsp;(x,y)<br>
rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
x:&nbsp;float<br>
y:&nbsp;float<br>
zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarAxes-apply_aspect"><strong>apply_aspect</strong></a>(self, data_ratio<font color="#909090">=None</font>)</dt><dd><tt>Use&nbsp;self.<strong>_aspect</strong>&nbsp;and&nbsp;self.<strong>_adjustable</strong>&nbsp;to&nbsp;modify&nbsp;the<br>
axes&nbsp;box&nbsp;or&nbsp;the&nbsp;view&nbsp;limits.<br>
The&nbsp;data_ratio&nbsp;kwarg&nbsp;is&nbsp;set&nbsp;to&nbsp;1&nbsp;for&nbsp;polar&nbsp;axes.&nbsp;&nbsp;It&nbsp;is<br>
used&nbsp;only&nbsp;when&nbsp;_adjustable&nbsp;is&nbsp;'box'.</tt></dd></dl>

<dl><dt><a name="PolarAxes-arrow"><strong>arrow</strong></a>(self, x, y, dx, dy, **kwargs)</dt><dd><tt>Draws&nbsp;arrow&nbsp;on&nbsp;specified&nbsp;axis&nbsp;from&nbsp;(x,y)&nbsp;to&nbsp;(x+dx,y+dy).<br>
Optional&nbsp;kwargs&nbsp;control&nbsp;the&nbsp;arrow&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarAxes-axhline"><strong>axhline</strong></a>(self, y<font color="#909090">=0</font>, xmin<font color="#909090">=0</font>, xmax<font color="#909090">=1</font>, **kwargs)</dt><dd><tt>AXHLINE(y=0,&nbsp;xmin=0,&nbsp;xmax=1,&nbsp;**kwargs)<br>
Axis&nbsp;Horizontal&nbsp;Line<br>
Draw&nbsp;a&nbsp;horizontal&nbsp;line&nbsp;at&nbsp;y&nbsp;from&nbsp;xmin&nbsp;to&nbsp;xmax.&nbsp;&nbsp;With&nbsp;the&nbsp;default<br>
values&nbsp;of&nbsp;xmin=0&nbsp;and&nbsp;xmax=1,&nbsp;this&nbsp;line&nbsp;will&nbsp;always&nbsp;span&nbsp;the&nbsp;horizontal<br>
extent&nbsp;of&nbsp;the&nbsp;axes,&nbsp;regardless&nbsp;of&nbsp;the&nbsp;xlim&nbsp;settings,&nbsp;even&nbsp;if&nbsp;you<br>
change&nbsp;them,&nbsp;eg&nbsp;with&nbsp;the&nbsp;xlim&nbsp;command.&nbsp;&nbsp;That&nbsp;is,&nbsp;the&nbsp;horizontal&nbsp;extent<br>
is&nbsp;in&nbsp;axes&nbsp;coords:&nbsp;0=left,&nbsp;0.5=middle,&nbsp;1.0=right&nbsp;but&nbsp;the&nbsp;y&nbsp;location&nbsp;is<br>
in&nbsp;data&nbsp;coordinates.<br>
Return&nbsp;value&nbsp;is&nbsp;the&nbsp;Line2D&nbsp;instance.&nbsp;&nbsp;kwargs&nbsp;are&nbsp;the&nbsp;same&nbsp;as&nbsp;kwargs&nbsp;to<br>
plot,&nbsp;and&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;control&nbsp;the&nbsp;line&nbsp;properties.&nbsp;&nbsp;Eg<br>
&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;thick&nbsp;red&nbsp;hline&nbsp;at&nbsp;y=0&nbsp;that&nbsp;spans&nbsp;the&nbsp;xrange<br>
&nbsp;&nbsp;<a href="#PolarAxes-axhline">axhline</a>(linewidth=4,&nbsp;color='r')<br>
&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;default&nbsp;hline&nbsp;at&nbsp;y=1&nbsp;that&nbsp;spans&nbsp;the&nbsp;xrange<br>
&nbsp;&nbsp;<a href="#PolarAxes-axhline">axhline</a>(y=1)<br>
&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;default&nbsp;hline&nbsp;at&nbsp;y=.5&nbsp;that&nbsp;spans&nbsp;the&nbsp;the&nbsp;middle&nbsp;half&nbsp;of<br>
&nbsp;&nbsp;#&nbsp;the&nbsp;xrange<br>
&nbsp;&nbsp;<a href="#PolarAxes-axhline">axhline</a>(y=.5,&nbsp;xmin=0.25,&nbsp;xmax=0.75)<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarAxes-axhspan"><strong>axhspan</strong></a>(self, ymin, ymax, xmin<font color="#909090">=0</font>, xmax<font color="#909090">=1</font>, **kwargs)</dt><dd><tt>AXHSPAN(ymin,&nbsp;ymax,&nbsp;xmin=0,&nbsp;xmax=1,&nbsp;**kwargs)<br>
Axis&nbsp;Horizontal&nbsp;Span.&nbsp;&nbsp;ycoords&nbsp;are&nbsp;in&nbsp;data&nbsp;units&nbsp;and&nbsp;x<br>
coords&nbsp;are&nbsp;in&nbsp;axes&nbsp;(relative&nbsp;0-1)&nbsp;units<br>
Draw&nbsp;a&nbsp;horizontal&nbsp;span&nbsp;(regtangle)&nbsp;from&nbsp;ymin&nbsp;to&nbsp;ymax.&nbsp;&nbsp;With&nbsp;the<br>
default&nbsp;values&nbsp;of&nbsp;xmin=0&nbsp;and&nbsp;xmax=1,&nbsp;this&nbsp;always&nbsp;span&nbsp;the&nbsp;xrange,<br>
regardless&nbsp;of&nbsp;the&nbsp;xlim&nbsp;settings,&nbsp;even&nbsp;if&nbsp;you&nbsp;change&nbsp;them,&nbsp;eg&nbsp;with&nbsp;the<br>
xlim&nbsp;command.&nbsp;&nbsp;That&nbsp;is,&nbsp;the&nbsp;horizontal&nbsp;extent&nbsp;is&nbsp;in&nbsp;axes&nbsp;coords:<br>
0=left,&nbsp;0.5=middle,&nbsp;1.0=right&nbsp;but&nbsp;the&nbsp;y&nbsp;location&nbsp;is&nbsp;in&nbsp;data<br>
coordinates.<br>
kwargs&nbsp;are&nbsp;the&nbsp;kwargs&nbsp;to&nbsp;Patch,&nbsp;eg<br>
&nbsp;&nbsp;antialiased,&nbsp;aa<br>
&nbsp;&nbsp;linewidth,&nbsp;&nbsp;&nbsp;lw<br>
&nbsp;&nbsp;edgecolor,&nbsp;&nbsp;&nbsp;ec<br>
&nbsp;&nbsp;facecolor,&nbsp;&nbsp;&nbsp;fc<br>
the&nbsp;terms&nbsp;on&nbsp;the&nbsp;right&nbsp;are&nbsp;aliases<br>
Return&nbsp;value&nbsp;is&nbsp;the&nbsp;patches.Polygon&nbsp;instance.<br>
&nbsp;&nbsp;&nbsp;&nbsp;#draws&nbsp;a&nbsp;gray&nbsp;rectangle&nbsp;from&nbsp;y=0.25-0.75&nbsp;that&nbsp;spans&nbsp;the&nbsp;horizontal<br>
&nbsp;&nbsp;&nbsp;&nbsp;#extent&nbsp;of&nbsp;the&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-axhspan">axhspan</a>(0.25,&nbsp;0.75,&nbsp;facecolor='0.5',&nbsp;alpha=0.5)<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Polygon&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarAxes-axis"><strong>axis</strong></a>(self, *v, **kwargs)</dt><dd><tt>Convenience&nbsp;method&nbsp;for&nbsp;manipulating&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;view&nbsp;limits<br>
and&nbsp;the&nbsp;aspect&nbsp;ratio&nbsp;of&nbsp;the&nbsp;plot.<br>
&nbsp;<br>
kwargs&nbsp;are&nbsp;passed&nbsp;on&nbsp;to&nbsp;set_xlim&nbsp;and&nbsp;set_ylim&nbsp;--&nbsp;see&nbsp;their&nbsp;docstrings&nbsp;for&nbsp;details</tt></dd></dl>

<dl><dt><a name="PolarAxes-axvline"><strong>axvline</strong></a>(self, x<font color="#909090">=0</font>, ymin<font color="#909090">=0</font>, ymax<font color="#909090">=1</font>, **kwargs)</dt><dd><tt>AXVLINE(x=0,&nbsp;ymin=0,&nbsp;ymax=1,&nbsp;**kwargs)<br>
Axis&nbsp;Vertical&nbsp;Line<br>
Draw&nbsp;a&nbsp;vertical&nbsp;line&nbsp;at&nbsp;x&nbsp;from&nbsp;ymin&nbsp;to&nbsp;ymax.&nbsp;&nbsp;With&nbsp;the&nbsp;default&nbsp;values<br>
of&nbsp;ymin=0&nbsp;and&nbsp;ymax=1,&nbsp;this&nbsp;line&nbsp;will&nbsp;always&nbsp;span&nbsp;the&nbsp;vertical&nbsp;extent<br>
of&nbsp;the&nbsp;axes,&nbsp;regardless&nbsp;of&nbsp;the&nbsp;xlim&nbsp;settings,&nbsp;even&nbsp;if&nbsp;you&nbsp;change&nbsp;them,<br>
eg&nbsp;with&nbsp;the&nbsp;xlim&nbsp;command.&nbsp;&nbsp;That&nbsp;is,&nbsp;the&nbsp;vertical&nbsp;extent&nbsp;is&nbsp;in&nbsp;axes<br>
coords:&nbsp;0=bottom,&nbsp;0.5=middle,&nbsp;1.0=top&nbsp;but&nbsp;the&nbsp;x&nbsp;location&nbsp;is&nbsp;in&nbsp;data<br>
coordinates.<br>
Return&nbsp;value&nbsp;is&nbsp;the&nbsp;Line2D&nbsp;instance.&nbsp;&nbsp;kwargs&nbsp;are&nbsp;the&nbsp;same&nbsp;as<br>
kwargs&nbsp;to&nbsp;plot,&nbsp;and&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;control&nbsp;the&nbsp;line&nbsp;properties.&nbsp;&nbsp;Eg<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;thick&nbsp;red&nbsp;vline&nbsp;at&nbsp;x=0&nbsp;that&nbsp;spans&nbsp;the&nbsp;yrange<br>
&nbsp;&nbsp;&nbsp;&nbsp;l&nbsp;=&nbsp;<a href="#PolarAxes-axvline">axvline</a>(linewidth=4,&nbsp;color='r')<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;default&nbsp;vline&nbsp;at&nbsp;x=1&nbsp;that&nbsp;spans&nbsp;the&nbsp;yrange<br>
&nbsp;&nbsp;&nbsp;&nbsp;l&nbsp;=&nbsp;<a href="#PolarAxes-axvline">axvline</a>(x=1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;default&nbsp;vline&nbsp;at&nbsp;x=.5&nbsp;that&nbsp;spans&nbsp;the&nbsp;the&nbsp;middle&nbsp;half&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;yrange<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-axvline">axvline</a>(x=.5,&nbsp;ymin=0.25,&nbsp;ymax=0.75)<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarAxes-axvspan"><strong>axvspan</strong></a>(self, xmin, xmax, ymin<font color="#909090">=0</font>, ymax<font color="#909090">=1</font>, **kwargs)</dt><dd><tt>AXVSPAN(xmin,&nbsp;xmax,&nbsp;ymin=0,&nbsp;ymax=1,&nbsp;**kwargs)<br>
axvspan&nbsp;:&nbsp;Axis&nbsp;Vertical&nbsp;Span.&nbsp;&nbsp;xcoords&nbsp;are&nbsp;in&nbsp;data&nbsp;units&nbsp;and&nbsp;y&nbsp;coords<br>
are&nbsp;in&nbsp;axes&nbsp;(relative&nbsp;0-1)&nbsp;units<br>
Draw&nbsp;a&nbsp;vertical&nbsp;span&nbsp;(regtangle)&nbsp;from&nbsp;xmin&nbsp;to&nbsp;xmax.&nbsp;&nbsp;With&nbsp;the&nbsp;default<br>
values&nbsp;of&nbsp;ymin=0&nbsp;and&nbsp;ymax=1,&nbsp;this&nbsp;always&nbsp;span&nbsp;the&nbsp;yrange,&nbsp;regardless<br>
of&nbsp;the&nbsp;ylim&nbsp;settings,&nbsp;even&nbsp;if&nbsp;you&nbsp;change&nbsp;them,&nbsp;eg&nbsp;with&nbsp;the&nbsp;ylim<br>
command.&nbsp;&nbsp;That&nbsp;is,&nbsp;the&nbsp;vertical&nbsp;extent&nbsp;is&nbsp;in&nbsp;axes&nbsp;coords:&nbsp;0=bottom,<br>
0.5=middle,&nbsp;1.0=top&nbsp;but&nbsp;the&nbsp;y&nbsp;location&nbsp;is&nbsp;in&nbsp;data&nbsp;coordinates.<br>
kwargs&nbsp;are&nbsp;the&nbsp;kwargs&nbsp;to&nbsp;Patch,&nbsp;eg<br>
&nbsp;&nbsp;antialiased,&nbsp;aa<br>
&nbsp;&nbsp;linewidth,&nbsp;&nbsp;&nbsp;lw<br>
&nbsp;&nbsp;edgecolor,&nbsp;&nbsp;&nbsp;ec<br>
&nbsp;&nbsp;facecolor,&nbsp;&nbsp;&nbsp;fc<br>
the&nbsp;terms&nbsp;on&nbsp;the&nbsp;right&nbsp;are&nbsp;aliases<br>
return&nbsp;value&nbsp;is&nbsp;the&nbsp;patches.Polygon&nbsp;instance.<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;vertical&nbsp;green&nbsp;translucent&nbsp;rectangle&nbsp;from&nbsp;x=1.25&nbsp;to&nbsp;1.55&nbsp;that<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;spans&nbsp;the&nbsp;yrange&nbsp;of&nbsp;the&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-axvspan">axvspan</a>(1.25,&nbsp;1.55,&nbsp;facecolor='g',&nbsp;alpha=0.5)<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Polygon&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarAxes-bar"><strong>bar</strong></a>(self, left, height, width<font color="#909090">=0.80000000000000004</font>, bottom<font color="#909090">=None</font>, color<font color="#909090">=None</font>, edgecolor<font color="#909090">=None</font>, linewidth<font color="#909090">=None</font>, yerr<font color="#909090">=None</font>, xerr<font color="#909090">=None</font>, ecolor<font color="#909090">=None</font>, capsize<font color="#909090">=3</font>, align<font color="#909090">='edge'</font>, orientation<font color="#909090">='vertical'</font>, log<font color="#909090">=False</font>, **kwargs)</dt><dd><tt>BAR(left,&nbsp;height,&nbsp;width=0.8,&nbsp;bottom=0,<br>
&nbsp;&nbsp;&nbsp;&nbsp;color=None,&nbsp;edgecolor=None,&nbsp;linewidth=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;yerr=None,&nbsp;xerr=None,&nbsp;ecolor=None,&nbsp;capsize=3,<br>
&nbsp;&nbsp;&nbsp;&nbsp;align='edge',&nbsp;orientation='vertical',&nbsp;log=False)<br>
Make&nbsp;a&nbsp;bar&nbsp;plot&nbsp;with&nbsp;rectangles&nbsp;bounded&nbsp;by<br>
&nbsp;&nbsp;left,&nbsp;left+width,&nbsp;bottom,&nbsp;bottom+height<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(left,&nbsp;right,&nbsp;bottom&nbsp;and&nbsp;top&nbsp;edges)<br>
left,&nbsp;height,&nbsp;width,&nbsp;and&nbsp;bottom&nbsp;can&nbsp;be&nbsp;either&nbsp;scalars&nbsp;or&nbsp;sequences<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;Rectangle&nbsp;patch&nbsp;instances<br>
&nbsp;&nbsp;&nbsp;&nbsp;left&nbsp;-&nbsp;the&nbsp;x&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;left&nbsp;sides&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;height&nbsp;-&nbsp;the&nbsp;heights&nbsp;of&nbsp;the&nbsp;bars<br>
Optional&nbsp;arguments:<br>
&nbsp;&nbsp;&nbsp;&nbsp;width&nbsp;-&nbsp;the&nbsp;widths&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;bottom&nbsp;-&nbsp;the&nbsp;y&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;bottom&nbsp;edges&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;-&nbsp;the&nbsp;colors&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;-&nbsp;the&nbsp;colors&nbsp;of&nbsp;the&nbsp;bar&nbsp;edges<br>
&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;-&nbsp;width&nbsp;of&nbsp;bar&nbsp;edges;&nbsp;None&nbsp;means&nbsp;use&nbsp;default<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth;&nbsp;0&nbsp;means&nbsp;don't&nbsp;draw&nbsp;edges.<br>
&nbsp;&nbsp;&nbsp;&nbsp;xerr&nbsp;and&nbsp;yerr,&nbsp;if&nbsp;not&nbsp;None,&nbsp;will&nbsp;be&nbsp;used&nbsp;to&nbsp;generate&nbsp;errorbars<br>
&nbsp;&nbsp;&nbsp;&nbsp;on&nbsp;the&nbsp;bar&nbsp;chart<br>
&nbsp;&nbsp;&nbsp;&nbsp;ecolor&nbsp;specifies&nbsp;the&nbsp;color&nbsp;of&nbsp;any&nbsp;errorbar<br>
&nbsp;&nbsp;&nbsp;&nbsp;capsize&nbsp;(default&nbsp;3)&nbsp;determines&nbsp;the&nbsp;length&nbsp;in&nbsp;points&nbsp;of&nbsp;the&nbsp;error<br>
&nbsp;&nbsp;&nbsp;&nbsp;bar&nbsp;caps<br>
&nbsp;&nbsp;&nbsp;&nbsp;align&nbsp;=&nbsp;'edge'&nbsp;(default)&nbsp;|&nbsp;'center'<br>
&nbsp;&nbsp;&nbsp;&nbsp;orientation&nbsp;=&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;log&nbsp;=&nbsp;False&nbsp;|&nbsp;True&nbsp;-&nbsp;False&nbsp;(default)&nbsp;leaves&nbsp;the&nbsp;orientation<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axis&nbsp;as-is;&nbsp;True&nbsp;sets&nbsp;it&nbsp;to&nbsp;log&nbsp;scale<br>
For&nbsp;vertical&nbsp;bars,&nbsp;align='edge'&nbsp;aligns&nbsp;bars&nbsp;by&nbsp;their&nbsp;left&nbsp;edges&nbsp;in<br>
left,&nbsp;while&nbsp;'center'&nbsp;interprets&nbsp;these&nbsp;values&nbsp;as&nbsp;the&nbsp;x&nbsp;coordinates&nbsp;of<br>
the&nbsp;bar&nbsp;centers.&nbsp;For&nbsp;horizontal&nbsp;bars,&nbsp;'edge'&nbsp;aligns&nbsp;bars&nbsp;by&nbsp;their<br>
bottom&nbsp;edges&nbsp;in&nbsp;bottom,&nbsp;while&nbsp;'center'&nbsp;interprets&nbsp;these&nbsp;values&nbsp;as&nbsp;the<br>
y&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;bar&nbsp;centers.<br>
The&nbsp;optional&nbsp;arguments&nbsp;color,&nbsp;edgecolor,&nbsp;linewidth,&nbsp;xerr,&nbsp;and&nbsp;yerr&nbsp;can<br>
be&nbsp;either&nbsp;scalars&nbsp;or&nbsp;sequences&nbsp;of&nbsp;length&nbsp;equal&nbsp;to&nbsp;the&nbsp;number&nbsp;of&nbsp;bars.<br>
This&nbsp;enables&nbsp;you&nbsp;to&nbsp;use&nbsp;bar&nbsp;as&nbsp;the&nbsp;basis&nbsp;for&nbsp;stacked&nbsp;bar&nbsp;charts,&nbsp;or<br>
candlestick&nbsp;plots.<br>
Optional&nbsp;kwargs:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarAxes-barh"><strong>barh</strong></a>(self, bottom, width, height<font color="#909090">=0.80000000000000004</font>, left<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>BARH(bottom,&nbsp;width,&nbsp;height=0.8,&nbsp;left=0,&nbsp;**kwargs)<br>
Make&nbsp;a&nbsp;horizontal&nbsp;bar&nbsp;plot&nbsp;with&nbsp;rectangles&nbsp;bounded&nbsp;by<br>
&nbsp;&nbsp;left,&nbsp;left+width,&nbsp;bottom,&nbsp;bottom+height<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(left,&nbsp;right,&nbsp;bottom&nbsp;and&nbsp;top&nbsp;edges)<br>
bottom,&nbsp;width,&nbsp;height,&nbsp;and&nbsp;left&nbsp;can&nbsp;be&nbsp;either&nbsp;scalars&nbsp;or&nbsp;sequences<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;Rectangle&nbsp;patch&nbsp;instances<br>
&nbsp;&nbsp;&nbsp;&nbsp;bottom&nbsp;-&nbsp;the&nbsp;vertical&nbsp;positions&nbsp;of&nbsp;the&nbsp;bottom&nbsp;edges&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;width&nbsp;-&nbsp;the&nbsp;lengths&nbsp;of&nbsp;the&nbsp;bars<br>
Optional&nbsp;arguments:<br>
&nbsp;&nbsp;&nbsp;&nbsp;height&nbsp;-&nbsp;the&nbsp;heights&nbsp;(thicknesses)&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;left&nbsp;-&nbsp;the&nbsp;x&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;left&nbsp;edges&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;-&nbsp;the&nbsp;colors&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;-&nbsp;the&nbsp;colors&nbsp;of&nbsp;the&nbsp;bar&nbsp;edges<br>
&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;-&nbsp;width&nbsp;of&nbsp;bar&nbsp;edges;&nbsp;None&nbsp;means&nbsp;use&nbsp;default<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth;&nbsp;0&nbsp;means&nbsp;don't&nbsp;draw&nbsp;edges.<br>
&nbsp;&nbsp;&nbsp;&nbsp;xerr&nbsp;and&nbsp;yerr,&nbsp;if&nbsp;not&nbsp;None,&nbsp;will&nbsp;be&nbsp;used&nbsp;to&nbsp;generate&nbsp;errorbars<br>
&nbsp;&nbsp;&nbsp;&nbsp;on&nbsp;the&nbsp;bar&nbsp;chart<br>
&nbsp;&nbsp;&nbsp;&nbsp;ecolor&nbsp;specifies&nbsp;the&nbsp;color&nbsp;of&nbsp;any&nbsp;errorbar<br>
&nbsp;&nbsp;&nbsp;&nbsp;capsize&nbsp;(default&nbsp;3)&nbsp;determines&nbsp;the&nbsp;length&nbsp;in&nbsp;points&nbsp;of&nbsp;the&nbsp;error<br>
&nbsp;&nbsp;&nbsp;&nbsp;bar&nbsp;caps<br>
&nbsp;&nbsp;&nbsp;&nbsp;align&nbsp;=&nbsp;'edge'&nbsp;(default)&nbsp;|&nbsp;'center'<br>
&nbsp;&nbsp;&nbsp;&nbsp;log&nbsp;=&nbsp;False&nbsp;|&nbsp;True&nbsp;-&nbsp;False&nbsp;(default)&nbsp;leaves&nbsp;the&nbsp;horizontal<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axis&nbsp;as-is;&nbsp;True&nbsp;sets&nbsp;it&nbsp;to&nbsp;log&nbsp;scale<br>
Setting&nbsp;align='edge'&nbsp;aligns&nbsp;bars&nbsp;by&nbsp;their&nbsp;bottom&nbsp;edges&nbsp;in&nbsp;bottom,<br>
while&nbsp;'center'&nbsp;interprets&nbsp;these&nbsp;values&nbsp;as&nbsp;the&nbsp;y&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;bar<br>
centers.<br>
The&nbsp;optional&nbsp;arguments&nbsp;color,&nbsp;edgecolor,&nbsp;linewidth,&nbsp;xerr,&nbsp;and&nbsp;yerr&nbsp;can<br>
be&nbsp;either&nbsp;scalars&nbsp;or&nbsp;sequences&nbsp;of&nbsp;length&nbsp;equal&nbsp;to&nbsp;the&nbsp;number&nbsp;of&nbsp;bars.<br>
This&nbsp;enables&nbsp;you&nbsp;to&nbsp;use&nbsp;barh&nbsp;as&nbsp;the&nbsp;basis&nbsp;for&nbsp;stacked&nbsp;bar&nbsp;charts,&nbsp;or<br>
candlestick&nbsp;plots.<br>
Optional&nbsp;kwargs:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarAxes-boxplot"><strong>boxplot</strong></a>(self, x, notch<font color="#909090">=0</font>, sym<font color="#909090">='b+'</font>, vert<font color="#909090">=1</font>, whis<font color="#909090">=1.5</font>, positions<font color="#909090">=None</font>, widths<font color="#909090">=None</font>)</dt><dd><tt><a href="#PolarAxes-boxplot">boxplot</a>(x,&nbsp;notch=0,&nbsp;sym='+',&nbsp;vert=1,&nbsp;whis=1.5,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;positions=None,&nbsp;widths=None)<br>
&nbsp;<br>
Make&nbsp;a&nbsp;box&nbsp;and&nbsp;whisker&nbsp;plot&nbsp;for&nbsp;each&nbsp;column&nbsp;of&nbsp;x&nbsp;or<br>
each&nbsp;vector&nbsp;in&nbsp;sequence&nbsp;x.<br>
The&nbsp;box&nbsp;extends&nbsp;from&nbsp;the&nbsp;lower&nbsp;to&nbsp;upper&nbsp;quartile&nbsp;values<br>
of&nbsp;the&nbsp;data,&nbsp;with&nbsp;a&nbsp;line&nbsp;at&nbsp;the&nbsp;median.&nbsp;&nbsp;The&nbsp;whiskers<br>
extend&nbsp;from&nbsp;the&nbsp;box&nbsp;to&nbsp;show&nbsp;the&nbsp;range&nbsp;of&nbsp;the&nbsp;data.&nbsp;&nbsp;Flier<br>
points&nbsp;are&nbsp;those&nbsp;past&nbsp;the&nbsp;end&nbsp;of&nbsp;the&nbsp;whiskers.<br>
&nbsp;<br>
notch&nbsp;=&nbsp;0&nbsp;(default)&nbsp;produces&nbsp;a&nbsp;rectangular&nbsp;box&nbsp;plot.<br>
notch&nbsp;=&nbsp;1&nbsp;will&nbsp;produce&nbsp;a&nbsp;notched&nbsp;box&nbsp;plot<br>
&nbsp;<br>
sym&nbsp;(default&nbsp;'b+')&nbsp;is&nbsp;the&nbsp;default&nbsp;symbol&nbsp;for&nbsp;flier&nbsp;points.<br>
Enter&nbsp;an&nbsp;empty&nbsp;string&nbsp;('')&nbsp;if&nbsp;you&nbsp;don't&nbsp;want&nbsp;to&nbsp;show&nbsp;fliers.<br>
&nbsp;<br>
vert&nbsp;=&nbsp;1&nbsp;(default)&nbsp;makes&nbsp;the&nbsp;boxes&nbsp;vertical.<br>
vert&nbsp;=&nbsp;0&nbsp;makes&nbsp;horizontal&nbsp;boxes.&nbsp;&nbsp;This&nbsp;seems&nbsp;goofy,&nbsp;but<br>
that's&nbsp;how&nbsp;Matlab&nbsp;did&nbsp;it.<br>
&nbsp;<br>
whis&nbsp;(default&nbsp;1.5)&nbsp;defines&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;whiskers&nbsp;as<br>
a&nbsp;function&nbsp;of&nbsp;the&nbsp;inner&nbsp;quartile&nbsp;range.&nbsp;&nbsp;They&nbsp;extend&nbsp;to&nbsp;the<br>
most&nbsp;extreme&nbsp;data&nbsp;point&nbsp;within&nbsp;(&nbsp;whis*(75%-25%)&nbsp;)&nbsp;data&nbsp;range.<br>
&nbsp;<br>
positions&nbsp;(default&nbsp;1,2,...,n)&nbsp;sets&nbsp;the&nbsp;horizontal&nbsp;positions&nbsp;of<br>
the&nbsp;boxes.&nbsp;The&nbsp;ticks&nbsp;and&nbsp;limits&nbsp;are&nbsp;automatically&nbsp;set&nbsp;to&nbsp;match<br>
the&nbsp;positions.<br>
&nbsp;<br>
widths&nbsp;is&nbsp;either&nbsp;a&nbsp;scalar&nbsp;or&nbsp;a&nbsp;vector&nbsp;and&nbsp;sets&nbsp;the&nbsp;width&nbsp;of<br>
each&nbsp;box.&nbsp;The&nbsp;default&nbsp;is&nbsp;0.5,&nbsp;or&nbsp;0.15*(distance&nbsp;between&nbsp;extreme<br>
positions)&nbsp;if&nbsp;that&nbsp;is&nbsp;smaller.<br>
&nbsp;<br>
x&nbsp;is&nbsp;an&nbsp;array&nbsp;or&nbsp;a&nbsp;sequence&nbsp;of&nbsp;vectors.<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;list&nbsp;of&nbsp;the&nbsp;lines&nbsp;added.</tt></dd></dl>

<dl><dt><a name="PolarAxes-broken_barh"><strong>broken_barh</strong></a>(self, xranges, yrange, **kwargs)</dt><dd><tt>A&nbsp;collection&nbsp;of&nbsp;horizontal&nbsp;bars&nbsp;spanning&nbsp;yrange&nbsp;with&nbsp;a&nbsp;sequence&nbsp;of<br>
xranges<br>
xranges&nbsp;:&nbsp;sequence&nbsp;of&nbsp;(xmin,&nbsp;xwidth)<br>
yrange&nbsp;&nbsp;:&nbsp;(ymin,&nbsp;ywidth)<br>
kwargs&nbsp;are&nbsp;collections.BrokenBarHCollection&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clim:&nbsp;a&nbsp;length&nbsp;2&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap:&nbsp;a&nbsp;colormap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colorbar:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
these&nbsp;can&nbsp;either&nbsp;be&nbsp;a&nbsp;single&nbsp;argument,&nbsp;ie&nbsp;facecolors='black'<br>
or&nbsp;a&nbsp;sequence&nbsp;of&nbsp;arguments&nbsp;for&nbsp;the&nbsp;various&nbsp;bars,&nbsp;ie<br>
facecolors='black',&nbsp;'red',&nbsp;'green'</tt></dd></dl>

<dl><dt><a name="PolarAxes-clabel"><strong>clabel</strong></a>(self, CS, *args, **kwargs)</dt><dd><tt><a href="#PolarAxes-clabel">clabel</a>(CS,&nbsp;**kwargs)&nbsp;-&nbsp;add&nbsp;labels&nbsp;to&nbsp;line&nbsp;contours&nbsp;in&nbsp;CS,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;where&nbsp;CS&nbsp;is&nbsp;a&nbsp;ContourSet&nbsp;object&nbsp;returned&nbsp;by&nbsp;contour.<br>
&nbsp;<br>
<a href="#PolarAxes-clabel">clabel</a>(CS,&nbsp;V,&nbsp;**kwargs)&nbsp;-&nbsp;only&nbsp;label&nbsp;contours&nbsp;listed&nbsp;in&nbsp;V<br>
&nbsp;<br>
keyword&nbsp;arguments:<br>
&nbsp;<br>
*&nbsp;fontsize&nbsp;=&nbsp;None:&nbsp;as&nbsp;described&nbsp;in&nbsp;<a href="http://matplotlib.sf.net/fonts.html">http://matplotlib.sf.net/fonts.html</a><br>
&nbsp;<br>
*&nbsp;colors&nbsp;=&nbsp;None:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;tuple&nbsp;of&nbsp;matplotlib&nbsp;color&nbsp;args&nbsp;(string,&nbsp;float,&nbsp;rgb,&nbsp;etc),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;different&nbsp;labels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;different&nbsp;colors&nbsp;in&nbsp;the&nbsp;order<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specified<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;-&nbsp;one&nbsp;string&nbsp;color,&nbsp;e.g.&nbsp;colors&nbsp;=&nbsp;'r'&nbsp;or&nbsp;colors&nbsp;=&nbsp;'red',&nbsp;all&nbsp;labels<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;this&nbsp;color<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;colors&nbsp;==&nbsp;None,&nbsp;the&nbsp;color&nbsp;of&nbsp;each&nbsp;label&nbsp;matches&nbsp;the&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;corresponding&nbsp;contour<br>
&nbsp;<br>
*&nbsp;inline&nbsp;=&nbsp;True:&nbsp;controls&nbsp;whether&nbsp;the&nbsp;underlying&nbsp;contour&nbsp;is&nbsp;removed<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(inline&nbsp;=&nbsp;True)&nbsp;or&nbsp;not&nbsp;(False)<br>
&nbsp;<br>
*&nbsp;fmt&nbsp;=&nbsp;'%1.3f':&nbsp;a&nbsp;format&nbsp;string&nbsp;for&nbsp;the&nbsp;label</tt></dd></dl>

<dl><dt><a name="PolarAxes-clear"><strong>clear</strong></a>(self)</dt><dd><tt>clear&nbsp;the&nbsp;axes</tt></dd></dl>

<dl><dt><a name="PolarAxes-cohere"><strong>cohere</strong></a>(self, x, y, NFFT<font color="#909090">=256</font>, Fs<font color="#909090">=2</font>, detrend<font color="#909090">=&lt;function detrend_none at 0x847d844&gt;</font>, window<font color="#909090">=&lt;function window_hanning at 0x847d72c&gt;</font>, noverlap<font color="#909090">=0</font>, **kwargs)</dt><dd><tt>COHERE(x,&nbsp;y,&nbsp;NFFT=256,&nbsp;Fs=2,&nbsp;detrend=detrend_none,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window=window_hanning,&nbsp;noverlap=0,&nbsp;**kwargs)<br>
cohere&nbsp;the&nbsp;coherence&nbsp;between&nbsp;x&nbsp;and&nbsp;y.&nbsp;&nbsp;Coherence&nbsp;is&nbsp;the&nbsp;normalized<br>
cross&nbsp;spectral&nbsp;density<br>
&nbsp;&nbsp;Cxy&nbsp;=&nbsp;|Pxy|^2/(Pxx*Pyy)<br>
The&nbsp;return&nbsp;value&nbsp;is&nbsp;(Cxy,&nbsp;f),&nbsp;where&nbsp;f&nbsp;are&nbsp;the&nbsp;frequencies&nbsp;of&nbsp;the<br>
coherence&nbsp;vector.<br>
See&nbsp;the&nbsp;PSD&nbsp;help&nbsp;for&nbsp;a&nbsp;description&nbsp;of&nbsp;the&nbsp;optional&nbsp;parameters.<br>
kwargs&nbsp;are&nbsp;applied&nbsp;to&nbsp;the&nbsp;lines<br>
Returns&nbsp;the&nbsp;tuple&nbsp;Cxy,&nbsp;freqs<br>
Refs:&nbsp;Bendat&nbsp;&amp;&nbsp;Piersol&nbsp;--&nbsp;Random&nbsp;Data:&nbsp;Analysis&nbsp;and&nbsp;Measurement<br>
&nbsp;&nbsp;Procedures,&nbsp;John&nbsp;Wiley&nbsp;&amp;&nbsp;Sons&nbsp;(1986)<br>
kwargs&nbsp;control&nbsp;the&nbsp;Line2D&nbsp;properties&nbsp;of&nbsp;the&nbsp;coherence&nbsp;plot:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarAxes-connect"><strong>connect</strong></a>(self, s, func)</dt><dd><tt>Register&nbsp;observers&nbsp;to&nbsp;be&nbsp;notified&nbsp;when&nbsp;certain&nbsp;events&nbsp;occur.&nbsp;&nbsp;Register<br>
with&nbsp;callback&nbsp;functions&nbsp;with&nbsp;the&nbsp;following&nbsp;signatures.&nbsp;&nbsp;The&nbsp;function<br>
has&nbsp;the&nbsp;following&nbsp;signature<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;func(ax)&nbsp;&nbsp;#&nbsp;where&nbsp;ax&nbsp;is&nbsp;the&nbsp;instance&nbsp;making&nbsp;the&nbsp;callback.<br>
&nbsp;<br>
The&nbsp;following&nbsp;events&nbsp;can&nbsp;be&nbsp;connected&nbsp;to:<br>
&nbsp;<br>
&nbsp;&nbsp;'xlim_changed','ylim_changed'<br>
&nbsp;<br>
The&nbsp;connection&nbsp;id&nbsp;is&nbsp;is&nbsp;returned&nbsp;-&nbsp;you&nbsp;can&nbsp;use&nbsp;this&nbsp;with<br>
disconnect&nbsp;to&nbsp;disconnect&nbsp;from&nbsp;the&nbsp;axes&nbsp;event</tt></dd></dl>

<dl><dt><a name="PolarAxes-contour"><strong>contour</strong></a>(self, *args, **kwargs)</dt><dd><tt>contour&nbsp;and&nbsp;contourf&nbsp;draw&nbsp;contour&nbsp;lines&nbsp;and&nbsp;filled&nbsp;contours,<br>
respectively.&nbsp;&nbsp;Except&nbsp;as&nbsp;noted,&nbsp;function&nbsp;signatures&nbsp;and&nbsp;return<br>
values&nbsp;are&nbsp;the&nbsp;same&nbsp;for&nbsp;both&nbsp;versions.<br>
&nbsp;<br>
contourf&nbsp;differs&nbsp;from&nbsp;the&nbsp;Matlab&nbsp;(TM)&nbsp;version&nbsp;in&nbsp;that&nbsp;it&nbsp;does&nbsp;not<br>
&nbsp;&nbsp;&nbsp;&nbsp;draw&nbsp;the&nbsp;polygon&nbsp;edges,&nbsp;because&nbsp;the&nbsp;contouring&nbsp;engine&nbsp;yields<br>
&nbsp;&nbsp;&nbsp;&nbsp;simply&nbsp;connected&nbsp;regions&nbsp;with&nbsp;branch&nbsp;cuts.&nbsp;&nbsp;To&nbsp;draw&nbsp;the&nbsp;edges,<br>
&nbsp;&nbsp;&nbsp;&nbsp;add&nbsp;line&nbsp;contours&nbsp;with&nbsp;calls&nbsp;to&nbsp;contour.<br>
&nbsp;<br>
&nbsp;<br>
Function&nbsp;signatures<br>
&nbsp;<br>
<a href="#PolarAxes-contour">contour</a>(Z)&nbsp;-&nbsp;make&nbsp;a&nbsp;contour&nbsp;plot&nbsp;of&nbsp;an&nbsp;array&nbsp;Z.&nbsp;The&nbsp;level<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values&nbsp;are&nbsp;chosen&nbsp;automatically.<br>
&nbsp;<br>
<a href="#PolarAxes-contour">contour</a>(X,Y,Z)&nbsp;-&nbsp;X,Y&nbsp;specify&nbsp;the&nbsp;(x,y)&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;surface<br>
&nbsp;<br>
<a href="#PolarAxes-contour">contour</a>(Z,N)&nbsp;and&nbsp;<a href="#PolarAxes-contour">contour</a>(X,Y,Z,N)&nbsp;-&nbsp;contour&nbsp;N&nbsp;automatically-chosen<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;levels.<br>
&nbsp;<br>
<a href="#PolarAxes-contour">contour</a>(Z,V)&nbsp;and&nbsp;<a href="#PolarAxes-contour">contour</a>(X,Y,Z,V)&nbsp;-&nbsp;draw&nbsp;len(V)&nbsp;contour&nbsp;lines,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;the&nbsp;values&nbsp;specified&nbsp;in&nbsp;sequence&nbsp;V<br>
&nbsp;<br>
<a href="#PolarAxes-contourf">contourf</a>(...,&nbsp;V)&nbsp;-&nbsp;fill&nbsp;the&nbsp;(len(V)-1)&nbsp;regions&nbsp;between&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values&nbsp;in&nbsp;V<br>
&nbsp;<br>
<a href="#PolarAxes-contour">contour</a>(Z,&nbsp;**kwargs)&nbsp;-&nbsp;Use&nbsp;keyword&nbsp;args&nbsp;to&nbsp;control&nbsp;colors,&nbsp;linewidth,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;origin,&nbsp;cmap&nbsp;...&nbsp;see&nbsp;below<br>
&nbsp;<br>
X,&nbsp;Y,&nbsp;and&nbsp;Z&nbsp;must&nbsp;be&nbsp;arrays&nbsp;with&nbsp;the&nbsp;same&nbsp;dimensions.<br>
Z&nbsp;may&nbsp;be&nbsp;a&nbsp;masked&nbsp;array,&nbsp;but&nbsp;filled&nbsp;contouring&nbsp;may&nbsp;not&nbsp;handle<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;internal&nbsp;masked&nbsp;regions&nbsp;correctly.<br>
&nbsp;<br>
C&nbsp;=&nbsp;<a href="#PolarAxes-contour">contour</a>(...)&nbsp;returns&nbsp;a&nbsp;ContourSet&nbsp;object.<br>
&nbsp;<br>
&nbsp;<br>
Optional&nbsp;keyword&nbsp;args&nbsp;are&nbsp;shown&nbsp;with&nbsp;their&nbsp;defaults&nbsp;below&nbsp;(you&nbsp;must<br>
use&nbsp;kwargs&nbsp;for&nbsp;these):<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;colors&nbsp;=&nbsp;None;&nbsp;or&nbsp;one&nbsp;of&nbsp;the&nbsp;following:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;tuple&nbsp;of&nbsp;matplotlib&nbsp;color&nbsp;args&nbsp;(string,&nbsp;float,&nbsp;rgb,&nbsp;etc),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;different&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;different&nbsp;colors&nbsp;in&nbsp;the&nbsp;order<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specified<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;one&nbsp;string&nbsp;color,&nbsp;e.g.&nbsp;colors&nbsp;=&nbsp;'r'&nbsp;or&nbsp;colors&nbsp;=&nbsp;'red',&nbsp;all&nbsp;levels<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;this&nbsp;color<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;colors&nbsp;==&nbsp;None,&nbsp;the&nbsp;colormap&nbsp;specified&nbsp;by&nbsp;cmap&nbsp;will&nbsp;be&nbsp;used<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;alpha=1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;blending&nbsp;value<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;cmap&nbsp;=&nbsp;None:&nbsp;a&nbsp;cm&nbsp;Colormap&nbsp;instance&nbsp;from&nbsp;matplotlib.cm.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;cmap&nbsp;==&nbsp;None&nbsp;and&nbsp;colors&nbsp;==&nbsp;None,&nbsp;a&nbsp;default&nbsp;Colormap&nbsp;is&nbsp;used.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;norm&nbsp;=&nbsp;None:&nbsp;a&nbsp;matplotlib.colors.Normalize&nbsp;instance&nbsp;for<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scaling&nbsp;data&nbsp;values&nbsp;to&nbsp;colors.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;norm&nbsp;==&nbsp;None,&nbsp;and&nbsp;colors&nbsp;==&nbsp;None,&nbsp;the&nbsp;default<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linear&nbsp;scaling&nbsp;is&nbsp;used.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;origin&nbsp;=&nbsp;None:&nbsp;'upper'|'lower'|'image'|None.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;'image',&nbsp;the&nbsp;rc&nbsp;value&nbsp;for&nbsp;image.origin&nbsp;will&nbsp;be&nbsp;used.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;None&nbsp;(default),&nbsp;the&nbsp;first&nbsp;value&nbsp;of&nbsp;Z&nbsp;will&nbsp;correspond<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;the&nbsp;lower&nbsp;left&nbsp;corner,&nbsp;location&nbsp;(0,0).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This&nbsp;keyword&nbsp;is&nbsp;active&nbsp;only&nbsp;if&nbsp;contourf&nbsp;is&nbsp;called&nbsp;with<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;one&nbsp;or&nbsp;two&nbsp;arguments,&nbsp;that&nbsp;is,&nbsp;without&nbsp;explicitly<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specifying&nbsp;X&nbsp;and&nbsp;Y.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;extent&nbsp;=&nbsp;None:&nbsp;(x0,x1,y0,y1);&nbsp;also&nbsp;active&nbsp;only&nbsp;if&nbsp;X&nbsp;and&nbsp;Y<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;not&nbsp;specified.&nbsp;&nbsp;If&nbsp;origin&nbsp;is&nbsp;not&nbsp;None,&nbsp;then&nbsp;extent&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interpreted&nbsp;as&nbsp;in&nbsp;imshow:&nbsp;it&nbsp;gives&nbsp;the&nbsp;outer&nbsp;pixel&nbsp;boundaries.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;this&nbsp;case,&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[0,0]&nbsp;is&nbsp;the&nbsp;center&nbsp;of&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixel,&nbsp;not&nbsp;a&nbsp;corner.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;origin&nbsp;is&nbsp;None,&nbsp;then&nbsp;(x0,y0)&nbsp;is&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[0,0],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and&nbsp;(x1,y1)&nbsp;is&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[-1,-1].<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;locator&nbsp;=&nbsp;None:&nbsp;an&nbsp;instance&nbsp;of&nbsp;a&nbsp;ticker.Locator&nbsp;subclass;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;is&nbsp;MaxNLocator.&nbsp;&nbsp;It&nbsp;is&nbsp;used&nbsp;to&nbsp;determine&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contour&nbsp;levels&nbsp;if&nbsp;they&nbsp;are&nbsp;not&nbsp;given&nbsp;explicitly&nbsp;via&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;V&nbsp;argument.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*****&nbsp;New:&nbsp;*****<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;extend&nbsp;=&nbsp;'neither',&nbsp;'both',&nbsp;'min',&nbsp;'max'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Unless&nbsp;this&nbsp;is&nbsp;'neither'&nbsp;(default),&nbsp;contour&nbsp;levels&nbsp;are<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;automatically&nbsp;added&nbsp;to&nbsp;one&nbsp;or&nbsp;both&nbsp;ends&nbsp;of&nbsp;the&nbsp;range&nbsp;so&nbsp;that<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;all&nbsp;data&nbsp;are&nbsp;included.&nbsp;&nbsp;These&nbsp;added&nbsp;ranges&nbsp;are&nbsp;then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapped&nbsp;to&nbsp;the&nbsp;special&nbsp;colormap&nbsp;values&nbsp;which&nbsp;default&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;ends&nbsp;of&nbsp;the&nbsp;colormap&nbsp;range,&nbsp;but&nbsp;can&nbsp;be&nbsp;set&nbsp;via<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Colormap.set_under()&nbsp;and&nbsp;Colormap.set_over()&nbsp;methods.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;replace&nbsp;clip_ends=True&nbsp;and&nbsp;V&nbsp;=&nbsp;[-100,&nbsp;2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2,&nbsp;100],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;use&nbsp;extend='both'&nbsp;and&nbsp;V&nbsp;=&nbsp;[2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2].<br>
&nbsp;&nbsp;&nbsp;&nbsp;****************<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;contour&nbsp;only:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;linewidths&nbsp;=&nbsp;None:&nbsp;or&nbsp;one&nbsp;of&nbsp;these:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;number&nbsp;-&nbsp;all&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;with&nbsp;this&nbsp;linewidth,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.g.&nbsp;linewidths&nbsp;=&nbsp;0.6<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;tuple&nbsp;of&nbsp;numbers,&nbsp;e.g.&nbsp;linewidths&nbsp;=&nbsp;(0.4,&nbsp;0.8,&nbsp;1.2)&nbsp;different<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;with&nbsp;different&nbsp;linewidths&nbsp;in&nbsp;the&nbsp;order<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specified<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;linewidths&nbsp;==&nbsp;None,&nbsp;the&nbsp;default&nbsp;width&nbsp;in&nbsp;lines.linewidth&nbsp;in<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;matplotlibrc&nbsp;is&nbsp;used<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;contourf&nbsp;only:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*****&nbsp;Obsolete:&nbsp;****<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;clip_ends&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;False,&nbsp;the&nbsp;limits&nbsp;for&nbsp;color&nbsp;scaling&nbsp;are&nbsp;set&nbsp;to&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;contour&nbsp;levels.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;True&nbsp;(default)&nbsp;clips&nbsp;the&nbsp;scaling&nbsp;limits.&nbsp;&nbsp;Example:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;the&nbsp;contour&nbsp;boundaries&nbsp;are&nbsp;V&nbsp;=&nbsp;[-100,&nbsp;2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2,&nbsp;100],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;then&nbsp;the&nbsp;scaling&nbsp;limits&nbsp;will&nbsp;be&nbsp;[-100,&nbsp;100]&nbsp;if&nbsp;clip_ends<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;False,&nbsp;and&nbsp;[-3,&nbsp;3]&nbsp;if&nbsp;clip_ends&nbsp;is&nbsp;True.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;linewidths&nbsp;=&nbsp;None&nbsp;or&nbsp;a&nbsp;number;&nbsp;default&nbsp;of&nbsp;0.05&nbsp;works&nbsp;for<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Postscript;&nbsp;a&nbsp;value&nbsp;of&nbsp;about&nbsp;0.5&nbsp;seems&nbsp;better&nbsp;for&nbsp;Agg.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;antialiased&nbsp;=&nbsp;True&nbsp;(default)&nbsp;or&nbsp;False;&nbsp;if&nbsp;False,&nbsp;there&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;no&nbsp;need&nbsp;to&nbsp;increase&nbsp;the&nbsp;linewidths&nbsp;for&nbsp;Agg,&nbsp;but&nbsp;True&nbsp;gives<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nicer&nbsp;color&nbsp;boundaries.&nbsp;&nbsp;If&nbsp;antialiased&nbsp;is&nbsp;True&nbsp;and&nbsp;linewidths<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;too&nbsp;small,&nbsp;then&nbsp;there&nbsp;may&nbsp;be&nbsp;light-colored&nbsp;lines&nbsp;at&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;boundaries&nbsp;caused&nbsp;by&nbsp;the&nbsp;antialiasing.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;nchunk&nbsp;=&nbsp;0&nbsp;(default)&nbsp;for&nbsp;no&nbsp;subdivision&nbsp;of&nbsp;the&nbsp;domain;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specify&nbsp;a&nbsp;positive&nbsp;integer&nbsp;to&nbsp;divide&nbsp;the&nbsp;domain&nbsp;into<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;subdomains&nbsp;of&nbsp;roughly&nbsp;nchunk&nbsp;by&nbsp;nchunk&nbsp;points.&nbsp;This&nbsp;may<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;never&nbsp;actually&nbsp;be&nbsp;advantageous,&nbsp;so&nbsp;this&nbsp;option&nbsp;may&nbsp;be<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removed.&nbsp;&nbsp;Chunking&nbsp;introduces&nbsp;artifacts&nbsp;at&nbsp;the&nbsp;chunk<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boundaries&nbsp;unless&nbsp;antialiased&nbsp;=&nbsp;False,&nbsp;or&nbsp;linewidths&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set&nbsp;to&nbsp;a&nbsp;large&nbsp;enough&nbsp;value&nbsp;for&nbsp;the&nbsp;particular&nbsp;renderer&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolution.</tt></dd></dl>

<dl><dt><a name="PolarAxes-contourf"><strong>contourf</strong></a>(self, *args, **kwargs)</dt><dd><tt>contour&nbsp;and&nbsp;contourf&nbsp;draw&nbsp;contour&nbsp;lines&nbsp;and&nbsp;filled&nbsp;contours,<br>
respectively.&nbsp;&nbsp;Except&nbsp;as&nbsp;noted,&nbsp;function&nbsp;signatures&nbsp;and&nbsp;return<br>
values&nbsp;are&nbsp;the&nbsp;same&nbsp;for&nbsp;both&nbsp;versions.<br>
&nbsp;<br>
contourf&nbsp;differs&nbsp;from&nbsp;the&nbsp;Matlab&nbsp;(TM)&nbsp;version&nbsp;in&nbsp;that&nbsp;it&nbsp;does&nbsp;not<br>
&nbsp;&nbsp;&nbsp;&nbsp;draw&nbsp;the&nbsp;polygon&nbsp;edges,&nbsp;because&nbsp;the&nbsp;contouring&nbsp;engine&nbsp;yields<br>
&nbsp;&nbsp;&nbsp;&nbsp;simply&nbsp;connected&nbsp;regions&nbsp;with&nbsp;branch&nbsp;cuts.&nbsp;&nbsp;To&nbsp;draw&nbsp;the&nbsp;edges,<br>
&nbsp;&nbsp;&nbsp;&nbsp;add&nbsp;line&nbsp;contours&nbsp;with&nbsp;calls&nbsp;to&nbsp;contour.<br>
&nbsp;<br>
&nbsp;<br>
Function&nbsp;signatures<br>
&nbsp;<br>
<a href="#PolarAxes-contour">contour</a>(Z)&nbsp;-&nbsp;make&nbsp;a&nbsp;contour&nbsp;plot&nbsp;of&nbsp;an&nbsp;array&nbsp;Z.&nbsp;The&nbsp;level<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values&nbsp;are&nbsp;chosen&nbsp;automatically.<br>
&nbsp;<br>
<a href="#PolarAxes-contour">contour</a>(X,Y,Z)&nbsp;-&nbsp;X,Y&nbsp;specify&nbsp;the&nbsp;(x,y)&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;surface<br>
&nbsp;<br>
<a href="#PolarAxes-contour">contour</a>(Z,N)&nbsp;and&nbsp;<a href="#PolarAxes-contour">contour</a>(X,Y,Z,N)&nbsp;-&nbsp;contour&nbsp;N&nbsp;automatically-chosen<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;levels.<br>
&nbsp;<br>
<a href="#PolarAxes-contour">contour</a>(Z,V)&nbsp;and&nbsp;<a href="#PolarAxes-contour">contour</a>(X,Y,Z,V)&nbsp;-&nbsp;draw&nbsp;len(V)&nbsp;contour&nbsp;lines,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;the&nbsp;values&nbsp;specified&nbsp;in&nbsp;sequence&nbsp;V<br>
&nbsp;<br>
<a href="#PolarAxes-contourf">contourf</a>(...,&nbsp;V)&nbsp;-&nbsp;fill&nbsp;the&nbsp;(len(V)-1)&nbsp;regions&nbsp;between&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values&nbsp;in&nbsp;V<br>
&nbsp;<br>
<a href="#PolarAxes-contour">contour</a>(Z,&nbsp;**kwargs)&nbsp;-&nbsp;Use&nbsp;keyword&nbsp;args&nbsp;to&nbsp;control&nbsp;colors,&nbsp;linewidth,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;origin,&nbsp;cmap&nbsp;...&nbsp;see&nbsp;below<br>
&nbsp;<br>
X,&nbsp;Y,&nbsp;and&nbsp;Z&nbsp;must&nbsp;be&nbsp;arrays&nbsp;with&nbsp;the&nbsp;same&nbsp;dimensions.<br>
Z&nbsp;may&nbsp;be&nbsp;a&nbsp;masked&nbsp;array,&nbsp;but&nbsp;filled&nbsp;contouring&nbsp;may&nbsp;not&nbsp;handle<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;internal&nbsp;masked&nbsp;regions&nbsp;correctly.<br>
&nbsp;<br>
C&nbsp;=&nbsp;<a href="#PolarAxes-contour">contour</a>(...)&nbsp;returns&nbsp;a&nbsp;ContourSet&nbsp;object.<br>
&nbsp;<br>
&nbsp;<br>
Optional&nbsp;keyword&nbsp;args&nbsp;are&nbsp;shown&nbsp;with&nbsp;their&nbsp;defaults&nbsp;below&nbsp;(you&nbsp;must<br>
use&nbsp;kwargs&nbsp;for&nbsp;these):<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;colors&nbsp;=&nbsp;None;&nbsp;or&nbsp;one&nbsp;of&nbsp;the&nbsp;following:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;tuple&nbsp;of&nbsp;matplotlib&nbsp;color&nbsp;args&nbsp;(string,&nbsp;float,&nbsp;rgb,&nbsp;etc),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;different&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;different&nbsp;colors&nbsp;in&nbsp;the&nbsp;order<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specified<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;one&nbsp;string&nbsp;color,&nbsp;e.g.&nbsp;colors&nbsp;=&nbsp;'r'&nbsp;or&nbsp;colors&nbsp;=&nbsp;'red',&nbsp;all&nbsp;levels<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;this&nbsp;color<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;colors&nbsp;==&nbsp;None,&nbsp;the&nbsp;colormap&nbsp;specified&nbsp;by&nbsp;cmap&nbsp;will&nbsp;be&nbsp;used<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;alpha=1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;blending&nbsp;value<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;cmap&nbsp;=&nbsp;None:&nbsp;a&nbsp;cm&nbsp;Colormap&nbsp;instance&nbsp;from&nbsp;matplotlib.cm.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;cmap&nbsp;==&nbsp;None&nbsp;and&nbsp;colors&nbsp;==&nbsp;None,&nbsp;a&nbsp;default&nbsp;Colormap&nbsp;is&nbsp;used.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;norm&nbsp;=&nbsp;None:&nbsp;a&nbsp;matplotlib.colors.Normalize&nbsp;instance&nbsp;for<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scaling&nbsp;data&nbsp;values&nbsp;to&nbsp;colors.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;norm&nbsp;==&nbsp;None,&nbsp;and&nbsp;colors&nbsp;==&nbsp;None,&nbsp;the&nbsp;default<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linear&nbsp;scaling&nbsp;is&nbsp;used.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;origin&nbsp;=&nbsp;None:&nbsp;'upper'|'lower'|'image'|None.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;'image',&nbsp;the&nbsp;rc&nbsp;value&nbsp;for&nbsp;image.origin&nbsp;will&nbsp;be&nbsp;used.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;None&nbsp;(default),&nbsp;the&nbsp;first&nbsp;value&nbsp;of&nbsp;Z&nbsp;will&nbsp;correspond<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;the&nbsp;lower&nbsp;left&nbsp;corner,&nbsp;location&nbsp;(0,0).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This&nbsp;keyword&nbsp;is&nbsp;active&nbsp;only&nbsp;if&nbsp;contourf&nbsp;is&nbsp;called&nbsp;with<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;one&nbsp;or&nbsp;two&nbsp;arguments,&nbsp;that&nbsp;is,&nbsp;without&nbsp;explicitly<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specifying&nbsp;X&nbsp;and&nbsp;Y.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;extent&nbsp;=&nbsp;None:&nbsp;(x0,x1,y0,y1);&nbsp;also&nbsp;active&nbsp;only&nbsp;if&nbsp;X&nbsp;and&nbsp;Y<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;not&nbsp;specified.&nbsp;&nbsp;If&nbsp;origin&nbsp;is&nbsp;not&nbsp;None,&nbsp;then&nbsp;extent&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interpreted&nbsp;as&nbsp;in&nbsp;imshow:&nbsp;it&nbsp;gives&nbsp;the&nbsp;outer&nbsp;pixel&nbsp;boundaries.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;this&nbsp;case,&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[0,0]&nbsp;is&nbsp;the&nbsp;center&nbsp;of&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixel,&nbsp;not&nbsp;a&nbsp;corner.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;origin&nbsp;is&nbsp;None,&nbsp;then&nbsp;(x0,y0)&nbsp;is&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[0,0],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and&nbsp;(x1,y1)&nbsp;is&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[-1,-1].<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;locator&nbsp;=&nbsp;None:&nbsp;an&nbsp;instance&nbsp;of&nbsp;a&nbsp;ticker.Locator&nbsp;subclass;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;is&nbsp;MaxNLocator.&nbsp;&nbsp;It&nbsp;is&nbsp;used&nbsp;to&nbsp;determine&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contour&nbsp;levels&nbsp;if&nbsp;they&nbsp;are&nbsp;not&nbsp;given&nbsp;explicitly&nbsp;via&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;V&nbsp;argument.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*****&nbsp;New:&nbsp;*****<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;extend&nbsp;=&nbsp;'neither',&nbsp;'both',&nbsp;'min',&nbsp;'max'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Unless&nbsp;this&nbsp;is&nbsp;'neither'&nbsp;(default),&nbsp;contour&nbsp;levels&nbsp;are<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;automatically&nbsp;added&nbsp;to&nbsp;one&nbsp;or&nbsp;both&nbsp;ends&nbsp;of&nbsp;the&nbsp;range&nbsp;so&nbsp;that<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;all&nbsp;data&nbsp;are&nbsp;included.&nbsp;&nbsp;These&nbsp;added&nbsp;ranges&nbsp;are&nbsp;then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapped&nbsp;to&nbsp;the&nbsp;special&nbsp;colormap&nbsp;values&nbsp;which&nbsp;default&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;ends&nbsp;of&nbsp;the&nbsp;colormap&nbsp;range,&nbsp;but&nbsp;can&nbsp;be&nbsp;set&nbsp;via<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Colormap.set_under()&nbsp;and&nbsp;Colormap.set_over()&nbsp;methods.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;replace&nbsp;clip_ends=True&nbsp;and&nbsp;V&nbsp;=&nbsp;[-100,&nbsp;2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2,&nbsp;100],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;use&nbsp;extend='both'&nbsp;and&nbsp;V&nbsp;=&nbsp;[2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2].<br>
&nbsp;&nbsp;&nbsp;&nbsp;****************<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;contour&nbsp;only:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;linewidths&nbsp;=&nbsp;None:&nbsp;or&nbsp;one&nbsp;of&nbsp;these:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;number&nbsp;-&nbsp;all&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;with&nbsp;this&nbsp;linewidth,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.g.&nbsp;linewidths&nbsp;=&nbsp;0.6<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;tuple&nbsp;of&nbsp;numbers,&nbsp;e.g.&nbsp;linewidths&nbsp;=&nbsp;(0.4,&nbsp;0.8,&nbsp;1.2)&nbsp;different<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;with&nbsp;different&nbsp;linewidths&nbsp;in&nbsp;the&nbsp;order<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specified<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;linewidths&nbsp;==&nbsp;None,&nbsp;the&nbsp;default&nbsp;width&nbsp;in&nbsp;lines.linewidth&nbsp;in<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;matplotlibrc&nbsp;is&nbsp;used<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;contourf&nbsp;only:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*****&nbsp;Obsolete:&nbsp;****<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;clip_ends&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;False,&nbsp;the&nbsp;limits&nbsp;for&nbsp;color&nbsp;scaling&nbsp;are&nbsp;set&nbsp;to&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;contour&nbsp;levels.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;True&nbsp;(default)&nbsp;clips&nbsp;the&nbsp;scaling&nbsp;limits.&nbsp;&nbsp;Example:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;the&nbsp;contour&nbsp;boundaries&nbsp;are&nbsp;V&nbsp;=&nbsp;[-100,&nbsp;2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2,&nbsp;100],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;then&nbsp;the&nbsp;scaling&nbsp;limits&nbsp;will&nbsp;be&nbsp;[-100,&nbsp;100]&nbsp;if&nbsp;clip_ends<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;False,&nbsp;and&nbsp;[-3,&nbsp;3]&nbsp;if&nbsp;clip_ends&nbsp;is&nbsp;True.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;linewidths&nbsp;=&nbsp;None&nbsp;or&nbsp;a&nbsp;number;&nbsp;default&nbsp;of&nbsp;0.05&nbsp;works&nbsp;for<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Postscript;&nbsp;a&nbsp;value&nbsp;of&nbsp;about&nbsp;0.5&nbsp;seems&nbsp;better&nbsp;for&nbsp;Agg.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;antialiased&nbsp;=&nbsp;True&nbsp;(default)&nbsp;or&nbsp;False;&nbsp;if&nbsp;False,&nbsp;there&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;no&nbsp;need&nbsp;to&nbsp;increase&nbsp;the&nbsp;linewidths&nbsp;for&nbsp;Agg,&nbsp;but&nbsp;True&nbsp;gives<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nicer&nbsp;color&nbsp;boundaries.&nbsp;&nbsp;If&nbsp;antialiased&nbsp;is&nbsp;True&nbsp;and&nbsp;linewidths<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;too&nbsp;small,&nbsp;then&nbsp;there&nbsp;may&nbsp;be&nbsp;light-colored&nbsp;lines&nbsp;at&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;boundaries&nbsp;caused&nbsp;by&nbsp;the&nbsp;antialiasing.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;nchunk&nbsp;=&nbsp;0&nbsp;(default)&nbsp;for&nbsp;no&nbsp;subdivision&nbsp;of&nbsp;the&nbsp;domain;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specify&nbsp;a&nbsp;positive&nbsp;integer&nbsp;to&nbsp;divide&nbsp;the&nbsp;domain&nbsp;into<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;subdomains&nbsp;of&nbsp;roughly&nbsp;nchunk&nbsp;by&nbsp;nchunk&nbsp;points.&nbsp;This&nbsp;may<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;never&nbsp;actually&nbsp;be&nbsp;advantageous,&nbsp;so&nbsp;this&nbsp;option&nbsp;may&nbsp;be<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removed.&nbsp;&nbsp;Chunking&nbsp;introduces&nbsp;artifacts&nbsp;at&nbsp;the&nbsp;chunk<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boundaries&nbsp;unless&nbsp;antialiased&nbsp;=&nbsp;False,&nbsp;or&nbsp;linewidths&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set&nbsp;to&nbsp;a&nbsp;large&nbsp;enough&nbsp;value&nbsp;for&nbsp;the&nbsp;particular&nbsp;renderer&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolution.</tt></dd></dl>

<dl><dt><a name="PolarAxes-csd"><strong>csd</strong></a>(self, x, y, NFFT<font color="#909090">=256</font>, Fs<font color="#909090">=2</font>, detrend<font color="#909090">=&lt;function detrend_none at 0x847d844&gt;</font>, window<font color="#909090">=&lt;function window_hanning at 0x847d72c&gt;</font>, noverlap<font color="#909090">=0</font>, **kwargs)</dt><dd><tt>CSD(x,&nbsp;y,&nbsp;NFFT=256,&nbsp;Fs=2,&nbsp;detrend=detrend_none,<br>
&nbsp;&nbsp;&nbsp;&nbsp;window=window_hanning,&nbsp;noverlap=0,&nbsp;**kwargs)<br>
The&nbsp;cross&nbsp;spectral&nbsp;density&nbsp;Pxy&nbsp;by&nbsp;Welches&nbsp;average&nbsp;periodogram&nbsp;method.<br>
The&nbsp;vectors&nbsp;x&nbsp;and&nbsp;y&nbsp;are&nbsp;divided&nbsp;into&nbsp;NFFT&nbsp;length&nbsp;segments.&nbsp;&nbsp;Each<br>
segment&nbsp;is&nbsp;detrended&nbsp;by&nbsp;function&nbsp;detrend&nbsp;and&nbsp;windowed&nbsp;by&nbsp;function<br>
window.&nbsp;&nbsp;The&nbsp;product&nbsp;of&nbsp;the&nbsp;direct&nbsp;FFTs&nbsp;of&nbsp;x&nbsp;and&nbsp;y&nbsp;are&nbsp;averaged&nbsp;over<br>
each&nbsp;segment&nbsp;to&nbsp;compute&nbsp;Pxy,&nbsp;with&nbsp;a&nbsp;scaling&nbsp;to&nbsp;correct&nbsp;for&nbsp;power&nbsp;loss<br>
due&nbsp;to&nbsp;windowing.<br>
See&nbsp;the&nbsp;PSD&nbsp;help&nbsp;for&nbsp;a&nbsp;description&nbsp;of&nbsp;the&nbsp;optional&nbsp;parameters.<br>
Returns&nbsp;the&nbsp;tuple&nbsp;Pxy,&nbsp;freqs.&nbsp;&nbsp;Pxy&nbsp;is&nbsp;the&nbsp;cross&nbsp;spectrum&nbsp;(complex<br>
valued),&nbsp;and&nbsp;10*log10(|Pxy|)&nbsp;is&nbsp;plotted<br>
Refs:<br>
&nbsp;&nbsp;Bendat&nbsp;&amp;&nbsp;Piersol&nbsp;--&nbsp;Random&nbsp;Data:&nbsp;Analysis&nbsp;and&nbsp;Measurement<br>
&nbsp;&nbsp;&nbsp;&nbsp;Procedures,&nbsp;John&nbsp;Wiley&nbsp;&amp;&nbsp;Sons&nbsp;(1986)<br>
kwargs&nbsp;control&nbsp;the&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarAxes-disconnect"><strong>disconnect</strong></a>(self, cid)</dt><dd><tt>disconnect&nbsp;from&nbsp;the&nbsp;<a href="#Axes">Axes</a>&nbsp;event.</tt></dd></dl>

<dl><dt><a name="PolarAxes-draw_artist"><strong>draw_artist</strong></a>(self, a)</dt><dd><tt>This&nbsp;method&nbsp;can&nbsp;only&nbsp;be&nbsp;used&nbsp;after&nbsp;an&nbsp;initial&nbsp;draw&nbsp;which<br>
caches&nbsp;the&nbsp;renderer.&nbsp;&nbsp;It&nbsp;is&nbsp;used&nbsp;to&nbsp;efficiently&nbsp;update&nbsp;<a href="#Axes">Axes</a><br>
data&nbsp;(axis&nbsp;ticks,&nbsp;labels,&nbsp;etc&nbsp;are&nbsp;not&nbsp;updated)</tt></dd></dl>

<dl><dt><a name="PolarAxes-errorbar"><strong>errorbar</strong></a>(self, x, y, yerr<font color="#909090">=None</font>, xerr<font color="#909090">=None</font>, fmt<font color="#909090">='b-'</font>, ecolor<font color="#909090">=None</font>, capsize<font color="#909090">=3</font>, barsabove<font color="#909090">=False</font>, **kwargs)</dt><dd><tt>ERRORBAR(x,&nbsp;y,&nbsp;yerr=None,&nbsp;xerr=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fmt='b-',&nbsp;ecolor=None,&nbsp;capsize=3,&nbsp;barsabove=False)<br>
Plot&nbsp;x&nbsp;versus&nbsp;y&nbsp;with&nbsp;error&nbsp;deltas&nbsp;in&nbsp;yerr&nbsp;and&nbsp;xerr.<br>
Vertical&nbsp;errorbars&nbsp;are&nbsp;plotted&nbsp;if&nbsp;yerr&nbsp;is&nbsp;not&nbsp;None<br>
Horizontal&nbsp;errorbars&nbsp;are&nbsp;plotted&nbsp;if&nbsp;xerr&nbsp;is&nbsp;not&nbsp;None<br>
xerr&nbsp;and&nbsp;yerr&nbsp;may&nbsp;be&nbsp;any&nbsp;of:<br>
&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;rank-0,&nbsp;Nx1&nbsp;Numpy&nbsp;array&nbsp;&nbsp;-&nbsp;symmetric&nbsp;errorbars&nbsp;+/-&nbsp;value<br>
&nbsp;&nbsp;&nbsp;&nbsp;an&nbsp;N-element&nbsp;list&nbsp;or&nbsp;tuple&nbsp;-&nbsp;symmetric&nbsp;errorbars&nbsp;+/-&nbsp;value<br>
&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;rank-1,&nbsp;Nx2&nbsp;Numpy&nbsp;array&nbsp;&nbsp;-&nbsp;asymmetric&nbsp;errorbars&nbsp;-column1/+column2<br>
Alternatively,&nbsp;x,&nbsp;y,&nbsp;xerr,&nbsp;and&nbsp;yerr&nbsp;can&nbsp;all&nbsp;be&nbsp;scalars,&nbsp;which<br>
plots&nbsp;a&nbsp;single&nbsp;error&nbsp;bar&nbsp;at&nbsp;x,&nbsp;y.<br>
&nbsp;&nbsp;&nbsp;&nbsp;fmt&nbsp;is&nbsp;the&nbsp;plot&nbsp;format&nbsp;symbol&nbsp;for&nbsp;y.&nbsp;&nbsp;if&nbsp;fmt&nbsp;is&nbsp;None,&nbsp;just<br>
&nbsp;&nbsp;&nbsp;&nbsp;plot&nbsp;the&nbsp;errorbars&nbsp;with&nbsp;no&nbsp;line&nbsp;symbols.&nbsp;&nbsp;This&nbsp;can&nbsp;be&nbsp;useful<br>
&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;creating&nbsp;a&nbsp;bar&nbsp;plot&nbsp;with&nbsp;errorbars<br>
&nbsp;&nbsp;&nbsp;&nbsp;ecolor&nbsp;is&nbsp;a&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;which&nbsp;gives&nbsp;the&nbsp;color&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;errorbar&nbsp;lines;&nbsp;if&nbsp;None,&nbsp;use&nbsp;the&nbsp;marker&nbsp;color.<br>
&nbsp;&nbsp;&nbsp;&nbsp;capsize&nbsp;is&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;error&nbsp;bar&nbsp;caps&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;barsabove,&nbsp;if&nbsp;True,&nbsp;will&nbsp;plot&nbsp;the&nbsp;errorbars&nbsp;above&nbsp;the&nbsp;plot&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;default&nbsp;is&nbsp;below<br>
&nbsp;&nbsp;&nbsp;&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;on&nbsp;to&nbsp;the&nbsp;plot&nbsp;command&nbsp;for&nbsp;the&nbsp;markers.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;So&nbsp;you&nbsp;can&nbsp;add&nbsp;additional&nbsp;key=value&nbsp;pairs&nbsp;to&nbsp;control&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errorbar&nbsp;markers.&nbsp;&nbsp;For&nbsp;example,&nbsp;this&nbsp;code&nbsp;makes&nbsp;big&nbsp;red<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;squares&nbsp;with&nbsp;thick&nbsp;green&nbsp;edges<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&gt;&gt;&gt;&nbsp;x,y,yerr&nbsp;=&nbsp;rand(3,10)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&gt;&gt;&gt;&nbsp;<a href="#PolarAxes-errorbar">errorbar</a>(x,&nbsp;y,&nbsp;yerr,&nbsp;marker='s',<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mfc='red',&nbsp;mec='green',&nbsp;ms=20,&nbsp;mew=4)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mfc,&nbsp;mec,&nbsp;ms&nbsp;and&nbsp;mew&nbsp;are&nbsp;aliases&nbsp;for&nbsp;the&nbsp;longer&nbsp;property<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;names,&nbsp;markerfacecolor,&nbsp;markeredgecolor,&nbsp;markersize&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewith.<br>
valid&nbsp;kwargs&nbsp;for&nbsp;the&nbsp;marker&nbsp;properties&nbsp;are<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;length&nbsp;3&nbsp;tuple.&nbsp;&nbsp;The&nbsp;first&nbsp;element&nbsp;is&nbsp;the<br>
Line2D&nbsp;instance&nbsp;for&nbsp;the&nbsp;y&nbsp;symbol&nbsp;lines.&nbsp;&nbsp;The&nbsp;second&nbsp;element&nbsp;is<br>
a&nbsp;list&nbsp;of&nbsp;error&nbsp;bar&nbsp;cap&nbsp;lines,&nbsp;the&nbsp;third&nbsp;element&nbsp;is&nbsp;a&nbsp;list&nbsp;of<br>
line&nbsp;collections&nbsp;for&nbsp;the&nbsp;horizontal&nbsp;and&nbsp;vertical&nbsp;error&nbsp;ranges</tt></dd></dl>

<dl><dt><a name="PolarAxes-fill"><strong>fill</strong></a>(self, *args, **kwargs)</dt><dd><tt>FILL(*args,&nbsp;**kwargs)<br>
plot&nbsp;filled&nbsp;polygons.&nbsp;&nbsp;*args&nbsp;is&nbsp;a&nbsp;variable&nbsp;length&nbsp;argument,&nbsp;allowing<br>
for&nbsp;multiple&nbsp;x,y&nbsp;pairs&nbsp;with&nbsp;an&nbsp;optional&nbsp;color&nbsp;format&nbsp;string;&nbsp;see&nbsp;plot<br>
for&nbsp;details&nbsp;on&nbsp;the&nbsp;argument&nbsp;parsing.&nbsp;&nbsp;For&nbsp;example,&nbsp;all&nbsp;of&nbsp;the<br>
following&nbsp;are&nbsp;legal,&nbsp;assuming&nbsp;ax&nbsp;is&nbsp;an&nbsp;<a href="#Axes">Axes</a>&nbsp;instance:<br>
&nbsp;&nbsp;ax.<a href="#PolarAxes-fill">fill</a>(x,y)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;plot&nbsp;polygon&nbsp;with&nbsp;vertices&nbsp;at&nbsp;x,y<br>
&nbsp;&nbsp;ax.<a href="#PolarAxes-fill">fill</a>(x,y,&nbsp;'b'&nbsp;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;plot&nbsp;polygon&nbsp;with&nbsp;vertices&nbsp;at&nbsp;x,y&nbsp;in&nbsp;blue<br>
An&nbsp;arbitrary&nbsp;number&nbsp;of&nbsp;x,&nbsp;y,&nbsp;color&nbsp;groups&nbsp;can&nbsp;be&nbsp;specified,&nbsp;as&nbsp;in<br>
&nbsp;&nbsp;ax.<a href="#PolarAxes-fill">fill</a>(x1,&nbsp;y1,&nbsp;'g',&nbsp;x2,&nbsp;y2,&nbsp;'r')<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;patches&nbsp;that&nbsp;were&nbsp;added<br>
The&nbsp;same&nbsp;color&nbsp;strings&nbsp;that&nbsp;plot&nbsp;supports&nbsp;are&nbsp;supported&nbsp;by&nbsp;the&nbsp;fill<br>
format&nbsp;string.<br>
kwargs&nbsp;control&nbsp;the&nbsp;Polygon&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarAxes-format_xdata"><strong>format_xdata</strong></a>(self, x)</dt><dd><tt>Return&nbsp;x&nbsp;string&nbsp;formatted.&nbsp;&nbsp;This&nbsp;function&nbsp;will&nbsp;use&nbsp;the&nbsp;attribute<br>
self.<strong>fmt_xdata</strong>&nbsp;if&nbsp;it&nbsp;is&nbsp;callable,&nbsp;else&nbsp;will&nbsp;fall&nbsp;back&nbsp;on&nbsp;the&nbsp;xaxis<br>
major&nbsp;formatter</tt></dd></dl>

<dl><dt><a name="PolarAxes-format_ydata"><strong>format_ydata</strong></a>(self, y)</dt><dd><tt>Return&nbsp;y&nbsp;string&nbsp;formatted.&nbsp;&nbsp;This&nbsp;function&nbsp;will&nbsp;use&nbsp;the&nbsp;attribute<br>
self.<strong>fmt_ydata</strong>&nbsp;if&nbsp;it&nbsp;is&nbsp;callable,&nbsp;else&nbsp;will&nbsp;fall&nbsp;back&nbsp;on&nbsp;the&nbsp;yaxis<br>
major&nbsp;formatter</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_adjustable"><strong>get_adjustable</strong></a>(self)</dt></dl>

<dl><dt><a name="PolarAxes-get_anchor"><strong>get_anchor</strong></a>(self)</dt></dl>

<dl><dt><a name="PolarAxes-get_aspect"><strong>get_aspect</strong></a>(self)</dt></dl>

<dl><dt><a name="PolarAxes-get_autoscale_on"><strong>get_autoscale_on</strong></a>(self)</dt><dd><tt>Get&nbsp;whether&nbsp;autoscaling&nbsp;is&nbsp;applied&nbsp;on&nbsp;plot&nbsp;commands</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_axis_bgcolor"><strong>get_axis_bgcolor</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;axis&nbsp;background&nbsp;color</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_axisbelow"><strong>get_axisbelow</strong></a>(self)</dt><dd><tt>Get&nbsp;whether&nbsp;axist&nbsp;below&nbsp;is&nbsp;true&nbsp;or&nbsp;not</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_child_artists"><strong>get_child_artists</strong></a>(self)</dt><dd><tt>Return&nbsp;a&nbsp;list&nbsp;of&nbsp;artists&nbsp;the&nbsp;axes&nbsp;contains.&nbsp;&nbsp;Deprecated</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_cursor_props"><strong>get_cursor_props</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;cursor&nbsp;props&nbsp;as&nbsp;a&nbsp;linewidth,&nbsp;color&nbsp;tuple&nbsp;where<br>
linewidth&nbsp;is&nbsp;a&nbsp;float&nbsp;and&nbsp;color&nbsp;is&nbsp;an&nbsp;RGBA&nbsp;tuple</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_frame"><strong>get_frame</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;axes&nbsp;Rectangle&nbsp;frame</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_frame_on"><strong>get_frame_on</strong></a>(self)</dt><dd><tt>Get&nbsp;whether&nbsp;the&nbsp;axes&nbsp;rectangle&nbsp;patch&nbsp;is&nbsp;drawn</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_images"><strong>get_images</strong></a>(self)</dt><dd><tt>return&nbsp;a&nbsp;list&nbsp;of&nbsp;<a href="#Axes">Axes</a>&nbsp;images&nbsp;contained&nbsp;by&nbsp;the&nbsp;<a href="#Axes">Axes</a></tt></dd></dl>

<dl><dt><a name="PolarAxes-get_legend"><strong>get_legend</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;Legend&nbsp;instance,&nbsp;or&nbsp;None&nbsp;if&nbsp;no&nbsp;legend&nbsp;is&nbsp;defined</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_lines"><strong>get_lines</strong></a>(self)</dt><dd><tt>Return&nbsp;a&nbsp;list&nbsp;of&nbsp;lines&nbsp;contained&nbsp;by&nbsp;the&nbsp;<a href="#Axes">Axes</a></tt></dd></dl>

<dl><dt><a name="PolarAxes-get_navigate"><strong>get_navigate</strong></a>(self)</dt><dd><tt>Get&nbsp;whether&nbsp;the&nbsp;axes&nbsp;responds&nbsp;to&nbsp;navigation&nbsp;commands</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_navigate_mode"><strong>get_navigate_mode</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;navigation&nbsp;toolbar&nbsp;button&nbsp;status:&nbsp;'PAN',&nbsp;'ZOOM',&nbsp;or&nbsp;None</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_position"><strong>get_position</strong></a>(self, original<font color="#909090">=False</font>)</dt><dd><tt>Return&nbsp;the&nbsp;axes&nbsp;rectangle&nbsp;left,&nbsp;bottom,&nbsp;width,&nbsp;height</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_renderer_cache"><strong>get_renderer_cache</strong></a>(self)</dt></dl>

<dl><dt><a name="PolarAxes-get_window_extent"><strong>get_window_extent</strong></a>(self, *args, **kwargs)</dt><dd><tt>get&nbsp;the&nbsp;axes&nbsp;bounding&nbsp;box&nbsp;in&nbsp;display&nbsp;space;&nbsp;args&nbsp;and&nbsp;kwargs&nbsp;are&nbsp;empty</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_xaxis"><strong>get_xaxis</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;XAxis&nbsp;instance</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_xgridlines"><strong>get_xgridlines</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;x&nbsp;grid&nbsp;lines&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Line2D&nbsp;instances</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_xlim"><strong>get_xlim</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;x&nbsp;axis&nbsp;range&nbsp;[xmin,&nbsp;xmax]</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_xticklabels"><strong>get_xticklabels</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;xtick&nbsp;labels&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Text&nbsp;instances</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_xticklines"><strong>get_xticklines</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;xtick&nbsp;lines&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Line2D&nbsp;instances</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_xticks"><strong>get_xticks</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;x&nbsp;ticks&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;locations</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_yaxis"><strong>get_yaxis</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;YAxis&nbsp;instance</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_ygridlines"><strong>get_ygridlines</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;y&nbsp;grid&nbsp;lines&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Line2D&nbsp;instances</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_ylim"><strong>get_ylim</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;y&nbsp;axis&nbsp;range&nbsp;[ymin,&nbsp;ymax]</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_yticklabels"><strong>get_yticklabels</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;ytick&nbsp;labels&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Text&nbsp;instances</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_yticklines"><strong>get_yticklines</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;ytick&nbsp;lines&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Line2D&nbsp;instances</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_yticks"><strong>get_yticks</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;y&nbsp;ticks&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;locations</tt></dd></dl>

<dl><dt><a name="PolarAxes-hist"><strong>hist</strong></a>(self, x, bins<font color="#909090">=10</font>, normed<font color="#909090">=0</font>, bottom<font color="#909090">=None</font>, align<font color="#909090">='edge'</font>, orientation<font color="#909090">='vertical'</font>, width<font color="#909090">=None</font>, log<font color="#909090">=False</font>, **kwargs)</dt><dd><tt>HIST(x,&nbsp;bins=10,&nbsp;normed=0,&nbsp;bottom=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;align='edge',&nbsp;orientation='vertical',&nbsp;width=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log=False,&nbsp;**kwargs)<br>
Compute&nbsp;the&nbsp;histogram&nbsp;of&nbsp;x.&nbsp;&nbsp;bins&nbsp;is&nbsp;either&nbsp;an&nbsp;integer&nbsp;number&nbsp;of<br>
bins&nbsp;or&nbsp;a&nbsp;sequence&nbsp;giving&nbsp;the&nbsp;bins.&nbsp;&nbsp;x&nbsp;are&nbsp;the&nbsp;data&nbsp;to&nbsp;be&nbsp;binned.<br>
The&nbsp;return&nbsp;values&nbsp;is&nbsp;(n,&nbsp;bins,&nbsp;patches)<br>
If&nbsp;normed&nbsp;is&nbsp;true,&nbsp;the&nbsp;first&nbsp;element&nbsp;of&nbsp;the&nbsp;return&nbsp;tuple&nbsp;will<br>
be&nbsp;the&nbsp;counts&nbsp;normalized&nbsp;to&nbsp;form&nbsp;a&nbsp;probability&nbsp;density,&nbsp;ie,<br>
n/(len(x)*dbin).&nbsp;&nbsp;In&nbsp;a&nbsp;probability&nbsp;density,&nbsp;the&nbsp;integral&nbsp;of<br>
the&nbsp;histogram&nbsp;should&nbsp;be&nbsp;one&nbsp;(we&nbsp;assume&nbsp;equally&nbsp;spaced&nbsp;bins);<br>
you&nbsp;can&nbsp;verify&nbsp;that&nbsp;with<br>
&nbsp;&nbsp;#&nbsp;trapezoidal&nbsp;integration&nbsp;of&nbsp;the&nbsp;probability&nbsp;density&nbsp;function<br>
&nbsp;&nbsp;from&nbsp;matplotlib.mlab&nbsp;import&nbsp;trapz<br>
&nbsp;&nbsp;pdf,&nbsp;bins,&nbsp;patches&nbsp;=&nbsp;ax.<a href="#PolarAxes-hist">hist</a>(...)<br>
&nbsp;&nbsp;print&nbsp;trapz(bins,&nbsp;pdf)<br>
align&nbsp;=&nbsp;'edge'&nbsp;|&nbsp;'center'.&nbsp;&nbsp;Interprets&nbsp;bins&nbsp;either&nbsp;as&nbsp;edge<br>
or&nbsp;center&nbsp;values<br>
orientation&nbsp;=&nbsp;'horizontal'&nbsp;|&nbsp;'vertical'.&nbsp;&nbsp;If&nbsp;horizontal,&nbsp;barh<br>
will&nbsp;be&nbsp;used&nbsp;and&nbsp;the&nbsp;"bottom"&nbsp;kwarg&nbsp;will&nbsp;be&nbsp;the&nbsp;left&nbsp;edges.<br>
width:&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;bars.&nbsp;&nbsp;If&nbsp;None,&nbsp;automatically&nbsp;compute<br>
the&nbsp;width.<br>
log:&nbsp;if&nbsp;True,&nbsp;the&nbsp;histogram&nbsp;axis&nbsp;will&nbsp;be&nbsp;set&nbsp;to&nbsp;a&nbsp;log&nbsp;scale<br>
kwargs&nbsp;are&nbsp;used&nbsp;to&nbsp;update&nbsp;the&nbsp;properties&nbsp;of&nbsp;the<br>
hist&nbsp;Rectangles:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarAxes-hlines"><strong>hlines</strong></a>(self, y, xmin, xmax, colors<font color="#909090">='k'</font>, linestyle<font color="#909090">='solid'</font>, label<font color="#909090">=''</font>, **kwargs)</dt><dd><tt>HLINES(y,&nbsp;xmin,&nbsp;xmax,&nbsp;colors='k',&nbsp;linestyle='solid',&nbsp;**kwargs)<br>
plot&nbsp;horizontal&nbsp;lines&nbsp;at&nbsp;each&nbsp;y&nbsp;from&nbsp;xmin&nbsp;to&nbsp;xmax.&nbsp;&nbsp;xmin&nbsp;or&nbsp;xmax&nbsp;can<br>
be&nbsp;scalars&nbsp;or&nbsp;len(x)&nbsp;numpy&nbsp;arrays.&nbsp;&nbsp;If&nbsp;they&nbsp;are&nbsp;scalars,&nbsp;then&nbsp;the<br>
respective&nbsp;values&nbsp;are&nbsp;constant,&nbsp;else&nbsp;the&nbsp;widths&nbsp;of&nbsp;the&nbsp;lines&nbsp;are<br>
determined&nbsp;by&nbsp;xmin&nbsp;and&nbsp;xmax<br>
colors&nbsp;is&nbsp;a&nbsp;line&nbsp;collections&nbsp;color&nbsp;args,&nbsp;either&nbsp;a&nbsp;single&nbsp;color&nbsp;or&nbsp;a&nbsp;len(x)&nbsp;list&nbsp;of&nbsp;colors<br>
linestyle&nbsp;is&nbsp;one&nbsp;of&nbsp;solid|dashed|dashdot|dotted<br>
Returns&nbsp;the&nbsp;LineCollection&nbsp;that&nbsp;was&nbsp;added</tt></dd></dl>

<dl><dt><a name="PolarAxes-hold"><strong>hold</strong></a>(self, b<font color="#909090">=None</font>)</dt><dd><tt>HOLD(b=None)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;hold&nbsp;state.&nbsp;&nbsp;If&nbsp;hold&nbsp;is&nbsp;None&nbsp;(default),&nbsp;toggle&nbsp;the<br>
hold&nbsp;state.&nbsp;&nbsp;Else&nbsp;set&nbsp;the&nbsp;hold&nbsp;state&nbsp;to&nbsp;boolean&nbsp;value&nbsp;b.<br>
&nbsp;<br>
Eg<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-hold">hold</a>()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;toggle&nbsp;hold<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-hold">hold</a>(True)&nbsp;&nbsp;#&nbsp;hold&nbsp;is&nbsp;on<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-hold">hold</a>(False)&nbsp;#&nbsp;hold&nbsp;is&nbsp;off<br>
&nbsp;<br>
&nbsp;<br>
When&nbsp;hold&nbsp;is&nbsp;True,&nbsp;subsequent&nbsp;plot&nbsp;commands&nbsp;will&nbsp;be&nbsp;added&nbsp;to<br>
the&nbsp;current&nbsp;axes.&nbsp;&nbsp;When&nbsp;hold&nbsp;is&nbsp;False,&nbsp;the&nbsp;current&nbsp;axes&nbsp;and<br>
figure&nbsp;will&nbsp;be&nbsp;cleared&nbsp;on&nbsp;the&nbsp;next&nbsp;plot&nbsp;command</tt></dd></dl>

<dl><dt><a name="PolarAxes-imshow"><strong>imshow</strong></a>(self, X, cmap<font color="#909090">=None</font>, norm<font color="#909090">=None</font>, aspect<font color="#909090">=None</font>, interpolation<font color="#909090">=None</font>, alpha<font color="#909090">=1.0</font>, vmin<font color="#909090">=None</font>, vmax<font color="#909090">=None</font>, origin<font color="#909090">=None</font>, extent<font color="#909090">=None</font>, shape<font color="#909090">=None</font>, filternorm<font color="#909090">=1</font>, filterrad<font color="#909090">=4.0</font>, imlim<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>IMSHOW(X,&nbsp;cmap=None,&nbsp;norm=None,&nbsp;aspect=None,&nbsp;interpolation=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha=1.0,&nbsp;vmin=None,&nbsp;vmax=None,&nbsp;origin=None,&nbsp;extent=None)<br>
&nbsp;<br>
IMSHOW(X)&nbsp;-&nbsp;plot&nbsp;image&nbsp;X&nbsp;to&nbsp;current&nbsp;axes,&nbsp;resampling&nbsp;to&nbsp;scale&nbsp;to&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;(X&nbsp;may&nbsp;be&nbsp;numarray/Numeric&nbsp;array&nbsp;or&nbsp;PIL&nbsp;image)<br>
&nbsp;<br>
IMSHOW(X,&nbsp;**kwargs)&nbsp;-&nbsp;Use&nbsp;keyword&nbsp;args&nbsp;to&nbsp;control&nbsp;image&nbsp;scaling,<br>
colormapping&nbsp;etc.&nbsp;See&nbsp;below&nbsp;for&nbsp;details<br>
&nbsp;<br>
&nbsp;<br>
Display&nbsp;the&nbsp;image&nbsp;in&nbsp;X&nbsp;to&nbsp;current&nbsp;axes.&nbsp;&nbsp;X&nbsp;may&nbsp;be&nbsp;a&nbsp;float&nbsp;array,&nbsp;a<br>
UInt8&nbsp;array&nbsp;or&nbsp;a&nbsp;PIL&nbsp;image.&nbsp;If&nbsp;X&nbsp;is&nbsp;an&nbsp;array,&nbsp;X&nbsp;can&nbsp;have&nbsp;the&nbsp;following<br>
shapes:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;MxN&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;luminance&nbsp;(grayscale,&nbsp;float&nbsp;array&nbsp;only)<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;MxNx3&nbsp;&nbsp;:&nbsp;RGB&nbsp;(float&nbsp;or&nbsp;UInt8&nbsp;array)<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;MxNx4&nbsp;&nbsp;:&nbsp;RGBA&nbsp;(float&nbsp;or&nbsp;UInt8&nbsp;array)<br>
&nbsp;<br>
The&nbsp;value&nbsp;for&nbsp;each&nbsp;component&nbsp;of&nbsp;MxNx3&nbsp;and&nbsp;MxNx4&nbsp;float&nbsp;arrays&nbsp;should&nbsp;be<br>
in&nbsp;the&nbsp;range&nbsp;0.0&nbsp;to&nbsp;1.0;&nbsp;MxN&nbsp;float&nbsp;arrays&nbsp;may&nbsp;be&nbsp;normalised.<br>
&nbsp;<br>
A&nbsp;matplotlib.image.AxesImage&nbsp;instance&nbsp;is&nbsp;returned<br>
&nbsp;<br>
The&nbsp;following&nbsp;kwargs&nbsp;are&nbsp;allowed:<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;cmap&nbsp;is&nbsp;a&nbsp;cm&nbsp;colormap&nbsp;instance,&nbsp;eg&nbsp;cm.jet.&nbsp;&nbsp;If&nbsp;None,&nbsp;default&nbsp;to&nbsp;rc<br>
&nbsp;&nbsp;&nbsp;&nbsp;image.cmap&nbsp;value&nbsp;(Ignored&nbsp;when&nbsp;X&nbsp;has&nbsp;RGB(A)&nbsp;information)<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;aspect&nbsp;is&nbsp;one&nbsp;of:&nbsp;auto,&nbsp;equal,&nbsp;or&nbsp;a&nbsp;number.&nbsp;&nbsp;If&nbsp;None,&nbsp;default&nbsp;to&nbsp;rc<br>
&nbsp;&nbsp;&nbsp;&nbsp;image.aspect&nbsp;value<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;interpolation&nbsp;is&nbsp;one&nbsp;of:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'nearest',&nbsp;'bilinear',&nbsp;'bicubic',&nbsp;'spline16',&nbsp;'spline36',<br>
&nbsp;&nbsp;&nbsp;&nbsp;'hanning',&nbsp;'hamming',&nbsp;'hermite',&nbsp;'kaiser',&nbsp;'quadric',<br>
&nbsp;&nbsp;&nbsp;&nbsp;'catrom',&nbsp;'gaussian',&nbsp;'bessel',&nbsp;'mitchell',&nbsp;'sinc',<br>
&nbsp;&nbsp;&nbsp;&nbsp;'lanczos',&nbsp;'blackman'<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;interpolation&nbsp;is&nbsp;None,&nbsp;default&nbsp;to&nbsp;rc<br>
&nbsp;&nbsp;&nbsp;&nbsp;image.interpolation.&nbsp;&nbsp;See&nbsp;also&nbsp;th&nbsp;the&nbsp;filternorm&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;filterrad&nbsp;parameters<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;norm&nbsp;is&nbsp;a&nbsp;matplotlib.colors.Normalize&nbsp;instance;&nbsp;default&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;normalization().&nbsp;&nbsp;This&nbsp;scales&nbsp;luminance&nbsp;-&gt;&nbsp;0-1&nbsp;(only&nbsp;used&nbsp;for&nbsp;an<br>
&nbsp;&nbsp;&nbsp;&nbsp;MxN&nbsp;float&nbsp;array).<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;are&nbsp;used&nbsp;to&nbsp;scale&nbsp;a&nbsp;luminance&nbsp;image&nbsp;to&nbsp;0-1.&nbsp;&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;either&nbsp;is&nbsp;None,&nbsp;the&nbsp;min&nbsp;and&nbsp;max&nbsp;of&nbsp;the&nbsp;luminance&nbsp;values&nbsp;will&nbsp;be<br>
&nbsp;&nbsp;&nbsp;&nbsp;used.&nbsp;&nbsp;Note&nbsp;if&nbsp;you&nbsp;pass&nbsp;a&nbsp;norm&nbsp;instance,&nbsp;the&nbsp;settings&nbsp;for&nbsp;vmin&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;vmax&nbsp;will&nbsp;be&nbsp;ignored.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;alpha&nbsp;=&nbsp;1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;blending&nbsp;value<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;origin&nbsp;is&nbsp;'upper'&nbsp;or&nbsp;'lower',&nbsp;to&nbsp;place&nbsp;the&nbsp;[0,0]<br>
&nbsp;&nbsp;&nbsp;&nbsp;index&nbsp;of&nbsp;the&nbsp;array&nbsp;in&nbsp;the&nbsp;upper&nbsp;left&nbsp;or&nbsp;lower&nbsp;left&nbsp;corner&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;axes.&nbsp;&nbsp;If&nbsp;None,&nbsp;default&nbsp;to&nbsp;rc&nbsp;image.origin<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;extent&nbsp;is&nbsp;(left,&nbsp;right,&nbsp;bottom,&nbsp;top)&nbsp;data&nbsp;values&nbsp;of&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;axes.&nbsp;&nbsp;The&nbsp;default&nbsp;assigns&nbsp;zero-based&nbsp;row,&nbsp;column&nbsp;indices<br>
&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;the&nbsp;x,&nbsp;y&nbsp;centers&nbsp;of&nbsp;the&nbsp;pixels.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;shape&nbsp;is&nbsp;for&nbsp;raw&nbsp;buffer&nbsp;images<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;filternorm&nbsp;is&nbsp;a&nbsp;parameter&nbsp;for&nbsp;the&nbsp;antigrain&nbsp;image&nbsp;resize<br>
&nbsp;&nbsp;&nbsp;&nbsp;filter.&nbsp;&nbsp;From&nbsp;the&nbsp;antigrain&nbsp;documentation,&nbsp;if&nbsp;normalize=1,<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;filter&nbsp;normalizes&nbsp;integer&nbsp;values&nbsp;and&nbsp;corrects&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;rounding&nbsp;errors.&nbsp;It&nbsp;doesn't&nbsp;do&nbsp;anything&nbsp;with&nbsp;the&nbsp;source<br>
&nbsp;&nbsp;&nbsp;&nbsp;floating&nbsp;point&nbsp;values,&nbsp;it&nbsp;corrects&nbsp;only&nbsp;integers&nbsp;according<br>
&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;the&nbsp;rule&nbsp;of&nbsp;1.0&nbsp;which&nbsp;means&nbsp;that&nbsp;any&nbsp;sum&nbsp;of&nbsp;pixel<br>
&nbsp;&nbsp;&nbsp;&nbsp;weights&nbsp;must&nbsp;be&nbsp;equal&nbsp;to&nbsp;1.0.&nbsp;&nbsp;So,&nbsp;the&nbsp;filter&nbsp;function<br>
&nbsp;&nbsp;&nbsp;&nbsp;must&nbsp;produce&nbsp;a&nbsp;graph&nbsp;of&nbsp;the&nbsp;proper&nbsp;shape.<br>
&nbsp;<br>
&nbsp;*&nbsp;filterrad:&nbsp;the&nbsp;filter&nbsp;radius&nbsp;for&nbsp;filters&nbsp;that&nbsp;have&nbsp;a&nbsp;radius<br>
&nbsp;&nbsp;&nbsp;parameter,&nbsp;ie&nbsp;when&nbsp;interpolation&nbsp;is&nbsp;one&nbsp;of:&nbsp;'sinc',<br>
&nbsp;&nbsp;&nbsp;'lanczos'&nbsp;or&nbsp;'blackman'<br>
&nbsp;<br>
Additional&nbsp;kwargs&nbsp;are&nbsp;matplotlib.artist&nbsp;properties</tt></dd></dl>

<dl><dt><a name="PolarAxes-in_axes"><strong>in_axes</strong></a>(self, xwin, ywin)</dt><dd><tt>return&nbsp;True&nbsp;is&nbsp;the&nbsp;point&nbsp;xwin,&nbsp;ywin&nbsp;(display&nbsp;coords)&nbsp;are&nbsp;in&nbsp;the&nbsp;<a href="#Axes">Axes</a></tt></dd></dl>

<dl><dt><a name="PolarAxes-ishold"><strong>ishold</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;HOLD&nbsp;status&nbsp;of&nbsp;the&nbsp;axes</tt></dd></dl>

<dl><dt><a name="PolarAxes-legend"><strong>legend</strong></a>(self, *args, **kwargs)</dt><dd><tt>LEGEND(*args,&nbsp;**kwargs)<br>
&nbsp;<br>
Place&nbsp;a&nbsp;legend&nbsp;on&nbsp;the&nbsp;current&nbsp;axes&nbsp;at&nbsp;location&nbsp;loc.&nbsp;&nbsp;Labels&nbsp;are&nbsp;a<br>
sequence&nbsp;of&nbsp;strings&nbsp;and&nbsp;loc&nbsp;can&nbsp;be&nbsp;a&nbsp;string&nbsp;or&nbsp;an&nbsp;integer&nbsp;specifying<br>
the&nbsp;legend&nbsp;location<br>
&nbsp;<br>
USAGE:<br>
&nbsp;<br>
&nbsp;&nbsp;Make&nbsp;a&nbsp;legend&nbsp;with&nbsp;existing&nbsp;lines<br>
&nbsp;<br>
&nbsp;&nbsp;&gt;&gt;&gt;&nbsp;<a href="#PolarAxes-legend">legend</a>()<br>
&nbsp;<br>
&nbsp;&nbsp;legend&nbsp;by&nbsp;itself&nbsp;will&nbsp;try&nbsp;and&nbsp;build&nbsp;a&nbsp;legend&nbsp;using&nbsp;the&nbsp;label<br>
&nbsp;&nbsp;property&nbsp;of&nbsp;the&nbsp;lines/patches/collections.&nbsp;&nbsp;You&nbsp;can&nbsp;set&nbsp;the&nbsp;label&nbsp;of<br>
&nbsp;&nbsp;a&nbsp;line&nbsp;by&nbsp;doing&nbsp;<a href="#PolarAxes-plot">plot</a>(x,&nbsp;y,&nbsp;label='my&nbsp;data')&nbsp;or&nbsp;line.<a href="#PolarAxes-set_label">set_label</a>('my<br>
&nbsp;&nbsp;data').&nbsp;If&nbsp;label&nbsp;is&nbsp;set&nbsp;to&nbsp;'_nolegend_',&nbsp;the&nbsp;item&nbsp;will&nbsp;not&nbsp;be&nbsp;shown<br>
&nbsp;&nbsp;in&nbsp;legend.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;automatically&nbsp;generate&nbsp;the&nbsp;legend&nbsp;from&nbsp;labels<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-legend">legend</a>(&nbsp;('label1',&nbsp;'label2',&nbsp;'label3')&nbsp;)<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;Make&nbsp;a&nbsp;legend&nbsp;for&nbsp;a&nbsp;list&nbsp;of&nbsp;lines&nbsp;and&nbsp;labels<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-legend">legend</a>(&nbsp;(line1,&nbsp;line2,&nbsp;line3),&nbsp;('label1',&nbsp;'label2',&nbsp;'label3')&nbsp;)<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;Make&nbsp;a&nbsp;legend&nbsp;at&nbsp;a&nbsp;given&nbsp;location,&nbsp;using&nbsp;a&nbsp;location&nbsp;argument<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;<a href="#PolarAxes-legend">legend</a>(&nbsp;LABELS,&nbsp;LOC&nbsp;)&nbsp;&nbsp;or<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;<a href="#PolarAxes-legend">legend</a>(&nbsp;LINES,&nbsp;LABELS,&nbsp;LOC&nbsp;)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-legend">legend</a>(&nbsp;('label1',&nbsp;'label2',&nbsp;'label3'),&nbsp;loc='upper&nbsp;left')<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-legend">legend</a>(&nbsp;(line1,&nbsp;line2,&nbsp;line3),&nbsp;&nbsp;('label1',&nbsp;'label2',&nbsp;'label3'),&nbsp;loc=2)<br>
&nbsp;<br>
The&nbsp;location&nbsp;codes&nbsp;are<br>
&nbsp;<br>
&nbsp;&nbsp;'best'&nbsp;:&nbsp;0,<br>
&nbsp;&nbsp;'upper&nbsp;right'&nbsp;&nbsp;:&nbsp;1,&nbsp;(default)<br>
&nbsp;&nbsp;'upper&nbsp;left'&nbsp;&nbsp;&nbsp;:&nbsp;2,<br>
&nbsp;&nbsp;'lower&nbsp;left'&nbsp;&nbsp;&nbsp;:&nbsp;3,<br>
&nbsp;&nbsp;'lower&nbsp;right'&nbsp;&nbsp;:&nbsp;4,<br>
&nbsp;&nbsp;'right'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;5,<br>
&nbsp;&nbsp;'center&nbsp;left'&nbsp;&nbsp;:&nbsp;6,<br>
&nbsp;&nbsp;'center&nbsp;right'&nbsp;:&nbsp;7,<br>
&nbsp;&nbsp;'lower&nbsp;center'&nbsp;:&nbsp;8,<br>
&nbsp;&nbsp;'upper&nbsp;center'&nbsp;:&nbsp;9,<br>
&nbsp;&nbsp;'center'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;10,<br>
&nbsp;<br>
If&nbsp;none&nbsp;of&nbsp;these&nbsp;are&nbsp;suitable,&nbsp;loc&nbsp;can&nbsp;be&nbsp;a&nbsp;2-tuple&nbsp;giving&nbsp;x,y<br>
in&nbsp;axes&nbsp;coords,&nbsp;ie,<br>
&nbsp;<br>
&nbsp;&nbsp;loc&nbsp;=&nbsp;0,&nbsp;1&nbsp;is&nbsp;left&nbsp;top<br>
&nbsp;&nbsp;loc&nbsp;=&nbsp;0.5,&nbsp;0.5&nbsp;is&nbsp;center,&nbsp;center<br>
&nbsp;<br>
and&nbsp;so&nbsp;on.&nbsp;&nbsp;The&nbsp;following&nbsp;kwargs&nbsp;are&nbsp;supported:<br>
&nbsp;<br>
isaxes=True&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;whether&nbsp;this&nbsp;is&nbsp;an&nbsp;axes&nbsp;legend<br>
numpoints&nbsp;=&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;number&nbsp;of&nbsp;points&nbsp;in&nbsp;the&nbsp;legend&nbsp;line<br>
prop&nbsp;=&nbsp;FontProperties(size='smaller')&nbsp;&nbsp;#&nbsp;the&nbsp;font&nbsp;property<br>
pad&nbsp;=&nbsp;0.2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;fractional&nbsp;whitespace&nbsp;inside&nbsp;the&nbsp;legend&nbsp;border<br>
markerscale&nbsp;=&nbsp;0.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;relative&nbsp;size&nbsp;of&nbsp;legend&nbsp;markers&nbsp;vs.&nbsp;original<br>
shadow&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;if&nbsp;True,&nbsp;draw&nbsp;a&nbsp;shadow&nbsp;behind&nbsp;legend<br>
labelsep&nbsp;=&nbsp;0.005&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;vertical&nbsp;space&nbsp;between&nbsp;the&nbsp;legend&nbsp;entries<br>
handlelen&nbsp;=&nbsp;0.05&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;legend&nbsp;lines<br>
handletextsep&nbsp;=&nbsp;0.02&nbsp;#&nbsp;the&nbsp;space&nbsp;between&nbsp;the&nbsp;legend&nbsp;line&nbsp;and&nbsp;legend&nbsp;text<br>
axespad&nbsp;=&nbsp;0.02&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;border&nbsp;between&nbsp;the&nbsp;axes&nbsp;and&nbsp;legend&nbsp;edge</tt></dd></dl>

<dl><dt><a name="PolarAxes-loglog"><strong>loglog</strong></a>(self, *args, **kwargs)</dt><dd><tt>LOGLOG(*args,&nbsp;**kwargs)<br>
Make&nbsp;a&nbsp;loglog&nbsp;plot&nbsp;with&nbsp;log&nbsp;scaling&nbsp;on&nbsp;the&nbsp;a&nbsp;and&nbsp;y&nbsp;axis.&nbsp;&nbsp;The&nbsp;args<br>
to&nbsp;semilog&nbsp;x&nbsp;are&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;args&nbsp;to&nbsp;plot.&nbsp;&nbsp;See&nbsp;help&nbsp;plot&nbsp;for<br>
more&nbsp;info.<br>
Optional&nbsp;keyword&nbsp;args&nbsp;supported&nbsp;are&nbsp;any&nbsp;of&nbsp;the&nbsp;kwargs<br>
supported&nbsp;by&nbsp;plot&nbsp;or&nbsp;set_xscale&nbsp;or&nbsp;set_yscale.&nbsp;&nbsp;Notable,&nbsp;for<br>
log&nbsp;scaling:<br>
&nbsp;&nbsp;*&nbsp;basex:&nbsp;base&nbsp;of&nbsp;the&nbsp;x&nbsp;logarithm<br>
&nbsp;&nbsp;*&nbsp;subsx:&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;ticks;&nbsp;None&nbsp;defaults&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of&nbsp;decades&nbsp;in&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;plot;&nbsp;see&nbsp;set_xscale&nbsp;for&nbsp;details<br>
&nbsp;&nbsp;*&nbsp;basey:&nbsp;base&nbsp;of&nbsp;the&nbsp;y&nbsp;logarithm<br>
&nbsp;&nbsp;*&nbsp;subsy:&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;yticks;&nbsp;None&nbsp;defaults&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of&nbsp;decades&nbsp;in&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;plot;&nbsp;see&nbsp;set_yscale&nbsp;for&nbsp;details<br>
The&nbsp;remaining&nbsp;valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarAxes-matshow"><strong>matshow</strong></a>(self, Z, **kwargs)</dt><dd><tt>Plot&nbsp;a&nbsp;matrix&nbsp;as&nbsp;an&nbsp;image.<br>
&nbsp;<br>
The&nbsp;matrix&nbsp;will&nbsp;be&nbsp;shown&nbsp;the&nbsp;way&nbsp;it&nbsp;would&nbsp;be&nbsp;printed,<br>
with&nbsp;the&nbsp;first&nbsp;row&nbsp;at&nbsp;the&nbsp;top.&nbsp;&nbsp;Row&nbsp;and&nbsp;column&nbsp;numbering<br>
is&nbsp;zero-based.<br>
&nbsp;<br>
Argument:<br>
&nbsp;&nbsp;&nbsp;&nbsp;Z&nbsp;&nbsp;&nbsp;anything&nbsp;that&nbsp;can&nbsp;be&nbsp;interpreted&nbsp;as&nbsp;a&nbsp;2-D&nbsp;array<br>
&nbsp;<br>
kwargs:&nbsp;all&nbsp;are&nbsp;passed&nbsp;to&nbsp;imshow.&nbsp;&nbsp;matshow&nbsp;sets&nbsp;defaults<br>
for&nbsp;extent,&nbsp;origin,&nbsp;interpolation,&nbsp;and&nbsp;aspect;&nbsp;use&nbsp;care<br>
in&nbsp;overriding&nbsp;the&nbsp;extent&nbsp;and&nbsp;origin&nbsp;kwargs,&nbsp;because&nbsp;they<br>
interact.&nbsp;&nbsp;(Also,&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;change&nbsp;them,&nbsp;you&nbsp;probably<br>
should&nbsp;be&nbsp;using&nbsp;imshow&nbsp;directly&nbsp;in&nbsp;your&nbsp;own&nbsp;version&nbsp;of<br>
matshow.)<br>
&nbsp;<br>
Returns:&nbsp;an&nbsp;AxesImage&nbsp;instance</tt></dd></dl>

<dl><dt><a name="PolarAxes-panx"><strong>panx</strong></a>(self, numsteps)</dt><dd><tt>Pan&nbsp;the&nbsp;x&nbsp;axis&nbsp;numsteps&nbsp;(plus&nbsp;pan&nbsp;right,&nbsp;minus&nbsp;pan&nbsp;left)</tt></dd></dl>

<dl><dt><a name="PolarAxes-pany"><strong>pany</strong></a>(self, numsteps)</dt><dd><tt>Pan&nbsp;the&nbsp;x&nbsp;axis&nbsp;numsteps&nbsp;(plus&nbsp;pan&nbsp;up,&nbsp;minus&nbsp;pan&nbsp;down)</tt></dd></dl>

<dl><dt><a name="PolarAxes-pcolor"><strong>pcolor</strong></a>(self, *args, **kwargs)</dt><dd><tt><a href="#PolarAxes-pcolor">pcolor</a>(*args,&nbsp;**kwargs):&nbsp;pseudocolor&nbsp;plot&nbsp;of&nbsp;a&nbsp;2-D&nbsp;array<br>
Function&nbsp;signatures<br>
&nbsp;&nbsp;<a href="#PolarAxes-pcolor">pcolor</a>(C,&nbsp;**kwargs)<br>
&nbsp;&nbsp;<a href="#PolarAxes-pcolor">pcolor</a>(X,&nbsp;Y,&nbsp;C,&nbsp;**kwargs)<br>
C&nbsp;is&nbsp;the&nbsp;array&nbsp;of&nbsp;color&nbsp;values<br>
X&nbsp;and&nbsp;Y,&nbsp;if&nbsp;given,&nbsp;specify&nbsp;the&nbsp;(x,y)&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;colored<br>
quadrilaterals;&nbsp;the&nbsp;quadrilateral&nbsp;for&nbsp;C[i,j]&nbsp;has&nbsp;corners&nbsp;at<br>
(X[i,j],Y[i,j]),&nbsp;(X[i,j+1],Y[i,j+1]),&nbsp;(X[i+1,j],Y[i+1,j]),<br>
(X[i+1,j+1],Y[i+1,j+1]).&nbsp;&nbsp;Ideally&nbsp;the&nbsp;dimensions&nbsp;of&nbsp;X&nbsp;and&nbsp;Y<br>
should&nbsp;be&nbsp;one&nbsp;greater&nbsp;than&nbsp;those&nbsp;of&nbsp;C;&nbsp;if&nbsp;the&nbsp;dimensions&nbsp;are&nbsp;the<br>
same,&nbsp;then&nbsp;the&nbsp;last&nbsp;row&nbsp;and&nbsp;column&nbsp;of&nbsp;C&nbsp;will&nbsp;be&nbsp;ignored.<br>
Note&nbsp;that&nbsp;the&nbsp;the&nbsp;column&nbsp;index&nbsp;corresponds&nbsp;to&nbsp;the&nbsp;x-coordinate,<br>
and&nbsp;the&nbsp;row&nbsp;index&nbsp;corresponds&nbsp;to&nbsp;y;&nbsp;for&nbsp;details,&nbsp;see<br>
the&nbsp;"Grid&nbsp;Orientation"&nbsp;section&nbsp;below.<br>
If&nbsp;either&nbsp;or&nbsp;both&nbsp;of&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;1-D&nbsp;arrays&nbsp;or&nbsp;column&nbsp;vectors,<br>
they&nbsp;will&nbsp;be&nbsp;expanded&nbsp;as&nbsp;needed&nbsp;into&nbsp;the&nbsp;appropriate&nbsp;2-D&nbsp;arrays,<br>
making&nbsp;a&nbsp;rectangular&nbsp;grid.<br>
X,Y&nbsp;and&nbsp;C&nbsp;may&nbsp;be&nbsp;masked&nbsp;arrays.&nbsp;&nbsp;If&nbsp;either&nbsp;C[i,j],&nbsp;or&nbsp;one<br>
of&nbsp;the&nbsp;vertices&nbsp;surrounding&nbsp;C[i,j]&nbsp;(X&nbsp;or&nbsp;Y&nbsp;at&nbsp;[i,j],[i+1,j],<br>
[i,j+1],[i=1,j+1])&nbsp;is&nbsp;masked,&nbsp;nothing&nbsp;is&nbsp;plotted.<br>
Optional&nbsp;keyword&nbsp;args&nbsp;are&nbsp;shown&nbsp;with&nbsp;their&nbsp;defaults&nbsp;below&nbsp;(you&nbsp;must<br>
use&nbsp;kwargs&nbsp;for&nbsp;these):<br>
&nbsp;&nbsp;*&nbsp;cmap&nbsp;=&nbsp;cm.jet&nbsp;:&nbsp;a&nbsp;cm&nbsp;Colormap&nbsp;instance&nbsp;from&nbsp;matplotlib.cm.<br>
&nbsp;&nbsp;&nbsp;&nbsp;defaults&nbsp;to&nbsp;cm.jet<br>
&nbsp;&nbsp;*&nbsp;norm&nbsp;=&nbsp;Normalize()&nbsp;:&nbsp;matplotlib.colors.Normalize&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;used&nbsp;to&nbsp;scale&nbsp;luminance&nbsp;data&nbsp;to&nbsp;0,1.<br>
&nbsp;&nbsp;*&nbsp;vmin=None&nbsp;and&nbsp;vmax=None&nbsp;:&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;are&nbsp;used&nbsp;in&nbsp;conjunction<br>
&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;norm&nbsp;to&nbsp;normalize&nbsp;luminance&nbsp;data.&nbsp;&nbsp;If&nbsp;either&nbsp;are&nbsp;None,&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;min&nbsp;and&nbsp;max&nbsp;of&nbsp;the&nbsp;color&nbsp;array&nbsp;C&nbsp;is&nbsp;used.&nbsp;&nbsp;If&nbsp;you&nbsp;pass&nbsp;a&nbsp;norm<br>
&nbsp;&nbsp;&nbsp;&nbsp;instance,&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;will&nbsp;be&nbsp;None<br>
&nbsp;&nbsp;*&nbsp;shading&nbsp;=&nbsp;'flat'&nbsp;:&nbsp;or&nbsp;'faceted'.&nbsp;&nbsp;If&nbsp;'faceted',&nbsp;a&nbsp;black&nbsp;grid&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;drawn&nbsp;around&nbsp;each&nbsp;rectangle;&nbsp;if&nbsp;'flat',&nbsp;edges&nbsp;are&nbsp;not&nbsp;drawn<br>
&nbsp;&nbsp;*&nbsp;alpha=1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;blending&nbsp;value<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;matplotlib.collections.PatchCollection<br>
object<br>
Grid&nbsp;Orientation<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;orientation&nbsp;follows&nbsp;the&nbsp;Matlab(TM)&nbsp;convention:&nbsp;an<br>
&nbsp;&nbsp;&nbsp;&nbsp;array&nbsp;C&nbsp;with&nbsp;shape&nbsp;(nrows,&nbsp;ncolumns)&nbsp;is&nbsp;plotted&nbsp;with<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;column&nbsp;number&nbsp;as&nbsp;X&nbsp;and&nbsp;the&nbsp;row&nbsp;number&nbsp;as&nbsp;Y,&nbsp;increasing<br>
&nbsp;&nbsp;&nbsp;&nbsp;up;&nbsp;hence&nbsp;it&nbsp;is&nbsp;plotted&nbsp;the&nbsp;way&nbsp;the&nbsp;array&nbsp;would&nbsp;be&nbsp;printed,<br>
&nbsp;&nbsp;&nbsp;&nbsp;except&nbsp;that&nbsp;the&nbsp;Y&nbsp;axis&nbsp;is&nbsp;reversed.&nbsp;&nbsp;That&nbsp;is,&nbsp;C&nbsp;is&nbsp;taken<br>
&nbsp;&nbsp;&nbsp;&nbsp;as&nbsp;C(y,x).<br>
&nbsp;&nbsp;&nbsp;&nbsp;Similarly&nbsp;for&nbsp;meshgrid:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;arange(5)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;=&nbsp;arange(3)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X,&nbsp;Y&nbsp;=&nbsp;meshgrid(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;equivalent&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X&nbsp;=&nbsp;array([[0,&nbsp;1,&nbsp;2,&nbsp;3,&nbsp;4],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,&nbsp;1,&nbsp;2,&nbsp;3,&nbsp;4],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,&nbsp;1,&nbsp;2,&nbsp;3,&nbsp;4]])<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Y&nbsp;=&nbsp;array([[0,&nbsp;0,&nbsp;0,&nbsp;0,&nbsp;0],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,&nbsp;1,&nbsp;1,&nbsp;1,&nbsp;1],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2,&nbsp;2,&nbsp;2,&nbsp;2,&nbsp;2]])<br>
&nbsp;&nbsp;&nbsp;&nbsp;so&nbsp;if&nbsp;you&nbsp;have<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C&nbsp;=&nbsp;rand(&nbsp;len(x),&nbsp;len(y))<br>
&nbsp;&nbsp;&nbsp;&nbsp;then&nbsp;you&nbsp;need<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-pcolor">pcolor</a>(X,&nbsp;Y,&nbsp;transpose(C))<br>
&nbsp;&nbsp;&nbsp;&nbsp;or<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-pcolor">pcolor</a>(transpose(C))<br>
Dimensions<br>
&nbsp;&nbsp;&nbsp;&nbsp;Matlab&nbsp;pcolor&nbsp;always&nbsp;discards<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;last&nbsp;row&nbsp;and&nbsp;column&nbsp;of&nbsp;C,&nbsp;but&nbsp;matplotlib&nbsp;displays<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;last&nbsp;row&nbsp;and&nbsp;column&nbsp;if&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;not&nbsp;specified,&nbsp;or<br>
&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;X&nbsp;and&nbsp;Y&nbsp;have&nbsp;one&nbsp;more&nbsp;row&nbsp;and&nbsp;column&nbsp;than&nbsp;C.<br>
kwargs&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;control&nbsp;the&nbsp;PolyCollection&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clim:&nbsp;a&nbsp;length&nbsp;2&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap:&nbsp;a&nbsp;colormap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colorbar:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarAxes-pcolor_classic"><strong>pcolor_classic</strong></a>(self, *args)</dt><dd><tt>pcolor_classic&nbsp;is&nbsp;no&nbsp;longer&nbsp;available;&nbsp;please&nbsp;use&nbsp;pcolor,<br>
which&nbsp;is&nbsp;a&nbsp;drop-in&nbsp;replacement.</tt></dd></dl>

<dl><dt><a name="PolarAxes-pcolormesh"><strong>pcolormesh</strong></a>(self, *args, **kwargs)</dt><dd><tt>PCOLORMESH(*args,&nbsp;**kwargs)<br>
Function&nbsp;signatures<br>
&nbsp;&nbsp;PCOLORMESH(C)&nbsp;-&nbsp;make&nbsp;a&nbsp;pseudocolor&nbsp;plot&nbsp;of&nbsp;matrix&nbsp;C<br>
&nbsp;&nbsp;PCOLORMESH(X,&nbsp;Y,&nbsp;C)&nbsp;-&nbsp;a&nbsp;pseudo&nbsp;color&nbsp;plot&nbsp;of&nbsp;C&nbsp;on&nbsp;the&nbsp;matrices&nbsp;X&nbsp;and&nbsp;Y<br>
&nbsp;&nbsp;PCOLORMESH(C,&nbsp;**kwargs)&nbsp;-&nbsp;Use&nbsp;keyword&nbsp;args&nbsp;to&nbsp;control&nbsp;colormapping&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scaling;&nbsp;see&nbsp;below<br>
C&nbsp;may&nbsp;be&nbsp;a&nbsp;masked&nbsp;array,&nbsp;but&nbsp;X&nbsp;and&nbsp;Y&nbsp;may&nbsp;not.&nbsp;&nbsp;Masked&nbsp;array&nbsp;support<br>
is&nbsp;implemented&nbsp;via&nbsp;cmap&nbsp;and&nbsp;norm;&nbsp;in&nbsp;contrast,&nbsp;pcolor&nbsp;simply&nbsp;does<br>
not&nbsp;draw&nbsp;quadrilaterals&nbsp;with&nbsp;masked&nbsp;colors&nbsp;or&nbsp;vertices.<br>
Optional&nbsp;keyword&nbsp;args&nbsp;are&nbsp;shown&nbsp;with&nbsp;their&nbsp;defaults&nbsp;below&nbsp;(you&nbsp;must<br>
use&nbsp;kwargs&nbsp;for&nbsp;these):<br>
&nbsp;&nbsp;*&nbsp;cmap&nbsp;=&nbsp;cm.jet&nbsp;:&nbsp;a&nbsp;cm&nbsp;Colormap&nbsp;instance&nbsp;from&nbsp;matplotlib.cm.<br>
&nbsp;&nbsp;&nbsp;&nbsp;defaults&nbsp;to&nbsp;cm.jet<br>
&nbsp;&nbsp;*&nbsp;norm&nbsp;=&nbsp;Normalize()&nbsp;:&nbsp;matplotlib.colors.Normalize&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;used&nbsp;to&nbsp;scale&nbsp;luminance&nbsp;data&nbsp;to&nbsp;0,1.&nbsp;&nbsp;Instantiate&nbsp;it<br>
&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;clip=False&nbsp;if&nbsp;C&nbsp;is&nbsp;a&nbsp;masked&nbsp;array.<br>
&nbsp;&nbsp;*&nbsp;vmin=None&nbsp;and&nbsp;vmax=None&nbsp;:&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;are&nbsp;used&nbsp;in&nbsp;conjunction<br>
&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;norm&nbsp;to&nbsp;normalize&nbsp;luminance&nbsp;data.&nbsp;&nbsp;If&nbsp;either&nbsp;are&nbsp;None,&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;min&nbsp;and&nbsp;max&nbsp;of&nbsp;the&nbsp;color&nbsp;array&nbsp;C&nbsp;is&nbsp;used.<br>
&nbsp;&nbsp;*&nbsp;shading&nbsp;=&nbsp;'flat'&nbsp;:&nbsp;or&nbsp;'faceted'.&nbsp;&nbsp;If&nbsp;'faceted',&nbsp;a&nbsp;black&nbsp;grid&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;drawn&nbsp;around&nbsp;each&nbsp;rectangle;&nbsp;if&nbsp;'flat',&nbsp;edge&nbsp;colors&nbsp;are&nbsp;same&nbsp;as<br>
&nbsp;&nbsp;&nbsp;&nbsp;face&nbsp;colors<br>
&nbsp;&nbsp;*&nbsp;alpha=1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;blending&nbsp;value<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;matplotlib.collections.PatchCollection<br>
object<br>
See&nbsp;pcolor&nbsp;for&nbsp;an&nbsp;explantion&nbsp;of&nbsp;the&nbsp;grid&nbsp;orientation&nbsp;and&nbsp;the<br>
expansion&nbsp;of&nbsp;1-D&nbsp;X&nbsp;and/or&nbsp;Y&nbsp;to&nbsp;2-D&nbsp;arrays.<br>
kwargs&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;control&nbsp;the&nbsp;QuadMesh&nbsp;polygon&nbsp;collection&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clim:&nbsp;a&nbsp;length&nbsp;2&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap:&nbsp;a&nbsp;colormap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colorbar:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarAxes-pick"><strong>pick</strong></a>(self, *args)</dt><dd><tt><a href="#PolarAxes-pick">pick</a>(mouseevent)<br>
&nbsp;<br>
each&nbsp;child&nbsp;artist&nbsp;will&nbsp;fire&nbsp;a&nbsp;pick&nbsp;event&nbsp;if&nbsp;mouseevent&nbsp;is&nbsp;over<br>
the&nbsp;artist&nbsp;and&nbsp;the&nbsp;artist&nbsp;has&nbsp;picker&nbsp;set</tt></dd></dl>

<dl><dt><a name="PolarAxes-pie"><strong>pie</strong></a>(self, x, explode<font color="#909090">=None</font>, labels<font color="#909090">=None</font>, colors<font color="#909090">=None</font>, autopct<font color="#909090">=None</font>, pctdistance<font color="#909090">=0.59999999999999998</font>, shadow<font color="#909090">=False</font>)</dt><dd><tt>PIE(x,&nbsp;explode=None,&nbsp;labels=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;colors=('b',&nbsp;'g',&nbsp;'r',&nbsp;'c',&nbsp;'m',&nbsp;'y',&nbsp;'k',&nbsp;'w'),<br>
&nbsp;&nbsp;&nbsp;&nbsp;autopct=None,&nbsp;pctdistance=0.6,&nbsp;shadow=False)<br>
&nbsp;<br>
Make&nbsp;a&nbsp;pie&nbsp;chart&nbsp;of&nbsp;array&nbsp;x.&nbsp;&nbsp;The&nbsp;fractional&nbsp;area&nbsp;of&nbsp;each&nbsp;wedge&nbsp;is<br>
given&nbsp;by&nbsp;x/sum(x).&nbsp;&nbsp;If&nbsp;sum(x)&lt;=1,&nbsp;then&nbsp;the&nbsp;values&nbsp;of&nbsp;x&nbsp;give&nbsp;the<br>
fractional&nbsp;area&nbsp;directly&nbsp;and&nbsp;the&nbsp;array&nbsp;will&nbsp;not&nbsp;be&nbsp;normalized.<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;explode,&nbsp;if&nbsp;not&nbsp;None,&nbsp;is&nbsp;a&nbsp;len(x)&nbsp;array&nbsp;which&nbsp;specifies&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;fraction&nbsp;of&nbsp;the&nbsp;radius&nbsp;to&nbsp;offset&nbsp;that&nbsp;wedge.<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;colors&nbsp;is&nbsp;a&nbsp;sequence&nbsp;of&nbsp;matplotlib&nbsp;color&nbsp;args&nbsp;that&nbsp;the&nbsp;pie&nbsp;chart<br>
&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;cycle.<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;labels,&nbsp;if&nbsp;not&nbsp;None,&nbsp;is&nbsp;a&nbsp;len(x)&nbsp;list&nbsp;of&nbsp;labels.<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;autopct,&nbsp;if&nbsp;not&nbsp;None,&nbsp;is&nbsp;a&nbsp;string&nbsp;or&nbsp;function&nbsp;used&nbsp;to&nbsp;label&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;wedges&nbsp;with&nbsp;their&nbsp;numeric&nbsp;value.&nbsp;&nbsp;The&nbsp;label&nbsp;will&nbsp;be&nbsp;placed&nbsp;inside<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;wedge.&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a&nbsp;format&nbsp;string,&nbsp;the&nbsp;label&nbsp;will&nbsp;be&nbsp;fmt%pct.<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a&nbsp;function,&nbsp;it&nbsp;will&nbsp;be&nbsp;called<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;pctdistance&nbsp;is&nbsp;the&nbsp;ratio&nbsp;between&nbsp;the&nbsp;center&nbsp;of&nbsp;each&nbsp;pie&nbsp;slice<br>
&nbsp;&nbsp;&nbsp;&nbsp;and&nbsp;the&nbsp;start&nbsp;of&nbsp;the&nbsp;text&nbsp;generated&nbsp;by&nbsp;autopct.&nbsp;&nbsp;Ignored&nbsp;if&nbsp;autopct<br>
&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;None;&nbsp;default&nbsp;is&nbsp;0.6.<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;shadow,&nbsp;if&nbsp;True,&nbsp;will&nbsp;draw&nbsp;a&nbsp;shadow&nbsp;beneath&nbsp;the&nbsp;pie.<br>
&nbsp;<br>
The&nbsp;pie&nbsp;chart&nbsp;will&nbsp;probably&nbsp;look&nbsp;best&nbsp;if&nbsp;the&nbsp;figure&nbsp;and&nbsp;axes&nbsp;are<br>
square.&nbsp;&nbsp;Eg,<br>
&nbsp;<br>
&nbsp;&nbsp;figure(figsize=(8,8))<br>
&nbsp;&nbsp;ax&nbsp;=&nbsp;axes([0.1,&nbsp;0.1,&nbsp;0.8,&nbsp;0.8])<br>
&nbsp;<br>
Return&nbsp;value:<br>
&nbsp;<br>
&nbsp;&nbsp;If&nbsp;autopct&nbsp;is&nbsp;None,&nbsp;return&nbsp;a&nbsp;list&nbsp;of&nbsp;(patches,&nbsp;texts),&nbsp;where&nbsp;patches<br>
&nbsp;&nbsp;is&nbsp;a&nbsp;sequence&nbsp;of&nbsp;matplotlib.patches.Wedge&nbsp;instances&nbsp;and&nbsp;texts&nbsp;is&nbsp;a<br>
&nbsp;&nbsp;list&nbsp;of&nbsp;the&nbsp;label&nbsp;Text&nbsp;instnaces<br>
&nbsp;<br>
&nbsp;&nbsp;If&nbsp;autopct&nbsp;is&nbsp;not&nbsp;None,&nbsp;return&nbsp;(patches,&nbsp;texts,&nbsp;autotexts),&nbsp;where<br>
&nbsp;&nbsp;patches&nbsp;and&nbsp;texts&nbsp;are&nbsp;as&nbsp;above,&nbsp;and&nbsp;autotexts&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;text<br>
&nbsp;&nbsp;instances&nbsp;for&nbsp;the&nbsp;numeric&nbsp;labels</tt></dd></dl>

<dl><dt><a name="PolarAxes-plot"><strong>plot</strong></a>(self, *args, **kwargs)</dt><dd><tt>PLOT(*args,&nbsp;**kwargs)<br>
Plot&nbsp;lines&nbsp;and/or&nbsp;markers&nbsp;to&nbsp;the&nbsp;<a href="#Axes">Axes</a>.&nbsp;&nbsp;*args&nbsp;is&nbsp;a&nbsp;variable&nbsp;length<br>
argument,&nbsp;allowing&nbsp;for&nbsp;multiple&nbsp;x,y&nbsp;pairs&nbsp;with&nbsp;an&nbsp;optional&nbsp;format<br>
string.&nbsp;&nbsp;For&nbsp;example,&nbsp;each&nbsp;of&nbsp;the&nbsp;following&nbsp;is&nbsp;legal<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-plot">plot</a>(x,y)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;plot&nbsp;x&nbsp;and&nbsp;y&nbsp;using&nbsp;the&nbsp;default&nbsp;line&nbsp;style&nbsp;and&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-plot">plot</a>(x,y,&nbsp;'bo')&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;plot&nbsp;x&nbsp;and&nbsp;y&nbsp;using&nbsp;blue&nbsp;circle&nbsp;markers<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-plot">plot</a>(y)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;plot&nbsp;y&nbsp;using&nbsp;x&nbsp;as&nbsp;index&nbsp;array&nbsp;0..N-1<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-plot">plot</a>(y,&nbsp;'r+')&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;ditto,&nbsp;but&nbsp;with&nbsp;red&nbsp;plusses<br>
If&nbsp;x&nbsp;and/or&nbsp;y&nbsp;is&nbsp;2-Dimensional,&nbsp;then&nbsp;the&nbsp;corresponding&nbsp;columns<br>
will&nbsp;be&nbsp;plotted.<br>
An&nbsp;arbitrary&nbsp;number&nbsp;of&nbsp;x,&nbsp;y,&nbsp;fmt&nbsp;groups&nbsp;can&nbsp;be&nbsp;specified,&nbsp;as&nbsp;in<br>
a.<a href="#PolarAxes-plot">plot</a>(x1,&nbsp;y1,&nbsp;'g^',&nbsp;x2,&nbsp;y2,&nbsp;'g-')<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;lines&nbsp;that&nbsp;were&nbsp;added.<br>
The&nbsp;following&nbsp;line&nbsp;styles&nbsp;are&nbsp;supported:<br>
&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;solid&nbsp;line<br>
&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;dashed&nbsp;line<br>
&nbsp;&nbsp;&nbsp;&nbsp;-.&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;dash-dot&nbsp;line<br>
&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;dotted&nbsp;line<br>
&nbsp;&nbsp;&nbsp;&nbsp;.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;pixels<br>
&nbsp;&nbsp;&nbsp;&nbsp;o&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;circle&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;^&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;triangle&nbsp;up&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;v&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;triangle&nbsp;down&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;triangle&nbsp;left&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;triangle&nbsp;right&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;s&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;square&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;plus&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;cross&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;D&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;diamond&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;thin&nbsp;diamond&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;tripod&nbsp;down&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;tripod&nbsp;up&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;tripod&nbsp;left&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;tripod&nbsp;right&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;hexagon&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;H&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;rotated&nbsp;hexagon&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;pentagon&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;vertical&nbsp;line&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;_&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;horizontal&nbsp;line&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;steps&nbsp;:&nbsp;use&nbsp;gnuplot&nbsp;style&nbsp;'steps'&nbsp;#&nbsp;kwarg&nbsp;only<br>
The&nbsp;following&nbsp;color&nbsp;abbreviations&nbsp;are&nbsp;supported<br>
&nbsp;&nbsp;&nbsp;&nbsp;b&nbsp;&nbsp;:&nbsp;blue<br>
&nbsp;&nbsp;&nbsp;&nbsp;g&nbsp;&nbsp;:&nbsp;green<br>
&nbsp;&nbsp;&nbsp;&nbsp;r&nbsp;&nbsp;:&nbsp;red<br>
&nbsp;&nbsp;&nbsp;&nbsp;c&nbsp;&nbsp;:&nbsp;cyan<br>
&nbsp;&nbsp;&nbsp;&nbsp;m&nbsp;&nbsp;:&nbsp;magenta<br>
&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;&nbsp;:&nbsp;yellow<br>
&nbsp;&nbsp;&nbsp;&nbsp;k&nbsp;&nbsp;:&nbsp;black<br>
&nbsp;&nbsp;&nbsp;&nbsp;w&nbsp;&nbsp;:&nbsp;white<br>
In&nbsp;addition,&nbsp;you&nbsp;can&nbsp;specify&nbsp;colors&nbsp;in&nbsp;many&nbsp;weird&nbsp;and<br>
wonderful&nbsp;ways,&nbsp;including&nbsp;full&nbsp;names&nbsp;'green',&nbsp;hex&nbsp;strings<br>
'#008000',&nbsp;RGB&nbsp;or&nbsp;RGBA&nbsp;tuples&nbsp;(0,1,0,1)&nbsp;or&nbsp;grayscale<br>
intensities&nbsp;as&nbsp;a&nbsp;string&nbsp;'0.8'.<br>
Line&nbsp;styles&nbsp;and&nbsp;colors&nbsp;are&nbsp;combined&nbsp;in&nbsp;a&nbsp;single&nbsp;format&nbsp;string,&nbsp;as&nbsp;in<br>
'bo'&nbsp;for&nbsp;blue&nbsp;circles.<br>
The&nbsp;**kwargs&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;set&nbsp;line&nbsp;properties&nbsp;(any&nbsp;property&nbsp;that&nbsp;has<br>
a&nbsp;set_*&nbsp;method).&nbsp;&nbsp;You&nbsp;can&nbsp;use&nbsp;this&nbsp;to&nbsp;set&nbsp;a&nbsp;line&nbsp;label&nbsp;(for&nbsp;auto<br>
legends),&nbsp;linewidth,&nbsp;anitialising,&nbsp;marker&nbsp;face&nbsp;color,&nbsp;etc.&nbsp;&nbsp;Here&nbsp;is&nbsp;an<br>
example:<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-plot">plot</a>([1,2,3],&nbsp;[1,2,3],&nbsp;'go-',&nbsp;label='line&nbsp;1',&nbsp;linewidth=2)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-plot">plot</a>([1,2,3],&nbsp;[1,4,9],&nbsp;'rs',&nbsp;&nbsp;label='line&nbsp;2')<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-axis">axis</a>([0,&nbsp;4,&nbsp;0,&nbsp;10])<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-legend">legend</a>()<br>
If&nbsp;you&nbsp;make&nbsp;multiple&nbsp;lines&nbsp;with&nbsp;one&nbsp;plot&nbsp;command,&nbsp;the&nbsp;kwargs&nbsp;apply<br>
to&nbsp;all&nbsp;those&nbsp;lines,&nbsp;eg<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-plot">plot</a>(x1,&nbsp;y1,&nbsp;x2,&nbsp;y2,&nbsp;antialised=False)<br>
Neither&nbsp;line&nbsp;will&nbsp;be&nbsp;antialiased.<br>
The&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
kwargs&nbsp;scalex&nbsp;and&nbsp;scaley,&nbsp;if&nbsp;defined,&nbsp;are&nbsp;passed&nbsp;on<br>
to&nbsp;autoscale_view&nbsp;to&nbsp;determine&nbsp;whether&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;axes&nbsp;are<br>
autoscaled;&nbsp;default&nbsp;True.&nbsp;&nbsp;See&nbsp;<a href="#Axes">Axes</a>.autoscale_view&nbsp;for&nbsp;more<br>
information</tt></dd></dl>

<dl><dt><a name="PolarAxes-plot_date"><strong>plot_date</strong></a>(self, x, y, fmt<font color="#909090">='bo'</font>, tz<font color="#909090">=None</font>, xdate<font color="#909090">=True</font>, ydate<font color="#909090">=False</font>, **kwargs)</dt><dd><tt>PLOT_DATE(x,&nbsp;y,&nbsp;fmt='bo',&nbsp;tz=None,&nbsp;xdate=True,&nbsp;ydate=False,&nbsp;**kwargs)<br>
Similar&nbsp;to&nbsp;the&nbsp;<a href="#PolarAxes-plot">plot</a>()&nbsp;command,&nbsp;except&nbsp;the&nbsp;x&nbsp;or&nbsp;y&nbsp;(or&nbsp;both)&nbsp;data<br>
is&nbsp;considered&nbsp;to&nbsp;be&nbsp;dates,&nbsp;and&nbsp;the&nbsp;axis&nbsp;is&nbsp;labeled&nbsp;accordingly.<br>
x&nbsp;or&nbsp;y&nbsp;(or&nbsp;both)&nbsp;can&nbsp;be&nbsp;a&nbsp;sequence&nbsp;of&nbsp;dates&nbsp;represented&nbsp;as<br>
float&nbsp;days&nbsp;since&nbsp;0001-01-01&nbsp;UTC.<br>
fmt&nbsp;is&nbsp;a&nbsp;plot&nbsp;format&nbsp;string.<br>
tz&nbsp;is&nbsp;the&nbsp;time&nbsp;zone&nbsp;to&nbsp;use&nbsp;in&nbsp;labelling&nbsp;dates.&nbsp;&nbsp;Defaults&nbsp;to&nbsp;rc&nbsp;value.<br>
If&nbsp;xdate&nbsp;is&nbsp;True,&nbsp;the&nbsp;x-axis&nbsp;will&nbsp;be&nbsp;labeled&nbsp;with&nbsp;dates.<br>
If&nbsp;ydate&nbsp;is&nbsp;True,&nbsp;the&nbsp;y-axis&nbsp;will&nbsp;be&nbsp;labeled&nbsp;with&nbsp;dates.<br>
Note&nbsp;if&nbsp;you&nbsp;are&nbsp;using&nbsp;custom&nbsp;date&nbsp;tickers&nbsp;and&nbsp;formatters,&nbsp;it<br>
may&nbsp;be&nbsp;necessary&nbsp;to&nbsp;set&nbsp;the&nbsp;formatters/locators&nbsp;after&nbsp;the&nbsp;call<br>
to&nbsp;plot_date&nbsp;since&nbsp;plot_date&nbsp;will&nbsp;set&nbsp;the&nbsp;default&nbsp;tick&nbsp;locator<br>
to&nbsp;AutoDateLocator&nbsp;(if&nbsp;the&nbsp;tick&nbsp;locator&nbsp;is&nbsp;not&nbsp;already&nbsp;set&nbsp;to<br>
a&nbsp;DateLocator&nbsp;instance)&nbsp;and&nbsp;the&nbsp;default&nbsp;tick&nbsp;formatter&nbsp;to<br>
AutoDateFormatter&nbsp;(if&nbsp;the&nbsp;tick&nbsp;formatter&nbsp;is&nbsp;not&nbsp;already&nbsp;set&nbsp;to<br>
a&nbsp;DateFormatter&nbsp;instance).<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
See&nbsp;matplotlib.dates&nbsp;for&nbsp;helper&nbsp;functions&nbsp;date2num,&nbsp;num2date<br>
and&nbsp;drange&nbsp;for&nbsp;help&nbsp;on&nbsp;creating&nbsp;the&nbsp;required&nbsp;floating&nbsp;point&nbsp;dates</tt></dd></dl>

<dl><dt><a name="PolarAxes-psd"><strong>psd</strong></a>(self, x, NFFT<font color="#909090">=256</font>, Fs<font color="#909090">=2</font>, detrend<font color="#909090">=&lt;function detrend_none at 0x847d844&gt;</font>, window<font color="#909090">=&lt;function window_hanning at 0x847d72c&gt;</font>, noverlap<font color="#909090">=0</font>, **kwargs)</dt><dd><tt>PSD(x,&nbsp;NFFT=256,&nbsp;Fs=2,&nbsp;detrend=detrend_none,<br>
&nbsp;&nbsp;&nbsp;&nbsp;window=window_hanning,&nbsp;noverlap=0,&nbsp;**kwargs)<br>
The&nbsp;power&nbsp;spectral&nbsp;density&nbsp;by&nbsp;Welches&nbsp;average&nbsp;periodogram&nbsp;method.&nbsp;&nbsp;The<br>
vector&nbsp;x&nbsp;is&nbsp;divided&nbsp;into&nbsp;NFFT&nbsp;length&nbsp;segments.&nbsp;&nbsp;Each&nbsp;segment&nbsp;is<br>
detrended&nbsp;by&nbsp;function&nbsp;detrend&nbsp;and&nbsp;windowed&nbsp;by&nbsp;function&nbsp;window.<br>
noperlap&nbsp;gives&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;overlap&nbsp;between&nbsp;segments.&nbsp;&nbsp;The<br>
absolute(fft(segment))**2&nbsp;of&nbsp;each&nbsp;segment&nbsp;are&nbsp;averaged&nbsp;to&nbsp;compute&nbsp;Pxx,<br>
with&nbsp;a&nbsp;scaling&nbsp;to&nbsp;correct&nbsp;for&nbsp;power&nbsp;loss&nbsp;due&nbsp;to&nbsp;windowing.&nbsp;&nbsp;Fs&nbsp;is&nbsp;the<br>
sampling&nbsp;frequency.<br>
&nbsp;&nbsp;&nbsp;&nbsp;NFFT&nbsp;is&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;fft&nbsp;segment;&nbsp;must&nbsp;be&nbsp;a&nbsp;power&nbsp;of&nbsp;2<br>
&nbsp;&nbsp;&nbsp;&nbsp;Fs&nbsp;is&nbsp;the&nbsp;sampling&nbsp;frequency.<br>
&nbsp;&nbsp;&nbsp;&nbsp;detrend&nbsp;-&nbsp;the&nbsp;function&nbsp;applied&nbsp;to&nbsp;each&nbsp;segment&nbsp;before&nbsp;fft-ing,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;designed&nbsp;to&nbsp;remove&nbsp;the&nbsp;mean&nbsp;or&nbsp;linear&nbsp;trend.&nbsp;&nbsp;Unlike&nbsp;in&nbsp;matlab,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;where&nbsp;the&nbsp;detrend&nbsp;parameter&nbsp;is&nbsp;a&nbsp;vector,&nbsp;in&nbsp;matplotlib&nbsp;is&nbsp;it&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function.&nbsp;&nbsp;The&nbsp;mlab&nbsp;module&nbsp;defines&nbsp;detrend_none,&nbsp;detrend_mean,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;detrend_linear,&nbsp;but&nbsp;you&nbsp;can&nbsp;use&nbsp;a&nbsp;custom&nbsp;function&nbsp;as&nbsp;well.<br>
&nbsp;&nbsp;&nbsp;&nbsp;window&nbsp;-&nbsp;the&nbsp;function&nbsp;used&nbsp;to&nbsp;window&nbsp;the&nbsp;segments.&nbsp;&nbsp;window&nbsp;is&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function,&nbsp;unlike&nbsp;in&nbsp;matlab(TM)&nbsp;where&nbsp;it&nbsp;is&nbsp;a&nbsp;vector.&nbsp;&nbsp;mlab&nbsp;defines<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window_none,&nbsp;window_hanning,&nbsp;but&nbsp;you&nbsp;can&nbsp;use&nbsp;a&nbsp;custom&nbsp;function<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;as&nbsp;well.<br>
&nbsp;&nbsp;&nbsp;&nbsp;noverlap&nbsp;gives&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;overlap&nbsp;between&nbsp;segments.<br>
Returns&nbsp;the&nbsp;tuple&nbsp;Pxx,&nbsp;freqs<br>
For&nbsp;plotting,&nbsp;the&nbsp;power&nbsp;is&nbsp;plotted&nbsp;as&nbsp;10*log10(pxx))&nbsp;for&nbsp;decibels,<br>
though&nbsp;pxx&nbsp;itself&nbsp;is&nbsp;returned<br>
Refs:<br>
&nbsp;&nbsp;Bendat&nbsp;&amp;&nbsp;Piersol&nbsp;--&nbsp;Random&nbsp;Data:&nbsp;Analysis&nbsp;and&nbsp;Measurement<br>
&nbsp;&nbsp;Procedures,&nbsp;John&nbsp;Wiley&nbsp;&amp;&nbsp;Sons&nbsp;(1986)<br>
kwargs&nbsp;control&nbsp;the&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarAxes-quiver"><strong>quiver</strong></a>(self, *args, **kw)</dt><dd><tt>Plot&nbsp;a&nbsp;2-D&nbsp;field&nbsp;of&nbsp;arrows.<br>
&nbsp;<br>
Function&nbsp;signatures:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-quiver">quiver</a>(U,&nbsp;V,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-quiver">quiver</a>(U,&nbsp;V,&nbsp;C,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-quiver">quiver</a>(X,&nbsp;Y,&nbsp;U,&nbsp;V,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-quiver">quiver</a>(X,&nbsp;Y,&nbsp;U,&nbsp;V,&nbsp;C,&nbsp;**kw)<br>
&nbsp;<br>
Arguments:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;X,&nbsp;Y&nbsp;give&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;arrow&nbsp;locations<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(default&nbsp;is&nbsp;tail&nbsp;of&nbsp;arrow;&nbsp;see&nbsp;'pivot'&nbsp;kwarg)<br>
&nbsp;&nbsp;&nbsp;&nbsp;U,&nbsp;V&nbsp;give&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;components&nbsp;of&nbsp;the&nbsp;arrow&nbsp;vectors<br>
&nbsp;&nbsp;&nbsp;&nbsp;C&nbsp;is&nbsp;an&nbsp;optional&nbsp;array&nbsp;used&nbsp;to&nbsp;map&nbsp;colors&nbsp;to&nbsp;the&nbsp;arrows<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;All&nbsp;arguments&nbsp;may&nbsp;be&nbsp;1-D&nbsp;or&nbsp;2-D&nbsp;arrays&nbsp;or&nbsp;sequences.<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;absent,&nbsp;they&nbsp;will&nbsp;be&nbsp;generated&nbsp;as&nbsp;a&nbsp;uniform&nbsp;grid.<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;U&nbsp;and&nbsp;V&nbsp;are&nbsp;2-D&nbsp;arrays&nbsp;but&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;1-D,&nbsp;and&nbsp;if<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;len(X)&nbsp;and&nbsp;len(Y)&nbsp;match&nbsp;the&nbsp;column&nbsp;and&nbsp;row&nbsp;dimensions<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;U,&nbsp;then&nbsp;X&nbsp;and&nbsp;Y&nbsp;will&nbsp;be&nbsp;expanded&nbsp;with&nbsp;meshgrid.<br>
&nbsp;<br>
Keyword&nbsp;arguments&nbsp;(default&nbsp;given&nbsp;first):<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;units&nbsp;=&nbsp;'width'&nbsp;|&nbsp;'height'&nbsp;|&nbsp;'dots'&nbsp;|&nbsp;'inches'&nbsp;|&nbsp;'x'&nbsp;|&nbsp;'y'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arrow&nbsp;units;&nbsp;the&nbsp;arrow&nbsp;dimensions&nbsp;*except&nbsp;for&nbsp;length*<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;in&nbsp;multiples&nbsp;of&nbsp;this&nbsp;unit.<br>
&nbsp;&nbsp;*&nbsp;scale&nbsp;=&nbsp;None&nbsp;|&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;units&nbsp;per&nbsp;arrow&nbsp;unit,&nbsp;e.g.&nbsp;m/s&nbsp;per&nbsp;plot&nbsp;width;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;smaller&nbsp;scale&nbsp;parameter&nbsp;makes&nbsp;the&nbsp;arrow&nbsp;longer.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;None,&nbsp;a&nbsp;simple&nbsp;autoscaling&nbsp;algorithm&nbsp;is&nbsp;used,&nbsp;based<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on&nbsp;the&nbsp;average&nbsp;vector&nbsp;length&nbsp;and&nbsp;the&nbsp;number&nbsp;of&nbsp;vectors.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Arrow&nbsp;dimensions&nbsp;and&nbsp;scales&nbsp;can&nbsp;be&nbsp;in&nbsp;any&nbsp;of&nbsp;several&nbsp;units:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'width'&nbsp;or&nbsp;'height':&nbsp;the&nbsp;width&nbsp;or&nbsp;height&nbsp;of&nbsp;the&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;'dots'&nbsp;or&nbsp;'inches':&nbsp;&nbsp;pixels&nbsp;or&nbsp;inches,&nbsp;based&nbsp;on&nbsp;the&nbsp;figure&nbsp;dpi<br>
&nbsp;&nbsp;&nbsp;&nbsp;'x'&nbsp;or&nbsp;'y':&nbsp;X&nbsp;or&nbsp;Y&nbsp;data&nbsp;units<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;all&nbsp;cases&nbsp;the&nbsp;arrow&nbsp;aspect&nbsp;ratio&nbsp;is&nbsp;1,&nbsp;so&nbsp;that&nbsp;if&nbsp;U==V&nbsp;the&nbsp;angle<br>
&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;arrow&nbsp;on&nbsp;the&nbsp;plot&nbsp;is&nbsp;45&nbsp;degrees&nbsp;CCW&nbsp;from&nbsp;the&nbsp;X-axis.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;arrows&nbsp;scale&nbsp;differently&nbsp;depending&nbsp;on&nbsp;the&nbsp;units,&nbsp;however.<br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;'x'&nbsp;or&nbsp;'y',&nbsp;the&nbsp;arrows&nbsp;get&nbsp;larger&nbsp;as&nbsp;one&nbsp;zooms&nbsp;in;&nbsp;for&nbsp;other<br>
&nbsp;&nbsp;&nbsp;&nbsp;units,&nbsp;the&nbsp;arrow&nbsp;size&nbsp;is&nbsp;independent&nbsp;of&nbsp;the&nbsp;zoom&nbsp;state.&nbsp;&nbsp;For<br>
&nbsp;&nbsp;&nbsp;&nbsp;'width&nbsp;or&nbsp;'height',&nbsp;the&nbsp;arrow&nbsp;size&nbsp;increases&nbsp;with&nbsp;the&nbsp;width&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;height&nbsp;of&nbsp;the&nbsp;axes,&nbsp;respectively,&nbsp;when&nbsp;the&nbsp;the&nbsp;window&nbsp;is&nbsp;resized;<br>
&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;'dots'&nbsp;or&nbsp;'inches',&nbsp;resizing&nbsp;does&nbsp;not&nbsp;change&nbsp;the&nbsp;arrows.<br>
&nbsp;<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;width&nbsp;=&nbsp;?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shaft&nbsp;width&nbsp;in&nbsp;arrow&nbsp;units;&nbsp;default&nbsp;depends&nbsp;on<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;choice&nbsp;of&nbsp;units,&nbsp;above,&nbsp;and&nbsp;number&nbsp;of&nbsp;vectors;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;typical&nbsp;starting&nbsp;value&nbsp;is&nbsp;about<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.005&nbsp;times&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;plot.<br>
&nbsp;&nbsp;*&nbsp;headwidth&nbsp;=&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;head&nbsp;width&nbsp;as&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width<br>
&nbsp;&nbsp;*&nbsp;headlength&nbsp;=&nbsp;5&nbsp;&nbsp;&nbsp;head&nbsp;length&nbsp;as&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width<br>
&nbsp;&nbsp;*&nbsp;headaxislength&nbsp;=&nbsp;4.5&nbsp;&nbsp;head&nbsp;length&nbsp;at&nbsp;shaft&nbsp;intersection<br>
&nbsp;&nbsp;*&nbsp;minshaft&nbsp;=&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length&nbsp;below&nbsp;which&nbsp;arrow&nbsp;scales,&nbsp;in&nbsp;units<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;head&nbsp;length.&nbsp;Do&nbsp;not&nbsp;set&nbsp;this&nbsp;to&nbsp;less<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;than&nbsp;1,&nbsp;or&nbsp;small&nbsp;arrows&nbsp;will&nbsp;look&nbsp;terrible!<br>
&nbsp;&nbsp;*&nbsp;minlength&nbsp;=&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;minimum&nbsp;length&nbsp;as&nbsp;a&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;an&nbsp;arrow&nbsp;length&nbsp;is&nbsp;less&nbsp;than&nbsp;this,&nbsp;plot&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dot&nbsp;(hexagon)&nbsp;of&nbsp;this&nbsp;diameter&nbsp;instead.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;defaults&nbsp;give&nbsp;a&nbsp;slightly&nbsp;swept-back&nbsp;arrow;&nbsp;to&nbsp;make&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;head&nbsp;a&nbsp;triangle,&nbsp;make&nbsp;headaxislength&nbsp;the&nbsp;same&nbsp;as&nbsp;headlength.<br>
&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;make&nbsp;the&nbsp;arrow&nbsp;more&nbsp;pointed,&nbsp;reduce&nbsp;headwidth&nbsp;or&nbsp;increase<br>
&nbsp;&nbsp;&nbsp;&nbsp;headlength&nbsp;and&nbsp;headaxislength.<br>
&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;make&nbsp;the&nbsp;head&nbsp;smaller&nbsp;relative&nbsp;to&nbsp;the&nbsp;shaft,&nbsp;scale&nbsp;down<br>
&nbsp;&nbsp;&nbsp;&nbsp;all&nbsp;the&nbsp;head*&nbsp;parameters.<br>
&nbsp;&nbsp;&nbsp;&nbsp;You&nbsp;will&nbsp;probably&nbsp;do&nbsp;best&nbsp;to&nbsp;leave&nbsp;minshaft&nbsp;alone.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;pivot&nbsp;=&nbsp;'tail'&nbsp;|&nbsp;'middle'&nbsp;|&nbsp;'tip'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;part&nbsp;of&nbsp;the&nbsp;arrow&nbsp;that&nbsp;is&nbsp;at&nbsp;the&nbsp;grid&nbsp;point;&nbsp;the&nbsp;arrow<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotates&nbsp;about&nbsp;this&nbsp;point,&nbsp;hence&nbsp;the&nbsp;name&nbsp;'pivot'.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;color&nbsp;=&nbsp;'k'&nbsp;|&nbsp;any&nbsp;matplotlib&nbsp;color&nbsp;spec&nbsp;or&nbsp;sequence&nbsp;of&nbsp;color&nbsp;specs.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This&nbsp;is&nbsp;a&nbsp;synonym&nbsp;for&nbsp;the&nbsp;PolyCollection&nbsp;facecolor&nbsp;kwarg.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;C&nbsp;has&nbsp;been&nbsp;set,&nbsp;'color'&nbsp;has&nbsp;no&nbsp;effect.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;*&nbsp;All&nbsp;PolyCollection&nbsp;kwargs&nbsp;are&nbsp;valid,&nbsp;in&nbsp;the&nbsp;sense&nbsp;that&nbsp;they<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;be&nbsp;passed&nbsp;on&nbsp;to&nbsp;the&nbsp;PolyCollection&nbsp;constructor.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;particular,&nbsp;one&nbsp;might&nbsp;want&nbsp;to&nbsp;use,&nbsp;for&nbsp;example:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidths&nbsp;=&nbsp;(1,),&nbsp;edgecolors&nbsp;=&nbsp;('g',)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;make&nbsp;the&nbsp;arrows&nbsp;have&nbsp;green&nbsp;outlines&nbsp;of&nbsp;unit&nbsp;width.</tt></dd></dl>

<dl><dt><a name="PolarAxes-quiver2"><strong>quiver2</strong></a>(self, *args, **kw)</dt><dd><tt>Plot&nbsp;a&nbsp;2-D&nbsp;field&nbsp;of&nbsp;arrows.<br>
&nbsp;<br>
Function&nbsp;signatures:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-quiver">quiver</a>(U,&nbsp;V,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-quiver">quiver</a>(U,&nbsp;V,&nbsp;C,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-quiver">quiver</a>(X,&nbsp;Y,&nbsp;U,&nbsp;V,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-quiver">quiver</a>(X,&nbsp;Y,&nbsp;U,&nbsp;V,&nbsp;C,&nbsp;**kw)<br>
&nbsp;<br>
Arguments:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;X,&nbsp;Y&nbsp;give&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;arrow&nbsp;locations<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(default&nbsp;is&nbsp;tail&nbsp;of&nbsp;arrow;&nbsp;see&nbsp;'pivot'&nbsp;kwarg)<br>
&nbsp;&nbsp;&nbsp;&nbsp;U,&nbsp;V&nbsp;give&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;components&nbsp;of&nbsp;the&nbsp;arrow&nbsp;vectors<br>
&nbsp;&nbsp;&nbsp;&nbsp;C&nbsp;is&nbsp;an&nbsp;optional&nbsp;array&nbsp;used&nbsp;to&nbsp;map&nbsp;colors&nbsp;to&nbsp;the&nbsp;arrows<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;All&nbsp;arguments&nbsp;may&nbsp;be&nbsp;1-D&nbsp;or&nbsp;2-D&nbsp;arrays&nbsp;or&nbsp;sequences.<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;absent,&nbsp;they&nbsp;will&nbsp;be&nbsp;generated&nbsp;as&nbsp;a&nbsp;uniform&nbsp;grid.<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;U&nbsp;and&nbsp;V&nbsp;are&nbsp;2-D&nbsp;arrays&nbsp;but&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;1-D,&nbsp;and&nbsp;if<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;len(X)&nbsp;and&nbsp;len(Y)&nbsp;match&nbsp;the&nbsp;column&nbsp;and&nbsp;row&nbsp;dimensions<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;U,&nbsp;then&nbsp;X&nbsp;and&nbsp;Y&nbsp;will&nbsp;be&nbsp;expanded&nbsp;with&nbsp;meshgrid.<br>
&nbsp;<br>
Keyword&nbsp;arguments&nbsp;(default&nbsp;given&nbsp;first):<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;units&nbsp;=&nbsp;'width'&nbsp;|&nbsp;'height'&nbsp;|&nbsp;'dots'&nbsp;|&nbsp;'inches'&nbsp;|&nbsp;'x'&nbsp;|&nbsp;'y'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arrow&nbsp;units;&nbsp;the&nbsp;arrow&nbsp;dimensions&nbsp;*except&nbsp;for&nbsp;length*<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;in&nbsp;multiples&nbsp;of&nbsp;this&nbsp;unit.<br>
&nbsp;&nbsp;*&nbsp;scale&nbsp;=&nbsp;None&nbsp;|&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;units&nbsp;per&nbsp;arrow&nbsp;unit,&nbsp;e.g.&nbsp;m/s&nbsp;per&nbsp;plot&nbsp;width;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;smaller&nbsp;scale&nbsp;parameter&nbsp;makes&nbsp;the&nbsp;arrow&nbsp;longer.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;None,&nbsp;a&nbsp;simple&nbsp;autoscaling&nbsp;algorithm&nbsp;is&nbsp;used,&nbsp;based<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on&nbsp;the&nbsp;average&nbsp;vector&nbsp;length&nbsp;and&nbsp;the&nbsp;number&nbsp;of&nbsp;vectors.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Arrow&nbsp;dimensions&nbsp;and&nbsp;scales&nbsp;can&nbsp;be&nbsp;in&nbsp;any&nbsp;of&nbsp;several&nbsp;units:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'width'&nbsp;or&nbsp;'height':&nbsp;the&nbsp;width&nbsp;or&nbsp;height&nbsp;of&nbsp;the&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;'dots'&nbsp;or&nbsp;'inches':&nbsp;&nbsp;pixels&nbsp;or&nbsp;inches,&nbsp;based&nbsp;on&nbsp;the&nbsp;figure&nbsp;dpi<br>
&nbsp;&nbsp;&nbsp;&nbsp;'x'&nbsp;or&nbsp;'y':&nbsp;X&nbsp;or&nbsp;Y&nbsp;data&nbsp;units<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;all&nbsp;cases&nbsp;the&nbsp;arrow&nbsp;aspect&nbsp;ratio&nbsp;is&nbsp;1,&nbsp;so&nbsp;that&nbsp;if&nbsp;U==V&nbsp;the&nbsp;angle<br>
&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;arrow&nbsp;on&nbsp;the&nbsp;plot&nbsp;is&nbsp;45&nbsp;degrees&nbsp;CCW&nbsp;from&nbsp;the&nbsp;X-axis.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;arrows&nbsp;scale&nbsp;differently&nbsp;depending&nbsp;on&nbsp;the&nbsp;units,&nbsp;however.<br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;'x'&nbsp;or&nbsp;'y',&nbsp;the&nbsp;arrows&nbsp;get&nbsp;larger&nbsp;as&nbsp;one&nbsp;zooms&nbsp;in;&nbsp;for&nbsp;other<br>
&nbsp;&nbsp;&nbsp;&nbsp;units,&nbsp;the&nbsp;arrow&nbsp;size&nbsp;is&nbsp;independent&nbsp;of&nbsp;the&nbsp;zoom&nbsp;state.&nbsp;&nbsp;For<br>
&nbsp;&nbsp;&nbsp;&nbsp;'width&nbsp;or&nbsp;'height',&nbsp;the&nbsp;arrow&nbsp;size&nbsp;increases&nbsp;with&nbsp;the&nbsp;width&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;height&nbsp;of&nbsp;the&nbsp;axes,&nbsp;respectively,&nbsp;when&nbsp;the&nbsp;the&nbsp;window&nbsp;is&nbsp;resized;<br>
&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;'dots'&nbsp;or&nbsp;'inches',&nbsp;resizing&nbsp;does&nbsp;not&nbsp;change&nbsp;the&nbsp;arrows.<br>
&nbsp;<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;width&nbsp;=&nbsp;?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shaft&nbsp;width&nbsp;in&nbsp;arrow&nbsp;units;&nbsp;default&nbsp;depends&nbsp;on<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;choice&nbsp;of&nbsp;units,&nbsp;above,&nbsp;and&nbsp;number&nbsp;of&nbsp;vectors;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;typical&nbsp;starting&nbsp;value&nbsp;is&nbsp;about<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.005&nbsp;times&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;plot.<br>
&nbsp;&nbsp;*&nbsp;headwidth&nbsp;=&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;head&nbsp;width&nbsp;as&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width<br>
&nbsp;&nbsp;*&nbsp;headlength&nbsp;=&nbsp;5&nbsp;&nbsp;&nbsp;head&nbsp;length&nbsp;as&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width<br>
&nbsp;&nbsp;*&nbsp;headaxislength&nbsp;=&nbsp;4.5&nbsp;&nbsp;head&nbsp;length&nbsp;at&nbsp;shaft&nbsp;intersection<br>
&nbsp;&nbsp;*&nbsp;minshaft&nbsp;=&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length&nbsp;below&nbsp;which&nbsp;arrow&nbsp;scales,&nbsp;in&nbsp;units<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;head&nbsp;length.&nbsp;Do&nbsp;not&nbsp;set&nbsp;this&nbsp;to&nbsp;less<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;than&nbsp;1,&nbsp;or&nbsp;small&nbsp;arrows&nbsp;will&nbsp;look&nbsp;terrible!<br>
&nbsp;&nbsp;*&nbsp;minlength&nbsp;=&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;minimum&nbsp;length&nbsp;as&nbsp;a&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;an&nbsp;arrow&nbsp;length&nbsp;is&nbsp;less&nbsp;than&nbsp;this,&nbsp;plot&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dot&nbsp;(hexagon)&nbsp;of&nbsp;this&nbsp;diameter&nbsp;instead.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;defaults&nbsp;give&nbsp;a&nbsp;slightly&nbsp;swept-back&nbsp;arrow;&nbsp;to&nbsp;make&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;head&nbsp;a&nbsp;triangle,&nbsp;make&nbsp;headaxislength&nbsp;the&nbsp;same&nbsp;as&nbsp;headlength.<br>
&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;make&nbsp;the&nbsp;arrow&nbsp;more&nbsp;pointed,&nbsp;reduce&nbsp;headwidth&nbsp;or&nbsp;increase<br>
&nbsp;&nbsp;&nbsp;&nbsp;headlength&nbsp;and&nbsp;headaxislength.<br>
&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;make&nbsp;the&nbsp;head&nbsp;smaller&nbsp;relative&nbsp;to&nbsp;the&nbsp;shaft,&nbsp;scale&nbsp;down<br>
&nbsp;&nbsp;&nbsp;&nbsp;all&nbsp;the&nbsp;head*&nbsp;parameters.<br>
&nbsp;&nbsp;&nbsp;&nbsp;You&nbsp;will&nbsp;probably&nbsp;do&nbsp;best&nbsp;to&nbsp;leave&nbsp;minshaft&nbsp;alone.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;pivot&nbsp;=&nbsp;'tail'&nbsp;|&nbsp;'middle'&nbsp;|&nbsp;'tip'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;part&nbsp;of&nbsp;the&nbsp;arrow&nbsp;that&nbsp;is&nbsp;at&nbsp;the&nbsp;grid&nbsp;point;&nbsp;the&nbsp;arrow<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotates&nbsp;about&nbsp;this&nbsp;point,&nbsp;hence&nbsp;the&nbsp;name&nbsp;'pivot'.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;color&nbsp;=&nbsp;'k'&nbsp;|&nbsp;any&nbsp;matplotlib&nbsp;color&nbsp;spec&nbsp;or&nbsp;sequence&nbsp;of&nbsp;color&nbsp;specs.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This&nbsp;is&nbsp;a&nbsp;synonym&nbsp;for&nbsp;the&nbsp;PolyCollection&nbsp;facecolor&nbsp;kwarg.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;C&nbsp;has&nbsp;been&nbsp;set,&nbsp;'color'&nbsp;has&nbsp;no&nbsp;effect.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;*&nbsp;All&nbsp;PolyCollection&nbsp;kwargs&nbsp;are&nbsp;valid,&nbsp;in&nbsp;the&nbsp;sense&nbsp;that&nbsp;they<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;be&nbsp;passed&nbsp;on&nbsp;to&nbsp;the&nbsp;PolyCollection&nbsp;constructor.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;particular,&nbsp;one&nbsp;might&nbsp;want&nbsp;to&nbsp;use,&nbsp;for&nbsp;example:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidths&nbsp;=&nbsp;(1,),&nbsp;edgecolors&nbsp;=&nbsp;('g',)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;make&nbsp;the&nbsp;arrows&nbsp;have&nbsp;green&nbsp;outlines&nbsp;of&nbsp;unit&nbsp;width.</tt></dd></dl>

<dl><dt><a name="PolarAxes-quiver_classic"><strong>quiver_classic</strong></a>(self, U, V, *args, **kwargs)</dt><dd><tt>QUIVER(&nbsp;X,&nbsp;Y,&nbsp;U,&nbsp;V&nbsp;)<br>
QUIVER(&nbsp;U,&nbsp;V&nbsp;)<br>
QUIVER(&nbsp;X,&nbsp;Y,&nbsp;U,&nbsp;V,&nbsp;S)<br>
QUIVER(&nbsp;U,&nbsp;V,&nbsp;S&nbsp;)<br>
QUIVER(&nbsp;...,&nbsp;color=None,&nbsp;width=1.0,&nbsp;cmap=None,&nbsp;norm=None&nbsp;)<br>
&nbsp;<br>
Make&nbsp;a&nbsp;vector&nbsp;plot&nbsp;(U,&nbsp;V)&nbsp;with&nbsp;arrows&nbsp;on&nbsp;a&nbsp;grid&nbsp;(X,&nbsp;Y)<br>
&nbsp;<br>
If&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;not&nbsp;specified,&nbsp;U&nbsp;and&nbsp;V&nbsp;must&nbsp;be&nbsp;2D&nbsp;arrays.&nbsp;&nbsp;Equally&nbsp;spaced<br>
X&nbsp;and&nbsp;Y&nbsp;grids&nbsp;are&nbsp;then&nbsp;generated&nbsp;using&nbsp;the&nbsp;meshgrid&nbsp;command.<br>
&nbsp;<br>
color&nbsp;can&nbsp;be&nbsp;a&nbsp;color&nbsp;value&nbsp;or&nbsp;an&nbsp;array&nbsp;of&nbsp;colors,&nbsp;so&nbsp;that&nbsp;the&nbsp;arrows&nbsp;can&nbsp;be<br>
colored&nbsp;according&nbsp;to&nbsp;another&nbsp;dataset.&nbsp;&nbsp;If&nbsp;cmap&nbsp;is&nbsp;specified&nbsp;and&nbsp;color&nbsp;is&nbsp;'length',<br>
the&nbsp;colormap&nbsp;is&nbsp;used&nbsp;to&nbsp;give&nbsp;a&nbsp;color&nbsp;according&nbsp;to&nbsp;the&nbsp;vector's&nbsp;length.<br>
&nbsp;<br>
If&nbsp;color&nbsp;is&nbsp;a&nbsp;scalar&nbsp;field,&nbsp;the&nbsp;colormap&nbsp;is&nbsp;used&nbsp;to&nbsp;map&nbsp;the&nbsp;scalar&nbsp;to&nbsp;a&nbsp;color<br>
If&nbsp;a&nbsp;colormap&nbsp;is&nbsp;specified&nbsp;and&nbsp;color&nbsp;is&nbsp;an&nbsp;array&nbsp;of&nbsp;color&nbsp;triplets,&nbsp;then&nbsp;the<br>
colormap&nbsp;is&nbsp;ignored<br>
&nbsp;<br>
width&nbsp;is&nbsp;a&nbsp;scalar&nbsp;that&nbsp;controls&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;arrows<br>
&nbsp;<br>
if&nbsp;S&nbsp;is&nbsp;specified&nbsp;it&nbsp;is&nbsp;used&nbsp;to&nbsp;scale&nbsp;the&nbsp;vectors.&nbsp;Use&nbsp;S=0&nbsp;to&nbsp;disable&nbsp;automatic<br>
scaling.<br>
If&nbsp;S!=0,&nbsp;vectors&nbsp;are&nbsp;scaled&nbsp;to&nbsp;fit&nbsp;within&nbsp;the&nbsp;grid&nbsp;and&nbsp;then&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;S.</tt></dd></dl>

<dl><dt><a name="PolarAxes-quiverkey"><strong>quiverkey</strong></a>(self, *args, **kw)</dt><dd><tt>Add&nbsp;a&nbsp;key&nbsp;to&nbsp;a&nbsp;quiver&nbsp;plot.<br>
&nbsp;<br>
Function&nbsp;signature:<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-quiverkey">quiverkey</a>(Q,&nbsp;X,&nbsp;Y,&nbsp;U,&nbsp;label,&nbsp;**kw)<br>
&nbsp;<br>
Arguments:<br>
&nbsp;&nbsp;&nbsp;&nbsp;Q&nbsp;is&nbsp;the&nbsp;Quiver&nbsp;instance&nbsp;returned&nbsp;by&nbsp;a&nbsp;call&nbsp;to&nbsp;quiver.<br>
&nbsp;&nbsp;&nbsp;&nbsp;X,&nbsp;Y&nbsp;give&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;key;&nbsp;additional&nbsp;explanation&nbsp;follows.<br>
&nbsp;&nbsp;&nbsp;&nbsp;U&nbsp;is&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;key<br>
&nbsp;&nbsp;&nbsp;&nbsp;label&nbsp;is&nbsp;a&nbsp;string&nbsp;with&nbsp;the&nbsp;length&nbsp;and&nbsp;units&nbsp;of&nbsp;the&nbsp;key<br>
&nbsp;<br>
Keyword&nbsp;arguments&nbsp;(default&nbsp;given&nbsp;first):<br>
&nbsp;&nbsp;*&nbsp;coordinates&nbsp;=&nbsp;'axes'&nbsp;|&nbsp;'figure'&nbsp;|&nbsp;'data'&nbsp;|&nbsp;'inches'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Coordinate&nbsp;system&nbsp;and&nbsp;units&nbsp;for&nbsp;X,&nbsp;Y:&nbsp;'axes'&nbsp;and&nbsp;'figure'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;normalized&nbsp;coordinate&nbsp;systems&nbsp;with&nbsp;0,0&nbsp;in&nbsp;the&nbsp;lower<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left&nbsp;and&nbsp;1,1&nbsp;in&nbsp;the&nbsp;upper&nbsp;right;&nbsp;'data'&nbsp;are&nbsp;the&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;coordinates&nbsp;(used&nbsp;for&nbsp;the&nbsp;locations&nbsp;of&nbsp;the&nbsp;vectors<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in&nbsp;the&nbsp;quiver&nbsp;plot&nbsp;itself);&nbsp;'inches'&nbsp;is&nbsp;position&nbsp;in&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure&nbsp;in&nbsp;inches,&nbsp;with&nbsp;0,0&nbsp;at&nbsp;the&nbsp;lower&nbsp;left&nbsp;corner.<br>
&nbsp;&nbsp;*&nbsp;color&nbsp;overrides&nbsp;face&nbsp;and&nbsp;edge&nbsp;colors&nbsp;from&nbsp;Q.<br>
&nbsp;&nbsp;*&nbsp;labelpos&nbsp;=&nbsp;'N'&nbsp;|&nbsp;'S'&nbsp;|&nbsp;'E'&nbsp;|&nbsp;'W'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Position&nbsp;the&nbsp;label&nbsp;above,&nbsp;below,&nbsp;to&nbsp;the&nbsp;right,&nbsp;to&nbsp;the&nbsp;left<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;arrow,&nbsp;respectively.<br>
&nbsp;&nbsp;*&nbsp;labelsep&nbsp;=&nbsp;0.1&nbsp;inches&nbsp;distance&nbsp;between&nbsp;the&nbsp;arrow&nbsp;and&nbsp;the&nbsp;label<br>
&nbsp;&nbsp;*&nbsp;labelcolor&nbsp;(defaults&nbsp;to&nbsp;default&nbsp;Text&nbsp;color)<br>
&nbsp;&nbsp;*&nbsp;fontproperties&nbsp;is&nbsp;a&nbsp;dictionary&nbsp;with&nbsp;keyword&nbsp;arguments&nbsp;accepted<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;by&nbsp;the&nbsp;FontProperties&nbsp;initializer:&nbsp;family,&nbsp;style,&nbsp;variant,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size,&nbsp;weight<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Any&nbsp;additional&nbsp;keyword&nbsp;arguments&nbsp;are&nbsp;used&nbsp;to&nbsp;override&nbsp;vector<br>
&nbsp;&nbsp;&nbsp;&nbsp;properties&nbsp;taken&nbsp;from&nbsp;Q.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;positioning&nbsp;of&nbsp;the&nbsp;key&nbsp;depends&nbsp;on&nbsp;X,&nbsp;Y,&nbsp;coordinates,&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;labelpos.&nbsp;&nbsp;If&nbsp;labelpos&nbsp;is&nbsp;'N'&nbsp;or&nbsp;'S',&nbsp;X,Y&nbsp;give&nbsp;the&nbsp;position<br>
&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;middle&nbsp;of&nbsp;the&nbsp;key&nbsp;arrow.&nbsp;&nbsp;If&nbsp;labelpos&nbsp;is&nbsp;'E',&nbsp;X,Y<br>
&nbsp;&nbsp;&nbsp;&nbsp;positions&nbsp;the&nbsp;head,&nbsp;and&nbsp;if&nbsp;labelpos&nbsp;is&nbsp;'W',&nbsp;X,Y&nbsp;positions&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;tail;&nbsp;in&nbsp;either&nbsp;of&nbsp;these&nbsp;two&nbsp;cases,&nbsp;X,Y&nbsp;is&nbsp;somewhere&nbsp;in&nbsp;the&nbsp;middle<br>
&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;arrow+label&nbsp;key&nbsp;object.</tt></dd></dl>

<dl><dt><a name="PolarAxes-redraw_in_frame"><strong>redraw_in_frame</strong></a>(self)</dt><dd><tt>This&nbsp;method&nbsp;can&nbsp;only&nbsp;be&nbsp;used&nbsp;after&nbsp;an&nbsp;initial&nbsp;draw&nbsp;which<br>
caches&nbsp;the&nbsp;renderer.&nbsp;&nbsp;It&nbsp;is&nbsp;used&nbsp;to&nbsp;efficiently&nbsp;update&nbsp;<a href="#Axes">Axes</a><br>
data&nbsp;(axis&nbsp;ticks,&nbsp;labels,&nbsp;etc&nbsp;are&nbsp;not&nbsp;updated)</tt></dd></dl>

<dl><dt><a name="PolarAxes-relim"><strong>relim</strong></a>(self)</dt><dd><tt>recompute&nbsp;the&nbsp;datalimits&nbsp;based&nbsp;on&nbsp;current&nbsp;artists</tt></dd></dl>

<dl><dt><a name="PolarAxes-scatter"><strong>scatter</strong></a>(self, x, y, s<font color="#909090">=20</font>, c<font color="#909090">='b'</font>, marker<font color="#909090">='o'</font>, cmap<font color="#909090">=None</font>, norm<font color="#909090">=None</font>, vmin<font color="#909090">=None</font>, vmax<font color="#909090">=None</font>, alpha<font color="#909090">=1.0</font>, linewidths<font color="#909090">=None</font>, faceted<font color="#909090">=True</font>, verts<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>SCATTER(x,&nbsp;y,&nbsp;s=20,&nbsp;c='b',&nbsp;marker='o',&nbsp;cmap=None,&nbsp;norm=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;vmin=None,&nbsp;vmax=None,&nbsp;alpha=1.0,&nbsp;linewidths=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;faceted=True,&nbsp;**kwargs)<br>
Supported&nbsp;function&nbsp;signatures:<br>
&nbsp;&nbsp;&nbsp;&nbsp;SCATTER(x,&nbsp;y,&nbsp;**kwargs)<br>
&nbsp;&nbsp;&nbsp;&nbsp;SCATTER(x,&nbsp;y,&nbsp;s,&nbsp;**kwargs)<br>
&nbsp;&nbsp;&nbsp;&nbsp;SCATTER(x,&nbsp;y,&nbsp;s,&nbsp;c,&nbsp;**kwargs)<br>
Make&nbsp;a&nbsp;scatter&nbsp;plot&nbsp;of&nbsp;x&nbsp;versus&nbsp;y,&nbsp;where&nbsp;x,&nbsp;y&nbsp;are&nbsp;1-D&nbsp;sequences<br>
of&nbsp;the&nbsp;same&nbsp;length,&nbsp;N.<br>
Arguments&nbsp;s&nbsp;and&nbsp;c&nbsp;can&nbsp;also&nbsp;be&nbsp;given&nbsp;as&nbsp;kwargs;&nbsp;this&nbsp;is&nbsp;encouraged<br>
for&nbsp;readability.<br>
&nbsp;&nbsp;&nbsp;&nbsp;s&nbsp;is&nbsp;a&nbsp;size&nbsp;in&nbsp;points^2.&nbsp;&nbsp;It&nbsp;is&nbsp;a&nbsp;scalar<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;or&nbsp;an&nbsp;array&nbsp;of&nbsp;the&nbsp;same&nbsp;length&nbsp;as&nbsp;x&nbsp;and&nbsp;y.<br>
&nbsp;&nbsp;&nbsp;&nbsp;c&nbsp;is&nbsp;a&nbsp;color&nbsp;and&nbsp;can&nbsp;be&nbsp;a&nbsp;single&nbsp;color&nbsp;format&nbsp;string,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;or&nbsp;a&nbsp;sequence&nbsp;of&nbsp;color&nbsp;specifications&nbsp;of&nbsp;length&nbsp;N,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;or&nbsp;a&nbsp;sequence&nbsp;of&nbsp;N&nbsp;numbers&nbsp;to&nbsp;be&nbsp;mapped&nbsp;to&nbsp;colors<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;the&nbsp;cmap&nbsp;and&nbsp;norm&nbsp;specified&nbsp;via&nbsp;kwargs&nbsp;(see&nbsp;below).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Note&nbsp;that&nbsp;c&nbsp;should&nbsp;not&nbsp;be&nbsp;a&nbsp;single&nbsp;numeric&nbsp;RGB&nbsp;or&nbsp;RGBA<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sequence&nbsp;because&nbsp;that&nbsp;is&nbsp;indistinguishable&nbsp;from&nbsp;an&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;values&nbsp;to&nbsp;be&nbsp;colormapped.&nbsp;c&nbsp;can&nbsp;be&nbsp;a&nbsp;2-D&nbsp;array&nbsp;in&nbsp;which<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;rows&nbsp;are&nbsp;RGB&nbsp;or&nbsp;RGBA,&nbsp;however.<br>
The&nbsp;marker&nbsp;can&nbsp;be&nbsp;one&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;'s'&nbsp;:&nbsp;square<br>
&nbsp;&nbsp;&nbsp;&nbsp;'o'&nbsp;:&nbsp;circle<br>
&nbsp;&nbsp;&nbsp;&nbsp;'^'&nbsp;:&nbsp;triangle&nbsp;up<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&gt;'&nbsp;:&nbsp;triangle&nbsp;right<br>
&nbsp;&nbsp;&nbsp;&nbsp;'v'&nbsp;:&nbsp;triangle&nbsp;down<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&lt;'&nbsp;:&nbsp;triangle&nbsp;left<br>
&nbsp;&nbsp;&nbsp;&nbsp;'d'&nbsp;:&nbsp;diamond<br>
&nbsp;&nbsp;&nbsp;&nbsp;'p'&nbsp;:&nbsp;pentagram<br>
&nbsp;&nbsp;&nbsp;&nbsp;'h'&nbsp;:&nbsp;hexagon<br>
&nbsp;&nbsp;&nbsp;&nbsp;'8'&nbsp;:&nbsp;octagon<br>
If&nbsp;marker&nbsp;is&nbsp;None&nbsp;and&nbsp;verts&nbsp;is&nbsp;not&nbsp;None,&nbsp;verts&nbsp;is&nbsp;a&nbsp;sequence<br>
of&nbsp;(x,y)&nbsp;vertices&nbsp;for&nbsp;a&nbsp;custom&nbsp;scatter&nbsp;symbol.<br>
s&nbsp;is&nbsp;a&nbsp;size&nbsp;argument&nbsp;in&nbsp;points&nbsp;squared.<br>
Any&nbsp;or&nbsp;all&nbsp;of&nbsp;x,&nbsp;y,&nbsp;s,&nbsp;and&nbsp;c&nbsp;may&nbsp;be&nbsp;masked&nbsp;arrays,&nbsp;in&nbsp;which<br>
case&nbsp;all&nbsp;masks&nbsp;will&nbsp;be&nbsp;combined&nbsp;and&nbsp;only&nbsp;unmasked&nbsp;points<br>
will&nbsp;be&nbsp;plotted.<br>
Other&nbsp;keyword&nbsp;args;&nbsp;the&nbsp;color&nbsp;mapping&nbsp;and&nbsp;normalization&nbsp;arguments&nbsp;will<br>
on&nbsp;be&nbsp;used&nbsp;if&nbsp;c&nbsp;is&nbsp;an&nbsp;array&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;*&nbsp;cmap&nbsp;=&nbsp;cm.jet&nbsp;:&nbsp;a&nbsp;colors.Colormap&nbsp;instance&nbsp;from&nbsp;matplotlib.cm.<br>
&nbsp;&nbsp;&nbsp;&nbsp;defaults&nbsp;to&nbsp;rc&nbsp;image.cmap<br>
&nbsp;&nbsp;*&nbsp;norm&nbsp;=&nbsp;Normalize()&nbsp;:&nbsp;matplotlib.colors.Normalize&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;used&nbsp;to&nbsp;scale&nbsp;luminance&nbsp;data&nbsp;to&nbsp;0,1.<br>
&nbsp;&nbsp;*&nbsp;vmin=None&nbsp;and&nbsp;vmax=None&nbsp;:&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;are&nbsp;used&nbsp;in&nbsp;conjunction<br>
&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;norm&nbsp;to&nbsp;normalize&nbsp;luminance&nbsp;data.&nbsp;&nbsp;If&nbsp;either&nbsp;are&nbsp;None,&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;min&nbsp;and&nbsp;max&nbsp;of&nbsp;the&nbsp;color&nbsp;array&nbsp;C&nbsp;is&nbsp;used.&nbsp;&nbsp;Note&nbsp;if&nbsp;you&nbsp;pass&nbsp;a&nbsp;norm<br>
&nbsp;&nbsp;&nbsp;&nbsp;instance,&nbsp;your&nbsp;settings&nbsp;for&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;will&nbsp;be&nbsp;ignored<br>
&nbsp;&nbsp;*&nbsp;alpha&nbsp;=1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;value&nbsp;for&nbsp;the&nbsp;patches<br>
&nbsp;&nbsp;*&nbsp;linewidths,&nbsp;if&nbsp;None,&nbsp;defaults&nbsp;to&nbsp;(lines.linewidth,).&nbsp;&nbsp;Note<br>
&nbsp;&nbsp;&nbsp;&nbsp;that&nbsp;this&nbsp;is&nbsp;a&nbsp;tuple,&nbsp;and&nbsp;if&nbsp;you&nbsp;set&nbsp;the&nbsp;linewidths<br>
&nbsp;&nbsp;&nbsp;&nbsp;argument&nbsp;you&nbsp;must&nbsp;set&nbsp;it&nbsp;as&nbsp;a&nbsp;sequence&nbsp;of&nbsp;floats,&nbsp;as<br>
&nbsp;&nbsp;&nbsp;&nbsp;required&nbsp;by&nbsp;RegularPolyCollection&nbsp;--&nbsp;see<br>
&nbsp;&nbsp;&nbsp;&nbsp;matplotlib.collections.RegularPolyCollection&nbsp;for&nbsp;details<br>
&nbsp;*&nbsp;faceted:&nbsp;if&nbsp;True,&nbsp;will&nbsp;use&nbsp;the&nbsp;default&nbsp;edgecolor&nbsp;for&nbsp;the<br>
&nbsp;&nbsp;&nbsp;markers.&nbsp;&nbsp;If&nbsp;False,&nbsp;will&nbsp;set&nbsp;the&nbsp;edgecolors&nbsp;to&nbsp;be&nbsp;the&nbsp;same<br>
&nbsp;&nbsp;&nbsp;as&nbsp;the&nbsp;facecolors<br>
&nbsp;&nbsp;&nbsp;Optional&nbsp;kwargs&nbsp;control&nbsp;the&nbsp;PatchCollection&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clim:&nbsp;a&nbsp;length&nbsp;2&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap:&nbsp;a&nbsp;colormap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colorbar:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarAxes-scatter_classic"><strong>scatter_classic</strong></a>(self, x, y, s<font color="#909090">=None</font>, c<font color="#909090">='b'</font>)</dt><dd><tt>scatter_classic&nbsp;is&nbsp;no&nbsp;longer&nbsp;available;&nbsp;please&nbsp;use&nbsp;scatter.<br>
To&nbsp;help&nbsp;in&nbsp;porting,&nbsp;for&nbsp;comparison&nbsp;to&nbsp;the&nbsp;scatter&nbsp;docstring,<br>
here&nbsp;is&nbsp;the&nbsp;scatter_classic&nbsp;docstring:<br>
&nbsp;<br>
SCATTER_CLASSIC(x,&nbsp;y,&nbsp;s=None,&nbsp;c='b')<br>
&nbsp;<br>
Make&nbsp;a&nbsp;scatter&nbsp;plot&nbsp;of&nbsp;x&nbsp;versus&nbsp;y.&nbsp;&nbsp;s&nbsp;is&nbsp;a&nbsp;size&nbsp;(in&nbsp;data&nbsp;coords)&nbsp;and<br>
can&nbsp;be&nbsp;either&nbsp;a&nbsp;scalar&nbsp;or&nbsp;an&nbsp;array&nbsp;of&nbsp;the&nbsp;same&nbsp;length&nbsp;as&nbsp;x&nbsp;or&nbsp;y.&nbsp;&nbsp;c&nbsp;is<br>
a&nbsp;color&nbsp;and&nbsp;can&nbsp;be&nbsp;a&nbsp;single&nbsp;color&nbsp;format&nbsp;string&nbsp;or&nbsp;an&nbsp;length(x)&nbsp;array<br>
of&nbsp;intensities&nbsp;which&nbsp;will&nbsp;be&nbsp;mapped&nbsp;by&nbsp;the&nbsp;colormap&nbsp;jet.<br>
&nbsp;<br>
If&nbsp;size&nbsp;is&nbsp;None&nbsp;a&nbsp;default&nbsp;size&nbsp;will&nbsp;be&nbsp;used</tt></dd></dl>

<dl><dt><a name="PolarAxes-semilogx"><strong>semilogx</strong></a>(self, *args, **kwargs)</dt><dd><tt>SEMILOGX(*args,&nbsp;**kwargs)<br>
Make&nbsp;a&nbsp;semilog&nbsp;plot&nbsp;with&nbsp;log&nbsp;scaling&nbsp;on&nbsp;the&nbsp;x&nbsp;axis.&nbsp;&nbsp;The&nbsp;args&nbsp;to<br>
semilog&nbsp;x&nbsp;are&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;args&nbsp;to&nbsp;plot.&nbsp;&nbsp;See&nbsp;help&nbsp;plot&nbsp;for&nbsp;more<br>
info.<br>
Optional&nbsp;keyword&nbsp;args&nbsp;supported&nbsp;are&nbsp;any&nbsp;of&nbsp;the&nbsp;kwargs&nbsp;supported&nbsp;by<br>
plot&nbsp;or&nbsp;set_xscale.&nbsp;&nbsp;Notable,&nbsp;for&nbsp;log&nbsp;scaling:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;basex:&nbsp;base&nbsp;of&nbsp;the&nbsp;logarithm<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;subsx:&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;ticks;&nbsp;None&nbsp;defaults&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of&nbsp;decades&nbsp;in&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plot;&nbsp;see&nbsp;set_xscale&nbsp;for&nbsp;details<br>
The&nbsp;remaining&nbsp;valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarAxes-semilogy"><strong>semilogy</strong></a>(self, *args, **kwargs)</dt><dd><tt>SEMILOGY(*args,&nbsp;**kwargs):<br>
Make&nbsp;a&nbsp;semilog&nbsp;plot&nbsp;with&nbsp;log&nbsp;scaling&nbsp;on&nbsp;the&nbsp;y&nbsp;axis.&nbsp;&nbsp;The&nbsp;args&nbsp;to<br>
semilogy&nbsp;are&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;args&nbsp;to&nbsp;plot.&nbsp;&nbsp;See&nbsp;help&nbsp;plot&nbsp;for&nbsp;more<br>
info.<br>
Optional&nbsp;keyword&nbsp;args&nbsp;supported&nbsp;are&nbsp;any&nbsp;of&nbsp;the&nbsp;kwargs&nbsp;supported&nbsp;by<br>
plot&nbsp;or&nbsp;set_yscale.&nbsp;&nbsp;Notable,&nbsp;for&nbsp;log&nbsp;scaling:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;basey:&nbsp;base&nbsp;of&nbsp;the&nbsp;logarithm<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;subsy:&nbsp;a&nbsp;sequence&nbsp;of&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;ticks;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;None&nbsp;defaults&nbsp;to&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;decades&nbsp;in&nbsp;the&nbsp;plot;&nbsp;see&nbsp;set_yscale&nbsp;for&nbsp;details<br>
The&nbsp;remaining&nbsp;valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_adjustable"><strong>set_adjustable</strong></a>(self, adjustable)</dt><dd><tt>ACCEPTS:&nbsp;['box'&nbsp;|&nbsp;'datalim']</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_anchor"><strong>set_anchor</strong></a>(self, anchor)</dt><dd><tt>ACCEPTS:&nbsp;['C',&nbsp;'SW',&nbsp;'S',&nbsp;'SE',&nbsp;'E',&nbsp;'NE',&nbsp;'N',&nbsp;'NW',&nbsp;'W']</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_aspect"><strong>set_aspect</strong></a>(self, aspect, adjustable<font color="#909090">=None</font>, anchor<font color="#909090">=None</font>)</dt><dd><tt>aspect:<br>
&nbsp;&nbsp;&nbsp;'auto'&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;automatic;&nbsp;fill&nbsp;position&nbsp;rectangle&nbsp;with&nbsp;data<br>
&nbsp;&nbsp;&nbsp;'normal'&nbsp;-&nbsp;&nbsp;same&nbsp;as&nbsp;'auto';&nbsp;deprecated<br>
&nbsp;&nbsp;&nbsp;'equal'&nbsp;&nbsp;-&nbsp;&nbsp;same&nbsp;scaling&nbsp;from&nbsp;data&nbsp;to&nbsp;plot&nbsp;units&nbsp;for&nbsp;x&nbsp;and&nbsp;y<br>
&nbsp;&nbsp;&nbsp;&nbsp;num&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;a&nbsp;circle&nbsp;will&nbsp;be&nbsp;stretched&nbsp;such&nbsp;that&nbsp;the&nbsp;height<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;num&nbsp;times&nbsp;the&nbsp;width.&nbsp;aspect=1&nbsp;is&nbsp;the&nbsp;same&nbsp;as<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;aspect='equal'.<br>
&nbsp;<br>
adjustable:<br>
&nbsp;&nbsp;&nbsp;&nbsp;'box'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;change&nbsp;physical&nbsp;size&nbsp;of&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;'datalim'&nbsp;&nbsp;-&nbsp;change&nbsp;xlim&nbsp;or&nbsp;ylim<br>
&nbsp;<br>
anchor:<br>
&nbsp;&nbsp;&nbsp;&nbsp;'C'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;centered<br>
&nbsp;&nbsp;&nbsp;&nbsp;'SW'&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;lower&nbsp;left&nbsp;corner<br>
&nbsp;&nbsp;&nbsp;&nbsp;'S'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;middle&nbsp;of&nbsp;bottom&nbsp;edge<br>
&nbsp;&nbsp;&nbsp;&nbsp;'SE'&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;lower&nbsp;right&nbsp;corner<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;etc.<br>
&nbsp;<br>
ACCEPTS:&nbsp;['auto'&nbsp;|&nbsp;'equal'&nbsp;|&nbsp;aspect_ratio]</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_autoscale_on"><strong>set_autoscale_on</strong></a>(self, b)</dt><dd><tt>Set&nbsp;whether&nbsp;autoscaling&nbsp;is&nbsp;applied&nbsp;on&nbsp;plot&nbsp;commands<br>
&nbsp;<br>
ACCEPTS:&nbsp;True|False</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_axis_bgcolor"><strong>set_axis_bgcolor</strong></a>(self, color)</dt><dd><tt>set&nbsp;the&nbsp;axes&nbsp;background&nbsp;color<br>
&nbsp;<br>
ACCEPTS:&nbsp;any&nbsp;matplotlib&nbsp;color&nbsp;-&nbsp;see&nbsp;help(colors)</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_axis_off"><strong>set_axis_off</strong></a>(self)</dt><dd><tt>turn&nbsp;off&nbsp;the&nbsp;axis<br>
&nbsp;<br>
ACCEPTS:&nbsp;void</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_axis_on"><strong>set_axis_on</strong></a>(self)</dt><dd><tt>turn&nbsp;on&nbsp;the&nbsp;axis<br>
&nbsp;<br>
ACCEPTS:&nbsp;void</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_axisbelow"><strong>set_axisbelow</strong></a>(self, b)</dt><dd><tt>Set&nbsp;whether&nbsp;the&nbsp;axis&nbsp;ticks&nbsp;and&nbsp;gridlines&nbsp;are&nbsp;above&nbsp;or&nbsp;below&nbsp;most&nbsp;artists<br>
&nbsp;<br>
ACCEPTS:&nbsp;True|False</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_cursor_props"><strong>set_cursor_props</strong></a>(self, *args)</dt><dd><tt>Set&nbsp;the&nbsp;cursor&nbsp;property&nbsp;as<br>
ax.<a href="#PolarAxes-set_cursor_props">set_cursor_props</a>(linewidth,&nbsp;color)&nbsp;&nbsp;OR<br>
ax.<a href="#PolarAxes-set_cursor_props">set_cursor_props</a>((linewidth,&nbsp;color))<br>
&nbsp;<br>
ACCEPTS:&nbsp;a&nbsp;(float,&nbsp;color)&nbsp;tuple</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_figure"><strong>set_figure</strong></a>(self, fig)</dt><dd><tt>Set&nbsp;the&nbsp;<a href="#Axes">Axes</a>&nbsp;figure<br>
&nbsp;<br>
ACCEPTS:&nbsp;a&nbsp;Figure&nbsp;instance</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_frame_on"><strong>set_frame_on</strong></a>(self, b)</dt><dd><tt>Set&nbsp;whether&nbsp;the&nbsp;axes&nbsp;rectangle&nbsp;patch&nbsp;is&nbsp;drawn<br>
&nbsp;<br>
ACCEPTS:&nbsp;True|False</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_navigate"><strong>set_navigate</strong></a>(self, b)</dt><dd><tt>Set&nbsp;whether&nbsp;the&nbsp;axes&nbsp;responds&nbsp;to&nbsp;navigation&nbsp;toolbar&nbsp;commands<br>
&nbsp;<br>
ACCEPTS:&nbsp;True|False</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_navigate_mode"><strong>set_navigate_mode</strong></a>(self, b)</dt><dd><tt>Set&nbsp;the&nbsp;navigation&nbsp;toolbar&nbsp;button&nbsp;status;<br>
this&nbsp;is&nbsp;not&nbsp;a&nbsp;user-API&nbsp;function.</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_position"><strong>set_position</strong></a>(self, pos, which<font color="#909090">='both'</font>)</dt><dd><tt>Set&nbsp;the&nbsp;axes&nbsp;position&nbsp;with&nbsp;pos&nbsp;=&nbsp;[left,&nbsp;bottom,&nbsp;width,&nbsp;height]<br>
in&nbsp;relative&nbsp;0,1&nbsp;coords<br>
&nbsp;<br>
There&nbsp;are&nbsp;two&nbsp;position&nbsp;variables:&nbsp;one&nbsp;which&nbsp;is&nbsp;ultimately<br>
used,&nbsp;but&nbsp;which&nbsp;may&nbsp;be&nbsp;modified&nbsp;by&nbsp;apply_aspect,&nbsp;and&nbsp;a&nbsp;second<br>
which&nbsp;is&nbsp;the&nbsp;starting&nbsp;point&nbsp;for&nbsp;apply_aspect.<br>
&nbsp;<br>
which&nbsp;=&nbsp;'active'&nbsp;to&nbsp;change&nbsp;the&nbsp;first;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'original'&nbsp;to&nbsp;change&nbsp;the&nbsp;second;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'both'&nbsp;to&nbsp;change&nbsp;both<br>
&nbsp;<br>
ACCEPTS:&nbsp;len(4)&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_title"><strong>set_title</strong></a>(self, label, fontdict<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>SET_TITLE(label,&nbsp;fontdict=None,&nbsp;**kwargs):<br>
Set&nbsp;the&nbsp;title&nbsp;for&nbsp;the&nbsp;axes.&nbsp;&nbsp;See&nbsp;the&nbsp;text&nbsp;docstring&nbsp;for&nbsp;information<br>
of&nbsp;how&nbsp;override&nbsp;and&nbsp;the&nbsp;optional&nbsp;args&nbsp;work<br>
kwargs&nbsp;are&nbsp;Text&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
ACCEPTS:&nbsp;str</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_xscale"><strong>set_xscale</strong></a>(self, value, basex<font color="#909090">=10</font>, subsx<font color="#909090">=None</font>)</dt><dd><tt>SET_XSCALE(value,&nbsp;basex=10,&nbsp;subsx=None)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;xscaling:&nbsp;'log'&nbsp;or&nbsp;'linear'<br>
&nbsp;<br>
If&nbsp;value&nbsp;is&nbsp;'log',&nbsp;the&nbsp;additional&nbsp;kwargs&nbsp;have&nbsp;the&nbsp;following&nbsp;meaning<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;basex:&nbsp;base&nbsp;of&nbsp;the&nbsp;logarithm<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;subsx:&nbsp;a&nbsp;sequence&nbsp;of&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;ticks;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;None&nbsp;defaults&nbsp;to&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;decades&nbsp;in&nbsp;the&nbsp;plot.&nbsp;&nbsp;Eg&nbsp;for&nbsp;base&nbsp;10,&nbsp;subsx=(1,2,5)&nbsp;will<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;put&nbsp;minor&nbsp;ticks&nbsp;on&nbsp;1,2,5,11,12,15,21,&nbsp;....To&nbsp;turn&nbsp;off<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minor&nbsp;ticking,&nbsp;set&nbsp;subsx=[]<br>
&nbsp;<br>
ACCEPTS:&nbsp;['log'&nbsp;|&nbsp;'linear'&nbsp;]</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_xticklabels"><strong>set_xticklabels</strong></a>(self, labels, fontdict<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>SET_XTICKLABELS(labels,&nbsp;fontdict=None,&nbsp;**kwargs)<br>
Set&nbsp;the&nbsp;xtick&nbsp;labels&nbsp;with&nbsp;list&nbsp;of&nbsp;strings&nbsp;labels&nbsp;Return&nbsp;a&nbsp;list&nbsp;of&nbsp;axis<br>
text&nbsp;instances.<br>
kwargs&nbsp;set&nbsp;the&nbsp;Text&nbsp;properties.&nbsp;&nbsp;Valid&nbsp;properties&nbsp;are<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
ACCEPTS:&nbsp;sequence&nbsp;of&nbsp;strings</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_xticks"><strong>set_xticks</strong></a>(self, ticks)</dt><dd><tt>Set&nbsp;the&nbsp;x&nbsp;ticks&nbsp;with&nbsp;list&nbsp;of&nbsp;ticks<br>
&nbsp;<br>
ACCEPTS:&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_yscale"><strong>set_yscale</strong></a>(self, value, basey<font color="#909090">=10</font>, subsy<font color="#909090">=None</font>)</dt><dd><tt>SET_YSCALE(value,&nbsp;basey=10,&nbsp;subsy=None)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;yscaling:&nbsp;'log'&nbsp;or&nbsp;'linear'<br>
&nbsp;<br>
If&nbsp;value&nbsp;is&nbsp;'log',&nbsp;the&nbsp;additional&nbsp;kwargs&nbsp;have&nbsp;the&nbsp;following&nbsp;meaning<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;basey:&nbsp;base&nbsp;of&nbsp;the&nbsp;logarithm<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;subsy:&nbsp;a&nbsp;sequence&nbsp;of&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;ticks;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;None&nbsp;defaults&nbsp;to&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;decades&nbsp;in&nbsp;the&nbsp;plot.&nbsp;&nbsp;Eg&nbsp;for&nbsp;base&nbsp;10,&nbsp;subsy=(1,2,5)&nbsp;will<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;put&nbsp;minor&nbsp;ticks&nbsp;on&nbsp;1,2,5,11,12,15,&nbsp;21,&nbsp;....To&nbsp;turn&nbsp;off<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minor&nbsp;ticking,&nbsp;set&nbsp;subsy=[]<br>
&nbsp;<br>
ACCEPTS:&nbsp;['log'&nbsp;|&nbsp;'linear']</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_yticklabels"><strong>set_yticklabels</strong></a>(self, labels, fontdict<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>SET_YTICKLABELS(labels,&nbsp;fontdict=None,&nbsp;**kwargs)<br>
Set&nbsp;the&nbsp;ytick&nbsp;labels&nbsp;with&nbsp;list&nbsp;of&nbsp;strings&nbsp;labels.&nbsp;&nbsp;Return&nbsp;a&nbsp;list&nbsp;of<br>
Text&nbsp;instances.<br>
kwargs&nbsp;set&nbsp;Text&nbsp;properties&nbsp;for&nbsp;the&nbsp;labels.&nbsp;&nbsp;Valid&nbsp;properties&nbsp;are<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
ACCEPTS:&nbsp;sequence&nbsp;of&nbsp;strings</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_yticks"><strong>set_yticks</strong></a>(self, ticks)</dt><dd><tt>Set&nbsp;the&nbsp;y&nbsp;ticks&nbsp;with&nbsp;list&nbsp;of&nbsp;ticks<br>
&nbsp;<br>
ACCEPTS:&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="PolarAxes-specgram"><strong>specgram</strong></a>(self, x, NFFT<font color="#909090">=256</font>, Fs<font color="#909090">=2</font>, detrend<font color="#909090">=&lt;function detrend_none at 0x847d844&gt;</font>, window<font color="#909090">=&lt;function window_hanning at 0x847d72c&gt;</font>, noverlap<font color="#909090">=128</font>, cmap<font color="#909090">=None</font>, xextent<font color="#909090">=None</font>)</dt><dd><tt>SPECGRAM(x,&nbsp;NFFT=256,&nbsp;Fs=2,&nbsp;detrend=detrend_none,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window=window_hanning,&nbsp;noverlap=128,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap=None,&nbsp;xextent=None)<br>
&nbsp;<br>
Compute&nbsp;a&nbsp;spectrogram&nbsp;of&nbsp;data&nbsp;in&nbsp;x.&nbsp;&nbsp;Data&nbsp;are&nbsp;split&nbsp;into&nbsp;NFFT&nbsp;length<br>
segements&nbsp;and&nbsp;the&nbsp;PSD&nbsp;of&nbsp;each&nbsp;section&nbsp;is&nbsp;computed.&nbsp;&nbsp;The&nbsp;windowing<br>
function&nbsp;window&nbsp;is&nbsp;applied&nbsp;to&nbsp;each&nbsp;segment,&nbsp;and&nbsp;the&nbsp;amount&nbsp;of&nbsp;overlap<br>
of&nbsp;each&nbsp;segment&nbsp;is&nbsp;specified&nbsp;with&nbsp;noverlap.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;cmap&nbsp;is&nbsp;a&nbsp;colormap;&nbsp;if&nbsp;None&nbsp;use&nbsp;default&nbsp;determined&nbsp;by&nbsp;rc<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;xextent&nbsp;is&nbsp;the&nbsp;image&nbsp;extent&nbsp;in&nbsp;the&nbsp;xaxes&nbsp;xextent=xmin,&nbsp;xmax&nbsp;-<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;0,&nbsp;max(bins),&nbsp;0,&nbsp;max(freqs)&nbsp;where&nbsp;bins&nbsp;is&nbsp;the&nbsp;return<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value&nbsp;from&nbsp;matplotlib.matplotlib.mlab.specgram<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;See&nbsp;help(psd)&nbsp;for&nbsp;information&nbsp;on&nbsp;the&nbsp;other&nbsp;keyword&nbsp;arguments.<br>
&nbsp;<br>
Return&nbsp;value&nbsp;is&nbsp;(Pxx,&nbsp;freqs,&nbsp;bins,&nbsp;im),&nbsp;where<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;bins&nbsp;are&nbsp;the&nbsp;time&nbsp;points&nbsp;the&nbsp;spectrogram&nbsp;is&nbsp;calculated&nbsp;over<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;freqs&nbsp;is&nbsp;an&nbsp;array&nbsp;of&nbsp;frequencies<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Pxx&nbsp;is&nbsp;a&nbsp;len(times)&nbsp;x&nbsp;len(freqs)&nbsp;array&nbsp;of&nbsp;power<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;im&nbsp;is&nbsp;a&nbsp;matplotlib.image.AxesImage.<br>
&nbsp;<br>
Note:&nbsp;If&nbsp;x&nbsp;is&nbsp;real&nbsp;(i.e.&nbsp;non-complex)&nbsp;only&nbsp;the&nbsp;positive&nbsp;spectrum&nbsp;is<br>
shown.&nbsp;&nbsp;If&nbsp;x&nbsp;is&nbsp;complex&nbsp;both&nbsp;positive&nbsp;and&nbsp;negative&nbsp;parts&nbsp;of&nbsp;the<br>
spectrum&nbsp;are&nbsp;shown.</tt></dd></dl>

<dl><dt><a name="PolarAxes-spy"><strong>spy</strong></a>(self, Z, precision<font color="#909090">=None</font>, marker<font color="#909090">=None</font>, markersize<font color="#909090">=None</font>, aspect<font color="#909090">='equal'</font>, **kwargs)</dt><dd><tt><a href="#PolarAxes-spy">spy</a>(Z)&nbsp;plots&nbsp;the&nbsp;sparsity&nbsp;pattern&nbsp;of&nbsp;the&nbsp;2-D&nbsp;array&nbsp;Z<br>
&nbsp;<br>
If&nbsp;precision&nbsp;is&nbsp;None,&nbsp;any&nbsp;non-zero&nbsp;value&nbsp;will&nbsp;be&nbsp;plotted;<br>
else,&nbsp;values&nbsp;of&nbsp;absolute(Z)&gt;precision&nbsp;will&nbsp;be&nbsp;plotted.<br>
&nbsp;<br>
The&nbsp;array&nbsp;will&nbsp;be&nbsp;plotted&nbsp;as&nbsp;it&nbsp;would&nbsp;be&nbsp;printed,&nbsp;with<br>
the&nbsp;first&nbsp;index&nbsp;(row)&nbsp;increasing&nbsp;down&nbsp;and&nbsp;the&nbsp;second<br>
index&nbsp;(column)&nbsp;increasing&nbsp;to&nbsp;the&nbsp;right.<br>
&nbsp;<br>
By&nbsp;default&nbsp;aspect&nbsp;is&nbsp;'equal'&nbsp;so&nbsp;that&nbsp;each&nbsp;array&nbsp;element<br>
occupies&nbsp;a&nbsp;square&nbsp;space;&nbsp;set&nbsp;the&nbsp;aspect&nbsp;kwarg&nbsp;to&nbsp;'auto'<br>
to&nbsp;allow&nbsp;the&nbsp;plot&nbsp;to&nbsp;fill&nbsp;the&nbsp;plot&nbsp;box,&nbsp;or&nbsp;to&nbsp;any&nbsp;scalar<br>
number&nbsp;to&nbsp;specify&nbsp;the&nbsp;aspect&nbsp;ratio&nbsp;of&nbsp;an&nbsp;array&nbsp;element<br>
directly.<br>
&nbsp;<br>
Two&nbsp;plotting&nbsp;styles&nbsp;are&nbsp;available:&nbsp;image&nbsp;or&nbsp;marker.&nbsp;Both<br>
are&nbsp;available&nbsp;for&nbsp;full&nbsp;arrays,&nbsp;but&nbsp;only&nbsp;the&nbsp;marker&nbsp;style<br>
works&nbsp;for&nbsp;scipy.sparse.spmatrix&nbsp;instances.<br>
&nbsp;<br>
If&nbsp;marker&nbsp;and&nbsp;markersize&nbsp;are&nbsp;None,&nbsp;an&nbsp;image&nbsp;will&nbsp;be<br>
returned&nbsp;and&nbsp;any&nbsp;remaining&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;to&nbsp;imshow;<br>
else,&nbsp;a&nbsp;Line2D&nbsp;object&nbsp;will&nbsp;be&nbsp;returned&nbsp;with&nbsp;the&nbsp;value<br>
of&nbsp;marker&nbsp;determining&nbsp;the&nbsp;marker&nbsp;type,&nbsp;and&nbsp;any&nbsp;remaining<br>
kwargs&nbsp;passed&nbsp;to&nbsp;the&nbsp;axes&nbsp;plot&nbsp;method.<br>
&nbsp;<br>
If&nbsp;marker&nbsp;and&nbsp;markersize&nbsp;are&nbsp;None,&nbsp;useful&nbsp;kwargs&nbsp;include:<br>
&nbsp;&nbsp;&nbsp;&nbsp;cmap<br>
&nbsp;&nbsp;&nbsp;&nbsp;alpha<br>
See&nbsp;documentation&nbsp;for&nbsp;<a href="#PolarAxes-imshow">imshow</a>()&nbsp;for&nbsp;details.<br>
For&nbsp;controlling&nbsp;colors,&nbsp;e.g.&nbsp;cyan&nbsp;background&nbsp;and&nbsp;red&nbsp;marks,&nbsp;use:<br>
&nbsp;&nbsp;&nbsp;&nbsp;cmap&nbsp;=&nbsp;matplotlib.colors.ListedColormap(['c','r'])<br>
&nbsp;<br>
If&nbsp;marker&nbsp;or&nbsp;markersize&nbsp;is&nbsp;not&nbsp;None,&nbsp;useful&nbsp;kwargs&nbsp;include:<br>
&nbsp;&nbsp;&nbsp;&nbsp;marker<br>
&nbsp;&nbsp;&nbsp;&nbsp;markersize<br>
&nbsp;&nbsp;&nbsp;&nbsp;color<br>
See&nbsp;documentation&nbsp;for&nbsp;<a href="#PolarAxes-plot">plot</a>()&nbsp;for&nbsp;details.<br>
&nbsp;<br>
Useful&nbsp;values&nbsp;for&nbsp;marker&nbsp;include:<br>
&nbsp;&nbsp;&nbsp;&nbsp;'s'&nbsp;&nbsp;square&nbsp;(default)<br>
&nbsp;&nbsp;&nbsp;&nbsp;'o'&nbsp;&nbsp;circle<br>
&nbsp;&nbsp;&nbsp;&nbsp;'.'&nbsp;&nbsp;point<br>
&nbsp;&nbsp;&nbsp;&nbsp;','&nbsp;&nbsp;pixel</tt></dd></dl>

<dl><dt><a name="PolarAxes-stem"><strong>stem</strong></a>(self, x, y, linefmt<font color="#909090">='b-'</font>, markerfmt<font color="#909090">='bo'</font>, basefmt<font color="#909090">='r-'</font>)</dt><dd><tt>STEM(x,&nbsp;y,&nbsp;linefmt='b-',&nbsp;markerfmt='bo',&nbsp;basefmt='r-')<br>
&nbsp;<br>
A&nbsp;stem&nbsp;plot&nbsp;plots&nbsp;vertical&nbsp;lines&nbsp;(using&nbsp;linefmt)&nbsp;at&nbsp;each&nbsp;x&nbsp;location<br>
from&nbsp;the&nbsp;baseline&nbsp;to&nbsp;y,&nbsp;and&nbsp;places&nbsp;a&nbsp;marker&nbsp;there&nbsp;using&nbsp;markerfmt.&nbsp;&nbsp;A<br>
horizontal&nbsp;line&nbsp;at&nbsp;0&nbsp;is&nbsp;is&nbsp;plotted&nbsp;using&nbsp;basefmt<br>
&nbsp;<br>
Return&nbsp;value&nbsp;is&nbsp;(markerline,&nbsp;stemlines,&nbsp;baseline)&nbsp;.<br>
&nbsp;<br>
See<br>
<a href="http://www.mathworks.com/access/helpdesk/help/techdoc/ref/stem.html">http://www.mathworks.com/access/helpdesk/help/techdoc/ref/stem.html</a><br>
for&nbsp;details&nbsp;and&nbsp;examples/stem_plot.py&nbsp;for&nbsp;a&nbsp;demo.</tt></dd></dl>

<dl><dt><a name="PolarAxes-text"><strong>text</strong></a>(self, x, y, s, fontdict<font color="#909090">=None</font>, withdash<font color="#909090">=False</font>, **kwargs)</dt><dd><tt>TEXT(x,&nbsp;y,&nbsp;s,&nbsp;fontdict=None,&nbsp;**kwargs)<br>
Add&nbsp;text&nbsp;in&nbsp;string&nbsp;s&nbsp;to&nbsp;axis&nbsp;at&nbsp;location&nbsp;x,y&nbsp;(data&nbsp;coords)<br>
&nbsp;&nbsp;fontdict&nbsp;is&nbsp;a&nbsp;dictionary&nbsp;to&nbsp;override&nbsp;the&nbsp;default&nbsp;text&nbsp;properties.<br>
&nbsp;&nbsp;If&nbsp;fontdict&nbsp;is&nbsp;None,&nbsp;the&nbsp;defaults&nbsp;are&nbsp;determined&nbsp;by&nbsp;your&nbsp;rc<br>
&nbsp;&nbsp;parameters.<br>
&nbsp;&nbsp;withdash=True&nbsp;will&nbsp;create&nbsp;a&nbsp;TextWithDash&nbsp;instance&nbsp;instead<br>
&nbsp;&nbsp;of&nbsp;a&nbsp;Text&nbsp;instance.<br>
Individual&nbsp;keyword&nbsp;arguments&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;override&nbsp;any&nbsp;given<br>
parameter<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-text">text</a>(x,&nbsp;y,&nbsp;s,&nbsp;fontsize=12)<br>
The&nbsp;default&nbsp;transform&nbsp;specifies&nbsp;that&nbsp;text&nbsp;is&nbsp;in&nbsp;data&nbsp;coords,<br>
alternatively,&nbsp;you&nbsp;can&nbsp;specify&nbsp;text&nbsp;in&nbsp;axis&nbsp;coords&nbsp;(0,0&nbsp;lower&nbsp;left&nbsp;and<br>
1,1&nbsp;upper&nbsp;right).&nbsp;&nbsp;The&nbsp;example&nbsp;below&nbsp;places&nbsp;text&nbsp;in&nbsp;the&nbsp;center&nbsp;of&nbsp;the<br>
axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarAxes-text">text</a>(0.5,&nbsp;0.5,'matplotlib',<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment='center',<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment='center',<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform&nbsp;=&nbsp;ax.transAxes,<br>
&nbsp;&nbsp;&nbsp;&nbsp;)<br>
You&nbsp;can&nbsp;put&nbsp;a&nbsp;rectangular&nbsp;box&nbsp;around&nbsp;the&nbsp;text&nbsp;instance&nbsp;(eg&nbsp;to<br>
set&nbsp;a&nbsp;background&nbsp;color)&nbsp;by&nbsp;using&nbsp;the&nbsp;keyword&nbsp;bbox.&nbsp;&nbsp;bbox&nbsp;is&nbsp;a<br>
dictionary&nbsp;of&nbsp;matplotlib.patches.Rectangle&nbsp;properties&nbsp;(see&nbsp;help<br>
for&nbsp;Rectangle&nbsp;for&nbsp;a&nbsp;list&nbsp;of&nbsp;these).&nbsp;&nbsp;For&nbsp;example<br>
&nbsp;<a href="#PolarAxes-text">text</a>(x,&nbsp;y,&nbsp;s,&nbsp;bbox=dict(facecolor='red',&nbsp;alpha=0.5))<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Text&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarAxes-ticklabel_format"><strong>ticklabel_format</strong></a>(self, **kwargs)</dt><dd><tt>Convenience&nbsp;method&nbsp;for&nbsp;manipulating&nbsp;the&nbsp;ScalarFormatter<br>
used&nbsp;by&nbsp;default&nbsp;for&nbsp;linear&nbsp;axes.<br>
&nbsp;<br>
kwargs:<br>
&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;=&nbsp;'sci'&nbsp;(or&nbsp;'scientific')&nbsp;or&nbsp;'plain';<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plain&nbsp;turns&nbsp;off&nbsp;scientific&nbsp;notation<br>
&nbsp;&nbsp;&nbsp;&nbsp;axis&nbsp;=&nbsp;'x',&nbsp;'y',&nbsp;or&nbsp;'both'<br>
&nbsp;<br>
Only&nbsp;the&nbsp;major&nbsp;ticks&nbsp;are&nbsp;affected.<br>
If&nbsp;the&nbsp;method&nbsp;is&nbsp;called&nbsp;when&nbsp;the&nbsp;ScalarFormatter&nbsp;is&nbsp;not<br>
the&nbsp;one&nbsp;being&nbsp;used,&nbsp;an&nbsp;AttributeError&nbsp;will&nbsp;be&nbsp;raised&nbsp;with<br>
no&nbsp;additional&nbsp;error&nbsp;message.<br>
&nbsp;<br>
Additional&nbsp;capabilities&nbsp;and/or&nbsp;friendlier&nbsp;error&nbsp;checking&nbsp;may&nbsp;be&nbsp;added.</tt></dd></dl>

<dl><dt><a name="PolarAxes-update_datalim"><strong>update_datalim</strong></a>(self, xys)</dt><dd><tt>Update&nbsp;the&nbsp;data&nbsp;lim&nbsp;bbox&nbsp;with&nbsp;seq&nbsp;of&nbsp;xy&nbsp;tups&nbsp;or&nbsp;equiv.&nbsp;2-D&nbsp;array</tt></dd></dl>

<dl><dt><a name="PolarAxes-update_datalim_numerix"><strong>update_datalim_numerix</strong></a>(self, x, y)</dt><dd><tt>Update&nbsp;the&nbsp;data&nbsp;lim&nbsp;bbox&nbsp;with&nbsp;seq&nbsp;of&nbsp;xy&nbsp;tups</tt></dd></dl>

<dl><dt><a name="PolarAxes-vlines"><strong>vlines</strong></a>(self, x, ymin, ymax, colors<font color="#909090">='k'</font>, linestyle<font color="#909090">='solid'</font>, label<font color="#909090">=''</font>, **kwargs)</dt><dd><tt>VLINES(x,&nbsp;ymin,&nbsp;ymax,&nbsp;color='k')<br>
Plot&nbsp;vertical&nbsp;lines&nbsp;at&nbsp;each&nbsp;x&nbsp;from&nbsp;ymin&nbsp;to&nbsp;ymax.&nbsp;&nbsp;ymin&nbsp;or&nbsp;ymax&nbsp;can&nbsp;be<br>
scalars&nbsp;or&nbsp;len(x)&nbsp;numpy&nbsp;arrays.&nbsp;&nbsp;If&nbsp;they&nbsp;are&nbsp;scalars,&nbsp;then&nbsp;the<br>
respective&nbsp;values&nbsp;are&nbsp;constant,&nbsp;else&nbsp;the&nbsp;heights&nbsp;of&nbsp;the&nbsp;lines&nbsp;are<br>
determined&nbsp;by&nbsp;ymin&nbsp;and&nbsp;ymax<br>
colors&nbsp;is&nbsp;a&nbsp;line&nbsp;collections&nbsp;color&nbsp;args,&nbsp;either&nbsp;a&nbsp;single&nbsp;color<br>
or&nbsp;a&nbsp;len(x)&nbsp;list&nbsp;of&nbsp;colors<br>
linestyle&nbsp;is&nbsp;one&nbsp;of&nbsp;solid|dashed|dashdot|dotted<br>
Returns&nbsp;the&nbsp;LineCollection&nbsp;that&nbsp;was&nbsp;added<br>
kwargs&nbsp;are&nbsp;LineCollection&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clim:&nbsp;a&nbsp;length&nbsp;2&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap:&nbsp;a&nbsp;colormap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colorbar:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle:&nbsp;['solid'&nbsp;|&nbsp;'dashed',&nbsp;'dashdot',&nbsp;'dotted'&nbsp;|&nbsp;&nbsp;(offset,&nbsp;on-off-dash-seq)&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;segments:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verts:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarAxes-xaxis_date"><strong>xaxis_date</strong></a>(self, tz<font color="#909090">=None</font>)</dt><dd><tt>Sets&nbsp;up&nbsp;x-axis&nbsp;ticks&nbsp;and&nbsp;labels&nbsp;that&nbsp;treat&nbsp;the&nbsp;x&nbsp;data&nbsp;as&nbsp;dates.<br>
&nbsp;<br>
tz&nbsp;is&nbsp;the&nbsp;time&nbsp;zone&nbsp;to&nbsp;use&nbsp;in&nbsp;labeling&nbsp;dates.&nbsp;&nbsp;Defaults&nbsp;to&nbsp;rc&nbsp;value.</tt></dd></dl>

<dl><dt><a name="PolarAxes-xcorr"><strong>xcorr</strong></a>(self, x, y, normed<font color="#909090">=False</font>, detrend<font color="#909090">=&lt;function detrend_none at 0x847d844&gt;</font>, usevlines<font color="#909090">=False</font>, maxlags<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>XCORR(x,&nbsp;y,&nbsp;normed=False,&nbsp;detrend=detrend_none,&nbsp;usevlines=False,&nbsp;**kwargs):<br>
Plot&nbsp;the&nbsp;cross&nbsp;correlation&nbsp;between&nbsp;x&nbsp;and&nbsp;y.&nbsp;&nbsp;If&nbsp;normed=True,<br>
normalize&nbsp;the&nbsp;data&nbsp;but&nbsp;the&nbsp;cross&nbsp;correlation&nbsp;at&nbsp;0-th&nbsp;lag.&nbsp;&nbsp;x<br>
and&nbsp;y&nbsp;are&nbsp;detrended&nbsp;by&nbsp;the&nbsp;detrend&nbsp;callable&nbsp;(default&nbsp;no<br>
normalization.&nbsp;&nbsp;x&nbsp;and&nbsp;y&nbsp;must&nbsp;be&nbsp;equal&nbsp;length<br>
data&nbsp;are&nbsp;plotted&nbsp;as&nbsp;<a href="#PolarAxes-plot">plot</a>(lags,&nbsp;c,&nbsp;**kwargs)<br>
return&nbsp;value&nbsp;is&nbsp;lags,&nbsp;c,&nbsp;line&nbsp;where&nbsp;lags&nbsp;are&nbsp;a&nbsp;length<br>
2*maxlags+1&nbsp;lag&nbsp;vector,&nbsp;c&nbsp;is&nbsp;the&nbsp;2*maxlags+1&nbsp;auto&nbsp;correlation<br>
vector,&nbsp;and&nbsp;line&nbsp;is&nbsp;a&nbsp;Line2D&nbsp;instance&nbsp;returned&nbsp;by&nbsp;plot.&nbsp;&nbsp;The<br>
default&nbsp;linestyle&nbsp;is&nbsp;None&nbsp;and&nbsp;the&nbsp;default&nbsp;marker&nbsp;is&nbsp;'o',<br>
though&nbsp;these&nbsp;can&nbsp;be&nbsp;overridden&nbsp;with&nbsp;keyword&nbsp;args.&nbsp;&nbsp;The&nbsp;cross<br>
correlation&nbsp;is&nbsp;performed&nbsp;with&nbsp;numerix&nbsp;cross_correlate&nbsp;with<br>
mode=2.<br>
If&nbsp;usevlines&nbsp;is&nbsp;True,&nbsp;<a href="#Axes">Axes</a>.vlines&nbsp;rather&nbsp;than&nbsp;<a href="#Axes">Axes</a>.plot&nbsp;is&nbsp;used<br>
to&nbsp;draw&nbsp;vertical&nbsp;lines&nbsp;from&nbsp;the&nbsp;origin&nbsp;to&nbsp;the&nbsp;acorr.<br>
Otherwise&nbsp;the&nbsp;plotstyle&nbsp;is&nbsp;determined&nbsp;by&nbsp;the&nbsp;kwargs,&nbsp;which&nbsp;are<br>
Line2D&nbsp;properties.&nbsp;&nbsp;If&nbsp;usevlines,&nbsp;the&nbsp;return&nbsp;value&nbsp;is&nbsp;lags,&nbsp;c,<br>
linecol,&nbsp;b&nbsp;where&nbsp;linecol&nbsp;is&nbsp;the&nbsp;LineCollection&nbsp;and&nbsp;b&nbsp;is&nbsp;the&nbsp;x-axis<br>
if&nbsp;usevlines=True,&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;onto&nbsp;<a href="#Axes">Axes</a>.vlines<br>
if&nbsp;usevlines=False,&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;onto&nbsp;<a href="#Axes">Axes</a>.plot<br>
maxlags&nbsp;is&nbsp;a&nbsp;positive&nbsp;integer&nbsp;detailing&nbsp;the&nbsp;number&nbsp;of&nbsp;lags&nbsp;to&nbsp;show.<br>
The&nbsp;default&nbsp;value&nbsp;of&nbsp;None&nbsp;will&nbsp;return&nbsp;all&nbsp;(2*len(x)-1)&nbsp;lags.<br>
See&nbsp;the&nbsp;respective&nbsp;function&nbsp;for&nbsp;documentation&nbsp;on&nbsp;valid&nbsp;kwargs</tt></dd></dl>

<dl><dt><a name="PolarAxes-yaxis_date"><strong>yaxis_date</strong></a>(self, tz<font color="#909090">=None</font>)</dt><dd><tt>Sets&nbsp;up&nbsp;y-axis&nbsp;ticks&nbsp;and&nbsp;labels&nbsp;that&nbsp;treat&nbsp;the&nbsp;y&nbsp;data&nbsp;as&nbsp;dates.<br>
&nbsp;<br>
tz&nbsp;is&nbsp;the&nbsp;time&nbsp;zone&nbsp;to&nbsp;use&nbsp;in&nbsp;labeling&nbsp;dates.&nbsp;&nbsp;Defaults&nbsp;to&nbsp;rc&nbsp;value.</tt></dd></dl>

<dl><dt><a name="PolarAxes-zoomx"><strong>zoomx</strong></a>(self, numsteps)</dt><dd><tt>Zoom&nbsp;in&nbsp;on&nbsp;the&nbsp;x&nbsp;xaxis&nbsp;numsteps&nbsp;(plus&nbsp;for&nbsp;zoom&nbsp;in,&nbsp;minus&nbsp;for&nbsp;zoom&nbsp;out)</tt></dd></dl>

<dl><dt><a name="PolarAxes-zoomy"><strong>zoomy</strong></a>(self, numsteps)</dt><dd><tt>Zoom&nbsp;in&nbsp;on&nbsp;the&nbsp;x&nbsp;xaxis&nbsp;numsteps&nbsp;(plus&nbsp;for&nbsp;zoom&nbsp;in,&nbsp;minus&nbsp;for&nbsp;zoom&nbsp;out)</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.axes.html#Axes">Axes</a>:<br>
<dl><dt><strong>scaled</strong> = {0: 'linear', 1: 'log'}</dl>

<hr>
Methods inherited from <a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a>:<br>
<dl><dt><a name="PolarAxes-add_callback"><strong>add_callback</strong></a>(self, func)</dt></dl>

<dl><dt><a name="PolarAxes-convert_xunits"><strong>convert_xunits</strong></a>(self, x)</dt><dd><tt>for&nbsp;artists&nbsp;in&nbsp;an&nbsp;axes,&nbsp;if&nbsp;the&nbsp;xaxis&nbsp;as&nbsp;units&nbsp;support,<br>
convert&nbsp;x&nbsp;using&nbsp;xaxis&nbsp;unit&nbsp;type</tt></dd></dl>

<dl><dt><a name="PolarAxes-convert_yunits"><strong>convert_yunits</strong></a>(self, y)</dt><dd><tt>for&nbsp;artists&nbsp;in&nbsp;an&nbsp;axes,&nbsp;if&nbsp;the&nbsp;yaxis&nbsp;as&nbsp;units&nbsp;support,<br>
convert&nbsp;y&nbsp;using&nbsp;yaxis&nbsp;unit&nbsp;type</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_alpha"><strong>get_alpha</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on&nbsp;all<br>
backends</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_animated"><strong>get_animated</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;artist's&nbsp;animated&nbsp;state</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_axes"><strong>get_axes</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;axes&nbsp;instance&nbsp;the&nbsp;artist&nbsp;resides&nbsp;in,&nbsp;or&nbsp;None</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_clip_box"><strong>get_clip_box</strong></a>(self)</dt><dd><tt>Return&nbsp;artist&nbsp;clipbox</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_clip_on"><strong>get_clip_on</strong></a>(self)</dt><dd><tt>Return&nbsp;whether&nbsp;artist&nbsp;uses&nbsp;clipping</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_clip_path"><strong>get_clip_path</strong></a>(self)</dt><dd><tt>Return&nbsp;artist&nbsp;clip&nbsp;path</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_figure"><strong>get_figure</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;figure&nbsp;instance</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_label"><strong>get_label</strong></a>(self)</dt></dl>

<dl><dt><a name="PolarAxes-get_picker"><strong>get_picker</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;Pickeration&nbsp;instance&nbsp;used&nbsp;by&nbsp;this&nbsp;artist</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_transform"><strong>get_transform</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;Transformation&nbsp;instance&nbsp;used&nbsp;by&nbsp;this&nbsp;artist</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_visible"><strong>get_visible</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;artist's&nbsp;visiblity</tt></dd></dl>

<dl><dt><a name="PolarAxes-get_zorder"><strong>get_zorder</strong></a>(self)</dt></dl>

<dl><dt><a name="PolarAxes-have_units"><strong>have_units</strong></a>(self)</dt><dd><tt>return&nbsp;True&nbsp;if&nbsp;units&nbsp;are&nbsp;set&nbsp;on&nbsp;the&nbsp;x&nbsp;or&nbsp;y&nbsp;axes</tt></dd></dl>

<dl><dt><a name="PolarAxes-is_figure_set"><strong>is_figure_set</strong></a>(self)</dt></dl>

<dl><dt><a name="PolarAxes-is_transform_set"><strong>is_transform_set</strong></a>(self)</dt><dd><tt><a href="matplotlib.artist.html#Artist">Artist</a>&nbsp;has&nbsp;transform&nbsp;explicity&nbsp;let</tt></dd></dl>

<dl><dt><a name="PolarAxes-pchanged"><strong>pchanged</strong></a>(self)</dt><dd><tt>fire&nbsp;event&nbsp;when&nbsp;property&nbsp;changed</tt></dd></dl>

<dl><dt><a name="PolarAxes-pickable"><strong>pickable</strong></a>(self)</dt><dd><tt>return&nbsp;True&nbsp;if&nbsp;self&nbsp;is&nbsp;pickable</tt></dd></dl>

<dl><dt><a name="PolarAxes-remove_callback"><strong>remove_callback</strong></a>(self, oid)</dt></dl>

<dl><dt><a name="PolarAxes-set"><strong>set</strong></a>(self, **kwargs)</dt><dd><tt>A&nbsp;tkstyle&nbsp;set&nbsp;command,&nbsp;pass&nbsp;kwargs&nbsp;to&nbsp;set&nbsp;properties</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_alpha"><strong>set_alpha</strong></a>(self, alpha)</dt><dd><tt>Set&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on<br>
all&nbsp;backends<br>
&nbsp;<br>
ACCEPTS:&nbsp;float</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_animated"><strong>set_animated</strong></a>(self, b)</dt><dd><tt>set&nbsp;the&nbsp;artist's&nbsp;animation&nbsp;state<br>
&nbsp;<br>
ACCEPTS:&nbsp;[True&nbsp;|&nbsp;False]</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_axes"><strong>set_axes</strong></a>(self, axes)</dt><dd><tt>set&nbsp;the&nbsp;axes&nbsp;instance&nbsp;the&nbsp;artist&nbsp;resides&nbsp;in,&nbsp;if&nbsp;any<br>
&nbsp;<br>
ACCEPTS:&nbsp;an&nbsp;axes&nbsp;instance</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_clip_box"><strong>set_clip_box</strong></a>(self, clipbox)</dt><dd><tt>Set&nbsp;the&nbsp;artist's&nbsp;clip&nbsp;Bbox<br>
&nbsp;<br>
ACCEPTS:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_clip_on"><strong>set_clip_on</strong></a>(self, b)</dt><dd><tt>Set&nbsp;&nbsp;whether&nbsp;artist&nbsp;uses&nbsp;clipping<br>
&nbsp;<br>
ACCEPTS:&nbsp;[True&nbsp;|&nbsp;False]</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_clip_path"><strong>set_clip_path</strong></a>(self, path)</dt><dd><tt>Set&nbsp;the&nbsp;artist's&nbsp;clip&nbsp;path<br>
&nbsp;<br>
ACCEPTS:&nbsp;an&nbsp;agg.path_storage&nbsp;instance</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_label"><strong>set_label</strong></a>(self, s)</dt><dd><tt>Set&nbsp;the&nbsp;line&nbsp;label&nbsp;to&nbsp;s&nbsp;for&nbsp;auto&nbsp;legend<br>
&nbsp;<br>
ACCEPTS:&nbsp;any&nbsp;string</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_lod"><strong>set_lod</strong></a>(self, on)</dt><dd><tt>Set&nbsp;Level&nbsp;of&nbsp;Detail&nbsp;on&nbsp;or&nbsp;off.&nbsp;&nbsp;If&nbsp;on,&nbsp;the&nbsp;artists&nbsp;may&nbsp;examine<br>
things&nbsp;like&nbsp;the&nbsp;pixel&nbsp;width&nbsp;of&nbsp;the&nbsp;axes&nbsp;and&nbsp;draw&nbsp;a&nbsp;subset&nbsp;of<br>
their&nbsp;contents&nbsp;accordingly<br>
&nbsp;<br>
ACCEPTS:&nbsp;[True&nbsp;|&nbsp;False]</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_picker"><strong>set_picker</strong></a>(self, picker)</dt><dd><tt>set&nbsp;the&nbsp;epsilon&nbsp;for&nbsp;picking&nbsp;used&nbsp;by&nbsp;this&nbsp;artist<br>
&nbsp;<br>
picker&nbsp;can&nbsp;be&nbsp;one&nbsp;of&nbsp;the&nbsp;following:<br>
&nbsp;<br>
&nbsp;&nbsp;None&nbsp;-&nbsp;&nbsp;picking&nbsp;is&nbsp;disabled&nbsp;for&nbsp;this&nbsp;artist&nbsp;(default)<br>
&nbsp;<br>
&nbsp;&nbsp;boolean&nbsp;-&nbsp;if&nbsp;True&nbsp;then&nbsp;picking&nbsp;will&nbsp;be&nbsp;enabled&nbsp;and&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;artist&nbsp;will&nbsp;fire&nbsp;a&nbsp;pick&nbsp;event&nbsp;if&nbsp;the&nbsp;mouse&nbsp;event&nbsp;is&nbsp;over<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;artist<br>
&nbsp;<br>
&nbsp;&nbsp;float&nbsp;-&nbsp;if&nbsp;picker&nbsp;is&nbsp;a&nbsp;number&nbsp;it&nbsp;is&nbsp;interpreted&nbsp;as&nbsp;an<br>
&nbsp;&nbsp;&nbsp;&nbsp;epsilon&nbsp;tolerance&nbsp;in&nbsp;points&nbsp;and&nbsp;the&nbsp;the&nbsp;artist&nbsp;will&nbsp;fire<br>
&nbsp;&nbsp;&nbsp;&nbsp;off&nbsp;an&nbsp;event&nbsp;if&nbsp;it's&nbsp;data&nbsp;is&nbsp;within&nbsp;epsilon&nbsp;of&nbsp;the&nbsp;mouse<br>
&nbsp;&nbsp;&nbsp;&nbsp;event.&nbsp;&nbsp;For&nbsp;some&nbsp;artists&nbsp;like&nbsp;lines&nbsp;and&nbsp;patch&nbsp;collections,<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;artist&nbsp;may&nbsp;provide&nbsp;additional&nbsp;data&nbsp;to&nbsp;the&nbsp;pick&nbsp;event<br>
&nbsp;&nbsp;&nbsp;&nbsp;that&nbsp;is&nbsp;generated,&nbsp;eg&nbsp;the&nbsp;indices&nbsp;of&nbsp;the&nbsp;data&nbsp;within<br>
&nbsp;&nbsp;&nbsp;&nbsp;epsilon&nbsp;of&nbsp;the&nbsp;pick&nbsp;event<br>
&nbsp;<br>
&nbsp;&nbsp;function&nbsp;-&nbsp;if&nbsp;picker&nbsp;is&nbsp;callable,&nbsp;it&nbsp;is&nbsp;a&nbsp;user&nbsp;supplied<br>
&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;which&nbsp;determines&nbsp;whether&nbsp;the&nbsp;artist&nbsp;is&nbsp;hit&nbsp;by&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;mouse&nbsp;event.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hit,&nbsp;props&nbsp;=&nbsp;picker(artist,&nbsp;mouseevent)<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;determine&nbsp;the&nbsp;hit&nbsp;test.&nbsp;&nbsp;if&nbsp;the&nbsp;mouse&nbsp;event&nbsp;is&nbsp;over&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;artist,&nbsp;return&nbsp;hit=True&nbsp;and&nbsp;props&nbsp;is&nbsp;a&nbsp;dictionary&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;properties&nbsp;you&nbsp;want&nbsp;added&nbsp;to&nbsp;the&nbsp;PickEvent&nbsp;attributes<br>
&nbsp;<br>
ACCEPTS:&nbsp;[None|float|boolean|callable]</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_transform"><strong>set_transform</strong></a>(self, t)</dt><dd><tt>set&nbsp;the&nbsp;Transformation&nbsp;instance&nbsp;used&nbsp;by&nbsp;this&nbsp;artist<br>
&nbsp;<br>
ACCEPTS:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_visible"><strong>set_visible</strong></a>(self, b)</dt><dd><tt>set&nbsp;the&nbsp;artist's&nbsp;visiblity<br>
&nbsp;<br>
ACCEPTS:&nbsp;[True&nbsp;|&nbsp;False]</tt></dd></dl>

<dl><dt><a name="PolarAxes-set_zorder"><strong>set_zorder</strong></a>(self, level)</dt><dd><tt>Set&nbsp;the&nbsp;zorder&nbsp;for&nbsp;the&nbsp;artist<br>
&nbsp;<br>
ACCEPTS:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarAxes-update"><strong>update</strong></a>(self, props)</dt></dl>

<dl><dt><a name="PolarAxes-update_from"><strong>update_from</strong></a>(self, other)</dt><dd><tt>copy&nbsp;properties&nbsp;from&nbsp;other&nbsp;to&nbsp;self</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a>:<br>
<dl><dt><strong>aname</strong> = 'Artist'</dl>

<dl><dt><strong>zorder</strong> = 0</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="PolarSubplot">class <strong>PolarSubplot</strong></a>(<a href="matplotlib.axes.html#SubplotBase">SubplotBase</a>, <a href="matplotlib.axes.html#PolarAxes">PolarAxes</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Create&nbsp;a&nbsp;polar&nbsp;subplot&nbsp;with<br>
&nbsp;<br>
&nbsp;&nbsp;<a href="#PolarSubplot">PolarSubplot</a>(numRows,&nbsp;numCols,&nbsp;plotNum)<br>
&nbsp;<br>
where&nbsp;plotNum=1&nbsp;is&nbsp;the&nbsp;first&nbsp;plot&nbsp;number&nbsp;and&nbsp;increasing&nbsp;plotNums<br>
fill&nbsp;rows&nbsp;first.&nbsp;&nbsp;max(plotNum)==numRows*numCols<br>
&nbsp;<br>
You&nbsp;can&nbsp;leave&nbsp;out&nbsp;the&nbsp;commas&nbsp;if&nbsp;numRows&lt;=numCols&lt;=plotNum&lt;10,&nbsp;as<br>
in<br>
&nbsp;<br>
&nbsp;&nbsp;<a href="#Subplot">Subplot</a>(211)&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;2&nbsp;rows,&nbsp;1&nbsp;column,&nbsp;first&nbsp;(upper)&nbsp;plot<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.axes.html#PolarSubplot">PolarSubplot</a></dd>
<dd><a href="matplotlib.axes.html#SubplotBase">SubplotBase</a></dd>
<dd><a href="matplotlib.axes.html#PolarAxes">PolarAxes</a></dd>
<dd><a href="matplotlib.axes.html#Axes">Axes</a></dd>
<dd><a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="PolarSubplot-__init__"><strong>__init__</strong></a>(self, fig, *args, **kwargs)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.axes.html#SubplotBase">SubplotBase</a>:<br>
<dl><dt><a name="PolarSubplot-change_geometry"><strong>change_geometry</strong></a>(self, numrows, numcols, num)</dt><dd><tt>change&nbsp;subplot&nbsp;geometry,&nbsp;eg&nbsp;from&nbsp;1,1,1&nbsp;to&nbsp;2,2,3</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_geometry"><strong>get_geometry</strong></a>(self)</dt><dd><tt>get&nbsp;the&nbsp;subplot&nbsp;geometry,&nbsp;eg&nbsp;2,2,3</tt></dd></dl>

<dl><dt><a name="PolarSubplot-is_first_col"><strong>is_first_col</strong></a>(self)</dt></dl>

<dl><dt><a name="PolarSubplot-is_first_row"><strong>is_first_row</strong></a>(self)</dt></dl>

<dl><dt><a name="PolarSubplot-is_last_col"><strong>is_last_col</strong></a>(self)</dt></dl>

<dl><dt><a name="PolarSubplot-is_last_row"><strong>is_last_row</strong></a>(self)</dt></dl>

<dl><dt><a name="PolarSubplot-label_outer"><strong>label_outer</strong></a>(self)</dt><dd><tt>set&nbsp;the&nbsp;visible&nbsp;property&nbsp;on&nbsp;ticklabels&nbsp;so&nbsp;xticklabels&nbsp;are<br>
visible&nbsp;only&nbsp;if&nbsp;the&nbsp;subplot&nbsp;is&nbsp;in&nbsp;the&nbsp;last&nbsp;row&nbsp;and&nbsp;yticklabels<br>
are&nbsp;visible&nbsp;only&nbsp;if&nbsp;the&nbsp;subplot&nbsp;is&nbsp;in&nbsp;the&nbsp;first&nbsp;column</tt></dd></dl>

<dl><dt><a name="PolarSubplot-update_params"><strong>update_params</strong></a>(self)</dt><dd><tt>update&nbsp;the&nbsp;subplot&nbsp;position&nbsp;from&nbsp;fig.subplotpars</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.axes.html#PolarAxes">PolarAxes</a>:<br>
<dl><dt><a name="PolarSubplot-autoscale_view"><strong>autoscale_view</strong></a>(self, scalex<font color="#909090">=True</font>, scaley<font color="#909090">=True</font>)</dt><dd><tt>set&nbsp;the&nbsp;view&nbsp;limits&nbsp;to&nbsp;include&nbsp;all&nbsp;the&nbsp;data&nbsp;in&nbsp;the&nbsp;axes</tt></dd></dl>

<dl><dt><a name="PolarSubplot-cla"><strong>cla</strong></a>(self)</dt><dd><tt>Clear&nbsp;the&nbsp;current&nbsp;axes</tt></dd></dl>

<dl><dt><a name="PolarSubplot-draw"><strong>draw</strong></a>(self, renderer)</dt></dl>

<dl><dt><a name="PolarSubplot-format_coord"><strong>format_coord</strong></a>(self, theta, r)</dt><dd><tt>return&nbsp;a&nbsp;format&nbsp;string&nbsp;formatting&nbsp;the&nbsp;coordinate</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_children"><strong>get_children</strong></a>(self)</dt><dd><tt>return&nbsp;a&nbsp;list&nbsp;of&nbsp;child&nbsp;artists</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_rmax"><strong>get_rmax</strong></a>(self)</dt><dd><tt>get&nbsp;the&nbsp;maximum&nbsp;radius&nbsp;in&nbsp;the&nbsp;view&nbsp;limits&nbsp;dimension</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_xscale"><strong>get_xscale</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;xaxis&nbsp;scale&nbsp;string</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_yscale"><strong>get_yscale</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;yaxis&nbsp;scale&nbsp;string</tt></dd></dl>

<dl><dt><a name="PolarSubplot-grid"><strong>grid</strong></a>(self, b)</dt><dd><tt>Set&nbsp;the&nbsp;axes&nbsp;grids&nbsp;on&nbsp;or&nbsp;off;&nbsp;b&nbsp;is&nbsp;a&nbsp;boolean</tt></dd></dl>

<dl><dt><a name="PolarSubplot-has_data"><strong>has_data</strong></a>(self)</dt><dd><tt>return&nbsp;true&nbsp;if&nbsp;any&nbsp;artists&nbsp;have&nbsp;been&nbsp;added&nbsp;to&nbsp;axes</tt></dd></dl>

<dl><dt><a name="PolarSubplot-regrid"><strong>regrid</strong></a>(self, rmax)</dt></dl>

<dl><dt><a name="PolarSubplot-set_rgrids"><strong>set_rgrids</strong></a>(self, radii, labels<font color="#909090">=None</font>, angle<font color="#909090">=22.5</font>, rpad<font color="#909090">=0.050000000000000003</font>, **kwargs)</dt><dd><tt>set&nbsp;the&nbsp;radial&nbsp;locations&nbsp;and&nbsp;labels&nbsp;of&nbsp;the&nbsp;r&nbsp;grids<br>
The&nbsp;labels&nbsp;will&nbsp;appear&nbsp;at&nbsp;radial&nbsp;distances&nbsp;radii&nbsp;at&nbsp;angle<br>
labels,&nbsp;if&nbsp;not&nbsp;None,&nbsp;is&nbsp;a&nbsp;len(radii)&nbsp;list&nbsp;of&nbsp;strings&nbsp;of&nbsp;the<br>
labels&nbsp;to&nbsp;use&nbsp;at&nbsp;each&nbsp;angle.<br>
if&nbsp;labels&nbsp;is&nbsp;None,&nbsp;the&nbsp;self.<strong>rformatter</strong>&nbsp;will&nbsp;be&nbsp;used<br>
rpad&nbsp;is&nbsp;a&nbsp;fraction&nbsp;of&nbsp;the&nbsp;max&nbsp;of&nbsp;radii&nbsp;which&nbsp;will&nbsp;pad&nbsp;each&nbsp;of<br>
the&nbsp;radial&nbsp;labels&nbsp;in&nbsp;the&nbsp;radial&nbsp;direction.<br>
&nbsp;<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;lines,&nbsp;labels&nbsp;where&nbsp;the&nbsp;lines&nbsp;are<br>
matplotlib.Line2D&nbsp;instances&nbsp;and&nbsp;the&nbsp;labels&nbsp;are&nbsp;matplotlib.Text<br>
instances<br>
kwargs&nbsp;control&nbsp;the&nbsp;rgrid&nbsp;Text&nbsp;label&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
ACCEPTS:&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_rmax"><strong>set_rmax</strong></a>(self, rmax)</dt></dl>

<dl><dt><a name="PolarSubplot-set_thetagrids"><strong>set_thetagrids</strong></a>(self, angles, labels<font color="#909090">=None</font>, fmt<font color="#909090">='%d'</font>, frac<font color="#909090">=1.1000000000000001</font>, **kwargs)</dt><dd><tt>set&nbsp;the&nbsp;angles&nbsp;at&nbsp;which&nbsp;to&nbsp;place&nbsp;the&nbsp;theta&nbsp;grids&nbsp;(these<br>
gridlines&nbsp;are&nbsp;equal&nbsp;along&nbsp;the&nbsp;theta&nbsp;dimension).&nbsp;&nbsp;angles&nbsp;is&nbsp;in<br>
degrees<br>
labels,&nbsp;if&nbsp;not&nbsp;None,&nbsp;is&nbsp;a&nbsp;len(angles)&nbsp;list&nbsp;of&nbsp;strings&nbsp;of&nbsp;the<br>
labels&nbsp;to&nbsp;use&nbsp;at&nbsp;each&nbsp;angle.<br>
if&nbsp;labels&nbsp;is&nbsp;None,&nbsp;the&nbsp;labels&nbsp;with&nbsp;be&nbsp;fmt%angle<br>
frac&nbsp;is&nbsp;the&nbsp;fraction&nbsp;of&nbsp;the&nbsp;polar&nbsp;axes&nbsp;radius&nbsp;at&nbsp;which&nbsp;to<br>
place&nbsp;the&nbsp;label&nbsp;(1&nbsp;is&nbsp;the&nbsp;edge).Eg&nbsp;1.05&nbsp;isd&nbsp;outside&nbsp;the&nbsp;axes<br>
and&nbsp;0.95&nbsp;is&nbsp;inside&nbsp;the&nbsp;axes<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;lines,&nbsp;labels&nbsp;where&nbsp;the&nbsp;lines&nbsp;are<br>
matplotlib.Line2D&nbsp;instances&nbsp;and&nbsp;the&nbsp;labels&nbsp;are&nbsp;matplotlib.Text<br>
instances:<br>
kwargs&nbsp;are&nbsp;optional&nbsp;text&nbsp;properties&nbsp;for&nbsp;the&nbsp;labels<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
ACCEPTS:&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_xlabel"><strong>set_xlabel</strong></a>(self, xlabel, fontdict<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>xlabel&nbsp;not&nbsp;implemented</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_xlim"><strong>set_xlim</strong></a>(self, xmin<font color="#909090">=None</font>, xmax<font color="#909090">=None</font>, emit<font color="#909090">=True</font>)</dt><dd><tt>set&nbsp;the&nbsp;xlimits<br>
ACCEPTS:&nbsp;len(2)&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_ylabel"><strong>set_ylabel</strong></a>(self, ylabel, fontdict<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>ylabel&nbsp;not&nbsp;implemented</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_ylim"><strong>set_ylim</strong></a>(self, ymin<font color="#909090">=None</font>, ymax<font color="#909090">=None</font>, emit<font color="#909090">=True</font>)</dt><dd><tt>set&nbsp;the&nbsp;ylimits<br>
ACCEPTS:&nbsp;len(2)&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="PolarSubplot-table"><strong>table</strong></a>(self, *args, **kwargs)</dt><dd><tt>TABLE(*args,&nbsp;**kwargs)<br>
Not&nbsp;implemented&nbsp;for&nbsp;polar&nbsp;axes</tt></dd></dl>

<dl><dt><a name="PolarSubplot-toggle_log_lineary"><strong>toggle_log_lineary</strong></a>(self)</dt><dd><tt>toggle&nbsp;between&nbsp;log&nbsp;and&nbsp;linear&nbsp;axes&nbsp;ignored&nbsp;for&nbsp;polar</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.axes.html#PolarAxes">PolarAxes</a>:<br>
<dl><dt><strong>RESOLUTION</strong> = 100</dl>

<hr>
Methods inherited from <a href="matplotlib.axes.html#Axes">Axes</a>:<br>
<dl><dt><a name="PolarSubplot-acorr"><strong>acorr</strong></a>(self, x, **kwargs)</dt><dd><tt>ACORR(x,&nbsp;normed=False,&nbsp;detrend=detrend_none,&nbsp;usevlines=False,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maxlags=None,&nbsp;**kwargs)<br>
Plot&nbsp;the&nbsp;autocorrelation&nbsp;of&nbsp;x.&nbsp;&nbsp;If&nbsp;normed=True,&nbsp;normalize&nbsp;the<br>
data&nbsp;but&nbsp;the&nbsp;autocorrelation&nbsp;at&nbsp;0-th&nbsp;lag.&nbsp;&nbsp;x&nbsp;is&nbsp;detrended&nbsp;by<br>
the&nbsp;detrend&nbsp;callable&nbsp;(default&nbsp;no&nbsp;normalization.<br>
data&nbsp;are&nbsp;plotted&nbsp;as&nbsp;<a href="#PolarSubplot-plot">plot</a>(lags,&nbsp;c,&nbsp;**kwargs)<br>
return&nbsp;value&nbsp;is&nbsp;lags,&nbsp;c,&nbsp;line&nbsp;where&nbsp;lags&nbsp;are&nbsp;a&nbsp;length<br>
2*maxlags+1&nbsp;lag&nbsp;vector,&nbsp;c&nbsp;is&nbsp;the&nbsp;2*maxlags+1&nbsp;auto&nbsp;correlation<br>
vector,&nbsp;and&nbsp;line&nbsp;is&nbsp;a&nbsp;Line2D&nbsp;instance&nbsp;returned&nbsp;by&nbsp;plot.&nbsp;&nbsp;The<br>
default&nbsp;linestyle&nbsp;is&nbsp;None&nbsp;and&nbsp;the&nbsp;default&nbsp;marker&nbsp;is&nbsp;'o',<br>
though&nbsp;these&nbsp;can&nbsp;be&nbsp;overridden&nbsp;with&nbsp;keyword&nbsp;args.&nbsp;&nbsp;The&nbsp;cross<br>
correlation&nbsp;is&nbsp;performed&nbsp;with&nbsp;numerix&nbsp;cross_correlate&nbsp;with<br>
mode=2.<br>
If&nbsp;usevlines&nbsp;is&nbsp;True,&nbsp;<a href="#Axes">Axes</a>.vlines&nbsp;rather&nbsp;than&nbsp;<a href="#Axes">Axes</a>.plot&nbsp;is&nbsp;used<br>
to&nbsp;draw&nbsp;vertical&nbsp;lines&nbsp;from&nbsp;the&nbsp;origin&nbsp;to&nbsp;the&nbsp;acorr.<br>
Otherwise&nbsp;the&nbsp;plotstyle&nbsp;is&nbsp;determined&nbsp;by&nbsp;the&nbsp;kwargs,&nbsp;which&nbsp;are<br>
Line2D&nbsp;properties.&nbsp;&nbsp;If&nbsp;usevlines,&nbsp;the&nbsp;return&nbsp;value&nbsp;is&nbsp;lags,&nbsp;c,<br>
linecol,&nbsp;b&nbsp;where&nbsp;linecol&nbsp;is&nbsp;the&nbsp;LineCollection&nbsp;and&nbsp;b&nbsp;is&nbsp;the&nbsp;x-axis<br>
if&nbsp;usevlines=True,&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;onto&nbsp;<a href="#Axes">Axes</a>.vlines<br>
if&nbsp;usevlines=False,&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;onto&nbsp;<a href="#Axes">Axes</a>.plot<br>
maxlags&nbsp;is&nbsp;a&nbsp;positive&nbsp;integer&nbsp;detailing&nbsp;the&nbsp;number&nbsp;of&nbsp;lags&nbsp;to&nbsp;show.<br>
The&nbsp;default&nbsp;value&nbsp;of&nbsp;None&nbsp;will&nbsp;return&nbsp;all&nbsp;(2*len(x)-1)&nbsp;lags.<br>
See&nbsp;the&nbsp;respective&nbsp;function&nbsp;for&nbsp;documentation&nbsp;on&nbsp;valid&nbsp;kwargs</tt></dd></dl>

<dl><dt><a name="PolarSubplot-add_artist"><strong>add_artist</strong></a>(self, a)</dt><dd><tt>Add&nbsp;any&nbsp;artist&nbsp;to&nbsp;the&nbsp;axes</tt></dd></dl>

<dl><dt><a name="PolarSubplot-add_collection"><strong>add_collection</strong></a>(self, collection, autolim<font color="#909090">=False</font>)</dt><dd><tt>add&nbsp;a&nbsp;Collection&nbsp;instance&nbsp;to&nbsp;<a href="#Axes">Axes</a></tt></dd></dl>

<dl><dt><a name="PolarSubplot-add_line"><strong>add_line</strong></a>(self, line)</dt><dd><tt>Add&nbsp;a&nbsp;line&nbsp;to&nbsp;the&nbsp;list&nbsp;of&nbsp;plot&nbsp;lines</tt></dd></dl>

<dl><dt><a name="PolarSubplot-add_patch"><strong>add_patch</strong></a>(self, p)</dt><dd><tt>Add&nbsp;a&nbsp;patch&nbsp;to&nbsp;the&nbsp;list&nbsp;of&nbsp;<a href="#Axes">Axes</a>&nbsp;patches;&nbsp;the&nbsp;clipbox&nbsp;will&nbsp;be<br>
set&nbsp;to&nbsp;the&nbsp;<a href="#Axes">Axes</a>&nbsp;clipping&nbsp;box.&nbsp;&nbsp;If&nbsp;the&nbsp;transform&nbsp;is&nbsp;not&nbsp;set,&nbsp;it<br>
wil&nbsp;be&nbsp;set&nbsp;to&nbsp;self.<strong>transData</strong>.</tt></dd></dl>

<dl><dt><a name="PolarSubplot-add_table"><strong>add_table</strong></a>(self, tab)</dt><dd><tt>Add&nbsp;a&nbsp;table&nbsp;instance&nbsp;to&nbsp;the&nbsp;list&nbsp;of&nbsp;axes&nbsp;tables</tt></dd></dl>

<dl><dt><a name="PolarSubplot-annotate"><strong>annotate</strong></a>(self, *args, **kwargs)</dt><dd><tt><a href="#PolarSubplot-annotate">annotate</a>(self,&nbsp;s,&nbsp;xyloc,&nbsp;textloc,<br>
&nbsp;xycoords='data',&nbsp;textcoords='data',<br>
&nbsp;lineprops=None,<br>
&nbsp;markerprops=None<br>
&nbsp;**props)<br>
alpha:&nbsp;float<br>
animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
label:&nbsp;any&nbsp;string<br>
lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
picker:&nbsp;[None|float|boolean|callable]<br>
position:&nbsp;(x,y)<br>
rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
x:&nbsp;float<br>
y:&nbsp;float<br>
zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarSubplot-apply_aspect"><strong>apply_aspect</strong></a>(self, data_ratio<font color="#909090">=None</font>)</dt><dd><tt>Use&nbsp;self.<strong>_aspect</strong>&nbsp;and&nbsp;self.<strong>_adjustable</strong>&nbsp;to&nbsp;modify&nbsp;the<br>
axes&nbsp;box&nbsp;or&nbsp;the&nbsp;view&nbsp;limits.<br>
The&nbsp;data_ratio&nbsp;kwarg&nbsp;is&nbsp;set&nbsp;to&nbsp;1&nbsp;for&nbsp;polar&nbsp;axes.&nbsp;&nbsp;It&nbsp;is<br>
used&nbsp;only&nbsp;when&nbsp;_adjustable&nbsp;is&nbsp;'box'.</tt></dd></dl>

<dl><dt><a name="PolarSubplot-arrow"><strong>arrow</strong></a>(self, x, y, dx, dy, **kwargs)</dt><dd><tt>Draws&nbsp;arrow&nbsp;on&nbsp;specified&nbsp;axis&nbsp;from&nbsp;(x,y)&nbsp;to&nbsp;(x+dx,y+dy).<br>
Optional&nbsp;kwargs&nbsp;control&nbsp;the&nbsp;arrow&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarSubplot-axhline"><strong>axhline</strong></a>(self, y<font color="#909090">=0</font>, xmin<font color="#909090">=0</font>, xmax<font color="#909090">=1</font>, **kwargs)</dt><dd><tt>AXHLINE(y=0,&nbsp;xmin=0,&nbsp;xmax=1,&nbsp;**kwargs)<br>
Axis&nbsp;Horizontal&nbsp;Line<br>
Draw&nbsp;a&nbsp;horizontal&nbsp;line&nbsp;at&nbsp;y&nbsp;from&nbsp;xmin&nbsp;to&nbsp;xmax.&nbsp;&nbsp;With&nbsp;the&nbsp;default<br>
values&nbsp;of&nbsp;xmin=0&nbsp;and&nbsp;xmax=1,&nbsp;this&nbsp;line&nbsp;will&nbsp;always&nbsp;span&nbsp;the&nbsp;horizontal<br>
extent&nbsp;of&nbsp;the&nbsp;axes,&nbsp;regardless&nbsp;of&nbsp;the&nbsp;xlim&nbsp;settings,&nbsp;even&nbsp;if&nbsp;you<br>
change&nbsp;them,&nbsp;eg&nbsp;with&nbsp;the&nbsp;xlim&nbsp;command.&nbsp;&nbsp;That&nbsp;is,&nbsp;the&nbsp;horizontal&nbsp;extent<br>
is&nbsp;in&nbsp;axes&nbsp;coords:&nbsp;0=left,&nbsp;0.5=middle,&nbsp;1.0=right&nbsp;but&nbsp;the&nbsp;y&nbsp;location&nbsp;is<br>
in&nbsp;data&nbsp;coordinates.<br>
Return&nbsp;value&nbsp;is&nbsp;the&nbsp;Line2D&nbsp;instance.&nbsp;&nbsp;kwargs&nbsp;are&nbsp;the&nbsp;same&nbsp;as&nbsp;kwargs&nbsp;to<br>
plot,&nbsp;and&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;control&nbsp;the&nbsp;line&nbsp;properties.&nbsp;&nbsp;Eg<br>
&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;thick&nbsp;red&nbsp;hline&nbsp;at&nbsp;y=0&nbsp;that&nbsp;spans&nbsp;the&nbsp;xrange<br>
&nbsp;&nbsp;<a href="#PolarSubplot-axhline">axhline</a>(linewidth=4,&nbsp;color='r')<br>
&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;default&nbsp;hline&nbsp;at&nbsp;y=1&nbsp;that&nbsp;spans&nbsp;the&nbsp;xrange<br>
&nbsp;&nbsp;<a href="#PolarSubplot-axhline">axhline</a>(y=1)<br>
&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;default&nbsp;hline&nbsp;at&nbsp;y=.5&nbsp;that&nbsp;spans&nbsp;the&nbsp;the&nbsp;middle&nbsp;half&nbsp;of<br>
&nbsp;&nbsp;#&nbsp;the&nbsp;xrange<br>
&nbsp;&nbsp;<a href="#PolarSubplot-axhline">axhline</a>(y=.5,&nbsp;xmin=0.25,&nbsp;xmax=0.75)<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarSubplot-axhspan"><strong>axhspan</strong></a>(self, ymin, ymax, xmin<font color="#909090">=0</font>, xmax<font color="#909090">=1</font>, **kwargs)</dt><dd><tt>AXHSPAN(ymin,&nbsp;ymax,&nbsp;xmin=0,&nbsp;xmax=1,&nbsp;**kwargs)<br>
Axis&nbsp;Horizontal&nbsp;Span.&nbsp;&nbsp;ycoords&nbsp;are&nbsp;in&nbsp;data&nbsp;units&nbsp;and&nbsp;x<br>
coords&nbsp;are&nbsp;in&nbsp;axes&nbsp;(relative&nbsp;0-1)&nbsp;units<br>
Draw&nbsp;a&nbsp;horizontal&nbsp;span&nbsp;(regtangle)&nbsp;from&nbsp;ymin&nbsp;to&nbsp;ymax.&nbsp;&nbsp;With&nbsp;the<br>
default&nbsp;values&nbsp;of&nbsp;xmin=0&nbsp;and&nbsp;xmax=1,&nbsp;this&nbsp;always&nbsp;span&nbsp;the&nbsp;xrange,<br>
regardless&nbsp;of&nbsp;the&nbsp;xlim&nbsp;settings,&nbsp;even&nbsp;if&nbsp;you&nbsp;change&nbsp;them,&nbsp;eg&nbsp;with&nbsp;the<br>
xlim&nbsp;command.&nbsp;&nbsp;That&nbsp;is,&nbsp;the&nbsp;horizontal&nbsp;extent&nbsp;is&nbsp;in&nbsp;axes&nbsp;coords:<br>
0=left,&nbsp;0.5=middle,&nbsp;1.0=right&nbsp;but&nbsp;the&nbsp;y&nbsp;location&nbsp;is&nbsp;in&nbsp;data<br>
coordinates.<br>
kwargs&nbsp;are&nbsp;the&nbsp;kwargs&nbsp;to&nbsp;Patch,&nbsp;eg<br>
&nbsp;&nbsp;antialiased,&nbsp;aa<br>
&nbsp;&nbsp;linewidth,&nbsp;&nbsp;&nbsp;lw<br>
&nbsp;&nbsp;edgecolor,&nbsp;&nbsp;&nbsp;ec<br>
&nbsp;&nbsp;facecolor,&nbsp;&nbsp;&nbsp;fc<br>
the&nbsp;terms&nbsp;on&nbsp;the&nbsp;right&nbsp;are&nbsp;aliases<br>
Return&nbsp;value&nbsp;is&nbsp;the&nbsp;patches.Polygon&nbsp;instance.<br>
&nbsp;&nbsp;&nbsp;&nbsp;#draws&nbsp;a&nbsp;gray&nbsp;rectangle&nbsp;from&nbsp;y=0.25-0.75&nbsp;that&nbsp;spans&nbsp;the&nbsp;horizontal<br>
&nbsp;&nbsp;&nbsp;&nbsp;#extent&nbsp;of&nbsp;the&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-axhspan">axhspan</a>(0.25,&nbsp;0.75,&nbsp;facecolor='0.5',&nbsp;alpha=0.5)<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Polygon&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarSubplot-axis"><strong>axis</strong></a>(self, *v, **kwargs)</dt><dd><tt>Convenience&nbsp;method&nbsp;for&nbsp;manipulating&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;view&nbsp;limits<br>
and&nbsp;the&nbsp;aspect&nbsp;ratio&nbsp;of&nbsp;the&nbsp;plot.<br>
&nbsp;<br>
kwargs&nbsp;are&nbsp;passed&nbsp;on&nbsp;to&nbsp;set_xlim&nbsp;and&nbsp;set_ylim&nbsp;--&nbsp;see&nbsp;their&nbsp;docstrings&nbsp;for&nbsp;details</tt></dd></dl>

<dl><dt><a name="PolarSubplot-axvline"><strong>axvline</strong></a>(self, x<font color="#909090">=0</font>, ymin<font color="#909090">=0</font>, ymax<font color="#909090">=1</font>, **kwargs)</dt><dd><tt>AXVLINE(x=0,&nbsp;ymin=0,&nbsp;ymax=1,&nbsp;**kwargs)<br>
Axis&nbsp;Vertical&nbsp;Line<br>
Draw&nbsp;a&nbsp;vertical&nbsp;line&nbsp;at&nbsp;x&nbsp;from&nbsp;ymin&nbsp;to&nbsp;ymax.&nbsp;&nbsp;With&nbsp;the&nbsp;default&nbsp;values<br>
of&nbsp;ymin=0&nbsp;and&nbsp;ymax=1,&nbsp;this&nbsp;line&nbsp;will&nbsp;always&nbsp;span&nbsp;the&nbsp;vertical&nbsp;extent<br>
of&nbsp;the&nbsp;axes,&nbsp;regardless&nbsp;of&nbsp;the&nbsp;xlim&nbsp;settings,&nbsp;even&nbsp;if&nbsp;you&nbsp;change&nbsp;them,<br>
eg&nbsp;with&nbsp;the&nbsp;xlim&nbsp;command.&nbsp;&nbsp;That&nbsp;is,&nbsp;the&nbsp;vertical&nbsp;extent&nbsp;is&nbsp;in&nbsp;axes<br>
coords:&nbsp;0=bottom,&nbsp;0.5=middle,&nbsp;1.0=top&nbsp;but&nbsp;the&nbsp;x&nbsp;location&nbsp;is&nbsp;in&nbsp;data<br>
coordinates.<br>
Return&nbsp;value&nbsp;is&nbsp;the&nbsp;Line2D&nbsp;instance.&nbsp;&nbsp;kwargs&nbsp;are&nbsp;the&nbsp;same&nbsp;as<br>
kwargs&nbsp;to&nbsp;plot,&nbsp;and&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;control&nbsp;the&nbsp;line&nbsp;properties.&nbsp;&nbsp;Eg<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;thick&nbsp;red&nbsp;vline&nbsp;at&nbsp;x=0&nbsp;that&nbsp;spans&nbsp;the&nbsp;yrange<br>
&nbsp;&nbsp;&nbsp;&nbsp;l&nbsp;=&nbsp;<a href="#PolarSubplot-axvline">axvline</a>(linewidth=4,&nbsp;color='r')<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;default&nbsp;vline&nbsp;at&nbsp;x=1&nbsp;that&nbsp;spans&nbsp;the&nbsp;yrange<br>
&nbsp;&nbsp;&nbsp;&nbsp;l&nbsp;=&nbsp;<a href="#PolarSubplot-axvline">axvline</a>(x=1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;default&nbsp;vline&nbsp;at&nbsp;x=.5&nbsp;that&nbsp;spans&nbsp;the&nbsp;the&nbsp;middle&nbsp;half&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;yrange<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-axvline">axvline</a>(x=.5,&nbsp;ymin=0.25,&nbsp;ymax=0.75)<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarSubplot-axvspan"><strong>axvspan</strong></a>(self, xmin, xmax, ymin<font color="#909090">=0</font>, ymax<font color="#909090">=1</font>, **kwargs)</dt><dd><tt>AXVSPAN(xmin,&nbsp;xmax,&nbsp;ymin=0,&nbsp;ymax=1,&nbsp;**kwargs)<br>
axvspan&nbsp;:&nbsp;Axis&nbsp;Vertical&nbsp;Span.&nbsp;&nbsp;xcoords&nbsp;are&nbsp;in&nbsp;data&nbsp;units&nbsp;and&nbsp;y&nbsp;coords<br>
are&nbsp;in&nbsp;axes&nbsp;(relative&nbsp;0-1)&nbsp;units<br>
Draw&nbsp;a&nbsp;vertical&nbsp;span&nbsp;(regtangle)&nbsp;from&nbsp;xmin&nbsp;to&nbsp;xmax.&nbsp;&nbsp;With&nbsp;the&nbsp;default<br>
values&nbsp;of&nbsp;ymin=0&nbsp;and&nbsp;ymax=1,&nbsp;this&nbsp;always&nbsp;span&nbsp;the&nbsp;yrange,&nbsp;regardless<br>
of&nbsp;the&nbsp;ylim&nbsp;settings,&nbsp;even&nbsp;if&nbsp;you&nbsp;change&nbsp;them,&nbsp;eg&nbsp;with&nbsp;the&nbsp;ylim<br>
command.&nbsp;&nbsp;That&nbsp;is,&nbsp;the&nbsp;vertical&nbsp;extent&nbsp;is&nbsp;in&nbsp;axes&nbsp;coords:&nbsp;0=bottom,<br>
0.5=middle,&nbsp;1.0=top&nbsp;but&nbsp;the&nbsp;y&nbsp;location&nbsp;is&nbsp;in&nbsp;data&nbsp;coordinates.<br>
kwargs&nbsp;are&nbsp;the&nbsp;kwargs&nbsp;to&nbsp;Patch,&nbsp;eg<br>
&nbsp;&nbsp;antialiased,&nbsp;aa<br>
&nbsp;&nbsp;linewidth,&nbsp;&nbsp;&nbsp;lw<br>
&nbsp;&nbsp;edgecolor,&nbsp;&nbsp;&nbsp;ec<br>
&nbsp;&nbsp;facecolor,&nbsp;&nbsp;&nbsp;fc<br>
the&nbsp;terms&nbsp;on&nbsp;the&nbsp;right&nbsp;are&nbsp;aliases<br>
return&nbsp;value&nbsp;is&nbsp;the&nbsp;patches.Polygon&nbsp;instance.<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;vertical&nbsp;green&nbsp;translucent&nbsp;rectangle&nbsp;from&nbsp;x=1.25&nbsp;to&nbsp;1.55&nbsp;that<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;spans&nbsp;the&nbsp;yrange&nbsp;of&nbsp;the&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-axvspan">axvspan</a>(1.25,&nbsp;1.55,&nbsp;facecolor='g',&nbsp;alpha=0.5)<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Polygon&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarSubplot-bar"><strong>bar</strong></a>(self, left, height, width<font color="#909090">=0.80000000000000004</font>, bottom<font color="#909090">=None</font>, color<font color="#909090">=None</font>, edgecolor<font color="#909090">=None</font>, linewidth<font color="#909090">=None</font>, yerr<font color="#909090">=None</font>, xerr<font color="#909090">=None</font>, ecolor<font color="#909090">=None</font>, capsize<font color="#909090">=3</font>, align<font color="#909090">='edge'</font>, orientation<font color="#909090">='vertical'</font>, log<font color="#909090">=False</font>, **kwargs)</dt><dd><tt>BAR(left,&nbsp;height,&nbsp;width=0.8,&nbsp;bottom=0,<br>
&nbsp;&nbsp;&nbsp;&nbsp;color=None,&nbsp;edgecolor=None,&nbsp;linewidth=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;yerr=None,&nbsp;xerr=None,&nbsp;ecolor=None,&nbsp;capsize=3,<br>
&nbsp;&nbsp;&nbsp;&nbsp;align='edge',&nbsp;orientation='vertical',&nbsp;log=False)<br>
Make&nbsp;a&nbsp;bar&nbsp;plot&nbsp;with&nbsp;rectangles&nbsp;bounded&nbsp;by<br>
&nbsp;&nbsp;left,&nbsp;left+width,&nbsp;bottom,&nbsp;bottom+height<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(left,&nbsp;right,&nbsp;bottom&nbsp;and&nbsp;top&nbsp;edges)<br>
left,&nbsp;height,&nbsp;width,&nbsp;and&nbsp;bottom&nbsp;can&nbsp;be&nbsp;either&nbsp;scalars&nbsp;or&nbsp;sequences<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;Rectangle&nbsp;patch&nbsp;instances<br>
&nbsp;&nbsp;&nbsp;&nbsp;left&nbsp;-&nbsp;the&nbsp;x&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;left&nbsp;sides&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;height&nbsp;-&nbsp;the&nbsp;heights&nbsp;of&nbsp;the&nbsp;bars<br>
Optional&nbsp;arguments:<br>
&nbsp;&nbsp;&nbsp;&nbsp;width&nbsp;-&nbsp;the&nbsp;widths&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;bottom&nbsp;-&nbsp;the&nbsp;y&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;bottom&nbsp;edges&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;-&nbsp;the&nbsp;colors&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;-&nbsp;the&nbsp;colors&nbsp;of&nbsp;the&nbsp;bar&nbsp;edges<br>
&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;-&nbsp;width&nbsp;of&nbsp;bar&nbsp;edges;&nbsp;None&nbsp;means&nbsp;use&nbsp;default<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth;&nbsp;0&nbsp;means&nbsp;don't&nbsp;draw&nbsp;edges.<br>
&nbsp;&nbsp;&nbsp;&nbsp;xerr&nbsp;and&nbsp;yerr,&nbsp;if&nbsp;not&nbsp;None,&nbsp;will&nbsp;be&nbsp;used&nbsp;to&nbsp;generate&nbsp;errorbars<br>
&nbsp;&nbsp;&nbsp;&nbsp;on&nbsp;the&nbsp;bar&nbsp;chart<br>
&nbsp;&nbsp;&nbsp;&nbsp;ecolor&nbsp;specifies&nbsp;the&nbsp;color&nbsp;of&nbsp;any&nbsp;errorbar<br>
&nbsp;&nbsp;&nbsp;&nbsp;capsize&nbsp;(default&nbsp;3)&nbsp;determines&nbsp;the&nbsp;length&nbsp;in&nbsp;points&nbsp;of&nbsp;the&nbsp;error<br>
&nbsp;&nbsp;&nbsp;&nbsp;bar&nbsp;caps<br>
&nbsp;&nbsp;&nbsp;&nbsp;align&nbsp;=&nbsp;'edge'&nbsp;(default)&nbsp;|&nbsp;'center'<br>
&nbsp;&nbsp;&nbsp;&nbsp;orientation&nbsp;=&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;log&nbsp;=&nbsp;False&nbsp;|&nbsp;True&nbsp;-&nbsp;False&nbsp;(default)&nbsp;leaves&nbsp;the&nbsp;orientation<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axis&nbsp;as-is;&nbsp;True&nbsp;sets&nbsp;it&nbsp;to&nbsp;log&nbsp;scale<br>
For&nbsp;vertical&nbsp;bars,&nbsp;align='edge'&nbsp;aligns&nbsp;bars&nbsp;by&nbsp;their&nbsp;left&nbsp;edges&nbsp;in<br>
left,&nbsp;while&nbsp;'center'&nbsp;interprets&nbsp;these&nbsp;values&nbsp;as&nbsp;the&nbsp;x&nbsp;coordinates&nbsp;of<br>
the&nbsp;bar&nbsp;centers.&nbsp;For&nbsp;horizontal&nbsp;bars,&nbsp;'edge'&nbsp;aligns&nbsp;bars&nbsp;by&nbsp;their<br>
bottom&nbsp;edges&nbsp;in&nbsp;bottom,&nbsp;while&nbsp;'center'&nbsp;interprets&nbsp;these&nbsp;values&nbsp;as&nbsp;the<br>
y&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;bar&nbsp;centers.<br>
The&nbsp;optional&nbsp;arguments&nbsp;color,&nbsp;edgecolor,&nbsp;linewidth,&nbsp;xerr,&nbsp;and&nbsp;yerr&nbsp;can<br>
be&nbsp;either&nbsp;scalars&nbsp;or&nbsp;sequences&nbsp;of&nbsp;length&nbsp;equal&nbsp;to&nbsp;the&nbsp;number&nbsp;of&nbsp;bars.<br>
This&nbsp;enables&nbsp;you&nbsp;to&nbsp;use&nbsp;bar&nbsp;as&nbsp;the&nbsp;basis&nbsp;for&nbsp;stacked&nbsp;bar&nbsp;charts,&nbsp;or<br>
candlestick&nbsp;plots.<br>
Optional&nbsp;kwargs:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarSubplot-barh"><strong>barh</strong></a>(self, bottom, width, height<font color="#909090">=0.80000000000000004</font>, left<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>BARH(bottom,&nbsp;width,&nbsp;height=0.8,&nbsp;left=0,&nbsp;**kwargs)<br>
Make&nbsp;a&nbsp;horizontal&nbsp;bar&nbsp;plot&nbsp;with&nbsp;rectangles&nbsp;bounded&nbsp;by<br>
&nbsp;&nbsp;left,&nbsp;left+width,&nbsp;bottom,&nbsp;bottom+height<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(left,&nbsp;right,&nbsp;bottom&nbsp;and&nbsp;top&nbsp;edges)<br>
bottom,&nbsp;width,&nbsp;height,&nbsp;and&nbsp;left&nbsp;can&nbsp;be&nbsp;either&nbsp;scalars&nbsp;or&nbsp;sequences<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;Rectangle&nbsp;patch&nbsp;instances<br>
&nbsp;&nbsp;&nbsp;&nbsp;bottom&nbsp;-&nbsp;the&nbsp;vertical&nbsp;positions&nbsp;of&nbsp;the&nbsp;bottom&nbsp;edges&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;width&nbsp;-&nbsp;the&nbsp;lengths&nbsp;of&nbsp;the&nbsp;bars<br>
Optional&nbsp;arguments:<br>
&nbsp;&nbsp;&nbsp;&nbsp;height&nbsp;-&nbsp;the&nbsp;heights&nbsp;(thicknesses)&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;left&nbsp;-&nbsp;the&nbsp;x&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;left&nbsp;edges&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;-&nbsp;the&nbsp;colors&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;-&nbsp;the&nbsp;colors&nbsp;of&nbsp;the&nbsp;bar&nbsp;edges<br>
&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;-&nbsp;width&nbsp;of&nbsp;bar&nbsp;edges;&nbsp;None&nbsp;means&nbsp;use&nbsp;default<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth;&nbsp;0&nbsp;means&nbsp;don't&nbsp;draw&nbsp;edges.<br>
&nbsp;&nbsp;&nbsp;&nbsp;xerr&nbsp;and&nbsp;yerr,&nbsp;if&nbsp;not&nbsp;None,&nbsp;will&nbsp;be&nbsp;used&nbsp;to&nbsp;generate&nbsp;errorbars<br>
&nbsp;&nbsp;&nbsp;&nbsp;on&nbsp;the&nbsp;bar&nbsp;chart<br>
&nbsp;&nbsp;&nbsp;&nbsp;ecolor&nbsp;specifies&nbsp;the&nbsp;color&nbsp;of&nbsp;any&nbsp;errorbar<br>
&nbsp;&nbsp;&nbsp;&nbsp;capsize&nbsp;(default&nbsp;3)&nbsp;determines&nbsp;the&nbsp;length&nbsp;in&nbsp;points&nbsp;of&nbsp;the&nbsp;error<br>
&nbsp;&nbsp;&nbsp;&nbsp;bar&nbsp;caps<br>
&nbsp;&nbsp;&nbsp;&nbsp;align&nbsp;=&nbsp;'edge'&nbsp;(default)&nbsp;|&nbsp;'center'<br>
&nbsp;&nbsp;&nbsp;&nbsp;log&nbsp;=&nbsp;False&nbsp;|&nbsp;True&nbsp;-&nbsp;False&nbsp;(default)&nbsp;leaves&nbsp;the&nbsp;horizontal<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axis&nbsp;as-is;&nbsp;True&nbsp;sets&nbsp;it&nbsp;to&nbsp;log&nbsp;scale<br>
Setting&nbsp;align='edge'&nbsp;aligns&nbsp;bars&nbsp;by&nbsp;their&nbsp;bottom&nbsp;edges&nbsp;in&nbsp;bottom,<br>
while&nbsp;'center'&nbsp;interprets&nbsp;these&nbsp;values&nbsp;as&nbsp;the&nbsp;y&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;bar<br>
centers.<br>
The&nbsp;optional&nbsp;arguments&nbsp;color,&nbsp;edgecolor,&nbsp;linewidth,&nbsp;xerr,&nbsp;and&nbsp;yerr&nbsp;can<br>
be&nbsp;either&nbsp;scalars&nbsp;or&nbsp;sequences&nbsp;of&nbsp;length&nbsp;equal&nbsp;to&nbsp;the&nbsp;number&nbsp;of&nbsp;bars.<br>
This&nbsp;enables&nbsp;you&nbsp;to&nbsp;use&nbsp;barh&nbsp;as&nbsp;the&nbsp;basis&nbsp;for&nbsp;stacked&nbsp;bar&nbsp;charts,&nbsp;or<br>
candlestick&nbsp;plots.<br>
Optional&nbsp;kwargs:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarSubplot-boxplot"><strong>boxplot</strong></a>(self, x, notch<font color="#909090">=0</font>, sym<font color="#909090">='b+'</font>, vert<font color="#909090">=1</font>, whis<font color="#909090">=1.5</font>, positions<font color="#909090">=None</font>, widths<font color="#909090">=None</font>)</dt><dd><tt><a href="#PolarSubplot-boxplot">boxplot</a>(x,&nbsp;notch=0,&nbsp;sym='+',&nbsp;vert=1,&nbsp;whis=1.5,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;positions=None,&nbsp;widths=None)<br>
&nbsp;<br>
Make&nbsp;a&nbsp;box&nbsp;and&nbsp;whisker&nbsp;plot&nbsp;for&nbsp;each&nbsp;column&nbsp;of&nbsp;x&nbsp;or<br>
each&nbsp;vector&nbsp;in&nbsp;sequence&nbsp;x.<br>
The&nbsp;box&nbsp;extends&nbsp;from&nbsp;the&nbsp;lower&nbsp;to&nbsp;upper&nbsp;quartile&nbsp;values<br>
of&nbsp;the&nbsp;data,&nbsp;with&nbsp;a&nbsp;line&nbsp;at&nbsp;the&nbsp;median.&nbsp;&nbsp;The&nbsp;whiskers<br>
extend&nbsp;from&nbsp;the&nbsp;box&nbsp;to&nbsp;show&nbsp;the&nbsp;range&nbsp;of&nbsp;the&nbsp;data.&nbsp;&nbsp;Flier<br>
points&nbsp;are&nbsp;those&nbsp;past&nbsp;the&nbsp;end&nbsp;of&nbsp;the&nbsp;whiskers.<br>
&nbsp;<br>
notch&nbsp;=&nbsp;0&nbsp;(default)&nbsp;produces&nbsp;a&nbsp;rectangular&nbsp;box&nbsp;plot.<br>
notch&nbsp;=&nbsp;1&nbsp;will&nbsp;produce&nbsp;a&nbsp;notched&nbsp;box&nbsp;plot<br>
&nbsp;<br>
sym&nbsp;(default&nbsp;'b+')&nbsp;is&nbsp;the&nbsp;default&nbsp;symbol&nbsp;for&nbsp;flier&nbsp;points.<br>
Enter&nbsp;an&nbsp;empty&nbsp;string&nbsp;('')&nbsp;if&nbsp;you&nbsp;don't&nbsp;want&nbsp;to&nbsp;show&nbsp;fliers.<br>
&nbsp;<br>
vert&nbsp;=&nbsp;1&nbsp;(default)&nbsp;makes&nbsp;the&nbsp;boxes&nbsp;vertical.<br>
vert&nbsp;=&nbsp;0&nbsp;makes&nbsp;horizontal&nbsp;boxes.&nbsp;&nbsp;This&nbsp;seems&nbsp;goofy,&nbsp;but<br>
that's&nbsp;how&nbsp;Matlab&nbsp;did&nbsp;it.<br>
&nbsp;<br>
whis&nbsp;(default&nbsp;1.5)&nbsp;defines&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;whiskers&nbsp;as<br>
a&nbsp;function&nbsp;of&nbsp;the&nbsp;inner&nbsp;quartile&nbsp;range.&nbsp;&nbsp;They&nbsp;extend&nbsp;to&nbsp;the<br>
most&nbsp;extreme&nbsp;data&nbsp;point&nbsp;within&nbsp;(&nbsp;whis*(75%-25%)&nbsp;)&nbsp;data&nbsp;range.<br>
&nbsp;<br>
positions&nbsp;(default&nbsp;1,2,...,n)&nbsp;sets&nbsp;the&nbsp;horizontal&nbsp;positions&nbsp;of<br>
the&nbsp;boxes.&nbsp;The&nbsp;ticks&nbsp;and&nbsp;limits&nbsp;are&nbsp;automatically&nbsp;set&nbsp;to&nbsp;match<br>
the&nbsp;positions.<br>
&nbsp;<br>
widths&nbsp;is&nbsp;either&nbsp;a&nbsp;scalar&nbsp;or&nbsp;a&nbsp;vector&nbsp;and&nbsp;sets&nbsp;the&nbsp;width&nbsp;of<br>
each&nbsp;box.&nbsp;The&nbsp;default&nbsp;is&nbsp;0.5,&nbsp;or&nbsp;0.15*(distance&nbsp;between&nbsp;extreme<br>
positions)&nbsp;if&nbsp;that&nbsp;is&nbsp;smaller.<br>
&nbsp;<br>
x&nbsp;is&nbsp;an&nbsp;array&nbsp;or&nbsp;a&nbsp;sequence&nbsp;of&nbsp;vectors.<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;list&nbsp;of&nbsp;the&nbsp;lines&nbsp;added.</tt></dd></dl>

<dl><dt><a name="PolarSubplot-broken_barh"><strong>broken_barh</strong></a>(self, xranges, yrange, **kwargs)</dt><dd><tt>A&nbsp;collection&nbsp;of&nbsp;horizontal&nbsp;bars&nbsp;spanning&nbsp;yrange&nbsp;with&nbsp;a&nbsp;sequence&nbsp;of<br>
xranges<br>
xranges&nbsp;:&nbsp;sequence&nbsp;of&nbsp;(xmin,&nbsp;xwidth)<br>
yrange&nbsp;&nbsp;:&nbsp;(ymin,&nbsp;ywidth)<br>
kwargs&nbsp;are&nbsp;collections.BrokenBarHCollection&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clim:&nbsp;a&nbsp;length&nbsp;2&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap:&nbsp;a&nbsp;colormap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colorbar:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
these&nbsp;can&nbsp;either&nbsp;be&nbsp;a&nbsp;single&nbsp;argument,&nbsp;ie&nbsp;facecolors='black'<br>
or&nbsp;a&nbsp;sequence&nbsp;of&nbsp;arguments&nbsp;for&nbsp;the&nbsp;various&nbsp;bars,&nbsp;ie<br>
facecolors='black',&nbsp;'red',&nbsp;'green'</tt></dd></dl>

<dl><dt><a name="PolarSubplot-clabel"><strong>clabel</strong></a>(self, CS, *args, **kwargs)</dt><dd><tt><a href="#PolarSubplot-clabel">clabel</a>(CS,&nbsp;**kwargs)&nbsp;-&nbsp;add&nbsp;labels&nbsp;to&nbsp;line&nbsp;contours&nbsp;in&nbsp;CS,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;where&nbsp;CS&nbsp;is&nbsp;a&nbsp;ContourSet&nbsp;object&nbsp;returned&nbsp;by&nbsp;contour.<br>
&nbsp;<br>
<a href="#PolarSubplot-clabel">clabel</a>(CS,&nbsp;V,&nbsp;**kwargs)&nbsp;-&nbsp;only&nbsp;label&nbsp;contours&nbsp;listed&nbsp;in&nbsp;V<br>
&nbsp;<br>
keyword&nbsp;arguments:<br>
&nbsp;<br>
*&nbsp;fontsize&nbsp;=&nbsp;None:&nbsp;as&nbsp;described&nbsp;in&nbsp;<a href="http://matplotlib.sf.net/fonts.html">http://matplotlib.sf.net/fonts.html</a><br>
&nbsp;<br>
*&nbsp;colors&nbsp;=&nbsp;None:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;tuple&nbsp;of&nbsp;matplotlib&nbsp;color&nbsp;args&nbsp;(string,&nbsp;float,&nbsp;rgb,&nbsp;etc),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;different&nbsp;labels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;different&nbsp;colors&nbsp;in&nbsp;the&nbsp;order<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specified<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;-&nbsp;one&nbsp;string&nbsp;color,&nbsp;e.g.&nbsp;colors&nbsp;=&nbsp;'r'&nbsp;or&nbsp;colors&nbsp;=&nbsp;'red',&nbsp;all&nbsp;labels<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;this&nbsp;color<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;colors&nbsp;==&nbsp;None,&nbsp;the&nbsp;color&nbsp;of&nbsp;each&nbsp;label&nbsp;matches&nbsp;the&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;corresponding&nbsp;contour<br>
&nbsp;<br>
*&nbsp;inline&nbsp;=&nbsp;True:&nbsp;controls&nbsp;whether&nbsp;the&nbsp;underlying&nbsp;contour&nbsp;is&nbsp;removed<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(inline&nbsp;=&nbsp;True)&nbsp;or&nbsp;not&nbsp;(False)<br>
&nbsp;<br>
*&nbsp;fmt&nbsp;=&nbsp;'%1.3f':&nbsp;a&nbsp;format&nbsp;string&nbsp;for&nbsp;the&nbsp;label</tt></dd></dl>

<dl><dt><a name="PolarSubplot-clear"><strong>clear</strong></a>(self)</dt><dd><tt>clear&nbsp;the&nbsp;axes</tt></dd></dl>

<dl><dt><a name="PolarSubplot-cohere"><strong>cohere</strong></a>(self, x, y, NFFT<font color="#909090">=256</font>, Fs<font color="#909090">=2</font>, detrend<font color="#909090">=&lt;function detrend_none at 0x847d844&gt;</font>, window<font color="#909090">=&lt;function window_hanning at 0x847d72c&gt;</font>, noverlap<font color="#909090">=0</font>, **kwargs)</dt><dd><tt>COHERE(x,&nbsp;y,&nbsp;NFFT=256,&nbsp;Fs=2,&nbsp;detrend=detrend_none,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window=window_hanning,&nbsp;noverlap=0,&nbsp;**kwargs)<br>
cohere&nbsp;the&nbsp;coherence&nbsp;between&nbsp;x&nbsp;and&nbsp;y.&nbsp;&nbsp;Coherence&nbsp;is&nbsp;the&nbsp;normalized<br>
cross&nbsp;spectral&nbsp;density<br>
&nbsp;&nbsp;Cxy&nbsp;=&nbsp;|Pxy|^2/(Pxx*Pyy)<br>
The&nbsp;return&nbsp;value&nbsp;is&nbsp;(Cxy,&nbsp;f),&nbsp;where&nbsp;f&nbsp;are&nbsp;the&nbsp;frequencies&nbsp;of&nbsp;the<br>
coherence&nbsp;vector.<br>
See&nbsp;the&nbsp;PSD&nbsp;help&nbsp;for&nbsp;a&nbsp;description&nbsp;of&nbsp;the&nbsp;optional&nbsp;parameters.<br>
kwargs&nbsp;are&nbsp;applied&nbsp;to&nbsp;the&nbsp;lines<br>
Returns&nbsp;the&nbsp;tuple&nbsp;Cxy,&nbsp;freqs<br>
Refs:&nbsp;Bendat&nbsp;&amp;&nbsp;Piersol&nbsp;--&nbsp;Random&nbsp;Data:&nbsp;Analysis&nbsp;and&nbsp;Measurement<br>
&nbsp;&nbsp;Procedures,&nbsp;John&nbsp;Wiley&nbsp;&amp;&nbsp;Sons&nbsp;(1986)<br>
kwargs&nbsp;control&nbsp;the&nbsp;Line2D&nbsp;properties&nbsp;of&nbsp;the&nbsp;coherence&nbsp;plot:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarSubplot-connect"><strong>connect</strong></a>(self, s, func)</dt><dd><tt>Register&nbsp;observers&nbsp;to&nbsp;be&nbsp;notified&nbsp;when&nbsp;certain&nbsp;events&nbsp;occur.&nbsp;&nbsp;Register<br>
with&nbsp;callback&nbsp;functions&nbsp;with&nbsp;the&nbsp;following&nbsp;signatures.&nbsp;&nbsp;The&nbsp;function<br>
has&nbsp;the&nbsp;following&nbsp;signature<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;func(ax)&nbsp;&nbsp;#&nbsp;where&nbsp;ax&nbsp;is&nbsp;the&nbsp;instance&nbsp;making&nbsp;the&nbsp;callback.<br>
&nbsp;<br>
The&nbsp;following&nbsp;events&nbsp;can&nbsp;be&nbsp;connected&nbsp;to:<br>
&nbsp;<br>
&nbsp;&nbsp;'xlim_changed','ylim_changed'<br>
&nbsp;<br>
The&nbsp;connection&nbsp;id&nbsp;is&nbsp;is&nbsp;returned&nbsp;-&nbsp;you&nbsp;can&nbsp;use&nbsp;this&nbsp;with<br>
disconnect&nbsp;to&nbsp;disconnect&nbsp;from&nbsp;the&nbsp;axes&nbsp;event</tt></dd></dl>

<dl><dt><a name="PolarSubplot-contour"><strong>contour</strong></a>(self, *args, **kwargs)</dt><dd><tt>contour&nbsp;and&nbsp;contourf&nbsp;draw&nbsp;contour&nbsp;lines&nbsp;and&nbsp;filled&nbsp;contours,<br>
respectively.&nbsp;&nbsp;Except&nbsp;as&nbsp;noted,&nbsp;function&nbsp;signatures&nbsp;and&nbsp;return<br>
values&nbsp;are&nbsp;the&nbsp;same&nbsp;for&nbsp;both&nbsp;versions.<br>
&nbsp;<br>
contourf&nbsp;differs&nbsp;from&nbsp;the&nbsp;Matlab&nbsp;(TM)&nbsp;version&nbsp;in&nbsp;that&nbsp;it&nbsp;does&nbsp;not<br>
&nbsp;&nbsp;&nbsp;&nbsp;draw&nbsp;the&nbsp;polygon&nbsp;edges,&nbsp;because&nbsp;the&nbsp;contouring&nbsp;engine&nbsp;yields<br>
&nbsp;&nbsp;&nbsp;&nbsp;simply&nbsp;connected&nbsp;regions&nbsp;with&nbsp;branch&nbsp;cuts.&nbsp;&nbsp;To&nbsp;draw&nbsp;the&nbsp;edges,<br>
&nbsp;&nbsp;&nbsp;&nbsp;add&nbsp;line&nbsp;contours&nbsp;with&nbsp;calls&nbsp;to&nbsp;contour.<br>
&nbsp;<br>
&nbsp;<br>
Function&nbsp;signatures<br>
&nbsp;<br>
<a href="#PolarSubplot-contour">contour</a>(Z)&nbsp;-&nbsp;make&nbsp;a&nbsp;contour&nbsp;plot&nbsp;of&nbsp;an&nbsp;array&nbsp;Z.&nbsp;The&nbsp;level<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values&nbsp;are&nbsp;chosen&nbsp;automatically.<br>
&nbsp;<br>
<a href="#PolarSubplot-contour">contour</a>(X,Y,Z)&nbsp;-&nbsp;X,Y&nbsp;specify&nbsp;the&nbsp;(x,y)&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;surface<br>
&nbsp;<br>
<a href="#PolarSubplot-contour">contour</a>(Z,N)&nbsp;and&nbsp;<a href="#PolarSubplot-contour">contour</a>(X,Y,Z,N)&nbsp;-&nbsp;contour&nbsp;N&nbsp;automatically-chosen<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;levels.<br>
&nbsp;<br>
<a href="#PolarSubplot-contour">contour</a>(Z,V)&nbsp;and&nbsp;<a href="#PolarSubplot-contour">contour</a>(X,Y,Z,V)&nbsp;-&nbsp;draw&nbsp;len(V)&nbsp;contour&nbsp;lines,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;the&nbsp;values&nbsp;specified&nbsp;in&nbsp;sequence&nbsp;V<br>
&nbsp;<br>
<a href="#PolarSubplot-contourf">contourf</a>(...,&nbsp;V)&nbsp;-&nbsp;fill&nbsp;the&nbsp;(len(V)-1)&nbsp;regions&nbsp;between&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values&nbsp;in&nbsp;V<br>
&nbsp;<br>
<a href="#PolarSubplot-contour">contour</a>(Z,&nbsp;**kwargs)&nbsp;-&nbsp;Use&nbsp;keyword&nbsp;args&nbsp;to&nbsp;control&nbsp;colors,&nbsp;linewidth,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;origin,&nbsp;cmap&nbsp;...&nbsp;see&nbsp;below<br>
&nbsp;<br>
X,&nbsp;Y,&nbsp;and&nbsp;Z&nbsp;must&nbsp;be&nbsp;arrays&nbsp;with&nbsp;the&nbsp;same&nbsp;dimensions.<br>
Z&nbsp;may&nbsp;be&nbsp;a&nbsp;masked&nbsp;array,&nbsp;but&nbsp;filled&nbsp;contouring&nbsp;may&nbsp;not&nbsp;handle<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;internal&nbsp;masked&nbsp;regions&nbsp;correctly.<br>
&nbsp;<br>
C&nbsp;=&nbsp;<a href="#PolarSubplot-contour">contour</a>(...)&nbsp;returns&nbsp;a&nbsp;ContourSet&nbsp;object.<br>
&nbsp;<br>
&nbsp;<br>
Optional&nbsp;keyword&nbsp;args&nbsp;are&nbsp;shown&nbsp;with&nbsp;their&nbsp;defaults&nbsp;below&nbsp;(you&nbsp;must<br>
use&nbsp;kwargs&nbsp;for&nbsp;these):<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;colors&nbsp;=&nbsp;None;&nbsp;or&nbsp;one&nbsp;of&nbsp;the&nbsp;following:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;tuple&nbsp;of&nbsp;matplotlib&nbsp;color&nbsp;args&nbsp;(string,&nbsp;float,&nbsp;rgb,&nbsp;etc),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;different&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;different&nbsp;colors&nbsp;in&nbsp;the&nbsp;order<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specified<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;one&nbsp;string&nbsp;color,&nbsp;e.g.&nbsp;colors&nbsp;=&nbsp;'r'&nbsp;or&nbsp;colors&nbsp;=&nbsp;'red',&nbsp;all&nbsp;levels<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;this&nbsp;color<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;colors&nbsp;==&nbsp;None,&nbsp;the&nbsp;colormap&nbsp;specified&nbsp;by&nbsp;cmap&nbsp;will&nbsp;be&nbsp;used<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;alpha=1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;blending&nbsp;value<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;cmap&nbsp;=&nbsp;None:&nbsp;a&nbsp;cm&nbsp;Colormap&nbsp;instance&nbsp;from&nbsp;matplotlib.cm.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;cmap&nbsp;==&nbsp;None&nbsp;and&nbsp;colors&nbsp;==&nbsp;None,&nbsp;a&nbsp;default&nbsp;Colormap&nbsp;is&nbsp;used.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;norm&nbsp;=&nbsp;None:&nbsp;a&nbsp;matplotlib.colors.Normalize&nbsp;instance&nbsp;for<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scaling&nbsp;data&nbsp;values&nbsp;to&nbsp;colors.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;norm&nbsp;==&nbsp;None,&nbsp;and&nbsp;colors&nbsp;==&nbsp;None,&nbsp;the&nbsp;default<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linear&nbsp;scaling&nbsp;is&nbsp;used.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;origin&nbsp;=&nbsp;None:&nbsp;'upper'|'lower'|'image'|None.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;'image',&nbsp;the&nbsp;rc&nbsp;value&nbsp;for&nbsp;image.origin&nbsp;will&nbsp;be&nbsp;used.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;None&nbsp;(default),&nbsp;the&nbsp;first&nbsp;value&nbsp;of&nbsp;Z&nbsp;will&nbsp;correspond<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;the&nbsp;lower&nbsp;left&nbsp;corner,&nbsp;location&nbsp;(0,0).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This&nbsp;keyword&nbsp;is&nbsp;active&nbsp;only&nbsp;if&nbsp;contourf&nbsp;is&nbsp;called&nbsp;with<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;one&nbsp;or&nbsp;two&nbsp;arguments,&nbsp;that&nbsp;is,&nbsp;without&nbsp;explicitly<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specifying&nbsp;X&nbsp;and&nbsp;Y.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;extent&nbsp;=&nbsp;None:&nbsp;(x0,x1,y0,y1);&nbsp;also&nbsp;active&nbsp;only&nbsp;if&nbsp;X&nbsp;and&nbsp;Y<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;not&nbsp;specified.&nbsp;&nbsp;If&nbsp;origin&nbsp;is&nbsp;not&nbsp;None,&nbsp;then&nbsp;extent&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interpreted&nbsp;as&nbsp;in&nbsp;imshow:&nbsp;it&nbsp;gives&nbsp;the&nbsp;outer&nbsp;pixel&nbsp;boundaries.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;this&nbsp;case,&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[0,0]&nbsp;is&nbsp;the&nbsp;center&nbsp;of&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixel,&nbsp;not&nbsp;a&nbsp;corner.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;origin&nbsp;is&nbsp;None,&nbsp;then&nbsp;(x0,y0)&nbsp;is&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[0,0],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and&nbsp;(x1,y1)&nbsp;is&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[-1,-1].<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;locator&nbsp;=&nbsp;None:&nbsp;an&nbsp;instance&nbsp;of&nbsp;a&nbsp;ticker.Locator&nbsp;subclass;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;is&nbsp;MaxNLocator.&nbsp;&nbsp;It&nbsp;is&nbsp;used&nbsp;to&nbsp;determine&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contour&nbsp;levels&nbsp;if&nbsp;they&nbsp;are&nbsp;not&nbsp;given&nbsp;explicitly&nbsp;via&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;V&nbsp;argument.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*****&nbsp;New:&nbsp;*****<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;extend&nbsp;=&nbsp;'neither',&nbsp;'both',&nbsp;'min',&nbsp;'max'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Unless&nbsp;this&nbsp;is&nbsp;'neither'&nbsp;(default),&nbsp;contour&nbsp;levels&nbsp;are<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;automatically&nbsp;added&nbsp;to&nbsp;one&nbsp;or&nbsp;both&nbsp;ends&nbsp;of&nbsp;the&nbsp;range&nbsp;so&nbsp;that<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;all&nbsp;data&nbsp;are&nbsp;included.&nbsp;&nbsp;These&nbsp;added&nbsp;ranges&nbsp;are&nbsp;then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapped&nbsp;to&nbsp;the&nbsp;special&nbsp;colormap&nbsp;values&nbsp;which&nbsp;default&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;ends&nbsp;of&nbsp;the&nbsp;colormap&nbsp;range,&nbsp;but&nbsp;can&nbsp;be&nbsp;set&nbsp;via<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Colormap.set_under()&nbsp;and&nbsp;Colormap.set_over()&nbsp;methods.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;replace&nbsp;clip_ends=True&nbsp;and&nbsp;V&nbsp;=&nbsp;[-100,&nbsp;2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2,&nbsp;100],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;use&nbsp;extend='both'&nbsp;and&nbsp;V&nbsp;=&nbsp;[2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2].<br>
&nbsp;&nbsp;&nbsp;&nbsp;****************<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;contour&nbsp;only:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;linewidths&nbsp;=&nbsp;None:&nbsp;or&nbsp;one&nbsp;of&nbsp;these:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;number&nbsp;-&nbsp;all&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;with&nbsp;this&nbsp;linewidth,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.g.&nbsp;linewidths&nbsp;=&nbsp;0.6<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;tuple&nbsp;of&nbsp;numbers,&nbsp;e.g.&nbsp;linewidths&nbsp;=&nbsp;(0.4,&nbsp;0.8,&nbsp;1.2)&nbsp;different<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;with&nbsp;different&nbsp;linewidths&nbsp;in&nbsp;the&nbsp;order<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specified<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;linewidths&nbsp;==&nbsp;None,&nbsp;the&nbsp;default&nbsp;width&nbsp;in&nbsp;lines.linewidth&nbsp;in<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;matplotlibrc&nbsp;is&nbsp;used<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;contourf&nbsp;only:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*****&nbsp;Obsolete:&nbsp;****<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;clip_ends&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;False,&nbsp;the&nbsp;limits&nbsp;for&nbsp;color&nbsp;scaling&nbsp;are&nbsp;set&nbsp;to&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;contour&nbsp;levels.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;True&nbsp;(default)&nbsp;clips&nbsp;the&nbsp;scaling&nbsp;limits.&nbsp;&nbsp;Example:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;the&nbsp;contour&nbsp;boundaries&nbsp;are&nbsp;V&nbsp;=&nbsp;[-100,&nbsp;2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2,&nbsp;100],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;then&nbsp;the&nbsp;scaling&nbsp;limits&nbsp;will&nbsp;be&nbsp;[-100,&nbsp;100]&nbsp;if&nbsp;clip_ends<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;False,&nbsp;and&nbsp;[-3,&nbsp;3]&nbsp;if&nbsp;clip_ends&nbsp;is&nbsp;True.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;linewidths&nbsp;=&nbsp;None&nbsp;or&nbsp;a&nbsp;number;&nbsp;default&nbsp;of&nbsp;0.05&nbsp;works&nbsp;for<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Postscript;&nbsp;a&nbsp;value&nbsp;of&nbsp;about&nbsp;0.5&nbsp;seems&nbsp;better&nbsp;for&nbsp;Agg.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;antialiased&nbsp;=&nbsp;True&nbsp;(default)&nbsp;or&nbsp;False;&nbsp;if&nbsp;False,&nbsp;there&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;no&nbsp;need&nbsp;to&nbsp;increase&nbsp;the&nbsp;linewidths&nbsp;for&nbsp;Agg,&nbsp;but&nbsp;True&nbsp;gives<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nicer&nbsp;color&nbsp;boundaries.&nbsp;&nbsp;If&nbsp;antialiased&nbsp;is&nbsp;True&nbsp;and&nbsp;linewidths<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;too&nbsp;small,&nbsp;then&nbsp;there&nbsp;may&nbsp;be&nbsp;light-colored&nbsp;lines&nbsp;at&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;boundaries&nbsp;caused&nbsp;by&nbsp;the&nbsp;antialiasing.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;nchunk&nbsp;=&nbsp;0&nbsp;(default)&nbsp;for&nbsp;no&nbsp;subdivision&nbsp;of&nbsp;the&nbsp;domain;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specify&nbsp;a&nbsp;positive&nbsp;integer&nbsp;to&nbsp;divide&nbsp;the&nbsp;domain&nbsp;into<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;subdomains&nbsp;of&nbsp;roughly&nbsp;nchunk&nbsp;by&nbsp;nchunk&nbsp;points.&nbsp;This&nbsp;may<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;never&nbsp;actually&nbsp;be&nbsp;advantageous,&nbsp;so&nbsp;this&nbsp;option&nbsp;may&nbsp;be<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removed.&nbsp;&nbsp;Chunking&nbsp;introduces&nbsp;artifacts&nbsp;at&nbsp;the&nbsp;chunk<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boundaries&nbsp;unless&nbsp;antialiased&nbsp;=&nbsp;False,&nbsp;or&nbsp;linewidths&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set&nbsp;to&nbsp;a&nbsp;large&nbsp;enough&nbsp;value&nbsp;for&nbsp;the&nbsp;particular&nbsp;renderer&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolution.</tt></dd></dl>

<dl><dt><a name="PolarSubplot-contourf"><strong>contourf</strong></a>(self, *args, **kwargs)</dt><dd><tt>contour&nbsp;and&nbsp;contourf&nbsp;draw&nbsp;contour&nbsp;lines&nbsp;and&nbsp;filled&nbsp;contours,<br>
respectively.&nbsp;&nbsp;Except&nbsp;as&nbsp;noted,&nbsp;function&nbsp;signatures&nbsp;and&nbsp;return<br>
values&nbsp;are&nbsp;the&nbsp;same&nbsp;for&nbsp;both&nbsp;versions.<br>
&nbsp;<br>
contourf&nbsp;differs&nbsp;from&nbsp;the&nbsp;Matlab&nbsp;(TM)&nbsp;version&nbsp;in&nbsp;that&nbsp;it&nbsp;does&nbsp;not<br>
&nbsp;&nbsp;&nbsp;&nbsp;draw&nbsp;the&nbsp;polygon&nbsp;edges,&nbsp;because&nbsp;the&nbsp;contouring&nbsp;engine&nbsp;yields<br>
&nbsp;&nbsp;&nbsp;&nbsp;simply&nbsp;connected&nbsp;regions&nbsp;with&nbsp;branch&nbsp;cuts.&nbsp;&nbsp;To&nbsp;draw&nbsp;the&nbsp;edges,<br>
&nbsp;&nbsp;&nbsp;&nbsp;add&nbsp;line&nbsp;contours&nbsp;with&nbsp;calls&nbsp;to&nbsp;contour.<br>
&nbsp;<br>
&nbsp;<br>
Function&nbsp;signatures<br>
&nbsp;<br>
<a href="#PolarSubplot-contour">contour</a>(Z)&nbsp;-&nbsp;make&nbsp;a&nbsp;contour&nbsp;plot&nbsp;of&nbsp;an&nbsp;array&nbsp;Z.&nbsp;The&nbsp;level<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values&nbsp;are&nbsp;chosen&nbsp;automatically.<br>
&nbsp;<br>
<a href="#PolarSubplot-contour">contour</a>(X,Y,Z)&nbsp;-&nbsp;X,Y&nbsp;specify&nbsp;the&nbsp;(x,y)&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;surface<br>
&nbsp;<br>
<a href="#PolarSubplot-contour">contour</a>(Z,N)&nbsp;and&nbsp;<a href="#PolarSubplot-contour">contour</a>(X,Y,Z,N)&nbsp;-&nbsp;contour&nbsp;N&nbsp;automatically-chosen<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;levels.<br>
&nbsp;<br>
<a href="#PolarSubplot-contour">contour</a>(Z,V)&nbsp;and&nbsp;<a href="#PolarSubplot-contour">contour</a>(X,Y,Z,V)&nbsp;-&nbsp;draw&nbsp;len(V)&nbsp;contour&nbsp;lines,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;the&nbsp;values&nbsp;specified&nbsp;in&nbsp;sequence&nbsp;V<br>
&nbsp;<br>
<a href="#PolarSubplot-contourf">contourf</a>(...,&nbsp;V)&nbsp;-&nbsp;fill&nbsp;the&nbsp;(len(V)-1)&nbsp;regions&nbsp;between&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values&nbsp;in&nbsp;V<br>
&nbsp;<br>
<a href="#PolarSubplot-contour">contour</a>(Z,&nbsp;**kwargs)&nbsp;-&nbsp;Use&nbsp;keyword&nbsp;args&nbsp;to&nbsp;control&nbsp;colors,&nbsp;linewidth,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;origin,&nbsp;cmap&nbsp;...&nbsp;see&nbsp;below<br>
&nbsp;<br>
X,&nbsp;Y,&nbsp;and&nbsp;Z&nbsp;must&nbsp;be&nbsp;arrays&nbsp;with&nbsp;the&nbsp;same&nbsp;dimensions.<br>
Z&nbsp;may&nbsp;be&nbsp;a&nbsp;masked&nbsp;array,&nbsp;but&nbsp;filled&nbsp;contouring&nbsp;may&nbsp;not&nbsp;handle<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;internal&nbsp;masked&nbsp;regions&nbsp;correctly.<br>
&nbsp;<br>
C&nbsp;=&nbsp;<a href="#PolarSubplot-contour">contour</a>(...)&nbsp;returns&nbsp;a&nbsp;ContourSet&nbsp;object.<br>
&nbsp;<br>
&nbsp;<br>
Optional&nbsp;keyword&nbsp;args&nbsp;are&nbsp;shown&nbsp;with&nbsp;their&nbsp;defaults&nbsp;below&nbsp;(you&nbsp;must<br>
use&nbsp;kwargs&nbsp;for&nbsp;these):<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;colors&nbsp;=&nbsp;None;&nbsp;or&nbsp;one&nbsp;of&nbsp;the&nbsp;following:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;tuple&nbsp;of&nbsp;matplotlib&nbsp;color&nbsp;args&nbsp;(string,&nbsp;float,&nbsp;rgb,&nbsp;etc),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;different&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;different&nbsp;colors&nbsp;in&nbsp;the&nbsp;order<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specified<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;one&nbsp;string&nbsp;color,&nbsp;e.g.&nbsp;colors&nbsp;=&nbsp;'r'&nbsp;or&nbsp;colors&nbsp;=&nbsp;'red',&nbsp;all&nbsp;levels<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;this&nbsp;color<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;colors&nbsp;==&nbsp;None,&nbsp;the&nbsp;colormap&nbsp;specified&nbsp;by&nbsp;cmap&nbsp;will&nbsp;be&nbsp;used<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;alpha=1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;blending&nbsp;value<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;cmap&nbsp;=&nbsp;None:&nbsp;a&nbsp;cm&nbsp;Colormap&nbsp;instance&nbsp;from&nbsp;matplotlib.cm.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;cmap&nbsp;==&nbsp;None&nbsp;and&nbsp;colors&nbsp;==&nbsp;None,&nbsp;a&nbsp;default&nbsp;Colormap&nbsp;is&nbsp;used.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;norm&nbsp;=&nbsp;None:&nbsp;a&nbsp;matplotlib.colors.Normalize&nbsp;instance&nbsp;for<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scaling&nbsp;data&nbsp;values&nbsp;to&nbsp;colors.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;norm&nbsp;==&nbsp;None,&nbsp;and&nbsp;colors&nbsp;==&nbsp;None,&nbsp;the&nbsp;default<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linear&nbsp;scaling&nbsp;is&nbsp;used.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;origin&nbsp;=&nbsp;None:&nbsp;'upper'|'lower'|'image'|None.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;'image',&nbsp;the&nbsp;rc&nbsp;value&nbsp;for&nbsp;image.origin&nbsp;will&nbsp;be&nbsp;used.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;None&nbsp;(default),&nbsp;the&nbsp;first&nbsp;value&nbsp;of&nbsp;Z&nbsp;will&nbsp;correspond<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;the&nbsp;lower&nbsp;left&nbsp;corner,&nbsp;location&nbsp;(0,0).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This&nbsp;keyword&nbsp;is&nbsp;active&nbsp;only&nbsp;if&nbsp;contourf&nbsp;is&nbsp;called&nbsp;with<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;one&nbsp;or&nbsp;two&nbsp;arguments,&nbsp;that&nbsp;is,&nbsp;without&nbsp;explicitly<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specifying&nbsp;X&nbsp;and&nbsp;Y.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;extent&nbsp;=&nbsp;None:&nbsp;(x0,x1,y0,y1);&nbsp;also&nbsp;active&nbsp;only&nbsp;if&nbsp;X&nbsp;and&nbsp;Y<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;not&nbsp;specified.&nbsp;&nbsp;If&nbsp;origin&nbsp;is&nbsp;not&nbsp;None,&nbsp;then&nbsp;extent&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interpreted&nbsp;as&nbsp;in&nbsp;imshow:&nbsp;it&nbsp;gives&nbsp;the&nbsp;outer&nbsp;pixel&nbsp;boundaries.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;this&nbsp;case,&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[0,0]&nbsp;is&nbsp;the&nbsp;center&nbsp;of&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixel,&nbsp;not&nbsp;a&nbsp;corner.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;origin&nbsp;is&nbsp;None,&nbsp;then&nbsp;(x0,y0)&nbsp;is&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[0,0],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and&nbsp;(x1,y1)&nbsp;is&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[-1,-1].<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;locator&nbsp;=&nbsp;None:&nbsp;an&nbsp;instance&nbsp;of&nbsp;a&nbsp;ticker.Locator&nbsp;subclass;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;is&nbsp;MaxNLocator.&nbsp;&nbsp;It&nbsp;is&nbsp;used&nbsp;to&nbsp;determine&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contour&nbsp;levels&nbsp;if&nbsp;they&nbsp;are&nbsp;not&nbsp;given&nbsp;explicitly&nbsp;via&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;V&nbsp;argument.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*****&nbsp;New:&nbsp;*****<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;extend&nbsp;=&nbsp;'neither',&nbsp;'both',&nbsp;'min',&nbsp;'max'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Unless&nbsp;this&nbsp;is&nbsp;'neither'&nbsp;(default),&nbsp;contour&nbsp;levels&nbsp;are<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;automatically&nbsp;added&nbsp;to&nbsp;one&nbsp;or&nbsp;both&nbsp;ends&nbsp;of&nbsp;the&nbsp;range&nbsp;so&nbsp;that<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;all&nbsp;data&nbsp;are&nbsp;included.&nbsp;&nbsp;These&nbsp;added&nbsp;ranges&nbsp;are&nbsp;then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapped&nbsp;to&nbsp;the&nbsp;special&nbsp;colormap&nbsp;values&nbsp;which&nbsp;default&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;ends&nbsp;of&nbsp;the&nbsp;colormap&nbsp;range,&nbsp;but&nbsp;can&nbsp;be&nbsp;set&nbsp;via<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Colormap.set_under()&nbsp;and&nbsp;Colormap.set_over()&nbsp;methods.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;replace&nbsp;clip_ends=True&nbsp;and&nbsp;V&nbsp;=&nbsp;[-100,&nbsp;2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2,&nbsp;100],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;use&nbsp;extend='both'&nbsp;and&nbsp;V&nbsp;=&nbsp;[2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2].<br>
&nbsp;&nbsp;&nbsp;&nbsp;****************<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;contour&nbsp;only:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;linewidths&nbsp;=&nbsp;None:&nbsp;or&nbsp;one&nbsp;of&nbsp;these:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;number&nbsp;-&nbsp;all&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;with&nbsp;this&nbsp;linewidth,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.g.&nbsp;linewidths&nbsp;=&nbsp;0.6<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;tuple&nbsp;of&nbsp;numbers,&nbsp;e.g.&nbsp;linewidths&nbsp;=&nbsp;(0.4,&nbsp;0.8,&nbsp;1.2)&nbsp;different<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;with&nbsp;different&nbsp;linewidths&nbsp;in&nbsp;the&nbsp;order<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specified<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;linewidths&nbsp;==&nbsp;None,&nbsp;the&nbsp;default&nbsp;width&nbsp;in&nbsp;lines.linewidth&nbsp;in<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;matplotlibrc&nbsp;is&nbsp;used<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;contourf&nbsp;only:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*****&nbsp;Obsolete:&nbsp;****<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;clip_ends&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;False,&nbsp;the&nbsp;limits&nbsp;for&nbsp;color&nbsp;scaling&nbsp;are&nbsp;set&nbsp;to&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;contour&nbsp;levels.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;True&nbsp;(default)&nbsp;clips&nbsp;the&nbsp;scaling&nbsp;limits.&nbsp;&nbsp;Example:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;the&nbsp;contour&nbsp;boundaries&nbsp;are&nbsp;V&nbsp;=&nbsp;[-100,&nbsp;2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2,&nbsp;100],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;then&nbsp;the&nbsp;scaling&nbsp;limits&nbsp;will&nbsp;be&nbsp;[-100,&nbsp;100]&nbsp;if&nbsp;clip_ends<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;False,&nbsp;and&nbsp;[-3,&nbsp;3]&nbsp;if&nbsp;clip_ends&nbsp;is&nbsp;True.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;linewidths&nbsp;=&nbsp;None&nbsp;or&nbsp;a&nbsp;number;&nbsp;default&nbsp;of&nbsp;0.05&nbsp;works&nbsp;for<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Postscript;&nbsp;a&nbsp;value&nbsp;of&nbsp;about&nbsp;0.5&nbsp;seems&nbsp;better&nbsp;for&nbsp;Agg.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;antialiased&nbsp;=&nbsp;True&nbsp;(default)&nbsp;or&nbsp;False;&nbsp;if&nbsp;False,&nbsp;there&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;no&nbsp;need&nbsp;to&nbsp;increase&nbsp;the&nbsp;linewidths&nbsp;for&nbsp;Agg,&nbsp;but&nbsp;True&nbsp;gives<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nicer&nbsp;color&nbsp;boundaries.&nbsp;&nbsp;If&nbsp;antialiased&nbsp;is&nbsp;True&nbsp;and&nbsp;linewidths<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;too&nbsp;small,&nbsp;then&nbsp;there&nbsp;may&nbsp;be&nbsp;light-colored&nbsp;lines&nbsp;at&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;boundaries&nbsp;caused&nbsp;by&nbsp;the&nbsp;antialiasing.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;nchunk&nbsp;=&nbsp;0&nbsp;(default)&nbsp;for&nbsp;no&nbsp;subdivision&nbsp;of&nbsp;the&nbsp;domain;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specify&nbsp;a&nbsp;positive&nbsp;integer&nbsp;to&nbsp;divide&nbsp;the&nbsp;domain&nbsp;into<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;subdomains&nbsp;of&nbsp;roughly&nbsp;nchunk&nbsp;by&nbsp;nchunk&nbsp;points.&nbsp;This&nbsp;may<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;never&nbsp;actually&nbsp;be&nbsp;advantageous,&nbsp;so&nbsp;this&nbsp;option&nbsp;may&nbsp;be<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removed.&nbsp;&nbsp;Chunking&nbsp;introduces&nbsp;artifacts&nbsp;at&nbsp;the&nbsp;chunk<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boundaries&nbsp;unless&nbsp;antialiased&nbsp;=&nbsp;False,&nbsp;or&nbsp;linewidths&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set&nbsp;to&nbsp;a&nbsp;large&nbsp;enough&nbsp;value&nbsp;for&nbsp;the&nbsp;particular&nbsp;renderer&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolution.</tt></dd></dl>

<dl><dt><a name="PolarSubplot-csd"><strong>csd</strong></a>(self, x, y, NFFT<font color="#909090">=256</font>, Fs<font color="#909090">=2</font>, detrend<font color="#909090">=&lt;function detrend_none at 0x847d844&gt;</font>, window<font color="#909090">=&lt;function window_hanning at 0x847d72c&gt;</font>, noverlap<font color="#909090">=0</font>, **kwargs)</dt><dd><tt>CSD(x,&nbsp;y,&nbsp;NFFT=256,&nbsp;Fs=2,&nbsp;detrend=detrend_none,<br>
&nbsp;&nbsp;&nbsp;&nbsp;window=window_hanning,&nbsp;noverlap=0,&nbsp;**kwargs)<br>
The&nbsp;cross&nbsp;spectral&nbsp;density&nbsp;Pxy&nbsp;by&nbsp;Welches&nbsp;average&nbsp;periodogram&nbsp;method.<br>
The&nbsp;vectors&nbsp;x&nbsp;and&nbsp;y&nbsp;are&nbsp;divided&nbsp;into&nbsp;NFFT&nbsp;length&nbsp;segments.&nbsp;&nbsp;Each<br>
segment&nbsp;is&nbsp;detrended&nbsp;by&nbsp;function&nbsp;detrend&nbsp;and&nbsp;windowed&nbsp;by&nbsp;function<br>
window.&nbsp;&nbsp;The&nbsp;product&nbsp;of&nbsp;the&nbsp;direct&nbsp;FFTs&nbsp;of&nbsp;x&nbsp;and&nbsp;y&nbsp;are&nbsp;averaged&nbsp;over<br>
each&nbsp;segment&nbsp;to&nbsp;compute&nbsp;Pxy,&nbsp;with&nbsp;a&nbsp;scaling&nbsp;to&nbsp;correct&nbsp;for&nbsp;power&nbsp;loss<br>
due&nbsp;to&nbsp;windowing.<br>
See&nbsp;the&nbsp;PSD&nbsp;help&nbsp;for&nbsp;a&nbsp;description&nbsp;of&nbsp;the&nbsp;optional&nbsp;parameters.<br>
Returns&nbsp;the&nbsp;tuple&nbsp;Pxy,&nbsp;freqs.&nbsp;&nbsp;Pxy&nbsp;is&nbsp;the&nbsp;cross&nbsp;spectrum&nbsp;(complex<br>
valued),&nbsp;and&nbsp;10*log10(|Pxy|)&nbsp;is&nbsp;plotted<br>
Refs:<br>
&nbsp;&nbsp;Bendat&nbsp;&amp;&nbsp;Piersol&nbsp;--&nbsp;Random&nbsp;Data:&nbsp;Analysis&nbsp;and&nbsp;Measurement<br>
&nbsp;&nbsp;&nbsp;&nbsp;Procedures,&nbsp;John&nbsp;Wiley&nbsp;&amp;&nbsp;Sons&nbsp;(1986)<br>
kwargs&nbsp;control&nbsp;the&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarSubplot-disconnect"><strong>disconnect</strong></a>(self, cid)</dt><dd><tt>disconnect&nbsp;from&nbsp;the&nbsp;<a href="#Axes">Axes</a>&nbsp;event.</tt></dd></dl>

<dl><dt><a name="PolarSubplot-draw_artist"><strong>draw_artist</strong></a>(self, a)</dt><dd><tt>This&nbsp;method&nbsp;can&nbsp;only&nbsp;be&nbsp;used&nbsp;after&nbsp;an&nbsp;initial&nbsp;draw&nbsp;which<br>
caches&nbsp;the&nbsp;renderer.&nbsp;&nbsp;It&nbsp;is&nbsp;used&nbsp;to&nbsp;efficiently&nbsp;update&nbsp;<a href="#Axes">Axes</a><br>
data&nbsp;(axis&nbsp;ticks,&nbsp;labels,&nbsp;etc&nbsp;are&nbsp;not&nbsp;updated)</tt></dd></dl>

<dl><dt><a name="PolarSubplot-errorbar"><strong>errorbar</strong></a>(self, x, y, yerr<font color="#909090">=None</font>, xerr<font color="#909090">=None</font>, fmt<font color="#909090">='b-'</font>, ecolor<font color="#909090">=None</font>, capsize<font color="#909090">=3</font>, barsabove<font color="#909090">=False</font>, **kwargs)</dt><dd><tt>ERRORBAR(x,&nbsp;y,&nbsp;yerr=None,&nbsp;xerr=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fmt='b-',&nbsp;ecolor=None,&nbsp;capsize=3,&nbsp;barsabove=False)<br>
Plot&nbsp;x&nbsp;versus&nbsp;y&nbsp;with&nbsp;error&nbsp;deltas&nbsp;in&nbsp;yerr&nbsp;and&nbsp;xerr.<br>
Vertical&nbsp;errorbars&nbsp;are&nbsp;plotted&nbsp;if&nbsp;yerr&nbsp;is&nbsp;not&nbsp;None<br>
Horizontal&nbsp;errorbars&nbsp;are&nbsp;plotted&nbsp;if&nbsp;xerr&nbsp;is&nbsp;not&nbsp;None<br>
xerr&nbsp;and&nbsp;yerr&nbsp;may&nbsp;be&nbsp;any&nbsp;of:<br>
&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;rank-0,&nbsp;Nx1&nbsp;Numpy&nbsp;array&nbsp;&nbsp;-&nbsp;symmetric&nbsp;errorbars&nbsp;+/-&nbsp;value<br>
&nbsp;&nbsp;&nbsp;&nbsp;an&nbsp;N-element&nbsp;list&nbsp;or&nbsp;tuple&nbsp;-&nbsp;symmetric&nbsp;errorbars&nbsp;+/-&nbsp;value<br>
&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;rank-1,&nbsp;Nx2&nbsp;Numpy&nbsp;array&nbsp;&nbsp;-&nbsp;asymmetric&nbsp;errorbars&nbsp;-column1/+column2<br>
Alternatively,&nbsp;x,&nbsp;y,&nbsp;xerr,&nbsp;and&nbsp;yerr&nbsp;can&nbsp;all&nbsp;be&nbsp;scalars,&nbsp;which<br>
plots&nbsp;a&nbsp;single&nbsp;error&nbsp;bar&nbsp;at&nbsp;x,&nbsp;y.<br>
&nbsp;&nbsp;&nbsp;&nbsp;fmt&nbsp;is&nbsp;the&nbsp;plot&nbsp;format&nbsp;symbol&nbsp;for&nbsp;y.&nbsp;&nbsp;if&nbsp;fmt&nbsp;is&nbsp;None,&nbsp;just<br>
&nbsp;&nbsp;&nbsp;&nbsp;plot&nbsp;the&nbsp;errorbars&nbsp;with&nbsp;no&nbsp;line&nbsp;symbols.&nbsp;&nbsp;This&nbsp;can&nbsp;be&nbsp;useful<br>
&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;creating&nbsp;a&nbsp;bar&nbsp;plot&nbsp;with&nbsp;errorbars<br>
&nbsp;&nbsp;&nbsp;&nbsp;ecolor&nbsp;is&nbsp;a&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;which&nbsp;gives&nbsp;the&nbsp;color&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;errorbar&nbsp;lines;&nbsp;if&nbsp;None,&nbsp;use&nbsp;the&nbsp;marker&nbsp;color.<br>
&nbsp;&nbsp;&nbsp;&nbsp;capsize&nbsp;is&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;error&nbsp;bar&nbsp;caps&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;barsabove,&nbsp;if&nbsp;True,&nbsp;will&nbsp;plot&nbsp;the&nbsp;errorbars&nbsp;above&nbsp;the&nbsp;plot&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;default&nbsp;is&nbsp;below<br>
&nbsp;&nbsp;&nbsp;&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;on&nbsp;to&nbsp;the&nbsp;plot&nbsp;command&nbsp;for&nbsp;the&nbsp;markers.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;So&nbsp;you&nbsp;can&nbsp;add&nbsp;additional&nbsp;key=value&nbsp;pairs&nbsp;to&nbsp;control&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errorbar&nbsp;markers.&nbsp;&nbsp;For&nbsp;example,&nbsp;this&nbsp;code&nbsp;makes&nbsp;big&nbsp;red<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;squares&nbsp;with&nbsp;thick&nbsp;green&nbsp;edges<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&gt;&gt;&gt;&nbsp;x,y,yerr&nbsp;=&nbsp;rand(3,10)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&gt;&gt;&gt;&nbsp;<a href="#PolarSubplot-errorbar">errorbar</a>(x,&nbsp;y,&nbsp;yerr,&nbsp;marker='s',<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mfc='red',&nbsp;mec='green',&nbsp;ms=20,&nbsp;mew=4)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mfc,&nbsp;mec,&nbsp;ms&nbsp;and&nbsp;mew&nbsp;are&nbsp;aliases&nbsp;for&nbsp;the&nbsp;longer&nbsp;property<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;names,&nbsp;markerfacecolor,&nbsp;markeredgecolor,&nbsp;markersize&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewith.<br>
valid&nbsp;kwargs&nbsp;for&nbsp;the&nbsp;marker&nbsp;properties&nbsp;are<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;length&nbsp;3&nbsp;tuple.&nbsp;&nbsp;The&nbsp;first&nbsp;element&nbsp;is&nbsp;the<br>
Line2D&nbsp;instance&nbsp;for&nbsp;the&nbsp;y&nbsp;symbol&nbsp;lines.&nbsp;&nbsp;The&nbsp;second&nbsp;element&nbsp;is<br>
a&nbsp;list&nbsp;of&nbsp;error&nbsp;bar&nbsp;cap&nbsp;lines,&nbsp;the&nbsp;third&nbsp;element&nbsp;is&nbsp;a&nbsp;list&nbsp;of<br>
line&nbsp;collections&nbsp;for&nbsp;the&nbsp;horizontal&nbsp;and&nbsp;vertical&nbsp;error&nbsp;ranges</tt></dd></dl>

<dl><dt><a name="PolarSubplot-fill"><strong>fill</strong></a>(self, *args, **kwargs)</dt><dd><tt>FILL(*args,&nbsp;**kwargs)<br>
plot&nbsp;filled&nbsp;polygons.&nbsp;&nbsp;*args&nbsp;is&nbsp;a&nbsp;variable&nbsp;length&nbsp;argument,&nbsp;allowing<br>
for&nbsp;multiple&nbsp;x,y&nbsp;pairs&nbsp;with&nbsp;an&nbsp;optional&nbsp;color&nbsp;format&nbsp;string;&nbsp;see&nbsp;plot<br>
for&nbsp;details&nbsp;on&nbsp;the&nbsp;argument&nbsp;parsing.&nbsp;&nbsp;For&nbsp;example,&nbsp;all&nbsp;of&nbsp;the<br>
following&nbsp;are&nbsp;legal,&nbsp;assuming&nbsp;ax&nbsp;is&nbsp;an&nbsp;<a href="#Axes">Axes</a>&nbsp;instance:<br>
&nbsp;&nbsp;ax.<a href="#PolarSubplot-fill">fill</a>(x,y)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;plot&nbsp;polygon&nbsp;with&nbsp;vertices&nbsp;at&nbsp;x,y<br>
&nbsp;&nbsp;ax.<a href="#PolarSubplot-fill">fill</a>(x,y,&nbsp;'b'&nbsp;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;plot&nbsp;polygon&nbsp;with&nbsp;vertices&nbsp;at&nbsp;x,y&nbsp;in&nbsp;blue<br>
An&nbsp;arbitrary&nbsp;number&nbsp;of&nbsp;x,&nbsp;y,&nbsp;color&nbsp;groups&nbsp;can&nbsp;be&nbsp;specified,&nbsp;as&nbsp;in<br>
&nbsp;&nbsp;ax.<a href="#PolarSubplot-fill">fill</a>(x1,&nbsp;y1,&nbsp;'g',&nbsp;x2,&nbsp;y2,&nbsp;'r')<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;patches&nbsp;that&nbsp;were&nbsp;added<br>
The&nbsp;same&nbsp;color&nbsp;strings&nbsp;that&nbsp;plot&nbsp;supports&nbsp;are&nbsp;supported&nbsp;by&nbsp;the&nbsp;fill<br>
format&nbsp;string.<br>
kwargs&nbsp;control&nbsp;the&nbsp;Polygon&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarSubplot-format_xdata"><strong>format_xdata</strong></a>(self, x)</dt><dd><tt>Return&nbsp;x&nbsp;string&nbsp;formatted.&nbsp;&nbsp;This&nbsp;function&nbsp;will&nbsp;use&nbsp;the&nbsp;attribute<br>
self.<strong>fmt_xdata</strong>&nbsp;if&nbsp;it&nbsp;is&nbsp;callable,&nbsp;else&nbsp;will&nbsp;fall&nbsp;back&nbsp;on&nbsp;the&nbsp;xaxis<br>
major&nbsp;formatter</tt></dd></dl>

<dl><dt><a name="PolarSubplot-format_ydata"><strong>format_ydata</strong></a>(self, y)</dt><dd><tt>Return&nbsp;y&nbsp;string&nbsp;formatted.&nbsp;&nbsp;This&nbsp;function&nbsp;will&nbsp;use&nbsp;the&nbsp;attribute<br>
self.<strong>fmt_ydata</strong>&nbsp;if&nbsp;it&nbsp;is&nbsp;callable,&nbsp;else&nbsp;will&nbsp;fall&nbsp;back&nbsp;on&nbsp;the&nbsp;yaxis<br>
major&nbsp;formatter</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_adjustable"><strong>get_adjustable</strong></a>(self)</dt></dl>

<dl><dt><a name="PolarSubplot-get_anchor"><strong>get_anchor</strong></a>(self)</dt></dl>

<dl><dt><a name="PolarSubplot-get_aspect"><strong>get_aspect</strong></a>(self)</dt></dl>

<dl><dt><a name="PolarSubplot-get_autoscale_on"><strong>get_autoscale_on</strong></a>(self)</dt><dd><tt>Get&nbsp;whether&nbsp;autoscaling&nbsp;is&nbsp;applied&nbsp;on&nbsp;plot&nbsp;commands</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_axis_bgcolor"><strong>get_axis_bgcolor</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;axis&nbsp;background&nbsp;color</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_axisbelow"><strong>get_axisbelow</strong></a>(self)</dt><dd><tt>Get&nbsp;whether&nbsp;axist&nbsp;below&nbsp;is&nbsp;true&nbsp;or&nbsp;not</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_child_artists"><strong>get_child_artists</strong></a>(self)</dt><dd><tt>Return&nbsp;a&nbsp;list&nbsp;of&nbsp;artists&nbsp;the&nbsp;axes&nbsp;contains.&nbsp;&nbsp;Deprecated</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_cursor_props"><strong>get_cursor_props</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;cursor&nbsp;props&nbsp;as&nbsp;a&nbsp;linewidth,&nbsp;color&nbsp;tuple&nbsp;where<br>
linewidth&nbsp;is&nbsp;a&nbsp;float&nbsp;and&nbsp;color&nbsp;is&nbsp;an&nbsp;RGBA&nbsp;tuple</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_frame"><strong>get_frame</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;axes&nbsp;Rectangle&nbsp;frame</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_frame_on"><strong>get_frame_on</strong></a>(self)</dt><dd><tt>Get&nbsp;whether&nbsp;the&nbsp;axes&nbsp;rectangle&nbsp;patch&nbsp;is&nbsp;drawn</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_images"><strong>get_images</strong></a>(self)</dt><dd><tt>return&nbsp;a&nbsp;list&nbsp;of&nbsp;<a href="#Axes">Axes</a>&nbsp;images&nbsp;contained&nbsp;by&nbsp;the&nbsp;<a href="#Axes">Axes</a></tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_legend"><strong>get_legend</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;Legend&nbsp;instance,&nbsp;or&nbsp;None&nbsp;if&nbsp;no&nbsp;legend&nbsp;is&nbsp;defined</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_lines"><strong>get_lines</strong></a>(self)</dt><dd><tt>Return&nbsp;a&nbsp;list&nbsp;of&nbsp;lines&nbsp;contained&nbsp;by&nbsp;the&nbsp;<a href="#Axes">Axes</a></tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_navigate"><strong>get_navigate</strong></a>(self)</dt><dd><tt>Get&nbsp;whether&nbsp;the&nbsp;axes&nbsp;responds&nbsp;to&nbsp;navigation&nbsp;commands</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_navigate_mode"><strong>get_navigate_mode</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;navigation&nbsp;toolbar&nbsp;button&nbsp;status:&nbsp;'PAN',&nbsp;'ZOOM',&nbsp;or&nbsp;None</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_position"><strong>get_position</strong></a>(self, original<font color="#909090">=False</font>)</dt><dd><tt>Return&nbsp;the&nbsp;axes&nbsp;rectangle&nbsp;left,&nbsp;bottom,&nbsp;width,&nbsp;height</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_renderer_cache"><strong>get_renderer_cache</strong></a>(self)</dt></dl>

<dl><dt><a name="PolarSubplot-get_window_extent"><strong>get_window_extent</strong></a>(self, *args, **kwargs)</dt><dd><tt>get&nbsp;the&nbsp;axes&nbsp;bounding&nbsp;box&nbsp;in&nbsp;display&nbsp;space;&nbsp;args&nbsp;and&nbsp;kwargs&nbsp;are&nbsp;empty</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_xaxis"><strong>get_xaxis</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;XAxis&nbsp;instance</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_xgridlines"><strong>get_xgridlines</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;x&nbsp;grid&nbsp;lines&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Line2D&nbsp;instances</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_xlim"><strong>get_xlim</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;x&nbsp;axis&nbsp;range&nbsp;[xmin,&nbsp;xmax]</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_xticklabels"><strong>get_xticklabels</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;xtick&nbsp;labels&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Text&nbsp;instances</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_xticklines"><strong>get_xticklines</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;xtick&nbsp;lines&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Line2D&nbsp;instances</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_xticks"><strong>get_xticks</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;x&nbsp;ticks&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;locations</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_yaxis"><strong>get_yaxis</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;YAxis&nbsp;instance</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_ygridlines"><strong>get_ygridlines</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;y&nbsp;grid&nbsp;lines&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Line2D&nbsp;instances</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_ylim"><strong>get_ylim</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;y&nbsp;axis&nbsp;range&nbsp;[ymin,&nbsp;ymax]</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_yticklabels"><strong>get_yticklabels</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;ytick&nbsp;labels&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Text&nbsp;instances</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_yticklines"><strong>get_yticklines</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;ytick&nbsp;lines&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Line2D&nbsp;instances</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_yticks"><strong>get_yticks</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;y&nbsp;ticks&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;locations</tt></dd></dl>

<dl><dt><a name="PolarSubplot-hist"><strong>hist</strong></a>(self, x, bins<font color="#909090">=10</font>, normed<font color="#909090">=0</font>, bottom<font color="#909090">=None</font>, align<font color="#909090">='edge'</font>, orientation<font color="#909090">='vertical'</font>, width<font color="#909090">=None</font>, log<font color="#909090">=False</font>, **kwargs)</dt><dd><tt>HIST(x,&nbsp;bins=10,&nbsp;normed=0,&nbsp;bottom=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;align='edge',&nbsp;orientation='vertical',&nbsp;width=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log=False,&nbsp;**kwargs)<br>
Compute&nbsp;the&nbsp;histogram&nbsp;of&nbsp;x.&nbsp;&nbsp;bins&nbsp;is&nbsp;either&nbsp;an&nbsp;integer&nbsp;number&nbsp;of<br>
bins&nbsp;or&nbsp;a&nbsp;sequence&nbsp;giving&nbsp;the&nbsp;bins.&nbsp;&nbsp;x&nbsp;are&nbsp;the&nbsp;data&nbsp;to&nbsp;be&nbsp;binned.<br>
The&nbsp;return&nbsp;values&nbsp;is&nbsp;(n,&nbsp;bins,&nbsp;patches)<br>
If&nbsp;normed&nbsp;is&nbsp;true,&nbsp;the&nbsp;first&nbsp;element&nbsp;of&nbsp;the&nbsp;return&nbsp;tuple&nbsp;will<br>
be&nbsp;the&nbsp;counts&nbsp;normalized&nbsp;to&nbsp;form&nbsp;a&nbsp;probability&nbsp;density,&nbsp;ie,<br>
n/(len(x)*dbin).&nbsp;&nbsp;In&nbsp;a&nbsp;probability&nbsp;density,&nbsp;the&nbsp;integral&nbsp;of<br>
the&nbsp;histogram&nbsp;should&nbsp;be&nbsp;one&nbsp;(we&nbsp;assume&nbsp;equally&nbsp;spaced&nbsp;bins);<br>
you&nbsp;can&nbsp;verify&nbsp;that&nbsp;with<br>
&nbsp;&nbsp;#&nbsp;trapezoidal&nbsp;integration&nbsp;of&nbsp;the&nbsp;probability&nbsp;density&nbsp;function<br>
&nbsp;&nbsp;from&nbsp;matplotlib.mlab&nbsp;import&nbsp;trapz<br>
&nbsp;&nbsp;pdf,&nbsp;bins,&nbsp;patches&nbsp;=&nbsp;ax.<a href="#PolarSubplot-hist">hist</a>(...)<br>
&nbsp;&nbsp;print&nbsp;trapz(bins,&nbsp;pdf)<br>
align&nbsp;=&nbsp;'edge'&nbsp;|&nbsp;'center'.&nbsp;&nbsp;Interprets&nbsp;bins&nbsp;either&nbsp;as&nbsp;edge<br>
or&nbsp;center&nbsp;values<br>
orientation&nbsp;=&nbsp;'horizontal'&nbsp;|&nbsp;'vertical'.&nbsp;&nbsp;If&nbsp;horizontal,&nbsp;barh<br>
will&nbsp;be&nbsp;used&nbsp;and&nbsp;the&nbsp;"bottom"&nbsp;kwarg&nbsp;will&nbsp;be&nbsp;the&nbsp;left&nbsp;edges.<br>
width:&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;bars.&nbsp;&nbsp;If&nbsp;None,&nbsp;automatically&nbsp;compute<br>
the&nbsp;width.<br>
log:&nbsp;if&nbsp;True,&nbsp;the&nbsp;histogram&nbsp;axis&nbsp;will&nbsp;be&nbsp;set&nbsp;to&nbsp;a&nbsp;log&nbsp;scale<br>
kwargs&nbsp;are&nbsp;used&nbsp;to&nbsp;update&nbsp;the&nbsp;properties&nbsp;of&nbsp;the<br>
hist&nbsp;Rectangles:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarSubplot-hlines"><strong>hlines</strong></a>(self, y, xmin, xmax, colors<font color="#909090">='k'</font>, linestyle<font color="#909090">='solid'</font>, label<font color="#909090">=''</font>, **kwargs)</dt><dd><tt>HLINES(y,&nbsp;xmin,&nbsp;xmax,&nbsp;colors='k',&nbsp;linestyle='solid',&nbsp;**kwargs)<br>
plot&nbsp;horizontal&nbsp;lines&nbsp;at&nbsp;each&nbsp;y&nbsp;from&nbsp;xmin&nbsp;to&nbsp;xmax.&nbsp;&nbsp;xmin&nbsp;or&nbsp;xmax&nbsp;can<br>
be&nbsp;scalars&nbsp;or&nbsp;len(x)&nbsp;numpy&nbsp;arrays.&nbsp;&nbsp;If&nbsp;they&nbsp;are&nbsp;scalars,&nbsp;then&nbsp;the<br>
respective&nbsp;values&nbsp;are&nbsp;constant,&nbsp;else&nbsp;the&nbsp;widths&nbsp;of&nbsp;the&nbsp;lines&nbsp;are<br>
determined&nbsp;by&nbsp;xmin&nbsp;and&nbsp;xmax<br>
colors&nbsp;is&nbsp;a&nbsp;line&nbsp;collections&nbsp;color&nbsp;args,&nbsp;either&nbsp;a&nbsp;single&nbsp;color&nbsp;or&nbsp;a&nbsp;len(x)&nbsp;list&nbsp;of&nbsp;colors<br>
linestyle&nbsp;is&nbsp;one&nbsp;of&nbsp;solid|dashed|dashdot|dotted<br>
Returns&nbsp;the&nbsp;LineCollection&nbsp;that&nbsp;was&nbsp;added</tt></dd></dl>

<dl><dt><a name="PolarSubplot-hold"><strong>hold</strong></a>(self, b<font color="#909090">=None</font>)</dt><dd><tt>HOLD(b=None)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;hold&nbsp;state.&nbsp;&nbsp;If&nbsp;hold&nbsp;is&nbsp;None&nbsp;(default),&nbsp;toggle&nbsp;the<br>
hold&nbsp;state.&nbsp;&nbsp;Else&nbsp;set&nbsp;the&nbsp;hold&nbsp;state&nbsp;to&nbsp;boolean&nbsp;value&nbsp;b.<br>
&nbsp;<br>
Eg<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-hold">hold</a>()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;toggle&nbsp;hold<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-hold">hold</a>(True)&nbsp;&nbsp;#&nbsp;hold&nbsp;is&nbsp;on<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-hold">hold</a>(False)&nbsp;#&nbsp;hold&nbsp;is&nbsp;off<br>
&nbsp;<br>
&nbsp;<br>
When&nbsp;hold&nbsp;is&nbsp;True,&nbsp;subsequent&nbsp;plot&nbsp;commands&nbsp;will&nbsp;be&nbsp;added&nbsp;to<br>
the&nbsp;current&nbsp;axes.&nbsp;&nbsp;When&nbsp;hold&nbsp;is&nbsp;False,&nbsp;the&nbsp;current&nbsp;axes&nbsp;and<br>
figure&nbsp;will&nbsp;be&nbsp;cleared&nbsp;on&nbsp;the&nbsp;next&nbsp;plot&nbsp;command</tt></dd></dl>

<dl><dt><a name="PolarSubplot-imshow"><strong>imshow</strong></a>(self, X, cmap<font color="#909090">=None</font>, norm<font color="#909090">=None</font>, aspect<font color="#909090">=None</font>, interpolation<font color="#909090">=None</font>, alpha<font color="#909090">=1.0</font>, vmin<font color="#909090">=None</font>, vmax<font color="#909090">=None</font>, origin<font color="#909090">=None</font>, extent<font color="#909090">=None</font>, shape<font color="#909090">=None</font>, filternorm<font color="#909090">=1</font>, filterrad<font color="#909090">=4.0</font>, imlim<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>IMSHOW(X,&nbsp;cmap=None,&nbsp;norm=None,&nbsp;aspect=None,&nbsp;interpolation=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha=1.0,&nbsp;vmin=None,&nbsp;vmax=None,&nbsp;origin=None,&nbsp;extent=None)<br>
&nbsp;<br>
IMSHOW(X)&nbsp;-&nbsp;plot&nbsp;image&nbsp;X&nbsp;to&nbsp;current&nbsp;axes,&nbsp;resampling&nbsp;to&nbsp;scale&nbsp;to&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;(X&nbsp;may&nbsp;be&nbsp;numarray/Numeric&nbsp;array&nbsp;or&nbsp;PIL&nbsp;image)<br>
&nbsp;<br>
IMSHOW(X,&nbsp;**kwargs)&nbsp;-&nbsp;Use&nbsp;keyword&nbsp;args&nbsp;to&nbsp;control&nbsp;image&nbsp;scaling,<br>
colormapping&nbsp;etc.&nbsp;See&nbsp;below&nbsp;for&nbsp;details<br>
&nbsp;<br>
&nbsp;<br>
Display&nbsp;the&nbsp;image&nbsp;in&nbsp;X&nbsp;to&nbsp;current&nbsp;axes.&nbsp;&nbsp;X&nbsp;may&nbsp;be&nbsp;a&nbsp;float&nbsp;array,&nbsp;a<br>
UInt8&nbsp;array&nbsp;or&nbsp;a&nbsp;PIL&nbsp;image.&nbsp;If&nbsp;X&nbsp;is&nbsp;an&nbsp;array,&nbsp;X&nbsp;can&nbsp;have&nbsp;the&nbsp;following<br>
shapes:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;MxN&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;luminance&nbsp;(grayscale,&nbsp;float&nbsp;array&nbsp;only)<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;MxNx3&nbsp;&nbsp;:&nbsp;RGB&nbsp;(float&nbsp;or&nbsp;UInt8&nbsp;array)<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;MxNx4&nbsp;&nbsp;:&nbsp;RGBA&nbsp;(float&nbsp;or&nbsp;UInt8&nbsp;array)<br>
&nbsp;<br>
The&nbsp;value&nbsp;for&nbsp;each&nbsp;component&nbsp;of&nbsp;MxNx3&nbsp;and&nbsp;MxNx4&nbsp;float&nbsp;arrays&nbsp;should&nbsp;be<br>
in&nbsp;the&nbsp;range&nbsp;0.0&nbsp;to&nbsp;1.0;&nbsp;MxN&nbsp;float&nbsp;arrays&nbsp;may&nbsp;be&nbsp;normalised.<br>
&nbsp;<br>
A&nbsp;matplotlib.image.AxesImage&nbsp;instance&nbsp;is&nbsp;returned<br>
&nbsp;<br>
The&nbsp;following&nbsp;kwargs&nbsp;are&nbsp;allowed:<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;cmap&nbsp;is&nbsp;a&nbsp;cm&nbsp;colormap&nbsp;instance,&nbsp;eg&nbsp;cm.jet.&nbsp;&nbsp;If&nbsp;None,&nbsp;default&nbsp;to&nbsp;rc<br>
&nbsp;&nbsp;&nbsp;&nbsp;image.cmap&nbsp;value&nbsp;(Ignored&nbsp;when&nbsp;X&nbsp;has&nbsp;RGB(A)&nbsp;information)<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;aspect&nbsp;is&nbsp;one&nbsp;of:&nbsp;auto,&nbsp;equal,&nbsp;or&nbsp;a&nbsp;number.&nbsp;&nbsp;If&nbsp;None,&nbsp;default&nbsp;to&nbsp;rc<br>
&nbsp;&nbsp;&nbsp;&nbsp;image.aspect&nbsp;value<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;interpolation&nbsp;is&nbsp;one&nbsp;of:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'nearest',&nbsp;'bilinear',&nbsp;'bicubic',&nbsp;'spline16',&nbsp;'spline36',<br>
&nbsp;&nbsp;&nbsp;&nbsp;'hanning',&nbsp;'hamming',&nbsp;'hermite',&nbsp;'kaiser',&nbsp;'quadric',<br>
&nbsp;&nbsp;&nbsp;&nbsp;'catrom',&nbsp;'gaussian',&nbsp;'bessel',&nbsp;'mitchell',&nbsp;'sinc',<br>
&nbsp;&nbsp;&nbsp;&nbsp;'lanczos',&nbsp;'blackman'<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;interpolation&nbsp;is&nbsp;None,&nbsp;default&nbsp;to&nbsp;rc<br>
&nbsp;&nbsp;&nbsp;&nbsp;image.interpolation.&nbsp;&nbsp;See&nbsp;also&nbsp;th&nbsp;the&nbsp;filternorm&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;filterrad&nbsp;parameters<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;norm&nbsp;is&nbsp;a&nbsp;matplotlib.colors.Normalize&nbsp;instance;&nbsp;default&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;normalization().&nbsp;&nbsp;This&nbsp;scales&nbsp;luminance&nbsp;-&gt;&nbsp;0-1&nbsp;(only&nbsp;used&nbsp;for&nbsp;an<br>
&nbsp;&nbsp;&nbsp;&nbsp;MxN&nbsp;float&nbsp;array).<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;are&nbsp;used&nbsp;to&nbsp;scale&nbsp;a&nbsp;luminance&nbsp;image&nbsp;to&nbsp;0-1.&nbsp;&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;either&nbsp;is&nbsp;None,&nbsp;the&nbsp;min&nbsp;and&nbsp;max&nbsp;of&nbsp;the&nbsp;luminance&nbsp;values&nbsp;will&nbsp;be<br>
&nbsp;&nbsp;&nbsp;&nbsp;used.&nbsp;&nbsp;Note&nbsp;if&nbsp;you&nbsp;pass&nbsp;a&nbsp;norm&nbsp;instance,&nbsp;the&nbsp;settings&nbsp;for&nbsp;vmin&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;vmax&nbsp;will&nbsp;be&nbsp;ignored.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;alpha&nbsp;=&nbsp;1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;blending&nbsp;value<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;origin&nbsp;is&nbsp;'upper'&nbsp;or&nbsp;'lower',&nbsp;to&nbsp;place&nbsp;the&nbsp;[0,0]<br>
&nbsp;&nbsp;&nbsp;&nbsp;index&nbsp;of&nbsp;the&nbsp;array&nbsp;in&nbsp;the&nbsp;upper&nbsp;left&nbsp;or&nbsp;lower&nbsp;left&nbsp;corner&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;axes.&nbsp;&nbsp;If&nbsp;None,&nbsp;default&nbsp;to&nbsp;rc&nbsp;image.origin<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;extent&nbsp;is&nbsp;(left,&nbsp;right,&nbsp;bottom,&nbsp;top)&nbsp;data&nbsp;values&nbsp;of&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;axes.&nbsp;&nbsp;The&nbsp;default&nbsp;assigns&nbsp;zero-based&nbsp;row,&nbsp;column&nbsp;indices<br>
&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;the&nbsp;x,&nbsp;y&nbsp;centers&nbsp;of&nbsp;the&nbsp;pixels.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;shape&nbsp;is&nbsp;for&nbsp;raw&nbsp;buffer&nbsp;images<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;filternorm&nbsp;is&nbsp;a&nbsp;parameter&nbsp;for&nbsp;the&nbsp;antigrain&nbsp;image&nbsp;resize<br>
&nbsp;&nbsp;&nbsp;&nbsp;filter.&nbsp;&nbsp;From&nbsp;the&nbsp;antigrain&nbsp;documentation,&nbsp;if&nbsp;normalize=1,<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;filter&nbsp;normalizes&nbsp;integer&nbsp;values&nbsp;and&nbsp;corrects&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;rounding&nbsp;errors.&nbsp;It&nbsp;doesn't&nbsp;do&nbsp;anything&nbsp;with&nbsp;the&nbsp;source<br>
&nbsp;&nbsp;&nbsp;&nbsp;floating&nbsp;point&nbsp;values,&nbsp;it&nbsp;corrects&nbsp;only&nbsp;integers&nbsp;according<br>
&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;the&nbsp;rule&nbsp;of&nbsp;1.0&nbsp;which&nbsp;means&nbsp;that&nbsp;any&nbsp;sum&nbsp;of&nbsp;pixel<br>
&nbsp;&nbsp;&nbsp;&nbsp;weights&nbsp;must&nbsp;be&nbsp;equal&nbsp;to&nbsp;1.0.&nbsp;&nbsp;So,&nbsp;the&nbsp;filter&nbsp;function<br>
&nbsp;&nbsp;&nbsp;&nbsp;must&nbsp;produce&nbsp;a&nbsp;graph&nbsp;of&nbsp;the&nbsp;proper&nbsp;shape.<br>
&nbsp;<br>
&nbsp;*&nbsp;filterrad:&nbsp;the&nbsp;filter&nbsp;radius&nbsp;for&nbsp;filters&nbsp;that&nbsp;have&nbsp;a&nbsp;radius<br>
&nbsp;&nbsp;&nbsp;parameter,&nbsp;ie&nbsp;when&nbsp;interpolation&nbsp;is&nbsp;one&nbsp;of:&nbsp;'sinc',<br>
&nbsp;&nbsp;&nbsp;'lanczos'&nbsp;or&nbsp;'blackman'<br>
&nbsp;<br>
Additional&nbsp;kwargs&nbsp;are&nbsp;matplotlib.artist&nbsp;properties</tt></dd></dl>

<dl><dt><a name="PolarSubplot-in_axes"><strong>in_axes</strong></a>(self, xwin, ywin)</dt><dd><tt>return&nbsp;True&nbsp;is&nbsp;the&nbsp;point&nbsp;xwin,&nbsp;ywin&nbsp;(display&nbsp;coords)&nbsp;are&nbsp;in&nbsp;the&nbsp;<a href="#Axes">Axes</a></tt></dd></dl>

<dl><dt><a name="PolarSubplot-ishold"><strong>ishold</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;HOLD&nbsp;status&nbsp;of&nbsp;the&nbsp;axes</tt></dd></dl>

<dl><dt><a name="PolarSubplot-legend"><strong>legend</strong></a>(self, *args, **kwargs)</dt><dd><tt>LEGEND(*args,&nbsp;**kwargs)<br>
&nbsp;<br>
Place&nbsp;a&nbsp;legend&nbsp;on&nbsp;the&nbsp;current&nbsp;axes&nbsp;at&nbsp;location&nbsp;loc.&nbsp;&nbsp;Labels&nbsp;are&nbsp;a<br>
sequence&nbsp;of&nbsp;strings&nbsp;and&nbsp;loc&nbsp;can&nbsp;be&nbsp;a&nbsp;string&nbsp;or&nbsp;an&nbsp;integer&nbsp;specifying<br>
the&nbsp;legend&nbsp;location<br>
&nbsp;<br>
USAGE:<br>
&nbsp;<br>
&nbsp;&nbsp;Make&nbsp;a&nbsp;legend&nbsp;with&nbsp;existing&nbsp;lines<br>
&nbsp;<br>
&nbsp;&nbsp;&gt;&gt;&gt;&nbsp;<a href="#PolarSubplot-legend">legend</a>()<br>
&nbsp;<br>
&nbsp;&nbsp;legend&nbsp;by&nbsp;itself&nbsp;will&nbsp;try&nbsp;and&nbsp;build&nbsp;a&nbsp;legend&nbsp;using&nbsp;the&nbsp;label<br>
&nbsp;&nbsp;property&nbsp;of&nbsp;the&nbsp;lines/patches/collections.&nbsp;&nbsp;You&nbsp;can&nbsp;set&nbsp;the&nbsp;label&nbsp;of<br>
&nbsp;&nbsp;a&nbsp;line&nbsp;by&nbsp;doing&nbsp;<a href="#PolarSubplot-plot">plot</a>(x,&nbsp;y,&nbsp;label='my&nbsp;data')&nbsp;or&nbsp;line.<a href="#PolarSubplot-set_label">set_label</a>('my<br>
&nbsp;&nbsp;data').&nbsp;If&nbsp;label&nbsp;is&nbsp;set&nbsp;to&nbsp;'_nolegend_',&nbsp;the&nbsp;item&nbsp;will&nbsp;not&nbsp;be&nbsp;shown<br>
&nbsp;&nbsp;in&nbsp;legend.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;automatically&nbsp;generate&nbsp;the&nbsp;legend&nbsp;from&nbsp;labels<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-legend">legend</a>(&nbsp;('label1',&nbsp;'label2',&nbsp;'label3')&nbsp;)<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;Make&nbsp;a&nbsp;legend&nbsp;for&nbsp;a&nbsp;list&nbsp;of&nbsp;lines&nbsp;and&nbsp;labels<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-legend">legend</a>(&nbsp;(line1,&nbsp;line2,&nbsp;line3),&nbsp;('label1',&nbsp;'label2',&nbsp;'label3')&nbsp;)<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;Make&nbsp;a&nbsp;legend&nbsp;at&nbsp;a&nbsp;given&nbsp;location,&nbsp;using&nbsp;a&nbsp;location&nbsp;argument<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;<a href="#PolarSubplot-legend">legend</a>(&nbsp;LABELS,&nbsp;LOC&nbsp;)&nbsp;&nbsp;or<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;<a href="#PolarSubplot-legend">legend</a>(&nbsp;LINES,&nbsp;LABELS,&nbsp;LOC&nbsp;)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-legend">legend</a>(&nbsp;('label1',&nbsp;'label2',&nbsp;'label3'),&nbsp;loc='upper&nbsp;left')<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-legend">legend</a>(&nbsp;(line1,&nbsp;line2,&nbsp;line3),&nbsp;&nbsp;('label1',&nbsp;'label2',&nbsp;'label3'),&nbsp;loc=2)<br>
&nbsp;<br>
The&nbsp;location&nbsp;codes&nbsp;are<br>
&nbsp;<br>
&nbsp;&nbsp;'best'&nbsp;:&nbsp;0,<br>
&nbsp;&nbsp;'upper&nbsp;right'&nbsp;&nbsp;:&nbsp;1,&nbsp;(default)<br>
&nbsp;&nbsp;'upper&nbsp;left'&nbsp;&nbsp;&nbsp;:&nbsp;2,<br>
&nbsp;&nbsp;'lower&nbsp;left'&nbsp;&nbsp;&nbsp;:&nbsp;3,<br>
&nbsp;&nbsp;'lower&nbsp;right'&nbsp;&nbsp;:&nbsp;4,<br>
&nbsp;&nbsp;'right'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;5,<br>
&nbsp;&nbsp;'center&nbsp;left'&nbsp;&nbsp;:&nbsp;6,<br>
&nbsp;&nbsp;'center&nbsp;right'&nbsp;:&nbsp;7,<br>
&nbsp;&nbsp;'lower&nbsp;center'&nbsp;:&nbsp;8,<br>
&nbsp;&nbsp;'upper&nbsp;center'&nbsp;:&nbsp;9,<br>
&nbsp;&nbsp;'center'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;10,<br>
&nbsp;<br>
If&nbsp;none&nbsp;of&nbsp;these&nbsp;are&nbsp;suitable,&nbsp;loc&nbsp;can&nbsp;be&nbsp;a&nbsp;2-tuple&nbsp;giving&nbsp;x,y<br>
in&nbsp;axes&nbsp;coords,&nbsp;ie,<br>
&nbsp;<br>
&nbsp;&nbsp;loc&nbsp;=&nbsp;0,&nbsp;1&nbsp;is&nbsp;left&nbsp;top<br>
&nbsp;&nbsp;loc&nbsp;=&nbsp;0.5,&nbsp;0.5&nbsp;is&nbsp;center,&nbsp;center<br>
&nbsp;<br>
and&nbsp;so&nbsp;on.&nbsp;&nbsp;The&nbsp;following&nbsp;kwargs&nbsp;are&nbsp;supported:<br>
&nbsp;<br>
isaxes=True&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;whether&nbsp;this&nbsp;is&nbsp;an&nbsp;axes&nbsp;legend<br>
numpoints&nbsp;=&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;number&nbsp;of&nbsp;points&nbsp;in&nbsp;the&nbsp;legend&nbsp;line<br>
prop&nbsp;=&nbsp;FontProperties(size='smaller')&nbsp;&nbsp;#&nbsp;the&nbsp;font&nbsp;property<br>
pad&nbsp;=&nbsp;0.2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;fractional&nbsp;whitespace&nbsp;inside&nbsp;the&nbsp;legend&nbsp;border<br>
markerscale&nbsp;=&nbsp;0.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;relative&nbsp;size&nbsp;of&nbsp;legend&nbsp;markers&nbsp;vs.&nbsp;original<br>
shadow&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;if&nbsp;True,&nbsp;draw&nbsp;a&nbsp;shadow&nbsp;behind&nbsp;legend<br>
labelsep&nbsp;=&nbsp;0.005&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;vertical&nbsp;space&nbsp;between&nbsp;the&nbsp;legend&nbsp;entries<br>
handlelen&nbsp;=&nbsp;0.05&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;legend&nbsp;lines<br>
handletextsep&nbsp;=&nbsp;0.02&nbsp;#&nbsp;the&nbsp;space&nbsp;between&nbsp;the&nbsp;legend&nbsp;line&nbsp;and&nbsp;legend&nbsp;text<br>
axespad&nbsp;=&nbsp;0.02&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;border&nbsp;between&nbsp;the&nbsp;axes&nbsp;and&nbsp;legend&nbsp;edge</tt></dd></dl>

<dl><dt><a name="PolarSubplot-loglog"><strong>loglog</strong></a>(self, *args, **kwargs)</dt><dd><tt>LOGLOG(*args,&nbsp;**kwargs)<br>
Make&nbsp;a&nbsp;loglog&nbsp;plot&nbsp;with&nbsp;log&nbsp;scaling&nbsp;on&nbsp;the&nbsp;a&nbsp;and&nbsp;y&nbsp;axis.&nbsp;&nbsp;The&nbsp;args<br>
to&nbsp;semilog&nbsp;x&nbsp;are&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;args&nbsp;to&nbsp;plot.&nbsp;&nbsp;See&nbsp;help&nbsp;plot&nbsp;for<br>
more&nbsp;info.<br>
Optional&nbsp;keyword&nbsp;args&nbsp;supported&nbsp;are&nbsp;any&nbsp;of&nbsp;the&nbsp;kwargs<br>
supported&nbsp;by&nbsp;plot&nbsp;or&nbsp;set_xscale&nbsp;or&nbsp;set_yscale.&nbsp;&nbsp;Notable,&nbsp;for<br>
log&nbsp;scaling:<br>
&nbsp;&nbsp;*&nbsp;basex:&nbsp;base&nbsp;of&nbsp;the&nbsp;x&nbsp;logarithm<br>
&nbsp;&nbsp;*&nbsp;subsx:&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;ticks;&nbsp;None&nbsp;defaults&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of&nbsp;decades&nbsp;in&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;plot;&nbsp;see&nbsp;set_xscale&nbsp;for&nbsp;details<br>
&nbsp;&nbsp;*&nbsp;basey:&nbsp;base&nbsp;of&nbsp;the&nbsp;y&nbsp;logarithm<br>
&nbsp;&nbsp;*&nbsp;subsy:&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;yticks;&nbsp;None&nbsp;defaults&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of&nbsp;decades&nbsp;in&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;plot;&nbsp;see&nbsp;set_yscale&nbsp;for&nbsp;details<br>
The&nbsp;remaining&nbsp;valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarSubplot-matshow"><strong>matshow</strong></a>(self, Z, **kwargs)</dt><dd><tt>Plot&nbsp;a&nbsp;matrix&nbsp;as&nbsp;an&nbsp;image.<br>
&nbsp;<br>
The&nbsp;matrix&nbsp;will&nbsp;be&nbsp;shown&nbsp;the&nbsp;way&nbsp;it&nbsp;would&nbsp;be&nbsp;printed,<br>
with&nbsp;the&nbsp;first&nbsp;row&nbsp;at&nbsp;the&nbsp;top.&nbsp;&nbsp;Row&nbsp;and&nbsp;column&nbsp;numbering<br>
is&nbsp;zero-based.<br>
&nbsp;<br>
Argument:<br>
&nbsp;&nbsp;&nbsp;&nbsp;Z&nbsp;&nbsp;&nbsp;anything&nbsp;that&nbsp;can&nbsp;be&nbsp;interpreted&nbsp;as&nbsp;a&nbsp;2-D&nbsp;array<br>
&nbsp;<br>
kwargs:&nbsp;all&nbsp;are&nbsp;passed&nbsp;to&nbsp;imshow.&nbsp;&nbsp;matshow&nbsp;sets&nbsp;defaults<br>
for&nbsp;extent,&nbsp;origin,&nbsp;interpolation,&nbsp;and&nbsp;aspect;&nbsp;use&nbsp;care<br>
in&nbsp;overriding&nbsp;the&nbsp;extent&nbsp;and&nbsp;origin&nbsp;kwargs,&nbsp;because&nbsp;they<br>
interact.&nbsp;&nbsp;(Also,&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;change&nbsp;them,&nbsp;you&nbsp;probably<br>
should&nbsp;be&nbsp;using&nbsp;imshow&nbsp;directly&nbsp;in&nbsp;your&nbsp;own&nbsp;version&nbsp;of<br>
matshow.)<br>
&nbsp;<br>
Returns:&nbsp;an&nbsp;AxesImage&nbsp;instance</tt></dd></dl>

<dl><dt><a name="PolarSubplot-panx"><strong>panx</strong></a>(self, numsteps)</dt><dd><tt>Pan&nbsp;the&nbsp;x&nbsp;axis&nbsp;numsteps&nbsp;(plus&nbsp;pan&nbsp;right,&nbsp;minus&nbsp;pan&nbsp;left)</tt></dd></dl>

<dl><dt><a name="PolarSubplot-pany"><strong>pany</strong></a>(self, numsteps)</dt><dd><tt>Pan&nbsp;the&nbsp;x&nbsp;axis&nbsp;numsteps&nbsp;(plus&nbsp;pan&nbsp;up,&nbsp;minus&nbsp;pan&nbsp;down)</tt></dd></dl>

<dl><dt><a name="PolarSubplot-pcolor"><strong>pcolor</strong></a>(self, *args, **kwargs)</dt><dd><tt><a href="#PolarSubplot-pcolor">pcolor</a>(*args,&nbsp;**kwargs):&nbsp;pseudocolor&nbsp;plot&nbsp;of&nbsp;a&nbsp;2-D&nbsp;array<br>
Function&nbsp;signatures<br>
&nbsp;&nbsp;<a href="#PolarSubplot-pcolor">pcolor</a>(C,&nbsp;**kwargs)<br>
&nbsp;&nbsp;<a href="#PolarSubplot-pcolor">pcolor</a>(X,&nbsp;Y,&nbsp;C,&nbsp;**kwargs)<br>
C&nbsp;is&nbsp;the&nbsp;array&nbsp;of&nbsp;color&nbsp;values<br>
X&nbsp;and&nbsp;Y,&nbsp;if&nbsp;given,&nbsp;specify&nbsp;the&nbsp;(x,y)&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;colored<br>
quadrilaterals;&nbsp;the&nbsp;quadrilateral&nbsp;for&nbsp;C[i,j]&nbsp;has&nbsp;corners&nbsp;at<br>
(X[i,j],Y[i,j]),&nbsp;(X[i,j+1],Y[i,j+1]),&nbsp;(X[i+1,j],Y[i+1,j]),<br>
(X[i+1,j+1],Y[i+1,j+1]).&nbsp;&nbsp;Ideally&nbsp;the&nbsp;dimensions&nbsp;of&nbsp;X&nbsp;and&nbsp;Y<br>
should&nbsp;be&nbsp;one&nbsp;greater&nbsp;than&nbsp;those&nbsp;of&nbsp;C;&nbsp;if&nbsp;the&nbsp;dimensions&nbsp;are&nbsp;the<br>
same,&nbsp;then&nbsp;the&nbsp;last&nbsp;row&nbsp;and&nbsp;column&nbsp;of&nbsp;C&nbsp;will&nbsp;be&nbsp;ignored.<br>
Note&nbsp;that&nbsp;the&nbsp;the&nbsp;column&nbsp;index&nbsp;corresponds&nbsp;to&nbsp;the&nbsp;x-coordinate,<br>
and&nbsp;the&nbsp;row&nbsp;index&nbsp;corresponds&nbsp;to&nbsp;y;&nbsp;for&nbsp;details,&nbsp;see<br>
the&nbsp;"Grid&nbsp;Orientation"&nbsp;section&nbsp;below.<br>
If&nbsp;either&nbsp;or&nbsp;both&nbsp;of&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;1-D&nbsp;arrays&nbsp;or&nbsp;column&nbsp;vectors,<br>
they&nbsp;will&nbsp;be&nbsp;expanded&nbsp;as&nbsp;needed&nbsp;into&nbsp;the&nbsp;appropriate&nbsp;2-D&nbsp;arrays,<br>
making&nbsp;a&nbsp;rectangular&nbsp;grid.<br>
X,Y&nbsp;and&nbsp;C&nbsp;may&nbsp;be&nbsp;masked&nbsp;arrays.&nbsp;&nbsp;If&nbsp;either&nbsp;C[i,j],&nbsp;or&nbsp;one<br>
of&nbsp;the&nbsp;vertices&nbsp;surrounding&nbsp;C[i,j]&nbsp;(X&nbsp;or&nbsp;Y&nbsp;at&nbsp;[i,j],[i+1,j],<br>
[i,j+1],[i=1,j+1])&nbsp;is&nbsp;masked,&nbsp;nothing&nbsp;is&nbsp;plotted.<br>
Optional&nbsp;keyword&nbsp;args&nbsp;are&nbsp;shown&nbsp;with&nbsp;their&nbsp;defaults&nbsp;below&nbsp;(you&nbsp;must<br>
use&nbsp;kwargs&nbsp;for&nbsp;these):<br>
&nbsp;&nbsp;*&nbsp;cmap&nbsp;=&nbsp;cm.jet&nbsp;:&nbsp;a&nbsp;cm&nbsp;Colormap&nbsp;instance&nbsp;from&nbsp;matplotlib.cm.<br>
&nbsp;&nbsp;&nbsp;&nbsp;defaults&nbsp;to&nbsp;cm.jet<br>
&nbsp;&nbsp;*&nbsp;norm&nbsp;=&nbsp;Normalize()&nbsp;:&nbsp;matplotlib.colors.Normalize&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;used&nbsp;to&nbsp;scale&nbsp;luminance&nbsp;data&nbsp;to&nbsp;0,1.<br>
&nbsp;&nbsp;*&nbsp;vmin=None&nbsp;and&nbsp;vmax=None&nbsp;:&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;are&nbsp;used&nbsp;in&nbsp;conjunction<br>
&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;norm&nbsp;to&nbsp;normalize&nbsp;luminance&nbsp;data.&nbsp;&nbsp;If&nbsp;either&nbsp;are&nbsp;None,&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;min&nbsp;and&nbsp;max&nbsp;of&nbsp;the&nbsp;color&nbsp;array&nbsp;C&nbsp;is&nbsp;used.&nbsp;&nbsp;If&nbsp;you&nbsp;pass&nbsp;a&nbsp;norm<br>
&nbsp;&nbsp;&nbsp;&nbsp;instance,&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;will&nbsp;be&nbsp;None<br>
&nbsp;&nbsp;*&nbsp;shading&nbsp;=&nbsp;'flat'&nbsp;:&nbsp;or&nbsp;'faceted'.&nbsp;&nbsp;If&nbsp;'faceted',&nbsp;a&nbsp;black&nbsp;grid&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;drawn&nbsp;around&nbsp;each&nbsp;rectangle;&nbsp;if&nbsp;'flat',&nbsp;edges&nbsp;are&nbsp;not&nbsp;drawn<br>
&nbsp;&nbsp;*&nbsp;alpha=1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;blending&nbsp;value<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;matplotlib.collections.PatchCollection<br>
object<br>
Grid&nbsp;Orientation<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;orientation&nbsp;follows&nbsp;the&nbsp;Matlab(TM)&nbsp;convention:&nbsp;an<br>
&nbsp;&nbsp;&nbsp;&nbsp;array&nbsp;C&nbsp;with&nbsp;shape&nbsp;(nrows,&nbsp;ncolumns)&nbsp;is&nbsp;plotted&nbsp;with<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;column&nbsp;number&nbsp;as&nbsp;X&nbsp;and&nbsp;the&nbsp;row&nbsp;number&nbsp;as&nbsp;Y,&nbsp;increasing<br>
&nbsp;&nbsp;&nbsp;&nbsp;up;&nbsp;hence&nbsp;it&nbsp;is&nbsp;plotted&nbsp;the&nbsp;way&nbsp;the&nbsp;array&nbsp;would&nbsp;be&nbsp;printed,<br>
&nbsp;&nbsp;&nbsp;&nbsp;except&nbsp;that&nbsp;the&nbsp;Y&nbsp;axis&nbsp;is&nbsp;reversed.&nbsp;&nbsp;That&nbsp;is,&nbsp;C&nbsp;is&nbsp;taken<br>
&nbsp;&nbsp;&nbsp;&nbsp;as&nbsp;C(y,x).<br>
&nbsp;&nbsp;&nbsp;&nbsp;Similarly&nbsp;for&nbsp;meshgrid:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;arange(5)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;=&nbsp;arange(3)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X,&nbsp;Y&nbsp;=&nbsp;meshgrid(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;equivalent&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X&nbsp;=&nbsp;array([[0,&nbsp;1,&nbsp;2,&nbsp;3,&nbsp;4],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,&nbsp;1,&nbsp;2,&nbsp;3,&nbsp;4],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,&nbsp;1,&nbsp;2,&nbsp;3,&nbsp;4]])<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Y&nbsp;=&nbsp;array([[0,&nbsp;0,&nbsp;0,&nbsp;0,&nbsp;0],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,&nbsp;1,&nbsp;1,&nbsp;1,&nbsp;1],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2,&nbsp;2,&nbsp;2,&nbsp;2,&nbsp;2]])<br>
&nbsp;&nbsp;&nbsp;&nbsp;so&nbsp;if&nbsp;you&nbsp;have<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C&nbsp;=&nbsp;rand(&nbsp;len(x),&nbsp;len(y))<br>
&nbsp;&nbsp;&nbsp;&nbsp;then&nbsp;you&nbsp;need<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-pcolor">pcolor</a>(X,&nbsp;Y,&nbsp;transpose(C))<br>
&nbsp;&nbsp;&nbsp;&nbsp;or<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-pcolor">pcolor</a>(transpose(C))<br>
Dimensions<br>
&nbsp;&nbsp;&nbsp;&nbsp;Matlab&nbsp;pcolor&nbsp;always&nbsp;discards<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;last&nbsp;row&nbsp;and&nbsp;column&nbsp;of&nbsp;C,&nbsp;but&nbsp;matplotlib&nbsp;displays<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;last&nbsp;row&nbsp;and&nbsp;column&nbsp;if&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;not&nbsp;specified,&nbsp;or<br>
&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;X&nbsp;and&nbsp;Y&nbsp;have&nbsp;one&nbsp;more&nbsp;row&nbsp;and&nbsp;column&nbsp;than&nbsp;C.<br>
kwargs&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;control&nbsp;the&nbsp;PolyCollection&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clim:&nbsp;a&nbsp;length&nbsp;2&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap:&nbsp;a&nbsp;colormap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colorbar:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarSubplot-pcolor_classic"><strong>pcolor_classic</strong></a>(self, *args)</dt><dd><tt>pcolor_classic&nbsp;is&nbsp;no&nbsp;longer&nbsp;available;&nbsp;please&nbsp;use&nbsp;pcolor,<br>
which&nbsp;is&nbsp;a&nbsp;drop-in&nbsp;replacement.</tt></dd></dl>

<dl><dt><a name="PolarSubplot-pcolormesh"><strong>pcolormesh</strong></a>(self, *args, **kwargs)</dt><dd><tt>PCOLORMESH(*args,&nbsp;**kwargs)<br>
Function&nbsp;signatures<br>
&nbsp;&nbsp;PCOLORMESH(C)&nbsp;-&nbsp;make&nbsp;a&nbsp;pseudocolor&nbsp;plot&nbsp;of&nbsp;matrix&nbsp;C<br>
&nbsp;&nbsp;PCOLORMESH(X,&nbsp;Y,&nbsp;C)&nbsp;-&nbsp;a&nbsp;pseudo&nbsp;color&nbsp;plot&nbsp;of&nbsp;C&nbsp;on&nbsp;the&nbsp;matrices&nbsp;X&nbsp;and&nbsp;Y<br>
&nbsp;&nbsp;PCOLORMESH(C,&nbsp;**kwargs)&nbsp;-&nbsp;Use&nbsp;keyword&nbsp;args&nbsp;to&nbsp;control&nbsp;colormapping&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scaling;&nbsp;see&nbsp;below<br>
C&nbsp;may&nbsp;be&nbsp;a&nbsp;masked&nbsp;array,&nbsp;but&nbsp;X&nbsp;and&nbsp;Y&nbsp;may&nbsp;not.&nbsp;&nbsp;Masked&nbsp;array&nbsp;support<br>
is&nbsp;implemented&nbsp;via&nbsp;cmap&nbsp;and&nbsp;norm;&nbsp;in&nbsp;contrast,&nbsp;pcolor&nbsp;simply&nbsp;does<br>
not&nbsp;draw&nbsp;quadrilaterals&nbsp;with&nbsp;masked&nbsp;colors&nbsp;or&nbsp;vertices.<br>
Optional&nbsp;keyword&nbsp;args&nbsp;are&nbsp;shown&nbsp;with&nbsp;their&nbsp;defaults&nbsp;below&nbsp;(you&nbsp;must<br>
use&nbsp;kwargs&nbsp;for&nbsp;these):<br>
&nbsp;&nbsp;*&nbsp;cmap&nbsp;=&nbsp;cm.jet&nbsp;:&nbsp;a&nbsp;cm&nbsp;Colormap&nbsp;instance&nbsp;from&nbsp;matplotlib.cm.<br>
&nbsp;&nbsp;&nbsp;&nbsp;defaults&nbsp;to&nbsp;cm.jet<br>
&nbsp;&nbsp;*&nbsp;norm&nbsp;=&nbsp;Normalize()&nbsp;:&nbsp;matplotlib.colors.Normalize&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;used&nbsp;to&nbsp;scale&nbsp;luminance&nbsp;data&nbsp;to&nbsp;0,1.&nbsp;&nbsp;Instantiate&nbsp;it<br>
&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;clip=False&nbsp;if&nbsp;C&nbsp;is&nbsp;a&nbsp;masked&nbsp;array.<br>
&nbsp;&nbsp;*&nbsp;vmin=None&nbsp;and&nbsp;vmax=None&nbsp;:&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;are&nbsp;used&nbsp;in&nbsp;conjunction<br>
&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;norm&nbsp;to&nbsp;normalize&nbsp;luminance&nbsp;data.&nbsp;&nbsp;If&nbsp;either&nbsp;are&nbsp;None,&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;min&nbsp;and&nbsp;max&nbsp;of&nbsp;the&nbsp;color&nbsp;array&nbsp;C&nbsp;is&nbsp;used.<br>
&nbsp;&nbsp;*&nbsp;shading&nbsp;=&nbsp;'flat'&nbsp;:&nbsp;or&nbsp;'faceted'.&nbsp;&nbsp;If&nbsp;'faceted',&nbsp;a&nbsp;black&nbsp;grid&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;drawn&nbsp;around&nbsp;each&nbsp;rectangle;&nbsp;if&nbsp;'flat',&nbsp;edge&nbsp;colors&nbsp;are&nbsp;same&nbsp;as<br>
&nbsp;&nbsp;&nbsp;&nbsp;face&nbsp;colors<br>
&nbsp;&nbsp;*&nbsp;alpha=1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;blending&nbsp;value<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;matplotlib.collections.PatchCollection<br>
object<br>
See&nbsp;pcolor&nbsp;for&nbsp;an&nbsp;explantion&nbsp;of&nbsp;the&nbsp;grid&nbsp;orientation&nbsp;and&nbsp;the<br>
expansion&nbsp;of&nbsp;1-D&nbsp;X&nbsp;and/or&nbsp;Y&nbsp;to&nbsp;2-D&nbsp;arrays.<br>
kwargs&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;control&nbsp;the&nbsp;QuadMesh&nbsp;polygon&nbsp;collection&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clim:&nbsp;a&nbsp;length&nbsp;2&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap:&nbsp;a&nbsp;colormap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colorbar:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarSubplot-pick"><strong>pick</strong></a>(self, *args)</dt><dd><tt><a href="#PolarSubplot-pick">pick</a>(mouseevent)<br>
&nbsp;<br>
each&nbsp;child&nbsp;artist&nbsp;will&nbsp;fire&nbsp;a&nbsp;pick&nbsp;event&nbsp;if&nbsp;mouseevent&nbsp;is&nbsp;over<br>
the&nbsp;artist&nbsp;and&nbsp;the&nbsp;artist&nbsp;has&nbsp;picker&nbsp;set</tt></dd></dl>

<dl><dt><a name="PolarSubplot-pie"><strong>pie</strong></a>(self, x, explode<font color="#909090">=None</font>, labels<font color="#909090">=None</font>, colors<font color="#909090">=None</font>, autopct<font color="#909090">=None</font>, pctdistance<font color="#909090">=0.59999999999999998</font>, shadow<font color="#909090">=False</font>)</dt><dd><tt>PIE(x,&nbsp;explode=None,&nbsp;labels=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;colors=('b',&nbsp;'g',&nbsp;'r',&nbsp;'c',&nbsp;'m',&nbsp;'y',&nbsp;'k',&nbsp;'w'),<br>
&nbsp;&nbsp;&nbsp;&nbsp;autopct=None,&nbsp;pctdistance=0.6,&nbsp;shadow=False)<br>
&nbsp;<br>
Make&nbsp;a&nbsp;pie&nbsp;chart&nbsp;of&nbsp;array&nbsp;x.&nbsp;&nbsp;The&nbsp;fractional&nbsp;area&nbsp;of&nbsp;each&nbsp;wedge&nbsp;is<br>
given&nbsp;by&nbsp;x/sum(x).&nbsp;&nbsp;If&nbsp;sum(x)&lt;=1,&nbsp;then&nbsp;the&nbsp;values&nbsp;of&nbsp;x&nbsp;give&nbsp;the<br>
fractional&nbsp;area&nbsp;directly&nbsp;and&nbsp;the&nbsp;array&nbsp;will&nbsp;not&nbsp;be&nbsp;normalized.<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;explode,&nbsp;if&nbsp;not&nbsp;None,&nbsp;is&nbsp;a&nbsp;len(x)&nbsp;array&nbsp;which&nbsp;specifies&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;fraction&nbsp;of&nbsp;the&nbsp;radius&nbsp;to&nbsp;offset&nbsp;that&nbsp;wedge.<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;colors&nbsp;is&nbsp;a&nbsp;sequence&nbsp;of&nbsp;matplotlib&nbsp;color&nbsp;args&nbsp;that&nbsp;the&nbsp;pie&nbsp;chart<br>
&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;cycle.<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;labels,&nbsp;if&nbsp;not&nbsp;None,&nbsp;is&nbsp;a&nbsp;len(x)&nbsp;list&nbsp;of&nbsp;labels.<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;autopct,&nbsp;if&nbsp;not&nbsp;None,&nbsp;is&nbsp;a&nbsp;string&nbsp;or&nbsp;function&nbsp;used&nbsp;to&nbsp;label&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;wedges&nbsp;with&nbsp;their&nbsp;numeric&nbsp;value.&nbsp;&nbsp;The&nbsp;label&nbsp;will&nbsp;be&nbsp;placed&nbsp;inside<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;wedge.&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a&nbsp;format&nbsp;string,&nbsp;the&nbsp;label&nbsp;will&nbsp;be&nbsp;fmt%pct.<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a&nbsp;function,&nbsp;it&nbsp;will&nbsp;be&nbsp;called<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;pctdistance&nbsp;is&nbsp;the&nbsp;ratio&nbsp;between&nbsp;the&nbsp;center&nbsp;of&nbsp;each&nbsp;pie&nbsp;slice<br>
&nbsp;&nbsp;&nbsp;&nbsp;and&nbsp;the&nbsp;start&nbsp;of&nbsp;the&nbsp;text&nbsp;generated&nbsp;by&nbsp;autopct.&nbsp;&nbsp;Ignored&nbsp;if&nbsp;autopct<br>
&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;None;&nbsp;default&nbsp;is&nbsp;0.6.<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;shadow,&nbsp;if&nbsp;True,&nbsp;will&nbsp;draw&nbsp;a&nbsp;shadow&nbsp;beneath&nbsp;the&nbsp;pie.<br>
&nbsp;<br>
The&nbsp;pie&nbsp;chart&nbsp;will&nbsp;probably&nbsp;look&nbsp;best&nbsp;if&nbsp;the&nbsp;figure&nbsp;and&nbsp;axes&nbsp;are<br>
square.&nbsp;&nbsp;Eg,<br>
&nbsp;<br>
&nbsp;&nbsp;figure(figsize=(8,8))<br>
&nbsp;&nbsp;ax&nbsp;=&nbsp;axes([0.1,&nbsp;0.1,&nbsp;0.8,&nbsp;0.8])<br>
&nbsp;<br>
Return&nbsp;value:<br>
&nbsp;<br>
&nbsp;&nbsp;If&nbsp;autopct&nbsp;is&nbsp;None,&nbsp;return&nbsp;a&nbsp;list&nbsp;of&nbsp;(patches,&nbsp;texts),&nbsp;where&nbsp;patches<br>
&nbsp;&nbsp;is&nbsp;a&nbsp;sequence&nbsp;of&nbsp;matplotlib.patches.Wedge&nbsp;instances&nbsp;and&nbsp;texts&nbsp;is&nbsp;a<br>
&nbsp;&nbsp;list&nbsp;of&nbsp;the&nbsp;label&nbsp;Text&nbsp;instnaces<br>
&nbsp;<br>
&nbsp;&nbsp;If&nbsp;autopct&nbsp;is&nbsp;not&nbsp;None,&nbsp;return&nbsp;(patches,&nbsp;texts,&nbsp;autotexts),&nbsp;where<br>
&nbsp;&nbsp;patches&nbsp;and&nbsp;texts&nbsp;are&nbsp;as&nbsp;above,&nbsp;and&nbsp;autotexts&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;text<br>
&nbsp;&nbsp;instances&nbsp;for&nbsp;the&nbsp;numeric&nbsp;labels</tt></dd></dl>

<dl><dt><a name="PolarSubplot-plot"><strong>plot</strong></a>(self, *args, **kwargs)</dt><dd><tt>PLOT(*args,&nbsp;**kwargs)<br>
Plot&nbsp;lines&nbsp;and/or&nbsp;markers&nbsp;to&nbsp;the&nbsp;<a href="#Axes">Axes</a>.&nbsp;&nbsp;*args&nbsp;is&nbsp;a&nbsp;variable&nbsp;length<br>
argument,&nbsp;allowing&nbsp;for&nbsp;multiple&nbsp;x,y&nbsp;pairs&nbsp;with&nbsp;an&nbsp;optional&nbsp;format<br>
string.&nbsp;&nbsp;For&nbsp;example,&nbsp;each&nbsp;of&nbsp;the&nbsp;following&nbsp;is&nbsp;legal<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-plot">plot</a>(x,y)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;plot&nbsp;x&nbsp;and&nbsp;y&nbsp;using&nbsp;the&nbsp;default&nbsp;line&nbsp;style&nbsp;and&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-plot">plot</a>(x,y,&nbsp;'bo')&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;plot&nbsp;x&nbsp;and&nbsp;y&nbsp;using&nbsp;blue&nbsp;circle&nbsp;markers<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-plot">plot</a>(y)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;plot&nbsp;y&nbsp;using&nbsp;x&nbsp;as&nbsp;index&nbsp;array&nbsp;0..N-1<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-plot">plot</a>(y,&nbsp;'r+')&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;ditto,&nbsp;but&nbsp;with&nbsp;red&nbsp;plusses<br>
If&nbsp;x&nbsp;and/or&nbsp;y&nbsp;is&nbsp;2-Dimensional,&nbsp;then&nbsp;the&nbsp;corresponding&nbsp;columns<br>
will&nbsp;be&nbsp;plotted.<br>
An&nbsp;arbitrary&nbsp;number&nbsp;of&nbsp;x,&nbsp;y,&nbsp;fmt&nbsp;groups&nbsp;can&nbsp;be&nbsp;specified,&nbsp;as&nbsp;in<br>
a.<a href="#PolarSubplot-plot">plot</a>(x1,&nbsp;y1,&nbsp;'g^',&nbsp;x2,&nbsp;y2,&nbsp;'g-')<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;lines&nbsp;that&nbsp;were&nbsp;added.<br>
The&nbsp;following&nbsp;line&nbsp;styles&nbsp;are&nbsp;supported:<br>
&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;solid&nbsp;line<br>
&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;dashed&nbsp;line<br>
&nbsp;&nbsp;&nbsp;&nbsp;-.&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;dash-dot&nbsp;line<br>
&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;dotted&nbsp;line<br>
&nbsp;&nbsp;&nbsp;&nbsp;.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;pixels<br>
&nbsp;&nbsp;&nbsp;&nbsp;o&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;circle&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;^&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;triangle&nbsp;up&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;v&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;triangle&nbsp;down&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;triangle&nbsp;left&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;triangle&nbsp;right&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;s&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;square&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;plus&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;cross&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;D&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;diamond&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;thin&nbsp;diamond&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;tripod&nbsp;down&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;tripod&nbsp;up&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;tripod&nbsp;left&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;tripod&nbsp;right&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;hexagon&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;H&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;rotated&nbsp;hexagon&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;pentagon&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;vertical&nbsp;line&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;_&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;horizontal&nbsp;line&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;steps&nbsp;:&nbsp;use&nbsp;gnuplot&nbsp;style&nbsp;'steps'&nbsp;#&nbsp;kwarg&nbsp;only<br>
The&nbsp;following&nbsp;color&nbsp;abbreviations&nbsp;are&nbsp;supported<br>
&nbsp;&nbsp;&nbsp;&nbsp;b&nbsp;&nbsp;:&nbsp;blue<br>
&nbsp;&nbsp;&nbsp;&nbsp;g&nbsp;&nbsp;:&nbsp;green<br>
&nbsp;&nbsp;&nbsp;&nbsp;r&nbsp;&nbsp;:&nbsp;red<br>
&nbsp;&nbsp;&nbsp;&nbsp;c&nbsp;&nbsp;:&nbsp;cyan<br>
&nbsp;&nbsp;&nbsp;&nbsp;m&nbsp;&nbsp;:&nbsp;magenta<br>
&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;&nbsp;:&nbsp;yellow<br>
&nbsp;&nbsp;&nbsp;&nbsp;k&nbsp;&nbsp;:&nbsp;black<br>
&nbsp;&nbsp;&nbsp;&nbsp;w&nbsp;&nbsp;:&nbsp;white<br>
In&nbsp;addition,&nbsp;you&nbsp;can&nbsp;specify&nbsp;colors&nbsp;in&nbsp;many&nbsp;weird&nbsp;and<br>
wonderful&nbsp;ways,&nbsp;including&nbsp;full&nbsp;names&nbsp;'green',&nbsp;hex&nbsp;strings<br>
'#008000',&nbsp;RGB&nbsp;or&nbsp;RGBA&nbsp;tuples&nbsp;(0,1,0,1)&nbsp;or&nbsp;grayscale<br>
intensities&nbsp;as&nbsp;a&nbsp;string&nbsp;'0.8'.<br>
Line&nbsp;styles&nbsp;and&nbsp;colors&nbsp;are&nbsp;combined&nbsp;in&nbsp;a&nbsp;single&nbsp;format&nbsp;string,&nbsp;as&nbsp;in<br>
'bo'&nbsp;for&nbsp;blue&nbsp;circles.<br>
The&nbsp;**kwargs&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;set&nbsp;line&nbsp;properties&nbsp;(any&nbsp;property&nbsp;that&nbsp;has<br>
a&nbsp;set_*&nbsp;method).&nbsp;&nbsp;You&nbsp;can&nbsp;use&nbsp;this&nbsp;to&nbsp;set&nbsp;a&nbsp;line&nbsp;label&nbsp;(for&nbsp;auto<br>
legends),&nbsp;linewidth,&nbsp;anitialising,&nbsp;marker&nbsp;face&nbsp;color,&nbsp;etc.&nbsp;&nbsp;Here&nbsp;is&nbsp;an<br>
example:<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-plot">plot</a>([1,2,3],&nbsp;[1,2,3],&nbsp;'go-',&nbsp;label='line&nbsp;1',&nbsp;linewidth=2)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-plot">plot</a>([1,2,3],&nbsp;[1,4,9],&nbsp;'rs',&nbsp;&nbsp;label='line&nbsp;2')<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-axis">axis</a>([0,&nbsp;4,&nbsp;0,&nbsp;10])<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-legend">legend</a>()<br>
If&nbsp;you&nbsp;make&nbsp;multiple&nbsp;lines&nbsp;with&nbsp;one&nbsp;plot&nbsp;command,&nbsp;the&nbsp;kwargs&nbsp;apply<br>
to&nbsp;all&nbsp;those&nbsp;lines,&nbsp;eg<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-plot">plot</a>(x1,&nbsp;y1,&nbsp;x2,&nbsp;y2,&nbsp;antialised=False)<br>
Neither&nbsp;line&nbsp;will&nbsp;be&nbsp;antialiased.<br>
The&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
kwargs&nbsp;scalex&nbsp;and&nbsp;scaley,&nbsp;if&nbsp;defined,&nbsp;are&nbsp;passed&nbsp;on<br>
to&nbsp;autoscale_view&nbsp;to&nbsp;determine&nbsp;whether&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;axes&nbsp;are<br>
autoscaled;&nbsp;default&nbsp;True.&nbsp;&nbsp;See&nbsp;<a href="#Axes">Axes</a>.autoscale_view&nbsp;for&nbsp;more<br>
information</tt></dd></dl>

<dl><dt><a name="PolarSubplot-plot_date"><strong>plot_date</strong></a>(self, x, y, fmt<font color="#909090">='bo'</font>, tz<font color="#909090">=None</font>, xdate<font color="#909090">=True</font>, ydate<font color="#909090">=False</font>, **kwargs)</dt><dd><tt>PLOT_DATE(x,&nbsp;y,&nbsp;fmt='bo',&nbsp;tz=None,&nbsp;xdate=True,&nbsp;ydate=False,&nbsp;**kwargs)<br>
Similar&nbsp;to&nbsp;the&nbsp;<a href="#PolarSubplot-plot">plot</a>()&nbsp;command,&nbsp;except&nbsp;the&nbsp;x&nbsp;or&nbsp;y&nbsp;(or&nbsp;both)&nbsp;data<br>
is&nbsp;considered&nbsp;to&nbsp;be&nbsp;dates,&nbsp;and&nbsp;the&nbsp;axis&nbsp;is&nbsp;labeled&nbsp;accordingly.<br>
x&nbsp;or&nbsp;y&nbsp;(or&nbsp;both)&nbsp;can&nbsp;be&nbsp;a&nbsp;sequence&nbsp;of&nbsp;dates&nbsp;represented&nbsp;as<br>
float&nbsp;days&nbsp;since&nbsp;0001-01-01&nbsp;UTC.<br>
fmt&nbsp;is&nbsp;a&nbsp;plot&nbsp;format&nbsp;string.<br>
tz&nbsp;is&nbsp;the&nbsp;time&nbsp;zone&nbsp;to&nbsp;use&nbsp;in&nbsp;labelling&nbsp;dates.&nbsp;&nbsp;Defaults&nbsp;to&nbsp;rc&nbsp;value.<br>
If&nbsp;xdate&nbsp;is&nbsp;True,&nbsp;the&nbsp;x-axis&nbsp;will&nbsp;be&nbsp;labeled&nbsp;with&nbsp;dates.<br>
If&nbsp;ydate&nbsp;is&nbsp;True,&nbsp;the&nbsp;y-axis&nbsp;will&nbsp;be&nbsp;labeled&nbsp;with&nbsp;dates.<br>
Note&nbsp;if&nbsp;you&nbsp;are&nbsp;using&nbsp;custom&nbsp;date&nbsp;tickers&nbsp;and&nbsp;formatters,&nbsp;it<br>
may&nbsp;be&nbsp;necessary&nbsp;to&nbsp;set&nbsp;the&nbsp;formatters/locators&nbsp;after&nbsp;the&nbsp;call<br>
to&nbsp;plot_date&nbsp;since&nbsp;plot_date&nbsp;will&nbsp;set&nbsp;the&nbsp;default&nbsp;tick&nbsp;locator<br>
to&nbsp;AutoDateLocator&nbsp;(if&nbsp;the&nbsp;tick&nbsp;locator&nbsp;is&nbsp;not&nbsp;already&nbsp;set&nbsp;to<br>
a&nbsp;DateLocator&nbsp;instance)&nbsp;and&nbsp;the&nbsp;default&nbsp;tick&nbsp;formatter&nbsp;to<br>
AutoDateFormatter&nbsp;(if&nbsp;the&nbsp;tick&nbsp;formatter&nbsp;is&nbsp;not&nbsp;already&nbsp;set&nbsp;to<br>
a&nbsp;DateFormatter&nbsp;instance).<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
See&nbsp;matplotlib.dates&nbsp;for&nbsp;helper&nbsp;functions&nbsp;date2num,&nbsp;num2date<br>
and&nbsp;drange&nbsp;for&nbsp;help&nbsp;on&nbsp;creating&nbsp;the&nbsp;required&nbsp;floating&nbsp;point&nbsp;dates</tt></dd></dl>

<dl><dt><a name="PolarSubplot-psd"><strong>psd</strong></a>(self, x, NFFT<font color="#909090">=256</font>, Fs<font color="#909090">=2</font>, detrend<font color="#909090">=&lt;function detrend_none at 0x847d844&gt;</font>, window<font color="#909090">=&lt;function window_hanning at 0x847d72c&gt;</font>, noverlap<font color="#909090">=0</font>, **kwargs)</dt><dd><tt>PSD(x,&nbsp;NFFT=256,&nbsp;Fs=2,&nbsp;detrend=detrend_none,<br>
&nbsp;&nbsp;&nbsp;&nbsp;window=window_hanning,&nbsp;noverlap=0,&nbsp;**kwargs)<br>
The&nbsp;power&nbsp;spectral&nbsp;density&nbsp;by&nbsp;Welches&nbsp;average&nbsp;periodogram&nbsp;method.&nbsp;&nbsp;The<br>
vector&nbsp;x&nbsp;is&nbsp;divided&nbsp;into&nbsp;NFFT&nbsp;length&nbsp;segments.&nbsp;&nbsp;Each&nbsp;segment&nbsp;is<br>
detrended&nbsp;by&nbsp;function&nbsp;detrend&nbsp;and&nbsp;windowed&nbsp;by&nbsp;function&nbsp;window.<br>
noperlap&nbsp;gives&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;overlap&nbsp;between&nbsp;segments.&nbsp;&nbsp;The<br>
absolute(fft(segment))**2&nbsp;of&nbsp;each&nbsp;segment&nbsp;are&nbsp;averaged&nbsp;to&nbsp;compute&nbsp;Pxx,<br>
with&nbsp;a&nbsp;scaling&nbsp;to&nbsp;correct&nbsp;for&nbsp;power&nbsp;loss&nbsp;due&nbsp;to&nbsp;windowing.&nbsp;&nbsp;Fs&nbsp;is&nbsp;the<br>
sampling&nbsp;frequency.<br>
&nbsp;&nbsp;&nbsp;&nbsp;NFFT&nbsp;is&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;fft&nbsp;segment;&nbsp;must&nbsp;be&nbsp;a&nbsp;power&nbsp;of&nbsp;2<br>
&nbsp;&nbsp;&nbsp;&nbsp;Fs&nbsp;is&nbsp;the&nbsp;sampling&nbsp;frequency.<br>
&nbsp;&nbsp;&nbsp;&nbsp;detrend&nbsp;-&nbsp;the&nbsp;function&nbsp;applied&nbsp;to&nbsp;each&nbsp;segment&nbsp;before&nbsp;fft-ing,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;designed&nbsp;to&nbsp;remove&nbsp;the&nbsp;mean&nbsp;or&nbsp;linear&nbsp;trend.&nbsp;&nbsp;Unlike&nbsp;in&nbsp;matlab,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;where&nbsp;the&nbsp;detrend&nbsp;parameter&nbsp;is&nbsp;a&nbsp;vector,&nbsp;in&nbsp;matplotlib&nbsp;is&nbsp;it&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function.&nbsp;&nbsp;The&nbsp;mlab&nbsp;module&nbsp;defines&nbsp;detrend_none,&nbsp;detrend_mean,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;detrend_linear,&nbsp;but&nbsp;you&nbsp;can&nbsp;use&nbsp;a&nbsp;custom&nbsp;function&nbsp;as&nbsp;well.<br>
&nbsp;&nbsp;&nbsp;&nbsp;window&nbsp;-&nbsp;the&nbsp;function&nbsp;used&nbsp;to&nbsp;window&nbsp;the&nbsp;segments.&nbsp;&nbsp;window&nbsp;is&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function,&nbsp;unlike&nbsp;in&nbsp;matlab(TM)&nbsp;where&nbsp;it&nbsp;is&nbsp;a&nbsp;vector.&nbsp;&nbsp;mlab&nbsp;defines<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window_none,&nbsp;window_hanning,&nbsp;but&nbsp;you&nbsp;can&nbsp;use&nbsp;a&nbsp;custom&nbsp;function<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;as&nbsp;well.<br>
&nbsp;&nbsp;&nbsp;&nbsp;noverlap&nbsp;gives&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;overlap&nbsp;between&nbsp;segments.<br>
Returns&nbsp;the&nbsp;tuple&nbsp;Pxx,&nbsp;freqs<br>
For&nbsp;plotting,&nbsp;the&nbsp;power&nbsp;is&nbsp;plotted&nbsp;as&nbsp;10*log10(pxx))&nbsp;for&nbsp;decibels,<br>
though&nbsp;pxx&nbsp;itself&nbsp;is&nbsp;returned<br>
Refs:<br>
&nbsp;&nbsp;Bendat&nbsp;&amp;&nbsp;Piersol&nbsp;--&nbsp;Random&nbsp;Data:&nbsp;Analysis&nbsp;and&nbsp;Measurement<br>
&nbsp;&nbsp;Procedures,&nbsp;John&nbsp;Wiley&nbsp;&amp;&nbsp;Sons&nbsp;(1986)<br>
kwargs&nbsp;control&nbsp;the&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarSubplot-quiver"><strong>quiver</strong></a>(self, *args, **kw)</dt><dd><tt>Plot&nbsp;a&nbsp;2-D&nbsp;field&nbsp;of&nbsp;arrows.<br>
&nbsp;<br>
Function&nbsp;signatures:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-quiver">quiver</a>(U,&nbsp;V,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-quiver">quiver</a>(U,&nbsp;V,&nbsp;C,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-quiver">quiver</a>(X,&nbsp;Y,&nbsp;U,&nbsp;V,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-quiver">quiver</a>(X,&nbsp;Y,&nbsp;U,&nbsp;V,&nbsp;C,&nbsp;**kw)<br>
&nbsp;<br>
Arguments:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;X,&nbsp;Y&nbsp;give&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;arrow&nbsp;locations<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(default&nbsp;is&nbsp;tail&nbsp;of&nbsp;arrow;&nbsp;see&nbsp;'pivot'&nbsp;kwarg)<br>
&nbsp;&nbsp;&nbsp;&nbsp;U,&nbsp;V&nbsp;give&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;components&nbsp;of&nbsp;the&nbsp;arrow&nbsp;vectors<br>
&nbsp;&nbsp;&nbsp;&nbsp;C&nbsp;is&nbsp;an&nbsp;optional&nbsp;array&nbsp;used&nbsp;to&nbsp;map&nbsp;colors&nbsp;to&nbsp;the&nbsp;arrows<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;All&nbsp;arguments&nbsp;may&nbsp;be&nbsp;1-D&nbsp;or&nbsp;2-D&nbsp;arrays&nbsp;or&nbsp;sequences.<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;absent,&nbsp;they&nbsp;will&nbsp;be&nbsp;generated&nbsp;as&nbsp;a&nbsp;uniform&nbsp;grid.<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;U&nbsp;and&nbsp;V&nbsp;are&nbsp;2-D&nbsp;arrays&nbsp;but&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;1-D,&nbsp;and&nbsp;if<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;len(X)&nbsp;and&nbsp;len(Y)&nbsp;match&nbsp;the&nbsp;column&nbsp;and&nbsp;row&nbsp;dimensions<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;U,&nbsp;then&nbsp;X&nbsp;and&nbsp;Y&nbsp;will&nbsp;be&nbsp;expanded&nbsp;with&nbsp;meshgrid.<br>
&nbsp;<br>
Keyword&nbsp;arguments&nbsp;(default&nbsp;given&nbsp;first):<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;units&nbsp;=&nbsp;'width'&nbsp;|&nbsp;'height'&nbsp;|&nbsp;'dots'&nbsp;|&nbsp;'inches'&nbsp;|&nbsp;'x'&nbsp;|&nbsp;'y'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arrow&nbsp;units;&nbsp;the&nbsp;arrow&nbsp;dimensions&nbsp;*except&nbsp;for&nbsp;length*<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;in&nbsp;multiples&nbsp;of&nbsp;this&nbsp;unit.<br>
&nbsp;&nbsp;*&nbsp;scale&nbsp;=&nbsp;None&nbsp;|&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;units&nbsp;per&nbsp;arrow&nbsp;unit,&nbsp;e.g.&nbsp;m/s&nbsp;per&nbsp;plot&nbsp;width;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;smaller&nbsp;scale&nbsp;parameter&nbsp;makes&nbsp;the&nbsp;arrow&nbsp;longer.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;None,&nbsp;a&nbsp;simple&nbsp;autoscaling&nbsp;algorithm&nbsp;is&nbsp;used,&nbsp;based<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on&nbsp;the&nbsp;average&nbsp;vector&nbsp;length&nbsp;and&nbsp;the&nbsp;number&nbsp;of&nbsp;vectors.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Arrow&nbsp;dimensions&nbsp;and&nbsp;scales&nbsp;can&nbsp;be&nbsp;in&nbsp;any&nbsp;of&nbsp;several&nbsp;units:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'width'&nbsp;or&nbsp;'height':&nbsp;the&nbsp;width&nbsp;or&nbsp;height&nbsp;of&nbsp;the&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;'dots'&nbsp;or&nbsp;'inches':&nbsp;&nbsp;pixels&nbsp;or&nbsp;inches,&nbsp;based&nbsp;on&nbsp;the&nbsp;figure&nbsp;dpi<br>
&nbsp;&nbsp;&nbsp;&nbsp;'x'&nbsp;or&nbsp;'y':&nbsp;X&nbsp;or&nbsp;Y&nbsp;data&nbsp;units<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;all&nbsp;cases&nbsp;the&nbsp;arrow&nbsp;aspect&nbsp;ratio&nbsp;is&nbsp;1,&nbsp;so&nbsp;that&nbsp;if&nbsp;U==V&nbsp;the&nbsp;angle<br>
&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;arrow&nbsp;on&nbsp;the&nbsp;plot&nbsp;is&nbsp;45&nbsp;degrees&nbsp;CCW&nbsp;from&nbsp;the&nbsp;X-axis.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;arrows&nbsp;scale&nbsp;differently&nbsp;depending&nbsp;on&nbsp;the&nbsp;units,&nbsp;however.<br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;'x'&nbsp;or&nbsp;'y',&nbsp;the&nbsp;arrows&nbsp;get&nbsp;larger&nbsp;as&nbsp;one&nbsp;zooms&nbsp;in;&nbsp;for&nbsp;other<br>
&nbsp;&nbsp;&nbsp;&nbsp;units,&nbsp;the&nbsp;arrow&nbsp;size&nbsp;is&nbsp;independent&nbsp;of&nbsp;the&nbsp;zoom&nbsp;state.&nbsp;&nbsp;For<br>
&nbsp;&nbsp;&nbsp;&nbsp;'width&nbsp;or&nbsp;'height',&nbsp;the&nbsp;arrow&nbsp;size&nbsp;increases&nbsp;with&nbsp;the&nbsp;width&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;height&nbsp;of&nbsp;the&nbsp;axes,&nbsp;respectively,&nbsp;when&nbsp;the&nbsp;the&nbsp;window&nbsp;is&nbsp;resized;<br>
&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;'dots'&nbsp;or&nbsp;'inches',&nbsp;resizing&nbsp;does&nbsp;not&nbsp;change&nbsp;the&nbsp;arrows.<br>
&nbsp;<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;width&nbsp;=&nbsp;?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shaft&nbsp;width&nbsp;in&nbsp;arrow&nbsp;units;&nbsp;default&nbsp;depends&nbsp;on<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;choice&nbsp;of&nbsp;units,&nbsp;above,&nbsp;and&nbsp;number&nbsp;of&nbsp;vectors;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;typical&nbsp;starting&nbsp;value&nbsp;is&nbsp;about<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.005&nbsp;times&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;plot.<br>
&nbsp;&nbsp;*&nbsp;headwidth&nbsp;=&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;head&nbsp;width&nbsp;as&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width<br>
&nbsp;&nbsp;*&nbsp;headlength&nbsp;=&nbsp;5&nbsp;&nbsp;&nbsp;head&nbsp;length&nbsp;as&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width<br>
&nbsp;&nbsp;*&nbsp;headaxislength&nbsp;=&nbsp;4.5&nbsp;&nbsp;head&nbsp;length&nbsp;at&nbsp;shaft&nbsp;intersection<br>
&nbsp;&nbsp;*&nbsp;minshaft&nbsp;=&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length&nbsp;below&nbsp;which&nbsp;arrow&nbsp;scales,&nbsp;in&nbsp;units<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;head&nbsp;length.&nbsp;Do&nbsp;not&nbsp;set&nbsp;this&nbsp;to&nbsp;less<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;than&nbsp;1,&nbsp;or&nbsp;small&nbsp;arrows&nbsp;will&nbsp;look&nbsp;terrible!<br>
&nbsp;&nbsp;*&nbsp;minlength&nbsp;=&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;minimum&nbsp;length&nbsp;as&nbsp;a&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;an&nbsp;arrow&nbsp;length&nbsp;is&nbsp;less&nbsp;than&nbsp;this,&nbsp;plot&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dot&nbsp;(hexagon)&nbsp;of&nbsp;this&nbsp;diameter&nbsp;instead.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;defaults&nbsp;give&nbsp;a&nbsp;slightly&nbsp;swept-back&nbsp;arrow;&nbsp;to&nbsp;make&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;head&nbsp;a&nbsp;triangle,&nbsp;make&nbsp;headaxislength&nbsp;the&nbsp;same&nbsp;as&nbsp;headlength.<br>
&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;make&nbsp;the&nbsp;arrow&nbsp;more&nbsp;pointed,&nbsp;reduce&nbsp;headwidth&nbsp;or&nbsp;increase<br>
&nbsp;&nbsp;&nbsp;&nbsp;headlength&nbsp;and&nbsp;headaxislength.<br>
&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;make&nbsp;the&nbsp;head&nbsp;smaller&nbsp;relative&nbsp;to&nbsp;the&nbsp;shaft,&nbsp;scale&nbsp;down<br>
&nbsp;&nbsp;&nbsp;&nbsp;all&nbsp;the&nbsp;head*&nbsp;parameters.<br>
&nbsp;&nbsp;&nbsp;&nbsp;You&nbsp;will&nbsp;probably&nbsp;do&nbsp;best&nbsp;to&nbsp;leave&nbsp;minshaft&nbsp;alone.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;pivot&nbsp;=&nbsp;'tail'&nbsp;|&nbsp;'middle'&nbsp;|&nbsp;'tip'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;part&nbsp;of&nbsp;the&nbsp;arrow&nbsp;that&nbsp;is&nbsp;at&nbsp;the&nbsp;grid&nbsp;point;&nbsp;the&nbsp;arrow<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotates&nbsp;about&nbsp;this&nbsp;point,&nbsp;hence&nbsp;the&nbsp;name&nbsp;'pivot'.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;color&nbsp;=&nbsp;'k'&nbsp;|&nbsp;any&nbsp;matplotlib&nbsp;color&nbsp;spec&nbsp;or&nbsp;sequence&nbsp;of&nbsp;color&nbsp;specs.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This&nbsp;is&nbsp;a&nbsp;synonym&nbsp;for&nbsp;the&nbsp;PolyCollection&nbsp;facecolor&nbsp;kwarg.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;C&nbsp;has&nbsp;been&nbsp;set,&nbsp;'color'&nbsp;has&nbsp;no&nbsp;effect.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;*&nbsp;All&nbsp;PolyCollection&nbsp;kwargs&nbsp;are&nbsp;valid,&nbsp;in&nbsp;the&nbsp;sense&nbsp;that&nbsp;they<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;be&nbsp;passed&nbsp;on&nbsp;to&nbsp;the&nbsp;PolyCollection&nbsp;constructor.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;particular,&nbsp;one&nbsp;might&nbsp;want&nbsp;to&nbsp;use,&nbsp;for&nbsp;example:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidths&nbsp;=&nbsp;(1,),&nbsp;edgecolors&nbsp;=&nbsp;('g',)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;make&nbsp;the&nbsp;arrows&nbsp;have&nbsp;green&nbsp;outlines&nbsp;of&nbsp;unit&nbsp;width.</tt></dd></dl>

<dl><dt><a name="PolarSubplot-quiver2"><strong>quiver2</strong></a>(self, *args, **kw)</dt><dd><tt>Plot&nbsp;a&nbsp;2-D&nbsp;field&nbsp;of&nbsp;arrows.<br>
&nbsp;<br>
Function&nbsp;signatures:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-quiver">quiver</a>(U,&nbsp;V,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-quiver">quiver</a>(U,&nbsp;V,&nbsp;C,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-quiver">quiver</a>(X,&nbsp;Y,&nbsp;U,&nbsp;V,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-quiver">quiver</a>(X,&nbsp;Y,&nbsp;U,&nbsp;V,&nbsp;C,&nbsp;**kw)<br>
&nbsp;<br>
Arguments:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;X,&nbsp;Y&nbsp;give&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;arrow&nbsp;locations<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(default&nbsp;is&nbsp;tail&nbsp;of&nbsp;arrow;&nbsp;see&nbsp;'pivot'&nbsp;kwarg)<br>
&nbsp;&nbsp;&nbsp;&nbsp;U,&nbsp;V&nbsp;give&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;components&nbsp;of&nbsp;the&nbsp;arrow&nbsp;vectors<br>
&nbsp;&nbsp;&nbsp;&nbsp;C&nbsp;is&nbsp;an&nbsp;optional&nbsp;array&nbsp;used&nbsp;to&nbsp;map&nbsp;colors&nbsp;to&nbsp;the&nbsp;arrows<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;All&nbsp;arguments&nbsp;may&nbsp;be&nbsp;1-D&nbsp;or&nbsp;2-D&nbsp;arrays&nbsp;or&nbsp;sequences.<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;absent,&nbsp;they&nbsp;will&nbsp;be&nbsp;generated&nbsp;as&nbsp;a&nbsp;uniform&nbsp;grid.<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;U&nbsp;and&nbsp;V&nbsp;are&nbsp;2-D&nbsp;arrays&nbsp;but&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;1-D,&nbsp;and&nbsp;if<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;len(X)&nbsp;and&nbsp;len(Y)&nbsp;match&nbsp;the&nbsp;column&nbsp;and&nbsp;row&nbsp;dimensions<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;U,&nbsp;then&nbsp;X&nbsp;and&nbsp;Y&nbsp;will&nbsp;be&nbsp;expanded&nbsp;with&nbsp;meshgrid.<br>
&nbsp;<br>
Keyword&nbsp;arguments&nbsp;(default&nbsp;given&nbsp;first):<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;units&nbsp;=&nbsp;'width'&nbsp;|&nbsp;'height'&nbsp;|&nbsp;'dots'&nbsp;|&nbsp;'inches'&nbsp;|&nbsp;'x'&nbsp;|&nbsp;'y'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arrow&nbsp;units;&nbsp;the&nbsp;arrow&nbsp;dimensions&nbsp;*except&nbsp;for&nbsp;length*<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;in&nbsp;multiples&nbsp;of&nbsp;this&nbsp;unit.<br>
&nbsp;&nbsp;*&nbsp;scale&nbsp;=&nbsp;None&nbsp;|&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;units&nbsp;per&nbsp;arrow&nbsp;unit,&nbsp;e.g.&nbsp;m/s&nbsp;per&nbsp;plot&nbsp;width;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;smaller&nbsp;scale&nbsp;parameter&nbsp;makes&nbsp;the&nbsp;arrow&nbsp;longer.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;None,&nbsp;a&nbsp;simple&nbsp;autoscaling&nbsp;algorithm&nbsp;is&nbsp;used,&nbsp;based<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on&nbsp;the&nbsp;average&nbsp;vector&nbsp;length&nbsp;and&nbsp;the&nbsp;number&nbsp;of&nbsp;vectors.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Arrow&nbsp;dimensions&nbsp;and&nbsp;scales&nbsp;can&nbsp;be&nbsp;in&nbsp;any&nbsp;of&nbsp;several&nbsp;units:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'width'&nbsp;or&nbsp;'height':&nbsp;the&nbsp;width&nbsp;or&nbsp;height&nbsp;of&nbsp;the&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;'dots'&nbsp;or&nbsp;'inches':&nbsp;&nbsp;pixels&nbsp;or&nbsp;inches,&nbsp;based&nbsp;on&nbsp;the&nbsp;figure&nbsp;dpi<br>
&nbsp;&nbsp;&nbsp;&nbsp;'x'&nbsp;or&nbsp;'y':&nbsp;X&nbsp;or&nbsp;Y&nbsp;data&nbsp;units<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;all&nbsp;cases&nbsp;the&nbsp;arrow&nbsp;aspect&nbsp;ratio&nbsp;is&nbsp;1,&nbsp;so&nbsp;that&nbsp;if&nbsp;U==V&nbsp;the&nbsp;angle<br>
&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;arrow&nbsp;on&nbsp;the&nbsp;plot&nbsp;is&nbsp;45&nbsp;degrees&nbsp;CCW&nbsp;from&nbsp;the&nbsp;X-axis.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;arrows&nbsp;scale&nbsp;differently&nbsp;depending&nbsp;on&nbsp;the&nbsp;units,&nbsp;however.<br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;'x'&nbsp;or&nbsp;'y',&nbsp;the&nbsp;arrows&nbsp;get&nbsp;larger&nbsp;as&nbsp;one&nbsp;zooms&nbsp;in;&nbsp;for&nbsp;other<br>
&nbsp;&nbsp;&nbsp;&nbsp;units,&nbsp;the&nbsp;arrow&nbsp;size&nbsp;is&nbsp;independent&nbsp;of&nbsp;the&nbsp;zoom&nbsp;state.&nbsp;&nbsp;For<br>
&nbsp;&nbsp;&nbsp;&nbsp;'width&nbsp;or&nbsp;'height',&nbsp;the&nbsp;arrow&nbsp;size&nbsp;increases&nbsp;with&nbsp;the&nbsp;width&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;height&nbsp;of&nbsp;the&nbsp;axes,&nbsp;respectively,&nbsp;when&nbsp;the&nbsp;the&nbsp;window&nbsp;is&nbsp;resized;<br>
&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;'dots'&nbsp;or&nbsp;'inches',&nbsp;resizing&nbsp;does&nbsp;not&nbsp;change&nbsp;the&nbsp;arrows.<br>
&nbsp;<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;width&nbsp;=&nbsp;?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shaft&nbsp;width&nbsp;in&nbsp;arrow&nbsp;units;&nbsp;default&nbsp;depends&nbsp;on<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;choice&nbsp;of&nbsp;units,&nbsp;above,&nbsp;and&nbsp;number&nbsp;of&nbsp;vectors;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;typical&nbsp;starting&nbsp;value&nbsp;is&nbsp;about<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.005&nbsp;times&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;plot.<br>
&nbsp;&nbsp;*&nbsp;headwidth&nbsp;=&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;head&nbsp;width&nbsp;as&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width<br>
&nbsp;&nbsp;*&nbsp;headlength&nbsp;=&nbsp;5&nbsp;&nbsp;&nbsp;head&nbsp;length&nbsp;as&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width<br>
&nbsp;&nbsp;*&nbsp;headaxislength&nbsp;=&nbsp;4.5&nbsp;&nbsp;head&nbsp;length&nbsp;at&nbsp;shaft&nbsp;intersection<br>
&nbsp;&nbsp;*&nbsp;minshaft&nbsp;=&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length&nbsp;below&nbsp;which&nbsp;arrow&nbsp;scales,&nbsp;in&nbsp;units<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;head&nbsp;length.&nbsp;Do&nbsp;not&nbsp;set&nbsp;this&nbsp;to&nbsp;less<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;than&nbsp;1,&nbsp;or&nbsp;small&nbsp;arrows&nbsp;will&nbsp;look&nbsp;terrible!<br>
&nbsp;&nbsp;*&nbsp;minlength&nbsp;=&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;minimum&nbsp;length&nbsp;as&nbsp;a&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;an&nbsp;arrow&nbsp;length&nbsp;is&nbsp;less&nbsp;than&nbsp;this,&nbsp;plot&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dot&nbsp;(hexagon)&nbsp;of&nbsp;this&nbsp;diameter&nbsp;instead.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;defaults&nbsp;give&nbsp;a&nbsp;slightly&nbsp;swept-back&nbsp;arrow;&nbsp;to&nbsp;make&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;head&nbsp;a&nbsp;triangle,&nbsp;make&nbsp;headaxislength&nbsp;the&nbsp;same&nbsp;as&nbsp;headlength.<br>
&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;make&nbsp;the&nbsp;arrow&nbsp;more&nbsp;pointed,&nbsp;reduce&nbsp;headwidth&nbsp;or&nbsp;increase<br>
&nbsp;&nbsp;&nbsp;&nbsp;headlength&nbsp;and&nbsp;headaxislength.<br>
&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;make&nbsp;the&nbsp;head&nbsp;smaller&nbsp;relative&nbsp;to&nbsp;the&nbsp;shaft,&nbsp;scale&nbsp;down<br>
&nbsp;&nbsp;&nbsp;&nbsp;all&nbsp;the&nbsp;head*&nbsp;parameters.<br>
&nbsp;&nbsp;&nbsp;&nbsp;You&nbsp;will&nbsp;probably&nbsp;do&nbsp;best&nbsp;to&nbsp;leave&nbsp;minshaft&nbsp;alone.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;pivot&nbsp;=&nbsp;'tail'&nbsp;|&nbsp;'middle'&nbsp;|&nbsp;'tip'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;part&nbsp;of&nbsp;the&nbsp;arrow&nbsp;that&nbsp;is&nbsp;at&nbsp;the&nbsp;grid&nbsp;point;&nbsp;the&nbsp;arrow<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotates&nbsp;about&nbsp;this&nbsp;point,&nbsp;hence&nbsp;the&nbsp;name&nbsp;'pivot'.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;color&nbsp;=&nbsp;'k'&nbsp;|&nbsp;any&nbsp;matplotlib&nbsp;color&nbsp;spec&nbsp;or&nbsp;sequence&nbsp;of&nbsp;color&nbsp;specs.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This&nbsp;is&nbsp;a&nbsp;synonym&nbsp;for&nbsp;the&nbsp;PolyCollection&nbsp;facecolor&nbsp;kwarg.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;C&nbsp;has&nbsp;been&nbsp;set,&nbsp;'color'&nbsp;has&nbsp;no&nbsp;effect.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;*&nbsp;All&nbsp;PolyCollection&nbsp;kwargs&nbsp;are&nbsp;valid,&nbsp;in&nbsp;the&nbsp;sense&nbsp;that&nbsp;they<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;be&nbsp;passed&nbsp;on&nbsp;to&nbsp;the&nbsp;PolyCollection&nbsp;constructor.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;particular,&nbsp;one&nbsp;might&nbsp;want&nbsp;to&nbsp;use,&nbsp;for&nbsp;example:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidths&nbsp;=&nbsp;(1,),&nbsp;edgecolors&nbsp;=&nbsp;('g',)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;make&nbsp;the&nbsp;arrows&nbsp;have&nbsp;green&nbsp;outlines&nbsp;of&nbsp;unit&nbsp;width.</tt></dd></dl>

<dl><dt><a name="PolarSubplot-quiver_classic"><strong>quiver_classic</strong></a>(self, U, V, *args, **kwargs)</dt><dd><tt>QUIVER(&nbsp;X,&nbsp;Y,&nbsp;U,&nbsp;V&nbsp;)<br>
QUIVER(&nbsp;U,&nbsp;V&nbsp;)<br>
QUIVER(&nbsp;X,&nbsp;Y,&nbsp;U,&nbsp;V,&nbsp;S)<br>
QUIVER(&nbsp;U,&nbsp;V,&nbsp;S&nbsp;)<br>
QUIVER(&nbsp;...,&nbsp;color=None,&nbsp;width=1.0,&nbsp;cmap=None,&nbsp;norm=None&nbsp;)<br>
&nbsp;<br>
Make&nbsp;a&nbsp;vector&nbsp;plot&nbsp;(U,&nbsp;V)&nbsp;with&nbsp;arrows&nbsp;on&nbsp;a&nbsp;grid&nbsp;(X,&nbsp;Y)<br>
&nbsp;<br>
If&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;not&nbsp;specified,&nbsp;U&nbsp;and&nbsp;V&nbsp;must&nbsp;be&nbsp;2D&nbsp;arrays.&nbsp;&nbsp;Equally&nbsp;spaced<br>
X&nbsp;and&nbsp;Y&nbsp;grids&nbsp;are&nbsp;then&nbsp;generated&nbsp;using&nbsp;the&nbsp;meshgrid&nbsp;command.<br>
&nbsp;<br>
color&nbsp;can&nbsp;be&nbsp;a&nbsp;color&nbsp;value&nbsp;or&nbsp;an&nbsp;array&nbsp;of&nbsp;colors,&nbsp;so&nbsp;that&nbsp;the&nbsp;arrows&nbsp;can&nbsp;be<br>
colored&nbsp;according&nbsp;to&nbsp;another&nbsp;dataset.&nbsp;&nbsp;If&nbsp;cmap&nbsp;is&nbsp;specified&nbsp;and&nbsp;color&nbsp;is&nbsp;'length',<br>
the&nbsp;colormap&nbsp;is&nbsp;used&nbsp;to&nbsp;give&nbsp;a&nbsp;color&nbsp;according&nbsp;to&nbsp;the&nbsp;vector's&nbsp;length.<br>
&nbsp;<br>
If&nbsp;color&nbsp;is&nbsp;a&nbsp;scalar&nbsp;field,&nbsp;the&nbsp;colormap&nbsp;is&nbsp;used&nbsp;to&nbsp;map&nbsp;the&nbsp;scalar&nbsp;to&nbsp;a&nbsp;color<br>
If&nbsp;a&nbsp;colormap&nbsp;is&nbsp;specified&nbsp;and&nbsp;color&nbsp;is&nbsp;an&nbsp;array&nbsp;of&nbsp;color&nbsp;triplets,&nbsp;then&nbsp;the<br>
colormap&nbsp;is&nbsp;ignored<br>
&nbsp;<br>
width&nbsp;is&nbsp;a&nbsp;scalar&nbsp;that&nbsp;controls&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;arrows<br>
&nbsp;<br>
if&nbsp;S&nbsp;is&nbsp;specified&nbsp;it&nbsp;is&nbsp;used&nbsp;to&nbsp;scale&nbsp;the&nbsp;vectors.&nbsp;Use&nbsp;S=0&nbsp;to&nbsp;disable&nbsp;automatic<br>
scaling.<br>
If&nbsp;S!=0,&nbsp;vectors&nbsp;are&nbsp;scaled&nbsp;to&nbsp;fit&nbsp;within&nbsp;the&nbsp;grid&nbsp;and&nbsp;then&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;S.</tt></dd></dl>

<dl><dt><a name="PolarSubplot-quiverkey"><strong>quiverkey</strong></a>(self, *args, **kw)</dt><dd><tt>Add&nbsp;a&nbsp;key&nbsp;to&nbsp;a&nbsp;quiver&nbsp;plot.<br>
&nbsp;<br>
Function&nbsp;signature:<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-quiverkey">quiverkey</a>(Q,&nbsp;X,&nbsp;Y,&nbsp;U,&nbsp;label,&nbsp;**kw)<br>
&nbsp;<br>
Arguments:<br>
&nbsp;&nbsp;&nbsp;&nbsp;Q&nbsp;is&nbsp;the&nbsp;Quiver&nbsp;instance&nbsp;returned&nbsp;by&nbsp;a&nbsp;call&nbsp;to&nbsp;quiver.<br>
&nbsp;&nbsp;&nbsp;&nbsp;X,&nbsp;Y&nbsp;give&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;key;&nbsp;additional&nbsp;explanation&nbsp;follows.<br>
&nbsp;&nbsp;&nbsp;&nbsp;U&nbsp;is&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;key<br>
&nbsp;&nbsp;&nbsp;&nbsp;label&nbsp;is&nbsp;a&nbsp;string&nbsp;with&nbsp;the&nbsp;length&nbsp;and&nbsp;units&nbsp;of&nbsp;the&nbsp;key<br>
&nbsp;<br>
Keyword&nbsp;arguments&nbsp;(default&nbsp;given&nbsp;first):<br>
&nbsp;&nbsp;*&nbsp;coordinates&nbsp;=&nbsp;'axes'&nbsp;|&nbsp;'figure'&nbsp;|&nbsp;'data'&nbsp;|&nbsp;'inches'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Coordinate&nbsp;system&nbsp;and&nbsp;units&nbsp;for&nbsp;X,&nbsp;Y:&nbsp;'axes'&nbsp;and&nbsp;'figure'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;normalized&nbsp;coordinate&nbsp;systems&nbsp;with&nbsp;0,0&nbsp;in&nbsp;the&nbsp;lower<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left&nbsp;and&nbsp;1,1&nbsp;in&nbsp;the&nbsp;upper&nbsp;right;&nbsp;'data'&nbsp;are&nbsp;the&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;coordinates&nbsp;(used&nbsp;for&nbsp;the&nbsp;locations&nbsp;of&nbsp;the&nbsp;vectors<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in&nbsp;the&nbsp;quiver&nbsp;plot&nbsp;itself);&nbsp;'inches'&nbsp;is&nbsp;position&nbsp;in&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure&nbsp;in&nbsp;inches,&nbsp;with&nbsp;0,0&nbsp;at&nbsp;the&nbsp;lower&nbsp;left&nbsp;corner.<br>
&nbsp;&nbsp;*&nbsp;color&nbsp;overrides&nbsp;face&nbsp;and&nbsp;edge&nbsp;colors&nbsp;from&nbsp;Q.<br>
&nbsp;&nbsp;*&nbsp;labelpos&nbsp;=&nbsp;'N'&nbsp;|&nbsp;'S'&nbsp;|&nbsp;'E'&nbsp;|&nbsp;'W'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Position&nbsp;the&nbsp;label&nbsp;above,&nbsp;below,&nbsp;to&nbsp;the&nbsp;right,&nbsp;to&nbsp;the&nbsp;left<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;arrow,&nbsp;respectively.<br>
&nbsp;&nbsp;*&nbsp;labelsep&nbsp;=&nbsp;0.1&nbsp;inches&nbsp;distance&nbsp;between&nbsp;the&nbsp;arrow&nbsp;and&nbsp;the&nbsp;label<br>
&nbsp;&nbsp;*&nbsp;labelcolor&nbsp;(defaults&nbsp;to&nbsp;default&nbsp;Text&nbsp;color)<br>
&nbsp;&nbsp;*&nbsp;fontproperties&nbsp;is&nbsp;a&nbsp;dictionary&nbsp;with&nbsp;keyword&nbsp;arguments&nbsp;accepted<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;by&nbsp;the&nbsp;FontProperties&nbsp;initializer:&nbsp;family,&nbsp;style,&nbsp;variant,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size,&nbsp;weight<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Any&nbsp;additional&nbsp;keyword&nbsp;arguments&nbsp;are&nbsp;used&nbsp;to&nbsp;override&nbsp;vector<br>
&nbsp;&nbsp;&nbsp;&nbsp;properties&nbsp;taken&nbsp;from&nbsp;Q.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;positioning&nbsp;of&nbsp;the&nbsp;key&nbsp;depends&nbsp;on&nbsp;X,&nbsp;Y,&nbsp;coordinates,&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;labelpos.&nbsp;&nbsp;If&nbsp;labelpos&nbsp;is&nbsp;'N'&nbsp;or&nbsp;'S',&nbsp;X,Y&nbsp;give&nbsp;the&nbsp;position<br>
&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;middle&nbsp;of&nbsp;the&nbsp;key&nbsp;arrow.&nbsp;&nbsp;If&nbsp;labelpos&nbsp;is&nbsp;'E',&nbsp;X,Y<br>
&nbsp;&nbsp;&nbsp;&nbsp;positions&nbsp;the&nbsp;head,&nbsp;and&nbsp;if&nbsp;labelpos&nbsp;is&nbsp;'W',&nbsp;X,Y&nbsp;positions&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;tail;&nbsp;in&nbsp;either&nbsp;of&nbsp;these&nbsp;two&nbsp;cases,&nbsp;X,Y&nbsp;is&nbsp;somewhere&nbsp;in&nbsp;the&nbsp;middle<br>
&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;arrow+label&nbsp;key&nbsp;object.</tt></dd></dl>

<dl><dt><a name="PolarSubplot-redraw_in_frame"><strong>redraw_in_frame</strong></a>(self)</dt><dd><tt>This&nbsp;method&nbsp;can&nbsp;only&nbsp;be&nbsp;used&nbsp;after&nbsp;an&nbsp;initial&nbsp;draw&nbsp;which<br>
caches&nbsp;the&nbsp;renderer.&nbsp;&nbsp;It&nbsp;is&nbsp;used&nbsp;to&nbsp;efficiently&nbsp;update&nbsp;<a href="#Axes">Axes</a><br>
data&nbsp;(axis&nbsp;ticks,&nbsp;labels,&nbsp;etc&nbsp;are&nbsp;not&nbsp;updated)</tt></dd></dl>

<dl><dt><a name="PolarSubplot-relim"><strong>relim</strong></a>(self)</dt><dd><tt>recompute&nbsp;the&nbsp;datalimits&nbsp;based&nbsp;on&nbsp;current&nbsp;artists</tt></dd></dl>

<dl><dt><a name="PolarSubplot-scatter"><strong>scatter</strong></a>(self, x, y, s<font color="#909090">=20</font>, c<font color="#909090">='b'</font>, marker<font color="#909090">='o'</font>, cmap<font color="#909090">=None</font>, norm<font color="#909090">=None</font>, vmin<font color="#909090">=None</font>, vmax<font color="#909090">=None</font>, alpha<font color="#909090">=1.0</font>, linewidths<font color="#909090">=None</font>, faceted<font color="#909090">=True</font>, verts<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>SCATTER(x,&nbsp;y,&nbsp;s=20,&nbsp;c='b',&nbsp;marker='o',&nbsp;cmap=None,&nbsp;norm=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;vmin=None,&nbsp;vmax=None,&nbsp;alpha=1.0,&nbsp;linewidths=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;faceted=True,&nbsp;**kwargs)<br>
Supported&nbsp;function&nbsp;signatures:<br>
&nbsp;&nbsp;&nbsp;&nbsp;SCATTER(x,&nbsp;y,&nbsp;**kwargs)<br>
&nbsp;&nbsp;&nbsp;&nbsp;SCATTER(x,&nbsp;y,&nbsp;s,&nbsp;**kwargs)<br>
&nbsp;&nbsp;&nbsp;&nbsp;SCATTER(x,&nbsp;y,&nbsp;s,&nbsp;c,&nbsp;**kwargs)<br>
Make&nbsp;a&nbsp;scatter&nbsp;plot&nbsp;of&nbsp;x&nbsp;versus&nbsp;y,&nbsp;where&nbsp;x,&nbsp;y&nbsp;are&nbsp;1-D&nbsp;sequences<br>
of&nbsp;the&nbsp;same&nbsp;length,&nbsp;N.<br>
Arguments&nbsp;s&nbsp;and&nbsp;c&nbsp;can&nbsp;also&nbsp;be&nbsp;given&nbsp;as&nbsp;kwargs;&nbsp;this&nbsp;is&nbsp;encouraged<br>
for&nbsp;readability.<br>
&nbsp;&nbsp;&nbsp;&nbsp;s&nbsp;is&nbsp;a&nbsp;size&nbsp;in&nbsp;points^2.&nbsp;&nbsp;It&nbsp;is&nbsp;a&nbsp;scalar<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;or&nbsp;an&nbsp;array&nbsp;of&nbsp;the&nbsp;same&nbsp;length&nbsp;as&nbsp;x&nbsp;and&nbsp;y.<br>
&nbsp;&nbsp;&nbsp;&nbsp;c&nbsp;is&nbsp;a&nbsp;color&nbsp;and&nbsp;can&nbsp;be&nbsp;a&nbsp;single&nbsp;color&nbsp;format&nbsp;string,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;or&nbsp;a&nbsp;sequence&nbsp;of&nbsp;color&nbsp;specifications&nbsp;of&nbsp;length&nbsp;N,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;or&nbsp;a&nbsp;sequence&nbsp;of&nbsp;N&nbsp;numbers&nbsp;to&nbsp;be&nbsp;mapped&nbsp;to&nbsp;colors<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;the&nbsp;cmap&nbsp;and&nbsp;norm&nbsp;specified&nbsp;via&nbsp;kwargs&nbsp;(see&nbsp;below).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Note&nbsp;that&nbsp;c&nbsp;should&nbsp;not&nbsp;be&nbsp;a&nbsp;single&nbsp;numeric&nbsp;RGB&nbsp;or&nbsp;RGBA<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sequence&nbsp;because&nbsp;that&nbsp;is&nbsp;indistinguishable&nbsp;from&nbsp;an&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;values&nbsp;to&nbsp;be&nbsp;colormapped.&nbsp;c&nbsp;can&nbsp;be&nbsp;a&nbsp;2-D&nbsp;array&nbsp;in&nbsp;which<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;rows&nbsp;are&nbsp;RGB&nbsp;or&nbsp;RGBA,&nbsp;however.<br>
The&nbsp;marker&nbsp;can&nbsp;be&nbsp;one&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;'s'&nbsp;:&nbsp;square<br>
&nbsp;&nbsp;&nbsp;&nbsp;'o'&nbsp;:&nbsp;circle<br>
&nbsp;&nbsp;&nbsp;&nbsp;'^'&nbsp;:&nbsp;triangle&nbsp;up<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&gt;'&nbsp;:&nbsp;triangle&nbsp;right<br>
&nbsp;&nbsp;&nbsp;&nbsp;'v'&nbsp;:&nbsp;triangle&nbsp;down<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&lt;'&nbsp;:&nbsp;triangle&nbsp;left<br>
&nbsp;&nbsp;&nbsp;&nbsp;'d'&nbsp;:&nbsp;diamond<br>
&nbsp;&nbsp;&nbsp;&nbsp;'p'&nbsp;:&nbsp;pentagram<br>
&nbsp;&nbsp;&nbsp;&nbsp;'h'&nbsp;:&nbsp;hexagon<br>
&nbsp;&nbsp;&nbsp;&nbsp;'8'&nbsp;:&nbsp;octagon<br>
If&nbsp;marker&nbsp;is&nbsp;None&nbsp;and&nbsp;verts&nbsp;is&nbsp;not&nbsp;None,&nbsp;verts&nbsp;is&nbsp;a&nbsp;sequence<br>
of&nbsp;(x,y)&nbsp;vertices&nbsp;for&nbsp;a&nbsp;custom&nbsp;scatter&nbsp;symbol.<br>
s&nbsp;is&nbsp;a&nbsp;size&nbsp;argument&nbsp;in&nbsp;points&nbsp;squared.<br>
Any&nbsp;or&nbsp;all&nbsp;of&nbsp;x,&nbsp;y,&nbsp;s,&nbsp;and&nbsp;c&nbsp;may&nbsp;be&nbsp;masked&nbsp;arrays,&nbsp;in&nbsp;which<br>
case&nbsp;all&nbsp;masks&nbsp;will&nbsp;be&nbsp;combined&nbsp;and&nbsp;only&nbsp;unmasked&nbsp;points<br>
will&nbsp;be&nbsp;plotted.<br>
Other&nbsp;keyword&nbsp;args;&nbsp;the&nbsp;color&nbsp;mapping&nbsp;and&nbsp;normalization&nbsp;arguments&nbsp;will<br>
on&nbsp;be&nbsp;used&nbsp;if&nbsp;c&nbsp;is&nbsp;an&nbsp;array&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;*&nbsp;cmap&nbsp;=&nbsp;cm.jet&nbsp;:&nbsp;a&nbsp;colors.Colormap&nbsp;instance&nbsp;from&nbsp;matplotlib.cm.<br>
&nbsp;&nbsp;&nbsp;&nbsp;defaults&nbsp;to&nbsp;rc&nbsp;image.cmap<br>
&nbsp;&nbsp;*&nbsp;norm&nbsp;=&nbsp;Normalize()&nbsp;:&nbsp;matplotlib.colors.Normalize&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;used&nbsp;to&nbsp;scale&nbsp;luminance&nbsp;data&nbsp;to&nbsp;0,1.<br>
&nbsp;&nbsp;*&nbsp;vmin=None&nbsp;and&nbsp;vmax=None&nbsp;:&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;are&nbsp;used&nbsp;in&nbsp;conjunction<br>
&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;norm&nbsp;to&nbsp;normalize&nbsp;luminance&nbsp;data.&nbsp;&nbsp;If&nbsp;either&nbsp;are&nbsp;None,&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;min&nbsp;and&nbsp;max&nbsp;of&nbsp;the&nbsp;color&nbsp;array&nbsp;C&nbsp;is&nbsp;used.&nbsp;&nbsp;Note&nbsp;if&nbsp;you&nbsp;pass&nbsp;a&nbsp;norm<br>
&nbsp;&nbsp;&nbsp;&nbsp;instance,&nbsp;your&nbsp;settings&nbsp;for&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;will&nbsp;be&nbsp;ignored<br>
&nbsp;&nbsp;*&nbsp;alpha&nbsp;=1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;value&nbsp;for&nbsp;the&nbsp;patches<br>
&nbsp;&nbsp;*&nbsp;linewidths,&nbsp;if&nbsp;None,&nbsp;defaults&nbsp;to&nbsp;(lines.linewidth,).&nbsp;&nbsp;Note<br>
&nbsp;&nbsp;&nbsp;&nbsp;that&nbsp;this&nbsp;is&nbsp;a&nbsp;tuple,&nbsp;and&nbsp;if&nbsp;you&nbsp;set&nbsp;the&nbsp;linewidths<br>
&nbsp;&nbsp;&nbsp;&nbsp;argument&nbsp;you&nbsp;must&nbsp;set&nbsp;it&nbsp;as&nbsp;a&nbsp;sequence&nbsp;of&nbsp;floats,&nbsp;as<br>
&nbsp;&nbsp;&nbsp;&nbsp;required&nbsp;by&nbsp;RegularPolyCollection&nbsp;--&nbsp;see<br>
&nbsp;&nbsp;&nbsp;&nbsp;matplotlib.collections.RegularPolyCollection&nbsp;for&nbsp;details<br>
&nbsp;*&nbsp;faceted:&nbsp;if&nbsp;True,&nbsp;will&nbsp;use&nbsp;the&nbsp;default&nbsp;edgecolor&nbsp;for&nbsp;the<br>
&nbsp;&nbsp;&nbsp;markers.&nbsp;&nbsp;If&nbsp;False,&nbsp;will&nbsp;set&nbsp;the&nbsp;edgecolors&nbsp;to&nbsp;be&nbsp;the&nbsp;same<br>
&nbsp;&nbsp;&nbsp;as&nbsp;the&nbsp;facecolors<br>
&nbsp;&nbsp;&nbsp;Optional&nbsp;kwargs&nbsp;control&nbsp;the&nbsp;PatchCollection&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clim:&nbsp;a&nbsp;length&nbsp;2&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap:&nbsp;a&nbsp;colormap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colorbar:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarSubplot-scatter_classic"><strong>scatter_classic</strong></a>(self, x, y, s<font color="#909090">=None</font>, c<font color="#909090">='b'</font>)</dt><dd><tt>scatter_classic&nbsp;is&nbsp;no&nbsp;longer&nbsp;available;&nbsp;please&nbsp;use&nbsp;scatter.<br>
To&nbsp;help&nbsp;in&nbsp;porting,&nbsp;for&nbsp;comparison&nbsp;to&nbsp;the&nbsp;scatter&nbsp;docstring,<br>
here&nbsp;is&nbsp;the&nbsp;scatter_classic&nbsp;docstring:<br>
&nbsp;<br>
SCATTER_CLASSIC(x,&nbsp;y,&nbsp;s=None,&nbsp;c='b')<br>
&nbsp;<br>
Make&nbsp;a&nbsp;scatter&nbsp;plot&nbsp;of&nbsp;x&nbsp;versus&nbsp;y.&nbsp;&nbsp;s&nbsp;is&nbsp;a&nbsp;size&nbsp;(in&nbsp;data&nbsp;coords)&nbsp;and<br>
can&nbsp;be&nbsp;either&nbsp;a&nbsp;scalar&nbsp;or&nbsp;an&nbsp;array&nbsp;of&nbsp;the&nbsp;same&nbsp;length&nbsp;as&nbsp;x&nbsp;or&nbsp;y.&nbsp;&nbsp;c&nbsp;is<br>
a&nbsp;color&nbsp;and&nbsp;can&nbsp;be&nbsp;a&nbsp;single&nbsp;color&nbsp;format&nbsp;string&nbsp;or&nbsp;an&nbsp;length(x)&nbsp;array<br>
of&nbsp;intensities&nbsp;which&nbsp;will&nbsp;be&nbsp;mapped&nbsp;by&nbsp;the&nbsp;colormap&nbsp;jet.<br>
&nbsp;<br>
If&nbsp;size&nbsp;is&nbsp;None&nbsp;a&nbsp;default&nbsp;size&nbsp;will&nbsp;be&nbsp;used</tt></dd></dl>

<dl><dt><a name="PolarSubplot-semilogx"><strong>semilogx</strong></a>(self, *args, **kwargs)</dt><dd><tt>SEMILOGX(*args,&nbsp;**kwargs)<br>
Make&nbsp;a&nbsp;semilog&nbsp;plot&nbsp;with&nbsp;log&nbsp;scaling&nbsp;on&nbsp;the&nbsp;x&nbsp;axis.&nbsp;&nbsp;The&nbsp;args&nbsp;to<br>
semilog&nbsp;x&nbsp;are&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;args&nbsp;to&nbsp;plot.&nbsp;&nbsp;See&nbsp;help&nbsp;plot&nbsp;for&nbsp;more<br>
info.<br>
Optional&nbsp;keyword&nbsp;args&nbsp;supported&nbsp;are&nbsp;any&nbsp;of&nbsp;the&nbsp;kwargs&nbsp;supported&nbsp;by<br>
plot&nbsp;or&nbsp;set_xscale.&nbsp;&nbsp;Notable,&nbsp;for&nbsp;log&nbsp;scaling:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;basex:&nbsp;base&nbsp;of&nbsp;the&nbsp;logarithm<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;subsx:&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;ticks;&nbsp;None&nbsp;defaults&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of&nbsp;decades&nbsp;in&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plot;&nbsp;see&nbsp;set_xscale&nbsp;for&nbsp;details<br>
The&nbsp;remaining&nbsp;valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarSubplot-semilogy"><strong>semilogy</strong></a>(self, *args, **kwargs)</dt><dd><tt>SEMILOGY(*args,&nbsp;**kwargs):<br>
Make&nbsp;a&nbsp;semilog&nbsp;plot&nbsp;with&nbsp;log&nbsp;scaling&nbsp;on&nbsp;the&nbsp;y&nbsp;axis.&nbsp;&nbsp;The&nbsp;args&nbsp;to<br>
semilogy&nbsp;are&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;args&nbsp;to&nbsp;plot.&nbsp;&nbsp;See&nbsp;help&nbsp;plot&nbsp;for&nbsp;more<br>
info.<br>
Optional&nbsp;keyword&nbsp;args&nbsp;supported&nbsp;are&nbsp;any&nbsp;of&nbsp;the&nbsp;kwargs&nbsp;supported&nbsp;by<br>
plot&nbsp;or&nbsp;set_yscale.&nbsp;&nbsp;Notable,&nbsp;for&nbsp;log&nbsp;scaling:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;basey:&nbsp;base&nbsp;of&nbsp;the&nbsp;logarithm<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;subsy:&nbsp;a&nbsp;sequence&nbsp;of&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;ticks;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;None&nbsp;defaults&nbsp;to&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;decades&nbsp;in&nbsp;the&nbsp;plot;&nbsp;see&nbsp;set_yscale&nbsp;for&nbsp;details<br>
The&nbsp;remaining&nbsp;valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_adjustable"><strong>set_adjustable</strong></a>(self, adjustable)</dt><dd><tt>ACCEPTS:&nbsp;['box'&nbsp;|&nbsp;'datalim']</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_anchor"><strong>set_anchor</strong></a>(self, anchor)</dt><dd><tt>ACCEPTS:&nbsp;['C',&nbsp;'SW',&nbsp;'S',&nbsp;'SE',&nbsp;'E',&nbsp;'NE',&nbsp;'N',&nbsp;'NW',&nbsp;'W']</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_aspect"><strong>set_aspect</strong></a>(self, aspect, adjustable<font color="#909090">=None</font>, anchor<font color="#909090">=None</font>)</dt><dd><tt>aspect:<br>
&nbsp;&nbsp;&nbsp;'auto'&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;automatic;&nbsp;fill&nbsp;position&nbsp;rectangle&nbsp;with&nbsp;data<br>
&nbsp;&nbsp;&nbsp;'normal'&nbsp;-&nbsp;&nbsp;same&nbsp;as&nbsp;'auto';&nbsp;deprecated<br>
&nbsp;&nbsp;&nbsp;'equal'&nbsp;&nbsp;-&nbsp;&nbsp;same&nbsp;scaling&nbsp;from&nbsp;data&nbsp;to&nbsp;plot&nbsp;units&nbsp;for&nbsp;x&nbsp;and&nbsp;y<br>
&nbsp;&nbsp;&nbsp;&nbsp;num&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;a&nbsp;circle&nbsp;will&nbsp;be&nbsp;stretched&nbsp;such&nbsp;that&nbsp;the&nbsp;height<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;num&nbsp;times&nbsp;the&nbsp;width.&nbsp;aspect=1&nbsp;is&nbsp;the&nbsp;same&nbsp;as<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;aspect='equal'.<br>
&nbsp;<br>
adjustable:<br>
&nbsp;&nbsp;&nbsp;&nbsp;'box'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;change&nbsp;physical&nbsp;size&nbsp;of&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;'datalim'&nbsp;&nbsp;-&nbsp;change&nbsp;xlim&nbsp;or&nbsp;ylim<br>
&nbsp;<br>
anchor:<br>
&nbsp;&nbsp;&nbsp;&nbsp;'C'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;centered<br>
&nbsp;&nbsp;&nbsp;&nbsp;'SW'&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;lower&nbsp;left&nbsp;corner<br>
&nbsp;&nbsp;&nbsp;&nbsp;'S'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;middle&nbsp;of&nbsp;bottom&nbsp;edge<br>
&nbsp;&nbsp;&nbsp;&nbsp;'SE'&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;lower&nbsp;right&nbsp;corner<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;etc.<br>
&nbsp;<br>
ACCEPTS:&nbsp;['auto'&nbsp;|&nbsp;'equal'&nbsp;|&nbsp;aspect_ratio]</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_autoscale_on"><strong>set_autoscale_on</strong></a>(self, b)</dt><dd><tt>Set&nbsp;whether&nbsp;autoscaling&nbsp;is&nbsp;applied&nbsp;on&nbsp;plot&nbsp;commands<br>
&nbsp;<br>
ACCEPTS:&nbsp;True|False</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_axis_bgcolor"><strong>set_axis_bgcolor</strong></a>(self, color)</dt><dd><tt>set&nbsp;the&nbsp;axes&nbsp;background&nbsp;color<br>
&nbsp;<br>
ACCEPTS:&nbsp;any&nbsp;matplotlib&nbsp;color&nbsp;-&nbsp;see&nbsp;help(colors)</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_axis_off"><strong>set_axis_off</strong></a>(self)</dt><dd><tt>turn&nbsp;off&nbsp;the&nbsp;axis<br>
&nbsp;<br>
ACCEPTS:&nbsp;void</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_axis_on"><strong>set_axis_on</strong></a>(self)</dt><dd><tt>turn&nbsp;on&nbsp;the&nbsp;axis<br>
&nbsp;<br>
ACCEPTS:&nbsp;void</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_axisbelow"><strong>set_axisbelow</strong></a>(self, b)</dt><dd><tt>Set&nbsp;whether&nbsp;the&nbsp;axis&nbsp;ticks&nbsp;and&nbsp;gridlines&nbsp;are&nbsp;above&nbsp;or&nbsp;below&nbsp;most&nbsp;artists<br>
&nbsp;<br>
ACCEPTS:&nbsp;True|False</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_cursor_props"><strong>set_cursor_props</strong></a>(self, *args)</dt><dd><tt>Set&nbsp;the&nbsp;cursor&nbsp;property&nbsp;as<br>
ax.<a href="#PolarSubplot-set_cursor_props">set_cursor_props</a>(linewidth,&nbsp;color)&nbsp;&nbsp;OR<br>
ax.<a href="#PolarSubplot-set_cursor_props">set_cursor_props</a>((linewidth,&nbsp;color))<br>
&nbsp;<br>
ACCEPTS:&nbsp;a&nbsp;(float,&nbsp;color)&nbsp;tuple</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_figure"><strong>set_figure</strong></a>(self, fig)</dt><dd><tt>Set&nbsp;the&nbsp;<a href="#Axes">Axes</a>&nbsp;figure<br>
&nbsp;<br>
ACCEPTS:&nbsp;a&nbsp;Figure&nbsp;instance</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_frame_on"><strong>set_frame_on</strong></a>(self, b)</dt><dd><tt>Set&nbsp;whether&nbsp;the&nbsp;axes&nbsp;rectangle&nbsp;patch&nbsp;is&nbsp;drawn<br>
&nbsp;<br>
ACCEPTS:&nbsp;True|False</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_navigate"><strong>set_navigate</strong></a>(self, b)</dt><dd><tt>Set&nbsp;whether&nbsp;the&nbsp;axes&nbsp;responds&nbsp;to&nbsp;navigation&nbsp;toolbar&nbsp;commands<br>
&nbsp;<br>
ACCEPTS:&nbsp;True|False</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_navigate_mode"><strong>set_navigate_mode</strong></a>(self, b)</dt><dd><tt>Set&nbsp;the&nbsp;navigation&nbsp;toolbar&nbsp;button&nbsp;status;<br>
this&nbsp;is&nbsp;not&nbsp;a&nbsp;user-API&nbsp;function.</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_position"><strong>set_position</strong></a>(self, pos, which<font color="#909090">='both'</font>)</dt><dd><tt>Set&nbsp;the&nbsp;axes&nbsp;position&nbsp;with&nbsp;pos&nbsp;=&nbsp;[left,&nbsp;bottom,&nbsp;width,&nbsp;height]<br>
in&nbsp;relative&nbsp;0,1&nbsp;coords<br>
&nbsp;<br>
There&nbsp;are&nbsp;two&nbsp;position&nbsp;variables:&nbsp;one&nbsp;which&nbsp;is&nbsp;ultimately<br>
used,&nbsp;but&nbsp;which&nbsp;may&nbsp;be&nbsp;modified&nbsp;by&nbsp;apply_aspect,&nbsp;and&nbsp;a&nbsp;second<br>
which&nbsp;is&nbsp;the&nbsp;starting&nbsp;point&nbsp;for&nbsp;apply_aspect.<br>
&nbsp;<br>
which&nbsp;=&nbsp;'active'&nbsp;to&nbsp;change&nbsp;the&nbsp;first;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'original'&nbsp;to&nbsp;change&nbsp;the&nbsp;second;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'both'&nbsp;to&nbsp;change&nbsp;both<br>
&nbsp;<br>
ACCEPTS:&nbsp;len(4)&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_title"><strong>set_title</strong></a>(self, label, fontdict<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>SET_TITLE(label,&nbsp;fontdict=None,&nbsp;**kwargs):<br>
Set&nbsp;the&nbsp;title&nbsp;for&nbsp;the&nbsp;axes.&nbsp;&nbsp;See&nbsp;the&nbsp;text&nbsp;docstring&nbsp;for&nbsp;information<br>
of&nbsp;how&nbsp;override&nbsp;and&nbsp;the&nbsp;optional&nbsp;args&nbsp;work<br>
kwargs&nbsp;are&nbsp;Text&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
ACCEPTS:&nbsp;str</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_xscale"><strong>set_xscale</strong></a>(self, value, basex<font color="#909090">=10</font>, subsx<font color="#909090">=None</font>)</dt><dd><tt>SET_XSCALE(value,&nbsp;basex=10,&nbsp;subsx=None)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;xscaling:&nbsp;'log'&nbsp;or&nbsp;'linear'<br>
&nbsp;<br>
If&nbsp;value&nbsp;is&nbsp;'log',&nbsp;the&nbsp;additional&nbsp;kwargs&nbsp;have&nbsp;the&nbsp;following&nbsp;meaning<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;basex:&nbsp;base&nbsp;of&nbsp;the&nbsp;logarithm<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;subsx:&nbsp;a&nbsp;sequence&nbsp;of&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;ticks;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;None&nbsp;defaults&nbsp;to&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;decades&nbsp;in&nbsp;the&nbsp;plot.&nbsp;&nbsp;Eg&nbsp;for&nbsp;base&nbsp;10,&nbsp;subsx=(1,2,5)&nbsp;will<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;put&nbsp;minor&nbsp;ticks&nbsp;on&nbsp;1,2,5,11,12,15,21,&nbsp;....To&nbsp;turn&nbsp;off<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minor&nbsp;ticking,&nbsp;set&nbsp;subsx=[]<br>
&nbsp;<br>
ACCEPTS:&nbsp;['log'&nbsp;|&nbsp;'linear'&nbsp;]</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_xticklabels"><strong>set_xticklabels</strong></a>(self, labels, fontdict<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>SET_XTICKLABELS(labels,&nbsp;fontdict=None,&nbsp;**kwargs)<br>
Set&nbsp;the&nbsp;xtick&nbsp;labels&nbsp;with&nbsp;list&nbsp;of&nbsp;strings&nbsp;labels&nbsp;Return&nbsp;a&nbsp;list&nbsp;of&nbsp;axis<br>
text&nbsp;instances.<br>
kwargs&nbsp;set&nbsp;the&nbsp;Text&nbsp;properties.&nbsp;&nbsp;Valid&nbsp;properties&nbsp;are<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
ACCEPTS:&nbsp;sequence&nbsp;of&nbsp;strings</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_xticks"><strong>set_xticks</strong></a>(self, ticks)</dt><dd><tt>Set&nbsp;the&nbsp;x&nbsp;ticks&nbsp;with&nbsp;list&nbsp;of&nbsp;ticks<br>
&nbsp;<br>
ACCEPTS:&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_yscale"><strong>set_yscale</strong></a>(self, value, basey<font color="#909090">=10</font>, subsy<font color="#909090">=None</font>)</dt><dd><tt>SET_YSCALE(value,&nbsp;basey=10,&nbsp;subsy=None)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;yscaling:&nbsp;'log'&nbsp;or&nbsp;'linear'<br>
&nbsp;<br>
If&nbsp;value&nbsp;is&nbsp;'log',&nbsp;the&nbsp;additional&nbsp;kwargs&nbsp;have&nbsp;the&nbsp;following&nbsp;meaning<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;basey:&nbsp;base&nbsp;of&nbsp;the&nbsp;logarithm<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;subsy:&nbsp;a&nbsp;sequence&nbsp;of&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;ticks;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;None&nbsp;defaults&nbsp;to&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;decades&nbsp;in&nbsp;the&nbsp;plot.&nbsp;&nbsp;Eg&nbsp;for&nbsp;base&nbsp;10,&nbsp;subsy=(1,2,5)&nbsp;will<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;put&nbsp;minor&nbsp;ticks&nbsp;on&nbsp;1,2,5,11,12,15,&nbsp;21,&nbsp;....To&nbsp;turn&nbsp;off<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minor&nbsp;ticking,&nbsp;set&nbsp;subsy=[]<br>
&nbsp;<br>
ACCEPTS:&nbsp;['log'&nbsp;|&nbsp;'linear']</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_yticklabels"><strong>set_yticklabels</strong></a>(self, labels, fontdict<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>SET_YTICKLABELS(labels,&nbsp;fontdict=None,&nbsp;**kwargs)<br>
Set&nbsp;the&nbsp;ytick&nbsp;labels&nbsp;with&nbsp;list&nbsp;of&nbsp;strings&nbsp;labels.&nbsp;&nbsp;Return&nbsp;a&nbsp;list&nbsp;of<br>
Text&nbsp;instances.<br>
kwargs&nbsp;set&nbsp;Text&nbsp;properties&nbsp;for&nbsp;the&nbsp;labels.&nbsp;&nbsp;Valid&nbsp;properties&nbsp;are<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
ACCEPTS:&nbsp;sequence&nbsp;of&nbsp;strings</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_yticks"><strong>set_yticks</strong></a>(self, ticks)</dt><dd><tt>Set&nbsp;the&nbsp;y&nbsp;ticks&nbsp;with&nbsp;list&nbsp;of&nbsp;ticks<br>
&nbsp;<br>
ACCEPTS:&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="PolarSubplot-specgram"><strong>specgram</strong></a>(self, x, NFFT<font color="#909090">=256</font>, Fs<font color="#909090">=2</font>, detrend<font color="#909090">=&lt;function detrend_none at 0x847d844&gt;</font>, window<font color="#909090">=&lt;function window_hanning at 0x847d72c&gt;</font>, noverlap<font color="#909090">=128</font>, cmap<font color="#909090">=None</font>, xextent<font color="#909090">=None</font>)</dt><dd><tt>SPECGRAM(x,&nbsp;NFFT=256,&nbsp;Fs=2,&nbsp;detrend=detrend_none,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window=window_hanning,&nbsp;noverlap=128,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap=None,&nbsp;xextent=None)<br>
&nbsp;<br>
Compute&nbsp;a&nbsp;spectrogram&nbsp;of&nbsp;data&nbsp;in&nbsp;x.&nbsp;&nbsp;Data&nbsp;are&nbsp;split&nbsp;into&nbsp;NFFT&nbsp;length<br>
segements&nbsp;and&nbsp;the&nbsp;PSD&nbsp;of&nbsp;each&nbsp;section&nbsp;is&nbsp;computed.&nbsp;&nbsp;The&nbsp;windowing<br>
function&nbsp;window&nbsp;is&nbsp;applied&nbsp;to&nbsp;each&nbsp;segment,&nbsp;and&nbsp;the&nbsp;amount&nbsp;of&nbsp;overlap<br>
of&nbsp;each&nbsp;segment&nbsp;is&nbsp;specified&nbsp;with&nbsp;noverlap.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;cmap&nbsp;is&nbsp;a&nbsp;colormap;&nbsp;if&nbsp;None&nbsp;use&nbsp;default&nbsp;determined&nbsp;by&nbsp;rc<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;xextent&nbsp;is&nbsp;the&nbsp;image&nbsp;extent&nbsp;in&nbsp;the&nbsp;xaxes&nbsp;xextent=xmin,&nbsp;xmax&nbsp;-<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;0,&nbsp;max(bins),&nbsp;0,&nbsp;max(freqs)&nbsp;where&nbsp;bins&nbsp;is&nbsp;the&nbsp;return<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value&nbsp;from&nbsp;matplotlib.matplotlib.mlab.specgram<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;See&nbsp;help(psd)&nbsp;for&nbsp;information&nbsp;on&nbsp;the&nbsp;other&nbsp;keyword&nbsp;arguments.<br>
&nbsp;<br>
Return&nbsp;value&nbsp;is&nbsp;(Pxx,&nbsp;freqs,&nbsp;bins,&nbsp;im),&nbsp;where<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;bins&nbsp;are&nbsp;the&nbsp;time&nbsp;points&nbsp;the&nbsp;spectrogram&nbsp;is&nbsp;calculated&nbsp;over<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;freqs&nbsp;is&nbsp;an&nbsp;array&nbsp;of&nbsp;frequencies<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Pxx&nbsp;is&nbsp;a&nbsp;len(times)&nbsp;x&nbsp;len(freqs)&nbsp;array&nbsp;of&nbsp;power<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;im&nbsp;is&nbsp;a&nbsp;matplotlib.image.AxesImage.<br>
&nbsp;<br>
Note:&nbsp;If&nbsp;x&nbsp;is&nbsp;real&nbsp;(i.e.&nbsp;non-complex)&nbsp;only&nbsp;the&nbsp;positive&nbsp;spectrum&nbsp;is<br>
shown.&nbsp;&nbsp;If&nbsp;x&nbsp;is&nbsp;complex&nbsp;both&nbsp;positive&nbsp;and&nbsp;negative&nbsp;parts&nbsp;of&nbsp;the<br>
spectrum&nbsp;are&nbsp;shown.</tt></dd></dl>

<dl><dt><a name="PolarSubplot-spy"><strong>spy</strong></a>(self, Z, precision<font color="#909090">=None</font>, marker<font color="#909090">=None</font>, markersize<font color="#909090">=None</font>, aspect<font color="#909090">='equal'</font>, **kwargs)</dt><dd><tt><a href="#PolarSubplot-spy">spy</a>(Z)&nbsp;plots&nbsp;the&nbsp;sparsity&nbsp;pattern&nbsp;of&nbsp;the&nbsp;2-D&nbsp;array&nbsp;Z<br>
&nbsp;<br>
If&nbsp;precision&nbsp;is&nbsp;None,&nbsp;any&nbsp;non-zero&nbsp;value&nbsp;will&nbsp;be&nbsp;plotted;<br>
else,&nbsp;values&nbsp;of&nbsp;absolute(Z)&gt;precision&nbsp;will&nbsp;be&nbsp;plotted.<br>
&nbsp;<br>
The&nbsp;array&nbsp;will&nbsp;be&nbsp;plotted&nbsp;as&nbsp;it&nbsp;would&nbsp;be&nbsp;printed,&nbsp;with<br>
the&nbsp;first&nbsp;index&nbsp;(row)&nbsp;increasing&nbsp;down&nbsp;and&nbsp;the&nbsp;second<br>
index&nbsp;(column)&nbsp;increasing&nbsp;to&nbsp;the&nbsp;right.<br>
&nbsp;<br>
By&nbsp;default&nbsp;aspect&nbsp;is&nbsp;'equal'&nbsp;so&nbsp;that&nbsp;each&nbsp;array&nbsp;element<br>
occupies&nbsp;a&nbsp;square&nbsp;space;&nbsp;set&nbsp;the&nbsp;aspect&nbsp;kwarg&nbsp;to&nbsp;'auto'<br>
to&nbsp;allow&nbsp;the&nbsp;plot&nbsp;to&nbsp;fill&nbsp;the&nbsp;plot&nbsp;box,&nbsp;or&nbsp;to&nbsp;any&nbsp;scalar<br>
number&nbsp;to&nbsp;specify&nbsp;the&nbsp;aspect&nbsp;ratio&nbsp;of&nbsp;an&nbsp;array&nbsp;element<br>
directly.<br>
&nbsp;<br>
Two&nbsp;plotting&nbsp;styles&nbsp;are&nbsp;available:&nbsp;image&nbsp;or&nbsp;marker.&nbsp;Both<br>
are&nbsp;available&nbsp;for&nbsp;full&nbsp;arrays,&nbsp;but&nbsp;only&nbsp;the&nbsp;marker&nbsp;style<br>
works&nbsp;for&nbsp;scipy.sparse.spmatrix&nbsp;instances.<br>
&nbsp;<br>
If&nbsp;marker&nbsp;and&nbsp;markersize&nbsp;are&nbsp;None,&nbsp;an&nbsp;image&nbsp;will&nbsp;be<br>
returned&nbsp;and&nbsp;any&nbsp;remaining&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;to&nbsp;imshow;<br>
else,&nbsp;a&nbsp;Line2D&nbsp;object&nbsp;will&nbsp;be&nbsp;returned&nbsp;with&nbsp;the&nbsp;value<br>
of&nbsp;marker&nbsp;determining&nbsp;the&nbsp;marker&nbsp;type,&nbsp;and&nbsp;any&nbsp;remaining<br>
kwargs&nbsp;passed&nbsp;to&nbsp;the&nbsp;axes&nbsp;plot&nbsp;method.<br>
&nbsp;<br>
If&nbsp;marker&nbsp;and&nbsp;markersize&nbsp;are&nbsp;None,&nbsp;useful&nbsp;kwargs&nbsp;include:<br>
&nbsp;&nbsp;&nbsp;&nbsp;cmap<br>
&nbsp;&nbsp;&nbsp;&nbsp;alpha<br>
See&nbsp;documentation&nbsp;for&nbsp;<a href="#PolarSubplot-imshow">imshow</a>()&nbsp;for&nbsp;details.<br>
For&nbsp;controlling&nbsp;colors,&nbsp;e.g.&nbsp;cyan&nbsp;background&nbsp;and&nbsp;red&nbsp;marks,&nbsp;use:<br>
&nbsp;&nbsp;&nbsp;&nbsp;cmap&nbsp;=&nbsp;matplotlib.colors.ListedColormap(['c','r'])<br>
&nbsp;<br>
If&nbsp;marker&nbsp;or&nbsp;markersize&nbsp;is&nbsp;not&nbsp;None,&nbsp;useful&nbsp;kwargs&nbsp;include:<br>
&nbsp;&nbsp;&nbsp;&nbsp;marker<br>
&nbsp;&nbsp;&nbsp;&nbsp;markersize<br>
&nbsp;&nbsp;&nbsp;&nbsp;color<br>
See&nbsp;documentation&nbsp;for&nbsp;<a href="#PolarSubplot-plot">plot</a>()&nbsp;for&nbsp;details.<br>
&nbsp;<br>
Useful&nbsp;values&nbsp;for&nbsp;marker&nbsp;include:<br>
&nbsp;&nbsp;&nbsp;&nbsp;'s'&nbsp;&nbsp;square&nbsp;(default)<br>
&nbsp;&nbsp;&nbsp;&nbsp;'o'&nbsp;&nbsp;circle<br>
&nbsp;&nbsp;&nbsp;&nbsp;'.'&nbsp;&nbsp;point<br>
&nbsp;&nbsp;&nbsp;&nbsp;','&nbsp;&nbsp;pixel</tt></dd></dl>

<dl><dt><a name="PolarSubplot-stem"><strong>stem</strong></a>(self, x, y, linefmt<font color="#909090">='b-'</font>, markerfmt<font color="#909090">='bo'</font>, basefmt<font color="#909090">='r-'</font>)</dt><dd><tt>STEM(x,&nbsp;y,&nbsp;linefmt='b-',&nbsp;markerfmt='bo',&nbsp;basefmt='r-')<br>
&nbsp;<br>
A&nbsp;stem&nbsp;plot&nbsp;plots&nbsp;vertical&nbsp;lines&nbsp;(using&nbsp;linefmt)&nbsp;at&nbsp;each&nbsp;x&nbsp;location<br>
from&nbsp;the&nbsp;baseline&nbsp;to&nbsp;y,&nbsp;and&nbsp;places&nbsp;a&nbsp;marker&nbsp;there&nbsp;using&nbsp;markerfmt.&nbsp;&nbsp;A<br>
horizontal&nbsp;line&nbsp;at&nbsp;0&nbsp;is&nbsp;is&nbsp;plotted&nbsp;using&nbsp;basefmt<br>
&nbsp;<br>
Return&nbsp;value&nbsp;is&nbsp;(markerline,&nbsp;stemlines,&nbsp;baseline)&nbsp;.<br>
&nbsp;<br>
See<br>
<a href="http://www.mathworks.com/access/helpdesk/help/techdoc/ref/stem.html">http://www.mathworks.com/access/helpdesk/help/techdoc/ref/stem.html</a><br>
for&nbsp;details&nbsp;and&nbsp;examples/stem_plot.py&nbsp;for&nbsp;a&nbsp;demo.</tt></dd></dl>

<dl><dt><a name="PolarSubplot-text"><strong>text</strong></a>(self, x, y, s, fontdict<font color="#909090">=None</font>, withdash<font color="#909090">=False</font>, **kwargs)</dt><dd><tt>TEXT(x,&nbsp;y,&nbsp;s,&nbsp;fontdict=None,&nbsp;**kwargs)<br>
Add&nbsp;text&nbsp;in&nbsp;string&nbsp;s&nbsp;to&nbsp;axis&nbsp;at&nbsp;location&nbsp;x,y&nbsp;(data&nbsp;coords)<br>
&nbsp;&nbsp;fontdict&nbsp;is&nbsp;a&nbsp;dictionary&nbsp;to&nbsp;override&nbsp;the&nbsp;default&nbsp;text&nbsp;properties.<br>
&nbsp;&nbsp;If&nbsp;fontdict&nbsp;is&nbsp;None,&nbsp;the&nbsp;defaults&nbsp;are&nbsp;determined&nbsp;by&nbsp;your&nbsp;rc<br>
&nbsp;&nbsp;parameters.<br>
&nbsp;&nbsp;withdash=True&nbsp;will&nbsp;create&nbsp;a&nbsp;TextWithDash&nbsp;instance&nbsp;instead<br>
&nbsp;&nbsp;of&nbsp;a&nbsp;Text&nbsp;instance.<br>
Individual&nbsp;keyword&nbsp;arguments&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;override&nbsp;any&nbsp;given<br>
parameter<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-text">text</a>(x,&nbsp;y,&nbsp;s,&nbsp;fontsize=12)<br>
The&nbsp;default&nbsp;transform&nbsp;specifies&nbsp;that&nbsp;text&nbsp;is&nbsp;in&nbsp;data&nbsp;coords,<br>
alternatively,&nbsp;you&nbsp;can&nbsp;specify&nbsp;text&nbsp;in&nbsp;axis&nbsp;coords&nbsp;(0,0&nbsp;lower&nbsp;left&nbsp;and<br>
1,1&nbsp;upper&nbsp;right).&nbsp;&nbsp;The&nbsp;example&nbsp;below&nbsp;places&nbsp;text&nbsp;in&nbsp;the&nbsp;center&nbsp;of&nbsp;the<br>
axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#PolarSubplot-text">text</a>(0.5,&nbsp;0.5,'matplotlib',<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment='center',<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment='center',<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform&nbsp;=&nbsp;ax.transAxes,<br>
&nbsp;&nbsp;&nbsp;&nbsp;)<br>
You&nbsp;can&nbsp;put&nbsp;a&nbsp;rectangular&nbsp;box&nbsp;around&nbsp;the&nbsp;text&nbsp;instance&nbsp;(eg&nbsp;to<br>
set&nbsp;a&nbsp;background&nbsp;color)&nbsp;by&nbsp;using&nbsp;the&nbsp;keyword&nbsp;bbox.&nbsp;&nbsp;bbox&nbsp;is&nbsp;a<br>
dictionary&nbsp;of&nbsp;matplotlib.patches.Rectangle&nbsp;properties&nbsp;(see&nbsp;help<br>
for&nbsp;Rectangle&nbsp;for&nbsp;a&nbsp;list&nbsp;of&nbsp;these).&nbsp;&nbsp;For&nbsp;example<br>
&nbsp;<a href="#PolarSubplot-text">text</a>(x,&nbsp;y,&nbsp;s,&nbsp;bbox=dict(facecolor='red',&nbsp;alpha=0.5))<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Text&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarSubplot-ticklabel_format"><strong>ticklabel_format</strong></a>(self, **kwargs)</dt><dd><tt>Convenience&nbsp;method&nbsp;for&nbsp;manipulating&nbsp;the&nbsp;ScalarFormatter<br>
used&nbsp;by&nbsp;default&nbsp;for&nbsp;linear&nbsp;axes.<br>
&nbsp;<br>
kwargs:<br>
&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;=&nbsp;'sci'&nbsp;(or&nbsp;'scientific')&nbsp;or&nbsp;'plain';<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plain&nbsp;turns&nbsp;off&nbsp;scientific&nbsp;notation<br>
&nbsp;&nbsp;&nbsp;&nbsp;axis&nbsp;=&nbsp;'x',&nbsp;'y',&nbsp;or&nbsp;'both'<br>
&nbsp;<br>
Only&nbsp;the&nbsp;major&nbsp;ticks&nbsp;are&nbsp;affected.<br>
If&nbsp;the&nbsp;method&nbsp;is&nbsp;called&nbsp;when&nbsp;the&nbsp;ScalarFormatter&nbsp;is&nbsp;not<br>
the&nbsp;one&nbsp;being&nbsp;used,&nbsp;an&nbsp;AttributeError&nbsp;will&nbsp;be&nbsp;raised&nbsp;with<br>
no&nbsp;additional&nbsp;error&nbsp;message.<br>
&nbsp;<br>
Additional&nbsp;capabilities&nbsp;and/or&nbsp;friendlier&nbsp;error&nbsp;checking&nbsp;may&nbsp;be&nbsp;added.</tt></dd></dl>

<dl><dt><a name="PolarSubplot-update_datalim"><strong>update_datalim</strong></a>(self, xys)</dt><dd><tt>Update&nbsp;the&nbsp;data&nbsp;lim&nbsp;bbox&nbsp;with&nbsp;seq&nbsp;of&nbsp;xy&nbsp;tups&nbsp;or&nbsp;equiv.&nbsp;2-D&nbsp;array</tt></dd></dl>

<dl><dt><a name="PolarSubplot-update_datalim_numerix"><strong>update_datalim_numerix</strong></a>(self, x, y)</dt><dd><tt>Update&nbsp;the&nbsp;data&nbsp;lim&nbsp;bbox&nbsp;with&nbsp;seq&nbsp;of&nbsp;xy&nbsp;tups</tt></dd></dl>

<dl><dt><a name="PolarSubplot-vlines"><strong>vlines</strong></a>(self, x, ymin, ymax, colors<font color="#909090">='k'</font>, linestyle<font color="#909090">='solid'</font>, label<font color="#909090">=''</font>, **kwargs)</dt><dd><tt>VLINES(x,&nbsp;ymin,&nbsp;ymax,&nbsp;color='k')<br>
Plot&nbsp;vertical&nbsp;lines&nbsp;at&nbsp;each&nbsp;x&nbsp;from&nbsp;ymin&nbsp;to&nbsp;ymax.&nbsp;&nbsp;ymin&nbsp;or&nbsp;ymax&nbsp;can&nbsp;be<br>
scalars&nbsp;or&nbsp;len(x)&nbsp;numpy&nbsp;arrays.&nbsp;&nbsp;If&nbsp;they&nbsp;are&nbsp;scalars,&nbsp;then&nbsp;the<br>
respective&nbsp;values&nbsp;are&nbsp;constant,&nbsp;else&nbsp;the&nbsp;heights&nbsp;of&nbsp;the&nbsp;lines&nbsp;are<br>
determined&nbsp;by&nbsp;ymin&nbsp;and&nbsp;ymax<br>
colors&nbsp;is&nbsp;a&nbsp;line&nbsp;collections&nbsp;color&nbsp;args,&nbsp;either&nbsp;a&nbsp;single&nbsp;color<br>
or&nbsp;a&nbsp;len(x)&nbsp;list&nbsp;of&nbsp;colors<br>
linestyle&nbsp;is&nbsp;one&nbsp;of&nbsp;solid|dashed|dashdot|dotted<br>
Returns&nbsp;the&nbsp;LineCollection&nbsp;that&nbsp;was&nbsp;added<br>
kwargs&nbsp;are&nbsp;LineCollection&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clim:&nbsp;a&nbsp;length&nbsp;2&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap:&nbsp;a&nbsp;colormap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colorbar:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle:&nbsp;['solid'&nbsp;|&nbsp;'dashed',&nbsp;'dashdot',&nbsp;'dotted'&nbsp;|&nbsp;&nbsp;(offset,&nbsp;on-off-dash-seq)&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;segments:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verts:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarSubplot-xaxis_date"><strong>xaxis_date</strong></a>(self, tz<font color="#909090">=None</font>)</dt><dd><tt>Sets&nbsp;up&nbsp;x-axis&nbsp;ticks&nbsp;and&nbsp;labels&nbsp;that&nbsp;treat&nbsp;the&nbsp;x&nbsp;data&nbsp;as&nbsp;dates.<br>
&nbsp;<br>
tz&nbsp;is&nbsp;the&nbsp;time&nbsp;zone&nbsp;to&nbsp;use&nbsp;in&nbsp;labeling&nbsp;dates.&nbsp;&nbsp;Defaults&nbsp;to&nbsp;rc&nbsp;value.</tt></dd></dl>

<dl><dt><a name="PolarSubplot-xcorr"><strong>xcorr</strong></a>(self, x, y, normed<font color="#909090">=False</font>, detrend<font color="#909090">=&lt;function detrend_none at 0x847d844&gt;</font>, usevlines<font color="#909090">=False</font>, maxlags<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>XCORR(x,&nbsp;y,&nbsp;normed=False,&nbsp;detrend=detrend_none,&nbsp;usevlines=False,&nbsp;**kwargs):<br>
Plot&nbsp;the&nbsp;cross&nbsp;correlation&nbsp;between&nbsp;x&nbsp;and&nbsp;y.&nbsp;&nbsp;If&nbsp;normed=True,<br>
normalize&nbsp;the&nbsp;data&nbsp;but&nbsp;the&nbsp;cross&nbsp;correlation&nbsp;at&nbsp;0-th&nbsp;lag.&nbsp;&nbsp;x<br>
and&nbsp;y&nbsp;are&nbsp;detrended&nbsp;by&nbsp;the&nbsp;detrend&nbsp;callable&nbsp;(default&nbsp;no<br>
normalization.&nbsp;&nbsp;x&nbsp;and&nbsp;y&nbsp;must&nbsp;be&nbsp;equal&nbsp;length<br>
data&nbsp;are&nbsp;plotted&nbsp;as&nbsp;<a href="#PolarSubplot-plot">plot</a>(lags,&nbsp;c,&nbsp;**kwargs)<br>
return&nbsp;value&nbsp;is&nbsp;lags,&nbsp;c,&nbsp;line&nbsp;where&nbsp;lags&nbsp;are&nbsp;a&nbsp;length<br>
2*maxlags+1&nbsp;lag&nbsp;vector,&nbsp;c&nbsp;is&nbsp;the&nbsp;2*maxlags+1&nbsp;auto&nbsp;correlation<br>
vector,&nbsp;and&nbsp;line&nbsp;is&nbsp;a&nbsp;Line2D&nbsp;instance&nbsp;returned&nbsp;by&nbsp;plot.&nbsp;&nbsp;The<br>
default&nbsp;linestyle&nbsp;is&nbsp;None&nbsp;and&nbsp;the&nbsp;default&nbsp;marker&nbsp;is&nbsp;'o',<br>
though&nbsp;these&nbsp;can&nbsp;be&nbsp;overridden&nbsp;with&nbsp;keyword&nbsp;args.&nbsp;&nbsp;The&nbsp;cross<br>
correlation&nbsp;is&nbsp;performed&nbsp;with&nbsp;numerix&nbsp;cross_correlate&nbsp;with<br>
mode=2.<br>
If&nbsp;usevlines&nbsp;is&nbsp;True,&nbsp;<a href="#Axes">Axes</a>.vlines&nbsp;rather&nbsp;than&nbsp;<a href="#Axes">Axes</a>.plot&nbsp;is&nbsp;used<br>
to&nbsp;draw&nbsp;vertical&nbsp;lines&nbsp;from&nbsp;the&nbsp;origin&nbsp;to&nbsp;the&nbsp;acorr.<br>
Otherwise&nbsp;the&nbsp;plotstyle&nbsp;is&nbsp;determined&nbsp;by&nbsp;the&nbsp;kwargs,&nbsp;which&nbsp;are<br>
Line2D&nbsp;properties.&nbsp;&nbsp;If&nbsp;usevlines,&nbsp;the&nbsp;return&nbsp;value&nbsp;is&nbsp;lags,&nbsp;c,<br>
linecol,&nbsp;b&nbsp;where&nbsp;linecol&nbsp;is&nbsp;the&nbsp;LineCollection&nbsp;and&nbsp;b&nbsp;is&nbsp;the&nbsp;x-axis<br>
if&nbsp;usevlines=True,&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;onto&nbsp;<a href="#Axes">Axes</a>.vlines<br>
if&nbsp;usevlines=False,&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;onto&nbsp;<a href="#Axes">Axes</a>.plot<br>
maxlags&nbsp;is&nbsp;a&nbsp;positive&nbsp;integer&nbsp;detailing&nbsp;the&nbsp;number&nbsp;of&nbsp;lags&nbsp;to&nbsp;show.<br>
The&nbsp;default&nbsp;value&nbsp;of&nbsp;None&nbsp;will&nbsp;return&nbsp;all&nbsp;(2*len(x)-1)&nbsp;lags.<br>
See&nbsp;the&nbsp;respective&nbsp;function&nbsp;for&nbsp;documentation&nbsp;on&nbsp;valid&nbsp;kwargs</tt></dd></dl>

<dl><dt><a name="PolarSubplot-yaxis_date"><strong>yaxis_date</strong></a>(self, tz<font color="#909090">=None</font>)</dt><dd><tt>Sets&nbsp;up&nbsp;y-axis&nbsp;ticks&nbsp;and&nbsp;labels&nbsp;that&nbsp;treat&nbsp;the&nbsp;y&nbsp;data&nbsp;as&nbsp;dates.<br>
&nbsp;<br>
tz&nbsp;is&nbsp;the&nbsp;time&nbsp;zone&nbsp;to&nbsp;use&nbsp;in&nbsp;labeling&nbsp;dates.&nbsp;&nbsp;Defaults&nbsp;to&nbsp;rc&nbsp;value.</tt></dd></dl>

<dl><dt><a name="PolarSubplot-zoomx"><strong>zoomx</strong></a>(self, numsteps)</dt><dd><tt>Zoom&nbsp;in&nbsp;on&nbsp;the&nbsp;x&nbsp;xaxis&nbsp;numsteps&nbsp;(plus&nbsp;for&nbsp;zoom&nbsp;in,&nbsp;minus&nbsp;for&nbsp;zoom&nbsp;out)</tt></dd></dl>

<dl><dt><a name="PolarSubplot-zoomy"><strong>zoomy</strong></a>(self, numsteps)</dt><dd><tt>Zoom&nbsp;in&nbsp;on&nbsp;the&nbsp;x&nbsp;xaxis&nbsp;numsteps&nbsp;(plus&nbsp;for&nbsp;zoom&nbsp;in,&nbsp;minus&nbsp;for&nbsp;zoom&nbsp;out)</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.axes.html#Axes">Axes</a>:<br>
<dl><dt><strong>scaled</strong> = {0: 'linear', 1: 'log'}</dl>

<hr>
Methods inherited from <a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a>:<br>
<dl><dt><a name="PolarSubplot-add_callback"><strong>add_callback</strong></a>(self, func)</dt></dl>

<dl><dt><a name="PolarSubplot-convert_xunits"><strong>convert_xunits</strong></a>(self, x)</dt><dd><tt>for&nbsp;artists&nbsp;in&nbsp;an&nbsp;axes,&nbsp;if&nbsp;the&nbsp;xaxis&nbsp;as&nbsp;units&nbsp;support,<br>
convert&nbsp;x&nbsp;using&nbsp;xaxis&nbsp;unit&nbsp;type</tt></dd></dl>

<dl><dt><a name="PolarSubplot-convert_yunits"><strong>convert_yunits</strong></a>(self, y)</dt><dd><tt>for&nbsp;artists&nbsp;in&nbsp;an&nbsp;axes,&nbsp;if&nbsp;the&nbsp;yaxis&nbsp;as&nbsp;units&nbsp;support,<br>
convert&nbsp;y&nbsp;using&nbsp;yaxis&nbsp;unit&nbsp;type</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_alpha"><strong>get_alpha</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on&nbsp;all<br>
backends</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_animated"><strong>get_animated</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;artist's&nbsp;animated&nbsp;state</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_axes"><strong>get_axes</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;axes&nbsp;instance&nbsp;the&nbsp;artist&nbsp;resides&nbsp;in,&nbsp;or&nbsp;None</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_clip_box"><strong>get_clip_box</strong></a>(self)</dt><dd><tt>Return&nbsp;artist&nbsp;clipbox</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_clip_on"><strong>get_clip_on</strong></a>(self)</dt><dd><tt>Return&nbsp;whether&nbsp;artist&nbsp;uses&nbsp;clipping</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_clip_path"><strong>get_clip_path</strong></a>(self)</dt><dd><tt>Return&nbsp;artist&nbsp;clip&nbsp;path</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_figure"><strong>get_figure</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;figure&nbsp;instance</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_label"><strong>get_label</strong></a>(self)</dt></dl>

<dl><dt><a name="PolarSubplot-get_picker"><strong>get_picker</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;Pickeration&nbsp;instance&nbsp;used&nbsp;by&nbsp;this&nbsp;artist</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_transform"><strong>get_transform</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;Transformation&nbsp;instance&nbsp;used&nbsp;by&nbsp;this&nbsp;artist</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_visible"><strong>get_visible</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;artist's&nbsp;visiblity</tt></dd></dl>

<dl><dt><a name="PolarSubplot-get_zorder"><strong>get_zorder</strong></a>(self)</dt></dl>

<dl><dt><a name="PolarSubplot-have_units"><strong>have_units</strong></a>(self)</dt><dd><tt>return&nbsp;True&nbsp;if&nbsp;units&nbsp;are&nbsp;set&nbsp;on&nbsp;the&nbsp;x&nbsp;or&nbsp;y&nbsp;axes</tt></dd></dl>

<dl><dt><a name="PolarSubplot-is_figure_set"><strong>is_figure_set</strong></a>(self)</dt></dl>

<dl><dt><a name="PolarSubplot-is_transform_set"><strong>is_transform_set</strong></a>(self)</dt><dd><tt><a href="matplotlib.artist.html#Artist">Artist</a>&nbsp;has&nbsp;transform&nbsp;explicity&nbsp;let</tt></dd></dl>

<dl><dt><a name="PolarSubplot-pchanged"><strong>pchanged</strong></a>(self)</dt><dd><tt>fire&nbsp;event&nbsp;when&nbsp;property&nbsp;changed</tt></dd></dl>

<dl><dt><a name="PolarSubplot-pickable"><strong>pickable</strong></a>(self)</dt><dd><tt>return&nbsp;True&nbsp;if&nbsp;self&nbsp;is&nbsp;pickable</tt></dd></dl>

<dl><dt><a name="PolarSubplot-remove_callback"><strong>remove_callback</strong></a>(self, oid)</dt></dl>

<dl><dt><a name="PolarSubplot-set"><strong>set</strong></a>(self, **kwargs)</dt><dd><tt>A&nbsp;tkstyle&nbsp;set&nbsp;command,&nbsp;pass&nbsp;kwargs&nbsp;to&nbsp;set&nbsp;properties</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_alpha"><strong>set_alpha</strong></a>(self, alpha)</dt><dd><tt>Set&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on<br>
all&nbsp;backends<br>
&nbsp;<br>
ACCEPTS:&nbsp;float</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_animated"><strong>set_animated</strong></a>(self, b)</dt><dd><tt>set&nbsp;the&nbsp;artist's&nbsp;animation&nbsp;state<br>
&nbsp;<br>
ACCEPTS:&nbsp;[True&nbsp;|&nbsp;False]</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_axes"><strong>set_axes</strong></a>(self, axes)</dt><dd><tt>set&nbsp;the&nbsp;axes&nbsp;instance&nbsp;the&nbsp;artist&nbsp;resides&nbsp;in,&nbsp;if&nbsp;any<br>
&nbsp;<br>
ACCEPTS:&nbsp;an&nbsp;axes&nbsp;instance</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_clip_box"><strong>set_clip_box</strong></a>(self, clipbox)</dt><dd><tt>Set&nbsp;the&nbsp;artist's&nbsp;clip&nbsp;Bbox<br>
&nbsp;<br>
ACCEPTS:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_clip_on"><strong>set_clip_on</strong></a>(self, b)</dt><dd><tt>Set&nbsp;&nbsp;whether&nbsp;artist&nbsp;uses&nbsp;clipping<br>
&nbsp;<br>
ACCEPTS:&nbsp;[True&nbsp;|&nbsp;False]</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_clip_path"><strong>set_clip_path</strong></a>(self, path)</dt><dd><tt>Set&nbsp;the&nbsp;artist's&nbsp;clip&nbsp;path<br>
&nbsp;<br>
ACCEPTS:&nbsp;an&nbsp;agg.path_storage&nbsp;instance</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_label"><strong>set_label</strong></a>(self, s)</dt><dd><tt>Set&nbsp;the&nbsp;line&nbsp;label&nbsp;to&nbsp;s&nbsp;for&nbsp;auto&nbsp;legend<br>
&nbsp;<br>
ACCEPTS:&nbsp;any&nbsp;string</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_lod"><strong>set_lod</strong></a>(self, on)</dt><dd><tt>Set&nbsp;Level&nbsp;of&nbsp;Detail&nbsp;on&nbsp;or&nbsp;off.&nbsp;&nbsp;If&nbsp;on,&nbsp;the&nbsp;artists&nbsp;may&nbsp;examine<br>
things&nbsp;like&nbsp;the&nbsp;pixel&nbsp;width&nbsp;of&nbsp;the&nbsp;axes&nbsp;and&nbsp;draw&nbsp;a&nbsp;subset&nbsp;of<br>
their&nbsp;contents&nbsp;accordingly<br>
&nbsp;<br>
ACCEPTS:&nbsp;[True&nbsp;|&nbsp;False]</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_picker"><strong>set_picker</strong></a>(self, picker)</dt><dd><tt>set&nbsp;the&nbsp;epsilon&nbsp;for&nbsp;picking&nbsp;used&nbsp;by&nbsp;this&nbsp;artist<br>
&nbsp;<br>
picker&nbsp;can&nbsp;be&nbsp;one&nbsp;of&nbsp;the&nbsp;following:<br>
&nbsp;<br>
&nbsp;&nbsp;None&nbsp;-&nbsp;&nbsp;picking&nbsp;is&nbsp;disabled&nbsp;for&nbsp;this&nbsp;artist&nbsp;(default)<br>
&nbsp;<br>
&nbsp;&nbsp;boolean&nbsp;-&nbsp;if&nbsp;True&nbsp;then&nbsp;picking&nbsp;will&nbsp;be&nbsp;enabled&nbsp;and&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;artist&nbsp;will&nbsp;fire&nbsp;a&nbsp;pick&nbsp;event&nbsp;if&nbsp;the&nbsp;mouse&nbsp;event&nbsp;is&nbsp;over<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;artist<br>
&nbsp;<br>
&nbsp;&nbsp;float&nbsp;-&nbsp;if&nbsp;picker&nbsp;is&nbsp;a&nbsp;number&nbsp;it&nbsp;is&nbsp;interpreted&nbsp;as&nbsp;an<br>
&nbsp;&nbsp;&nbsp;&nbsp;epsilon&nbsp;tolerance&nbsp;in&nbsp;points&nbsp;and&nbsp;the&nbsp;the&nbsp;artist&nbsp;will&nbsp;fire<br>
&nbsp;&nbsp;&nbsp;&nbsp;off&nbsp;an&nbsp;event&nbsp;if&nbsp;it's&nbsp;data&nbsp;is&nbsp;within&nbsp;epsilon&nbsp;of&nbsp;the&nbsp;mouse<br>
&nbsp;&nbsp;&nbsp;&nbsp;event.&nbsp;&nbsp;For&nbsp;some&nbsp;artists&nbsp;like&nbsp;lines&nbsp;and&nbsp;patch&nbsp;collections,<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;artist&nbsp;may&nbsp;provide&nbsp;additional&nbsp;data&nbsp;to&nbsp;the&nbsp;pick&nbsp;event<br>
&nbsp;&nbsp;&nbsp;&nbsp;that&nbsp;is&nbsp;generated,&nbsp;eg&nbsp;the&nbsp;indices&nbsp;of&nbsp;the&nbsp;data&nbsp;within<br>
&nbsp;&nbsp;&nbsp;&nbsp;epsilon&nbsp;of&nbsp;the&nbsp;pick&nbsp;event<br>
&nbsp;<br>
&nbsp;&nbsp;function&nbsp;-&nbsp;if&nbsp;picker&nbsp;is&nbsp;callable,&nbsp;it&nbsp;is&nbsp;a&nbsp;user&nbsp;supplied<br>
&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;which&nbsp;determines&nbsp;whether&nbsp;the&nbsp;artist&nbsp;is&nbsp;hit&nbsp;by&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;mouse&nbsp;event.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hit,&nbsp;props&nbsp;=&nbsp;picker(artist,&nbsp;mouseevent)<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;determine&nbsp;the&nbsp;hit&nbsp;test.&nbsp;&nbsp;if&nbsp;the&nbsp;mouse&nbsp;event&nbsp;is&nbsp;over&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;artist,&nbsp;return&nbsp;hit=True&nbsp;and&nbsp;props&nbsp;is&nbsp;a&nbsp;dictionary&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;properties&nbsp;you&nbsp;want&nbsp;added&nbsp;to&nbsp;the&nbsp;PickEvent&nbsp;attributes<br>
&nbsp;<br>
ACCEPTS:&nbsp;[None|float|boolean|callable]</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_transform"><strong>set_transform</strong></a>(self, t)</dt><dd><tt>set&nbsp;the&nbsp;Transformation&nbsp;instance&nbsp;used&nbsp;by&nbsp;this&nbsp;artist<br>
&nbsp;<br>
ACCEPTS:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_visible"><strong>set_visible</strong></a>(self, b)</dt><dd><tt>set&nbsp;the&nbsp;artist's&nbsp;visiblity<br>
&nbsp;<br>
ACCEPTS:&nbsp;[True&nbsp;|&nbsp;False]</tt></dd></dl>

<dl><dt><a name="PolarSubplot-set_zorder"><strong>set_zorder</strong></a>(self, level)</dt><dd><tt>Set&nbsp;the&nbsp;zorder&nbsp;for&nbsp;the&nbsp;artist<br>
&nbsp;<br>
ACCEPTS:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="PolarSubplot-update"><strong>update</strong></a>(self, props)</dt></dl>

<dl><dt><a name="PolarSubplot-update_from"><strong>update_from</strong></a>(self, other)</dt><dd><tt>copy&nbsp;properties&nbsp;from&nbsp;other&nbsp;to&nbsp;self</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a>:<br>
<dl><dt><strong>aname</strong> = 'Artist'</dl>

<dl><dt><strong>zorder</strong> = 0</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="Subplot">class <strong>Subplot</strong></a>(<a href="matplotlib.axes.html#SubplotBase">SubplotBase</a>, <a href="matplotlib.axes.html#Axes">Axes</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Emulate&nbsp;matlab's(TM)&nbsp;subplot&nbsp;command,&nbsp;creating&nbsp;axes&nbsp;with<br>
&nbsp;<br>
&nbsp;&nbsp;<a href="#Subplot">Subplot</a>(numRows,&nbsp;numCols,&nbsp;plotNum)<br>
&nbsp;<br>
where&nbsp;plotNum=1&nbsp;is&nbsp;the&nbsp;first&nbsp;plot&nbsp;number&nbsp;and&nbsp;increasing&nbsp;plotNums<br>
fill&nbsp;rows&nbsp;first.&nbsp;&nbsp;max(plotNum)==numRows*numCols<br>
&nbsp;<br>
You&nbsp;can&nbsp;leave&nbsp;out&nbsp;the&nbsp;commas&nbsp;if&nbsp;numRows&lt;=numCols&lt;=plotNum&lt;10,&nbsp;as<br>
in<br>
&nbsp;<br>
&nbsp;&nbsp;<a href="#Subplot">Subplot</a>(211)&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;2&nbsp;rows,&nbsp;1&nbsp;column,&nbsp;first&nbsp;(upper)&nbsp;plot<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.axes.html#Subplot">Subplot</a></dd>
<dd><a href="matplotlib.axes.html#SubplotBase">SubplotBase</a></dd>
<dd><a href="matplotlib.axes.html#Axes">Axes</a></dd>
<dd><a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="Subplot-__init__"><strong>__init__</strong></a>(self, fig, *args, **kwargs)</dt><dd><tt>See&nbsp;<a href="#Axes">Axes</a>&nbsp;base&nbsp;class&nbsp;documentation&nbsp;for&nbsp;args&nbsp;and&nbsp;kwargs</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.axes.html#SubplotBase">SubplotBase</a>:<br>
<dl><dt><a name="Subplot-change_geometry"><strong>change_geometry</strong></a>(self, numrows, numcols, num)</dt><dd><tt>change&nbsp;subplot&nbsp;geometry,&nbsp;eg&nbsp;from&nbsp;1,1,1&nbsp;to&nbsp;2,2,3</tt></dd></dl>

<dl><dt><a name="Subplot-get_geometry"><strong>get_geometry</strong></a>(self)</dt><dd><tt>get&nbsp;the&nbsp;subplot&nbsp;geometry,&nbsp;eg&nbsp;2,2,3</tt></dd></dl>

<dl><dt><a name="Subplot-is_first_col"><strong>is_first_col</strong></a>(self)</dt></dl>

<dl><dt><a name="Subplot-is_first_row"><strong>is_first_row</strong></a>(self)</dt></dl>

<dl><dt><a name="Subplot-is_last_col"><strong>is_last_col</strong></a>(self)</dt></dl>

<dl><dt><a name="Subplot-is_last_row"><strong>is_last_row</strong></a>(self)</dt></dl>

<dl><dt><a name="Subplot-label_outer"><strong>label_outer</strong></a>(self)</dt><dd><tt>set&nbsp;the&nbsp;visible&nbsp;property&nbsp;on&nbsp;ticklabels&nbsp;so&nbsp;xticklabels&nbsp;are<br>
visible&nbsp;only&nbsp;if&nbsp;the&nbsp;subplot&nbsp;is&nbsp;in&nbsp;the&nbsp;last&nbsp;row&nbsp;and&nbsp;yticklabels<br>
are&nbsp;visible&nbsp;only&nbsp;if&nbsp;the&nbsp;subplot&nbsp;is&nbsp;in&nbsp;the&nbsp;first&nbsp;column</tt></dd></dl>

<dl><dt><a name="Subplot-update_params"><strong>update_params</strong></a>(self)</dt><dd><tt>update&nbsp;the&nbsp;subplot&nbsp;position&nbsp;from&nbsp;fig.subplotpars</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.axes.html#Axes">Axes</a>:<br>
<dl><dt><a name="Subplot-acorr"><strong>acorr</strong></a>(self, x, **kwargs)</dt><dd><tt>ACORR(x,&nbsp;normed=False,&nbsp;detrend=detrend_none,&nbsp;usevlines=False,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maxlags=None,&nbsp;**kwargs)<br>
Plot&nbsp;the&nbsp;autocorrelation&nbsp;of&nbsp;x.&nbsp;&nbsp;If&nbsp;normed=True,&nbsp;normalize&nbsp;the<br>
data&nbsp;but&nbsp;the&nbsp;autocorrelation&nbsp;at&nbsp;0-th&nbsp;lag.&nbsp;&nbsp;x&nbsp;is&nbsp;detrended&nbsp;by<br>
the&nbsp;detrend&nbsp;callable&nbsp;(default&nbsp;no&nbsp;normalization.<br>
data&nbsp;are&nbsp;plotted&nbsp;as&nbsp;<a href="#Subplot-plot">plot</a>(lags,&nbsp;c,&nbsp;**kwargs)<br>
return&nbsp;value&nbsp;is&nbsp;lags,&nbsp;c,&nbsp;line&nbsp;where&nbsp;lags&nbsp;are&nbsp;a&nbsp;length<br>
2*maxlags+1&nbsp;lag&nbsp;vector,&nbsp;c&nbsp;is&nbsp;the&nbsp;2*maxlags+1&nbsp;auto&nbsp;correlation<br>
vector,&nbsp;and&nbsp;line&nbsp;is&nbsp;a&nbsp;Line2D&nbsp;instance&nbsp;returned&nbsp;by&nbsp;plot.&nbsp;&nbsp;The<br>
default&nbsp;linestyle&nbsp;is&nbsp;None&nbsp;and&nbsp;the&nbsp;default&nbsp;marker&nbsp;is&nbsp;'o',<br>
though&nbsp;these&nbsp;can&nbsp;be&nbsp;overridden&nbsp;with&nbsp;keyword&nbsp;args.&nbsp;&nbsp;The&nbsp;cross<br>
correlation&nbsp;is&nbsp;performed&nbsp;with&nbsp;numerix&nbsp;cross_correlate&nbsp;with<br>
mode=2.<br>
If&nbsp;usevlines&nbsp;is&nbsp;True,&nbsp;<a href="#Axes">Axes</a>.vlines&nbsp;rather&nbsp;than&nbsp;<a href="#Axes">Axes</a>.plot&nbsp;is&nbsp;used<br>
to&nbsp;draw&nbsp;vertical&nbsp;lines&nbsp;from&nbsp;the&nbsp;origin&nbsp;to&nbsp;the&nbsp;acorr.<br>
Otherwise&nbsp;the&nbsp;plotstyle&nbsp;is&nbsp;determined&nbsp;by&nbsp;the&nbsp;kwargs,&nbsp;which&nbsp;are<br>
Line2D&nbsp;properties.&nbsp;&nbsp;If&nbsp;usevlines,&nbsp;the&nbsp;return&nbsp;value&nbsp;is&nbsp;lags,&nbsp;c,<br>
linecol,&nbsp;b&nbsp;where&nbsp;linecol&nbsp;is&nbsp;the&nbsp;LineCollection&nbsp;and&nbsp;b&nbsp;is&nbsp;the&nbsp;x-axis<br>
if&nbsp;usevlines=True,&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;onto&nbsp;<a href="#Axes">Axes</a>.vlines<br>
if&nbsp;usevlines=False,&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;onto&nbsp;<a href="#Axes">Axes</a>.plot<br>
maxlags&nbsp;is&nbsp;a&nbsp;positive&nbsp;integer&nbsp;detailing&nbsp;the&nbsp;number&nbsp;of&nbsp;lags&nbsp;to&nbsp;show.<br>
The&nbsp;default&nbsp;value&nbsp;of&nbsp;None&nbsp;will&nbsp;return&nbsp;all&nbsp;(2*len(x)-1)&nbsp;lags.<br>
See&nbsp;the&nbsp;respective&nbsp;function&nbsp;for&nbsp;documentation&nbsp;on&nbsp;valid&nbsp;kwargs</tt></dd></dl>

<dl><dt><a name="Subplot-add_artist"><strong>add_artist</strong></a>(self, a)</dt><dd><tt>Add&nbsp;any&nbsp;artist&nbsp;to&nbsp;the&nbsp;axes</tt></dd></dl>

<dl><dt><a name="Subplot-add_collection"><strong>add_collection</strong></a>(self, collection, autolim<font color="#909090">=False</font>)</dt><dd><tt>add&nbsp;a&nbsp;Collection&nbsp;instance&nbsp;to&nbsp;<a href="#Axes">Axes</a></tt></dd></dl>

<dl><dt><a name="Subplot-add_line"><strong>add_line</strong></a>(self, line)</dt><dd><tt>Add&nbsp;a&nbsp;line&nbsp;to&nbsp;the&nbsp;list&nbsp;of&nbsp;plot&nbsp;lines</tt></dd></dl>

<dl><dt><a name="Subplot-add_patch"><strong>add_patch</strong></a>(self, p)</dt><dd><tt>Add&nbsp;a&nbsp;patch&nbsp;to&nbsp;the&nbsp;list&nbsp;of&nbsp;<a href="#Axes">Axes</a>&nbsp;patches;&nbsp;the&nbsp;clipbox&nbsp;will&nbsp;be<br>
set&nbsp;to&nbsp;the&nbsp;<a href="#Axes">Axes</a>&nbsp;clipping&nbsp;box.&nbsp;&nbsp;If&nbsp;the&nbsp;transform&nbsp;is&nbsp;not&nbsp;set,&nbsp;it<br>
wil&nbsp;be&nbsp;set&nbsp;to&nbsp;self.<strong>transData</strong>.</tt></dd></dl>

<dl><dt><a name="Subplot-add_table"><strong>add_table</strong></a>(self, tab)</dt><dd><tt>Add&nbsp;a&nbsp;table&nbsp;instance&nbsp;to&nbsp;the&nbsp;list&nbsp;of&nbsp;axes&nbsp;tables</tt></dd></dl>

<dl><dt><a name="Subplot-annotate"><strong>annotate</strong></a>(self, *args, **kwargs)</dt><dd><tt><a href="#Subplot-annotate">annotate</a>(self,&nbsp;s,&nbsp;xyloc,&nbsp;textloc,<br>
&nbsp;xycoords='data',&nbsp;textcoords='data',<br>
&nbsp;lineprops=None,<br>
&nbsp;markerprops=None<br>
&nbsp;**props)<br>
alpha:&nbsp;float<br>
animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
label:&nbsp;any&nbsp;string<br>
lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
picker:&nbsp;[None|float|boolean|callable]<br>
position:&nbsp;(x,y)<br>
rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
x:&nbsp;float<br>
y:&nbsp;float<br>
zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-apply_aspect"><strong>apply_aspect</strong></a>(self, data_ratio<font color="#909090">=None</font>)</dt><dd><tt>Use&nbsp;self.<strong>_aspect</strong>&nbsp;and&nbsp;self.<strong>_adjustable</strong>&nbsp;to&nbsp;modify&nbsp;the<br>
axes&nbsp;box&nbsp;or&nbsp;the&nbsp;view&nbsp;limits.<br>
The&nbsp;data_ratio&nbsp;kwarg&nbsp;is&nbsp;set&nbsp;to&nbsp;1&nbsp;for&nbsp;polar&nbsp;axes.&nbsp;&nbsp;It&nbsp;is<br>
used&nbsp;only&nbsp;when&nbsp;_adjustable&nbsp;is&nbsp;'box'.</tt></dd></dl>

<dl><dt><a name="Subplot-arrow"><strong>arrow</strong></a>(self, x, y, dx, dy, **kwargs)</dt><dd><tt>Draws&nbsp;arrow&nbsp;on&nbsp;specified&nbsp;axis&nbsp;from&nbsp;(x,y)&nbsp;to&nbsp;(x+dx,y+dy).<br>
Optional&nbsp;kwargs&nbsp;control&nbsp;the&nbsp;arrow&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-autoscale_view"><strong>autoscale_view</strong></a>(self, tight<font color="#909090">=False</font>, scalex<font color="#909090">=True</font>, scaley<font color="#909090">=True</font>)</dt><dd><tt>autoscale&nbsp;the&nbsp;view&nbsp;limits&nbsp;using&nbsp;the&nbsp;data&nbsp;limits.&nbsp;You&nbsp;can<br>
selectively&nbsp;autoscale&nbsp;only&nbsp;a&nbsp;single&nbsp;axis,&nbsp;eg,&nbsp;the&nbsp;xaxis&nbsp;by<br>
setting&nbsp;scaley&nbsp;to&nbsp;False.&nbsp;&nbsp;The&nbsp;autoscaling&nbsp;preserves&nbsp;any<br>
axis&nbsp;direction&nbsp;reversal&nbsp;that&nbsp;has&nbsp;already&nbsp;been&nbsp;done.</tt></dd></dl>

<dl><dt><a name="Subplot-axhline"><strong>axhline</strong></a>(self, y<font color="#909090">=0</font>, xmin<font color="#909090">=0</font>, xmax<font color="#909090">=1</font>, **kwargs)</dt><dd><tt>AXHLINE(y=0,&nbsp;xmin=0,&nbsp;xmax=1,&nbsp;**kwargs)<br>
Axis&nbsp;Horizontal&nbsp;Line<br>
Draw&nbsp;a&nbsp;horizontal&nbsp;line&nbsp;at&nbsp;y&nbsp;from&nbsp;xmin&nbsp;to&nbsp;xmax.&nbsp;&nbsp;With&nbsp;the&nbsp;default<br>
values&nbsp;of&nbsp;xmin=0&nbsp;and&nbsp;xmax=1,&nbsp;this&nbsp;line&nbsp;will&nbsp;always&nbsp;span&nbsp;the&nbsp;horizontal<br>
extent&nbsp;of&nbsp;the&nbsp;axes,&nbsp;regardless&nbsp;of&nbsp;the&nbsp;xlim&nbsp;settings,&nbsp;even&nbsp;if&nbsp;you<br>
change&nbsp;them,&nbsp;eg&nbsp;with&nbsp;the&nbsp;xlim&nbsp;command.&nbsp;&nbsp;That&nbsp;is,&nbsp;the&nbsp;horizontal&nbsp;extent<br>
is&nbsp;in&nbsp;axes&nbsp;coords:&nbsp;0=left,&nbsp;0.5=middle,&nbsp;1.0=right&nbsp;but&nbsp;the&nbsp;y&nbsp;location&nbsp;is<br>
in&nbsp;data&nbsp;coordinates.<br>
Return&nbsp;value&nbsp;is&nbsp;the&nbsp;Line2D&nbsp;instance.&nbsp;&nbsp;kwargs&nbsp;are&nbsp;the&nbsp;same&nbsp;as&nbsp;kwargs&nbsp;to<br>
plot,&nbsp;and&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;control&nbsp;the&nbsp;line&nbsp;properties.&nbsp;&nbsp;Eg<br>
&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;thick&nbsp;red&nbsp;hline&nbsp;at&nbsp;y=0&nbsp;that&nbsp;spans&nbsp;the&nbsp;xrange<br>
&nbsp;&nbsp;<a href="#Subplot-axhline">axhline</a>(linewidth=4,&nbsp;color='r')<br>
&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;default&nbsp;hline&nbsp;at&nbsp;y=1&nbsp;that&nbsp;spans&nbsp;the&nbsp;xrange<br>
&nbsp;&nbsp;<a href="#Subplot-axhline">axhline</a>(y=1)<br>
&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;default&nbsp;hline&nbsp;at&nbsp;y=.5&nbsp;that&nbsp;spans&nbsp;the&nbsp;the&nbsp;middle&nbsp;half&nbsp;of<br>
&nbsp;&nbsp;#&nbsp;the&nbsp;xrange<br>
&nbsp;&nbsp;<a href="#Subplot-axhline">axhline</a>(y=.5,&nbsp;xmin=0.25,&nbsp;xmax=0.75)<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-axhspan"><strong>axhspan</strong></a>(self, ymin, ymax, xmin<font color="#909090">=0</font>, xmax<font color="#909090">=1</font>, **kwargs)</dt><dd><tt>AXHSPAN(ymin,&nbsp;ymax,&nbsp;xmin=0,&nbsp;xmax=1,&nbsp;**kwargs)<br>
Axis&nbsp;Horizontal&nbsp;Span.&nbsp;&nbsp;ycoords&nbsp;are&nbsp;in&nbsp;data&nbsp;units&nbsp;and&nbsp;x<br>
coords&nbsp;are&nbsp;in&nbsp;axes&nbsp;(relative&nbsp;0-1)&nbsp;units<br>
Draw&nbsp;a&nbsp;horizontal&nbsp;span&nbsp;(regtangle)&nbsp;from&nbsp;ymin&nbsp;to&nbsp;ymax.&nbsp;&nbsp;With&nbsp;the<br>
default&nbsp;values&nbsp;of&nbsp;xmin=0&nbsp;and&nbsp;xmax=1,&nbsp;this&nbsp;always&nbsp;span&nbsp;the&nbsp;xrange,<br>
regardless&nbsp;of&nbsp;the&nbsp;xlim&nbsp;settings,&nbsp;even&nbsp;if&nbsp;you&nbsp;change&nbsp;them,&nbsp;eg&nbsp;with&nbsp;the<br>
xlim&nbsp;command.&nbsp;&nbsp;That&nbsp;is,&nbsp;the&nbsp;horizontal&nbsp;extent&nbsp;is&nbsp;in&nbsp;axes&nbsp;coords:<br>
0=left,&nbsp;0.5=middle,&nbsp;1.0=right&nbsp;but&nbsp;the&nbsp;y&nbsp;location&nbsp;is&nbsp;in&nbsp;data<br>
coordinates.<br>
kwargs&nbsp;are&nbsp;the&nbsp;kwargs&nbsp;to&nbsp;Patch,&nbsp;eg<br>
&nbsp;&nbsp;antialiased,&nbsp;aa<br>
&nbsp;&nbsp;linewidth,&nbsp;&nbsp;&nbsp;lw<br>
&nbsp;&nbsp;edgecolor,&nbsp;&nbsp;&nbsp;ec<br>
&nbsp;&nbsp;facecolor,&nbsp;&nbsp;&nbsp;fc<br>
the&nbsp;terms&nbsp;on&nbsp;the&nbsp;right&nbsp;are&nbsp;aliases<br>
Return&nbsp;value&nbsp;is&nbsp;the&nbsp;patches.Polygon&nbsp;instance.<br>
&nbsp;&nbsp;&nbsp;&nbsp;#draws&nbsp;a&nbsp;gray&nbsp;rectangle&nbsp;from&nbsp;y=0.25-0.75&nbsp;that&nbsp;spans&nbsp;the&nbsp;horizontal<br>
&nbsp;&nbsp;&nbsp;&nbsp;#extent&nbsp;of&nbsp;the&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-axhspan">axhspan</a>(0.25,&nbsp;0.75,&nbsp;facecolor='0.5',&nbsp;alpha=0.5)<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Polygon&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-axis"><strong>axis</strong></a>(self, *v, **kwargs)</dt><dd><tt>Convenience&nbsp;method&nbsp;for&nbsp;manipulating&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;view&nbsp;limits<br>
and&nbsp;the&nbsp;aspect&nbsp;ratio&nbsp;of&nbsp;the&nbsp;plot.<br>
&nbsp;<br>
kwargs&nbsp;are&nbsp;passed&nbsp;on&nbsp;to&nbsp;set_xlim&nbsp;and&nbsp;set_ylim&nbsp;--&nbsp;see&nbsp;their&nbsp;docstrings&nbsp;for&nbsp;details</tt></dd></dl>

<dl><dt><a name="Subplot-axvline"><strong>axvline</strong></a>(self, x<font color="#909090">=0</font>, ymin<font color="#909090">=0</font>, ymax<font color="#909090">=1</font>, **kwargs)</dt><dd><tt>AXVLINE(x=0,&nbsp;ymin=0,&nbsp;ymax=1,&nbsp;**kwargs)<br>
Axis&nbsp;Vertical&nbsp;Line<br>
Draw&nbsp;a&nbsp;vertical&nbsp;line&nbsp;at&nbsp;x&nbsp;from&nbsp;ymin&nbsp;to&nbsp;ymax.&nbsp;&nbsp;With&nbsp;the&nbsp;default&nbsp;values<br>
of&nbsp;ymin=0&nbsp;and&nbsp;ymax=1,&nbsp;this&nbsp;line&nbsp;will&nbsp;always&nbsp;span&nbsp;the&nbsp;vertical&nbsp;extent<br>
of&nbsp;the&nbsp;axes,&nbsp;regardless&nbsp;of&nbsp;the&nbsp;xlim&nbsp;settings,&nbsp;even&nbsp;if&nbsp;you&nbsp;change&nbsp;them,<br>
eg&nbsp;with&nbsp;the&nbsp;xlim&nbsp;command.&nbsp;&nbsp;That&nbsp;is,&nbsp;the&nbsp;vertical&nbsp;extent&nbsp;is&nbsp;in&nbsp;axes<br>
coords:&nbsp;0=bottom,&nbsp;0.5=middle,&nbsp;1.0=top&nbsp;but&nbsp;the&nbsp;x&nbsp;location&nbsp;is&nbsp;in&nbsp;data<br>
coordinates.<br>
Return&nbsp;value&nbsp;is&nbsp;the&nbsp;Line2D&nbsp;instance.&nbsp;&nbsp;kwargs&nbsp;are&nbsp;the&nbsp;same&nbsp;as<br>
kwargs&nbsp;to&nbsp;plot,&nbsp;and&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;control&nbsp;the&nbsp;line&nbsp;properties.&nbsp;&nbsp;Eg<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;thick&nbsp;red&nbsp;vline&nbsp;at&nbsp;x=0&nbsp;that&nbsp;spans&nbsp;the&nbsp;yrange<br>
&nbsp;&nbsp;&nbsp;&nbsp;l&nbsp;=&nbsp;<a href="#Subplot-axvline">axvline</a>(linewidth=4,&nbsp;color='r')<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;default&nbsp;vline&nbsp;at&nbsp;x=1&nbsp;that&nbsp;spans&nbsp;the&nbsp;yrange<br>
&nbsp;&nbsp;&nbsp;&nbsp;l&nbsp;=&nbsp;<a href="#Subplot-axvline">axvline</a>(x=1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;default&nbsp;vline&nbsp;at&nbsp;x=.5&nbsp;that&nbsp;spans&nbsp;the&nbsp;the&nbsp;middle&nbsp;half&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;yrange<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-axvline">axvline</a>(x=.5,&nbsp;ymin=0.25,&nbsp;ymax=0.75)<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-axvspan"><strong>axvspan</strong></a>(self, xmin, xmax, ymin<font color="#909090">=0</font>, ymax<font color="#909090">=1</font>, **kwargs)</dt><dd><tt>AXVSPAN(xmin,&nbsp;xmax,&nbsp;ymin=0,&nbsp;ymax=1,&nbsp;**kwargs)<br>
axvspan&nbsp;:&nbsp;Axis&nbsp;Vertical&nbsp;Span.&nbsp;&nbsp;xcoords&nbsp;are&nbsp;in&nbsp;data&nbsp;units&nbsp;and&nbsp;y&nbsp;coords<br>
are&nbsp;in&nbsp;axes&nbsp;(relative&nbsp;0-1)&nbsp;units<br>
Draw&nbsp;a&nbsp;vertical&nbsp;span&nbsp;(regtangle)&nbsp;from&nbsp;xmin&nbsp;to&nbsp;xmax.&nbsp;&nbsp;With&nbsp;the&nbsp;default<br>
values&nbsp;of&nbsp;ymin=0&nbsp;and&nbsp;ymax=1,&nbsp;this&nbsp;always&nbsp;span&nbsp;the&nbsp;yrange,&nbsp;regardless<br>
of&nbsp;the&nbsp;ylim&nbsp;settings,&nbsp;even&nbsp;if&nbsp;you&nbsp;change&nbsp;them,&nbsp;eg&nbsp;with&nbsp;the&nbsp;ylim<br>
command.&nbsp;&nbsp;That&nbsp;is,&nbsp;the&nbsp;vertical&nbsp;extent&nbsp;is&nbsp;in&nbsp;axes&nbsp;coords:&nbsp;0=bottom,<br>
0.5=middle,&nbsp;1.0=top&nbsp;but&nbsp;the&nbsp;y&nbsp;location&nbsp;is&nbsp;in&nbsp;data&nbsp;coordinates.<br>
kwargs&nbsp;are&nbsp;the&nbsp;kwargs&nbsp;to&nbsp;Patch,&nbsp;eg<br>
&nbsp;&nbsp;antialiased,&nbsp;aa<br>
&nbsp;&nbsp;linewidth,&nbsp;&nbsp;&nbsp;lw<br>
&nbsp;&nbsp;edgecolor,&nbsp;&nbsp;&nbsp;ec<br>
&nbsp;&nbsp;facecolor,&nbsp;&nbsp;&nbsp;fc<br>
the&nbsp;terms&nbsp;on&nbsp;the&nbsp;right&nbsp;are&nbsp;aliases<br>
return&nbsp;value&nbsp;is&nbsp;the&nbsp;patches.Polygon&nbsp;instance.<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;draw&nbsp;a&nbsp;vertical&nbsp;green&nbsp;translucent&nbsp;rectangle&nbsp;from&nbsp;x=1.25&nbsp;to&nbsp;1.55&nbsp;that<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;spans&nbsp;the&nbsp;yrange&nbsp;of&nbsp;the&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-axvspan">axvspan</a>(1.25,&nbsp;1.55,&nbsp;facecolor='g',&nbsp;alpha=0.5)<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Polygon&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-bar"><strong>bar</strong></a>(self, left, height, width<font color="#909090">=0.80000000000000004</font>, bottom<font color="#909090">=None</font>, color<font color="#909090">=None</font>, edgecolor<font color="#909090">=None</font>, linewidth<font color="#909090">=None</font>, yerr<font color="#909090">=None</font>, xerr<font color="#909090">=None</font>, ecolor<font color="#909090">=None</font>, capsize<font color="#909090">=3</font>, align<font color="#909090">='edge'</font>, orientation<font color="#909090">='vertical'</font>, log<font color="#909090">=False</font>, **kwargs)</dt><dd><tt>BAR(left,&nbsp;height,&nbsp;width=0.8,&nbsp;bottom=0,<br>
&nbsp;&nbsp;&nbsp;&nbsp;color=None,&nbsp;edgecolor=None,&nbsp;linewidth=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;yerr=None,&nbsp;xerr=None,&nbsp;ecolor=None,&nbsp;capsize=3,<br>
&nbsp;&nbsp;&nbsp;&nbsp;align='edge',&nbsp;orientation='vertical',&nbsp;log=False)<br>
Make&nbsp;a&nbsp;bar&nbsp;plot&nbsp;with&nbsp;rectangles&nbsp;bounded&nbsp;by<br>
&nbsp;&nbsp;left,&nbsp;left+width,&nbsp;bottom,&nbsp;bottom+height<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(left,&nbsp;right,&nbsp;bottom&nbsp;and&nbsp;top&nbsp;edges)<br>
left,&nbsp;height,&nbsp;width,&nbsp;and&nbsp;bottom&nbsp;can&nbsp;be&nbsp;either&nbsp;scalars&nbsp;or&nbsp;sequences<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;Rectangle&nbsp;patch&nbsp;instances<br>
&nbsp;&nbsp;&nbsp;&nbsp;left&nbsp;-&nbsp;the&nbsp;x&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;left&nbsp;sides&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;height&nbsp;-&nbsp;the&nbsp;heights&nbsp;of&nbsp;the&nbsp;bars<br>
Optional&nbsp;arguments:<br>
&nbsp;&nbsp;&nbsp;&nbsp;width&nbsp;-&nbsp;the&nbsp;widths&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;bottom&nbsp;-&nbsp;the&nbsp;y&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;bottom&nbsp;edges&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;-&nbsp;the&nbsp;colors&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;-&nbsp;the&nbsp;colors&nbsp;of&nbsp;the&nbsp;bar&nbsp;edges<br>
&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;-&nbsp;width&nbsp;of&nbsp;bar&nbsp;edges;&nbsp;None&nbsp;means&nbsp;use&nbsp;default<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth;&nbsp;0&nbsp;means&nbsp;don't&nbsp;draw&nbsp;edges.<br>
&nbsp;&nbsp;&nbsp;&nbsp;xerr&nbsp;and&nbsp;yerr,&nbsp;if&nbsp;not&nbsp;None,&nbsp;will&nbsp;be&nbsp;used&nbsp;to&nbsp;generate&nbsp;errorbars<br>
&nbsp;&nbsp;&nbsp;&nbsp;on&nbsp;the&nbsp;bar&nbsp;chart<br>
&nbsp;&nbsp;&nbsp;&nbsp;ecolor&nbsp;specifies&nbsp;the&nbsp;color&nbsp;of&nbsp;any&nbsp;errorbar<br>
&nbsp;&nbsp;&nbsp;&nbsp;capsize&nbsp;(default&nbsp;3)&nbsp;determines&nbsp;the&nbsp;length&nbsp;in&nbsp;points&nbsp;of&nbsp;the&nbsp;error<br>
&nbsp;&nbsp;&nbsp;&nbsp;bar&nbsp;caps<br>
&nbsp;&nbsp;&nbsp;&nbsp;align&nbsp;=&nbsp;'edge'&nbsp;(default)&nbsp;|&nbsp;'center'<br>
&nbsp;&nbsp;&nbsp;&nbsp;orientation&nbsp;=&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;log&nbsp;=&nbsp;False&nbsp;|&nbsp;True&nbsp;-&nbsp;False&nbsp;(default)&nbsp;leaves&nbsp;the&nbsp;orientation<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axis&nbsp;as-is;&nbsp;True&nbsp;sets&nbsp;it&nbsp;to&nbsp;log&nbsp;scale<br>
For&nbsp;vertical&nbsp;bars,&nbsp;align='edge'&nbsp;aligns&nbsp;bars&nbsp;by&nbsp;their&nbsp;left&nbsp;edges&nbsp;in<br>
left,&nbsp;while&nbsp;'center'&nbsp;interprets&nbsp;these&nbsp;values&nbsp;as&nbsp;the&nbsp;x&nbsp;coordinates&nbsp;of<br>
the&nbsp;bar&nbsp;centers.&nbsp;For&nbsp;horizontal&nbsp;bars,&nbsp;'edge'&nbsp;aligns&nbsp;bars&nbsp;by&nbsp;their<br>
bottom&nbsp;edges&nbsp;in&nbsp;bottom,&nbsp;while&nbsp;'center'&nbsp;interprets&nbsp;these&nbsp;values&nbsp;as&nbsp;the<br>
y&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;bar&nbsp;centers.<br>
The&nbsp;optional&nbsp;arguments&nbsp;color,&nbsp;edgecolor,&nbsp;linewidth,&nbsp;xerr,&nbsp;and&nbsp;yerr&nbsp;can<br>
be&nbsp;either&nbsp;scalars&nbsp;or&nbsp;sequences&nbsp;of&nbsp;length&nbsp;equal&nbsp;to&nbsp;the&nbsp;number&nbsp;of&nbsp;bars.<br>
This&nbsp;enables&nbsp;you&nbsp;to&nbsp;use&nbsp;bar&nbsp;as&nbsp;the&nbsp;basis&nbsp;for&nbsp;stacked&nbsp;bar&nbsp;charts,&nbsp;or<br>
candlestick&nbsp;plots.<br>
Optional&nbsp;kwargs:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-barh"><strong>barh</strong></a>(self, bottom, width, height<font color="#909090">=0.80000000000000004</font>, left<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>BARH(bottom,&nbsp;width,&nbsp;height=0.8,&nbsp;left=0,&nbsp;**kwargs)<br>
Make&nbsp;a&nbsp;horizontal&nbsp;bar&nbsp;plot&nbsp;with&nbsp;rectangles&nbsp;bounded&nbsp;by<br>
&nbsp;&nbsp;left,&nbsp;left+width,&nbsp;bottom,&nbsp;bottom+height<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(left,&nbsp;right,&nbsp;bottom&nbsp;and&nbsp;top&nbsp;edges)<br>
bottom,&nbsp;width,&nbsp;height,&nbsp;and&nbsp;left&nbsp;can&nbsp;be&nbsp;either&nbsp;scalars&nbsp;or&nbsp;sequences<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;Rectangle&nbsp;patch&nbsp;instances<br>
&nbsp;&nbsp;&nbsp;&nbsp;bottom&nbsp;-&nbsp;the&nbsp;vertical&nbsp;positions&nbsp;of&nbsp;the&nbsp;bottom&nbsp;edges&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;width&nbsp;-&nbsp;the&nbsp;lengths&nbsp;of&nbsp;the&nbsp;bars<br>
Optional&nbsp;arguments:<br>
&nbsp;&nbsp;&nbsp;&nbsp;height&nbsp;-&nbsp;the&nbsp;heights&nbsp;(thicknesses)&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;left&nbsp;-&nbsp;the&nbsp;x&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;left&nbsp;edges&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;-&nbsp;the&nbsp;colors&nbsp;of&nbsp;the&nbsp;bars<br>
&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;-&nbsp;the&nbsp;colors&nbsp;of&nbsp;the&nbsp;bar&nbsp;edges<br>
&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;-&nbsp;width&nbsp;of&nbsp;bar&nbsp;edges;&nbsp;None&nbsp;means&nbsp;use&nbsp;default<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth;&nbsp;0&nbsp;means&nbsp;don't&nbsp;draw&nbsp;edges.<br>
&nbsp;&nbsp;&nbsp;&nbsp;xerr&nbsp;and&nbsp;yerr,&nbsp;if&nbsp;not&nbsp;None,&nbsp;will&nbsp;be&nbsp;used&nbsp;to&nbsp;generate&nbsp;errorbars<br>
&nbsp;&nbsp;&nbsp;&nbsp;on&nbsp;the&nbsp;bar&nbsp;chart<br>
&nbsp;&nbsp;&nbsp;&nbsp;ecolor&nbsp;specifies&nbsp;the&nbsp;color&nbsp;of&nbsp;any&nbsp;errorbar<br>
&nbsp;&nbsp;&nbsp;&nbsp;capsize&nbsp;(default&nbsp;3)&nbsp;determines&nbsp;the&nbsp;length&nbsp;in&nbsp;points&nbsp;of&nbsp;the&nbsp;error<br>
&nbsp;&nbsp;&nbsp;&nbsp;bar&nbsp;caps<br>
&nbsp;&nbsp;&nbsp;&nbsp;align&nbsp;=&nbsp;'edge'&nbsp;(default)&nbsp;|&nbsp;'center'<br>
&nbsp;&nbsp;&nbsp;&nbsp;log&nbsp;=&nbsp;False&nbsp;|&nbsp;True&nbsp;-&nbsp;False&nbsp;(default)&nbsp;leaves&nbsp;the&nbsp;horizontal<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axis&nbsp;as-is;&nbsp;True&nbsp;sets&nbsp;it&nbsp;to&nbsp;log&nbsp;scale<br>
Setting&nbsp;align='edge'&nbsp;aligns&nbsp;bars&nbsp;by&nbsp;their&nbsp;bottom&nbsp;edges&nbsp;in&nbsp;bottom,<br>
while&nbsp;'center'&nbsp;interprets&nbsp;these&nbsp;values&nbsp;as&nbsp;the&nbsp;y&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;bar<br>
centers.<br>
The&nbsp;optional&nbsp;arguments&nbsp;color,&nbsp;edgecolor,&nbsp;linewidth,&nbsp;xerr,&nbsp;and&nbsp;yerr&nbsp;can<br>
be&nbsp;either&nbsp;scalars&nbsp;or&nbsp;sequences&nbsp;of&nbsp;length&nbsp;equal&nbsp;to&nbsp;the&nbsp;number&nbsp;of&nbsp;bars.<br>
This&nbsp;enables&nbsp;you&nbsp;to&nbsp;use&nbsp;barh&nbsp;as&nbsp;the&nbsp;basis&nbsp;for&nbsp;stacked&nbsp;bar&nbsp;charts,&nbsp;or<br>
candlestick&nbsp;plots.<br>
Optional&nbsp;kwargs:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-boxplot"><strong>boxplot</strong></a>(self, x, notch<font color="#909090">=0</font>, sym<font color="#909090">='b+'</font>, vert<font color="#909090">=1</font>, whis<font color="#909090">=1.5</font>, positions<font color="#909090">=None</font>, widths<font color="#909090">=None</font>)</dt><dd><tt><a href="#Subplot-boxplot">boxplot</a>(x,&nbsp;notch=0,&nbsp;sym='+',&nbsp;vert=1,&nbsp;whis=1.5,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;positions=None,&nbsp;widths=None)<br>
&nbsp;<br>
Make&nbsp;a&nbsp;box&nbsp;and&nbsp;whisker&nbsp;plot&nbsp;for&nbsp;each&nbsp;column&nbsp;of&nbsp;x&nbsp;or<br>
each&nbsp;vector&nbsp;in&nbsp;sequence&nbsp;x.<br>
The&nbsp;box&nbsp;extends&nbsp;from&nbsp;the&nbsp;lower&nbsp;to&nbsp;upper&nbsp;quartile&nbsp;values<br>
of&nbsp;the&nbsp;data,&nbsp;with&nbsp;a&nbsp;line&nbsp;at&nbsp;the&nbsp;median.&nbsp;&nbsp;The&nbsp;whiskers<br>
extend&nbsp;from&nbsp;the&nbsp;box&nbsp;to&nbsp;show&nbsp;the&nbsp;range&nbsp;of&nbsp;the&nbsp;data.&nbsp;&nbsp;Flier<br>
points&nbsp;are&nbsp;those&nbsp;past&nbsp;the&nbsp;end&nbsp;of&nbsp;the&nbsp;whiskers.<br>
&nbsp;<br>
notch&nbsp;=&nbsp;0&nbsp;(default)&nbsp;produces&nbsp;a&nbsp;rectangular&nbsp;box&nbsp;plot.<br>
notch&nbsp;=&nbsp;1&nbsp;will&nbsp;produce&nbsp;a&nbsp;notched&nbsp;box&nbsp;plot<br>
&nbsp;<br>
sym&nbsp;(default&nbsp;'b+')&nbsp;is&nbsp;the&nbsp;default&nbsp;symbol&nbsp;for&nbsp;flier&nbsp;points.<br>
Enter&nbsp;an&nbsp;empty&nbsp;string&nbsp;('')&nbsp;if&nbsp;you&nbsp;don't&nbsp;want&nbsp;to&nbsp;show&nbsp;fliers.<br>
&nbsp;<br>
vert&nbsp;=&nbsp;1&nbsp;(default)&nbsp;makes&nbsp;the&nbsp;boxes&nbsp;vertical.<br>
vert&nbsp;=&nbsp;0&nbsp;makes&nbsp;horizontal&nbsp;boxes.&nbsp;&nbsp;This&nbsp;seems&nbsp;goofy,&nbsp;but<br>
that's&nbsp;how&nbsp;Matlab&nbsp;did&nbsp;it.<br>
&nbsp;<br>
whis&nbsp;(default&nbsp;1.5)&nbsp;defines&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;whiskers&nbsp;as<br>
a&nbsp;function&nbsp;of&nbsp;the&nbsp;inner&nbsp;quartile&nbsp;range.&nbsp;&nbsp;They&nbsp;extend&nbsp;to&nbsp;the<br>
most&nbsp;extreme&nbsp;data&nbsp;point&nbsp;within&nbsp;(&nbsp;whis*(75%-25%)&nbsp;)&nbsp;data&nbsp;range.<br>
&nbsp;<br>
positions&nbsp;(default&nbsp;1,2,...,n)&nbsp;sets&nbsp;the&nbsp;horizontal&nbsp;positions&nbsp;of<br>
the&nbsp;boxes.&nbsp;The&nbsp;ticks&nbsp;and&nbsp;limits&nbsp;are&nbsp;automatically&nbsp;set&nbsp;to&nbsp;match<br>
the&nbsp;positions.<br>
&nbsp;<br>
widths&nbsp;is&nbsp;either&nbsp;a&nbsp;scalar&nbsp;or&nbsp;a&nbsp;vector&nbsp;and&nbsp;sets&nbsp;the&nbsp;width&nbsp;of<br>
each&nbsp;box.&nbsp;The&nbsp;default&nbsp;is&nbsp;0.5,&nbsp;or&nbsp;0.15*(distance&nbsp;between&nbsp;extreme<br>
positions)&nbsp;if&nbsp;that&nbsp;is&nbsp;smaller.<br>
&nbsp;<br>
x&nbsp;is&nbsp;an&nbsp;array&nbsp;or&nbsp;a&nbsp;sequence&nbsp;of&nbsp;vectors.<br>
&nbsp;<br>
Returns&nbsp;a&nbsp;list&nbsp;of&nbsp;the&nbsp;lines&nbsp;added.</tt></dd></dl>

<dl><dt><a name="Subplot-broken_barh"><strong>broken_barh</strong></a>(self, xranges, yrange, **kwargs)</dt><dd><tt>A&nbsp;collection&nbsp;of&nbsp;horizontal&nbsp;bars&nbsp;spanning&nbsp;yrange&nbsp;with&nbsp;a&nbsp;sequence&nbsp;of<br>
xranges<br>
xranges&nbsp;:&nbsp;sequence&nbsp;of&nbsp;(xmin,&nbsp;xwidth)<br>
yrange&nbsp;&nbsp;:&nbsp;(ymin,&nbsp;ywidth)<br>
kwargs&nbsp;are&nbsp;collections.BrokenBarHCollection&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clim:&nbsp;a&nbsp;length&nbsp;2&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap:&nbsp;a&nbsp;colormap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colorbar:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
these&nbsp;can&nbsp;either&nbsp;be&nbsp;a&nbsp;single&nbsp;argument,&nbsp;ie&nbsp;facecolors='black'<br>
or&nbsp;a&nbsp;sequence&nbsp;of&nbsp;arguments&nbsp;for&nbsp;the&nbsp;various&nbsp;bars,&nbsp;ie<br>
facecolors='black',&nbsp;'red',&nbsp;'green'</tt></dd></dl>

<dl><dt><a name="Subplot-cla"><strong>cla</strong></a>(self)</dt><dd><tt>Clear&nbsp;the&nbsp;current&nbsp;axes</tt></dd></dl>

<dl><dt><a name="Subplot-clabel"><strong>clabel</strong></a>(self, CS, *args, **kwargs)</dt><dd><tt><a href="#Subplot-clabel">clabel</a>(CS,&nbsp;**kwargs)&nbsp;-&nbsp;add&nbsp;labels&nbsp;to&nbsp;line&nbsp;contours&nbsp;in&nbsp;CS,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;where&nbsp;CS&nbsp;is&nbsp;a&nbsp;ContourSet&nbsp;object&nbsp;returned&nbsp;by&nbsp;contour.<br>
&nbsp;<br>
<a href="#Subplot-clabel">clabel</a>(CS,&nbsp;V,&nbsp;**kwargs)&nbsp;-&nbsp;only&nbsp;label&nbsp;contours&nbsp;listed&nbsp;in&nbsp;V<br>
&nbsp;<br>
keyword&nbsp;arguments:<br>
&nbsp;<br>
*&nbsp;fontsize&nbsp;=&nbsp;None:&nbsp;as&nbsp;described&nbsp;in&nbsp;<a href="http://matplotlib.sf.net/fonts.html">http://matplotlib.sf.net/fonts.html</a><br>
&nbsp;<br>
*&nbsp;colors&nbsp;=&nbsp;None:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;tuple&nbsp;of&nbsp;matplotlib&nbsp;color&nbsp;args&nbsp;(string,&nbsp;float,&nbsp;rgb,&nbsp;etc),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;different&nbsp;labels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;different&nbsp;colors&nbsp;in&nbsp;the&nbsp;order<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specified<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;-&nbsp;one&nbsp;string&nbsp;color,&nbsp;e.g.&nbsp;colors&nbsp;=&nbsp;'r'&nbsp;or&nbsp;colors&nbsp;=&nbsp;'red',&nbsp;all&nbsp;labels<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;this&nbsp;color<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;colors&nbsp;==&nbsp;None,&nbsp;the&nbsp;color&nbsp;of&nbsp;each&nbsp;label&nbsp;matches&nbsp;the&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;corresponding&nbsp;contour<br>
&nbsp;<br>
*&nbsp;inline&nbsp;=&nbsp;True:&nbsp;controls&nbsp;whether&nbsp;the&nbsp;underlying&nbsp;contour&nbsp;is&nbsp;removed<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(inline&nbsp;=&nbsp;True)&nbsp;or&nbsp;not&nbsp;(False)<br>
&nbsp;<br>
*&nbsp;fmt&nbsp;=&nbsp;'%1.3f':&nbsp;a&nbsp;format&nbsp;string&nbsp;for&nbsp;the&nbsp;label</tt></dd></dl>

<dl><dt><a name="Subplot-clear"><strong>clear</strong></a>(self)</dt><dd><tt>clear&nbsp;the&nbsp;axes</tt></dd></dl>

<dl><dt><a name="Subplot-cohere"><strong>cohere</strong></a>(self, x, y, NFFT<font color="#909090">=256</font>, Fs<font color="#909090">=2</font>, detrend<font color="#909090">=&lt;function detrend_none at 0x847d844&gt;</font>, window<font color="#909090">=&lt;function window_hanning at 0x847d72c&gt;</font>, noverlap<font color="#909090">=0</font>, **kwargs)</dt><dd><tt>COHERE(x,&nbsp;y,&nbsp;NFFT=256,&nbsp;Fs=2,&nbsp;detrend=detrend_none,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window=window_hanning,&nbsp;noverlap=0,&nbsp;**kwargs)<br>
cohere&nbsp;the&nbsp;coherence&nbsp;between&nbsp;x&nbsp;and&nbsp;y.&nbsp;&nbsp;Coherence&nbsp;is&nbsp;the&nbsp;normalized<br>
cross&nbsp;spectral&nbsp;density<br>
&nbsp;&nbsp;Cxy&nbsp;=&nbsp;|Pxy|^2/(Pxx*Pyy)<br>
The&nbsp;return&nbsp;value&nbsp;is&nbsp;(Cxy,&nbsp;f),&nbsp;where&nbsp;f&nbsp;are&nbsp;the&nbsp;frequencies&nbsp;of&nbsp;the<br>
coherence&nbsp;vector.<br>
See&nbsp;the&nbsp;PSD&nbsp;help&nbsp;for&nbsp;a&nbsp;description&nbsp;of&nbsp;the&nbsp;optional&nbsp;parameters.<br>
kwargs&nbsp;are&nbsp;applied&nbsp;to&nbsp;the&nbsp;lines<br>
Returns&nbsp;the&nbsp;tuple&nbsp;Cxy,&nbsp;freqs<br>
Refs:&nbsp;Bendat&nbsp;&amp;&nbsp;Piersol&nbsp;--&nbsp;Random&nbsp;Data:&nbsp;Analysis&nbsp;and&nbsp;Measurement<br>
&nbsp;&nbsp;Procedures,&nbsp;John&nbsp;Wiley&nbsp;&amp;&nbsp;Sons&nbsp;(1986)<br>
kwargs&nbsp;control&nbsp;the&nbsp;Line2D&nbsp;properties&nbsp;of&nbsp;the&nbsp;coherence&nbsp;plot:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-connect"><strong>connect</strong></a>(self, s, func)</dt><dd><tt>Register&nbsp;observers&nbsp;to&nbsp;be&nbsp;notified&nbsp;when&nbsp;certain&nbsp;events&nbsp;occur.&nbsp;&nbsp;Register<br>
with&nbsp;callback&nbsp;functions&nbsp;with&nbsp;the&nbsp;following&nbsp;signatures.&nbsp;&nbsp;The&nbsp;function<br>
has&nbsp;the&nbsp;following&nbsp;signature<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;func(ax)&nbsp;&nbsp;#&nbsp;where&nbsp;ax&nbsp;is&nbsp;the&nbsp;instance&nbsp;making&nbsp;the&nbsp;callback.<br>
&nbsp;<br>
The&nbsp;following&nbsp;events&nbsp;can&nbsp;be&nbsp;connected&nbsp;to:<br>
&nbsp;<br>
&nbsp;&nbsp;'xlim_changed','ylim_changed'<br>
&nbsp;<br>
The&nbsp;connection&nbsp;id&nbsp;is&nbsp;is&nbsp;returned&nbsp;-&nbsp;you&nbsp;can&nbsp;use&nbsp;this&nbsp;with<br>
disconnect&nbsp;to&nbsp;disconnect&nbsp;from&nbsp;the&nbsp;axes&nbsp;event</tt></dd></dl>

<dl><dt><a name="Subplot-contour"><strong>contour</strong></a>(self, *args, **kwargs)</dt><dd><tt>contour&nbsp;and&nbsp;contourf&nbsp;draw&nbsp;contour&nbsp;lines&nbsp;and&nbsp;filled&nbsp;contours,<br>
respectively.&nbsp;&nbsp;Except&nbsp;as&nbsp;noted,&nbsp;function&nbsp;signatures&nbsp;and&nbsp;return<br>
values&nbsp;are&nbsp;the&nbsp;same&nbsp;for&nbsp;both&nbsp;versions.<br>
&nbsp;<br>
contourf&nbsp;differs&nbsp;from&nbsp;the&nbsp;Matlab&nbsp;(TM)&nbsp;version&nbsp;in&nbsp;that&nbsp;it&nbsp;does&nbsp;not<br>
&nbsp;&nbsp;&nbsp;&nbsp;draw&nbsp;the&nbsp;polygon&nbsp;edges,&nbsp;because&nbsp;the&nbsp;contouring&nbsp;engine&nbsp;yields<br>
&nbsp;&nbsp;&nbsp;&nbsp;simply&nbsp;connected&nbsp;regions&nbsp;with&nbsp;branch&nbsp;cuts.&nbsp;&nbsp;To&nbsp;draw&nbsp;the&nbsp;edges,<br>
&nbsp;&nbsp;&nbsp;&nbsp;add&nbsp;line&nbsp;contours&nbsp;with&nbsp;calls&nbsp;to&nbsp;contour.<br>
&nbsp;<br>
&nbsp;<br>
Function&nbsp;signatures<br>
&nbsp;<br>
<a href="#Subplot-contour">contour</a>(Z)&nbsp;-&nbsp;make&nbsp;a&nbsp;contour&nbsp;plot&nbsp;of&nbsp;an&nbsp;array&nbsp;Z.&nbsp;The&nbsp;level<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values&nbsp;are&nbsp;chosen&nbsp;automatically.<br>
&nbsp;<br>
<a href="#Subplot-contour">contour</a>(X,Y,Z)&nbsp;-&nbsp;X,Y&nbsp;specify&nbsp;the&nbsp;(x,y)&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;surface<br>
&nbsp;<br>
<a href="#Subplot-contour">contour</a>(Z,N)&nbsp;and&nbsp;<a href="#Subplot-contour">contour</a>(X,Y,Z,N)&nbsp;-&nbsp;contour&nbsp;N&nbsp;automatically-chosen<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;levels.<br>
&nbsp;<br>
<a href="#Subplot-contour">contour</a>(Z,V)&nbsp;and&nbsp;<a href="#Subplot-contour">contour</a>(X,Y,Z,V)&nbsp;-&nbsp;draw&nbsp;len(V)&nbsp;contour&nbsp;lines,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;the&nbsp;values&nbsp;specified&nbsp;in&nbsp;sequence&nbsp;V<br>
&nbsp;<br>
<a href="#Subplot-contourf">contourf</a>(...,&nbsp;V)&nbsp;-&nbsp;fill&nbsp;the&nbsp;(len(V)-1)&nbsp;regions&nbsp;between&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values&nbsp;in&nbsp;V<br>
&nbsp;<br>
<a href="#Subplot-contour">contour</a>(Z,&nbsp;**kwargs)&nbsp;-&nbsp;Use&nbsp;keyword&nbsp;args&nbsp;to&nbsp;control&nbsp;colors,&nbsp;linewidth,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;origin,&nbsp;cmap&nbsp;...&nbsp;see&nbsp;below<br>
&nbsp;<br>
X,&nbsp;Y,&nbsp;and&nbsp;Z&nbsp;must&nbsp;be&nbsp;arrays&nbsp;with&nbsp;the&nbsp;same&nbsp;dimensions.<br>
Z&nbsp;may&nbsp;be&nbsp;a&nbsp;masked&nbsp;array,&nbsp;but&nbsp;filled&nbsp;contouring&nbsp;may&nbsp;not&nbsp;handle<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;internal&nbsp;masked&nbsp;regions&nbsp;correctly.<br>
&nbsp;<br>
C&nbsp;=&nbsp;<a href="#Subplot-contour">contour</a>(...)&nbsp;returns&nbsp;a&nbsp;ContourSet&nbsp;object.<br>
&nbsp;<br>
&nbsp;<br>
Optional&nbsp;keyword&nbsp;args&nbsp;are&nbsp;shown&nbsp;with&nbsp;their&nbsp;defaults&nbsp;below&nbsp;(you&nbsp;must<br>
use&nbsp;kwargs&nbsp;for&nbsp;these):<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;colors&nbsp;=&nbsp;None;&nbsp;or&nbsp;one&nbsp;of&nbsp;the&nbsp;following:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;tuple&nbsp;of&nbsp;matplotlib&nbsp;color&nbsp;args&nbsp;(string,&nbsp;float,&nbsp;rgb,&nbsp;etc),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;different&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;different&nbsp;colors&nbsp;in&nbsp;the&nbsp;order<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specified<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;one&nbsp;string&nbsp;color,&nbsp;e.g.&nbsp;colors&nbsp;=&nbsp;'r'&nbsp;or&nbsp;colors&nbsp;=&nbsp;'red',&nbsp;all&nbsp;levels<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;this&nbsp;color<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;colors&nbsp;==&nbsp;None,&nbsp;the&nbsp;colormap&nbsp;specified&nbsp;by&nbsp;cmap&nbsp;will&nbsp;be&nbsp;used<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;alpha=1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;blending&nbsp;value<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;cmap&nbsp;=&nbsp;None:&nbsp;a&nbsp;cm&nbsp;Colormap&nbsp;instance&nbsp;from&nbsp;matplotlib.cm.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;cmap&nbsp;==&nbsp;None&nbsp;and&nbsp;colors&nbsp;==&nbsp;None,&nbsp;a&nbsp;default&nbsp;Colormap&nbsp;is&nbsp;used.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;norm&nbsp;=&nbsp;None:&nbsp;a&nbsp;matplotlib.colors.Normalize&nbsp;instance&nbsp;for<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scaling&nbsp;data&nbsp;values&nbsp;to&nbsp;colors.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;norm&nbsp;==&nbsp;None,&nbsp;and&nbsp;colors&nbsp;==&nbsp;None,&nbsp;the&nbsp;default<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linear&nbsp;scaling&nbsp;is&nbsp;used.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;origin&nbsp;=&nbsp;None:&nbsp;'upper'|'lower'|'image'|None.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;'image',&nbsp;the&nbsp;rc&nbsp;value&nbsp;for&nbsp;image.origin&nbsp;will&nbsp;be&nbsp;used.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;None&nbsp;(default),&nbsp;the&nbsp;first&nbsp;value&nbsp;of&nbsp;Z&nbsp;will&nbsp;correspond<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;the&nbsp;lower&nbsp;left&nbsp;corner,&nbsp;location&nbsp;(0,0).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This&nbsp;keyword&nbsp;is&nbsp;active&nbsp;only&nbsp;if&nbsp;contourf&nbsp;is&nbsp;called&nbsp;with<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;one&nbsp;or&nbsp;two&nbsp;arguments,&nbsp;that&nbsp;is,&nbsp;without&nbsp;explicitly<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specifying&nbsp;X&nbsp;and&nbsp;Y.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;extent&nbsp;=&nbsp;None:&nbsp;(x0,x1,y0,y1);&nbsp;also&nbsp;active&nbsp;only&nbsp;if&nbsp;X&nbsp;and&nbsp;Y<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;not&nbsp;specified.&nbsp;&nbsp;If&nbsp;origin&nbsp;is&nbsp;not&nbsp;None,&nbsp;then&nbsp;extent&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interpreted&nbsp;as&nbsp;in&nbsp;imshow:&nbsp;it&nbsp;gives&nbsp;the&nbsp;outer&nbsp;pixel&nbsp;boundaries.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;this&nbsp;case,&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[0,0]&nbsp;is&nbsp;the&nbsp;center&nbsp;of&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixel,&nbsp;not&nbsp;a&nbsp;corner.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;origin&nbsp;is&nbsp;None,&nbsp;then&nbsp;(x0,y0)&nbsp;is&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[0,0],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and&nbsp;(x1,y1)&nbsp;is&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[-1,-1].<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;locator&nbsp;=&nbsp;None:&nbsp;an&nbsp;instance&nbsp;of&nbsp;a&nbsp;ticker.Locator&nbsp;subclass;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;is&nbsp;MaxNLocator.&nbsp;&nbsp;It&nbsp;is&nbsp;used&nbsp;to&nbsp;determine&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contour&nbsp;levels&nbsp;if&nbsp;they&nbsp;are&nbsp;not&nbsp;given&nbsp;explicitly&nbsp;via&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;V&nbsp;argument.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*****&nbsp;New:&nbsp;*****<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;extend&nbsp;=&nbsp;'neither',&nbsp;'both',&nbsp;'min',&nbsp;'max'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Unless&nbsp;this&nbsp;is&nbsp;'neither'&nbsp;(default),&nbsp;contour&nbsp;levels&nbsp;are<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;automatically&nbsp;added&nbsp;to&nbsp;one&nbsp;or&nbsp;both&nbsp;ends&nbsp;of&nbsp;the&nbsp;range&nbsp;so&nbsp;that<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;all&nbsp;data&nbsp;are&nbsp;included.&nbsp;&nbsp;These&nbsp;added&nbsp;ranges&nbsp;are&nbsp;then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapped&nbsp;to&nbsp;the&nbsp;special&nbsp;colormap&nbsp;values&nbsp;which&nbsp;default&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;ends&nbsp;of&nbsp;the&nbsp;colormap&nbsp;range,&nbsp;but&nbsp;can&nbsp;be&nbsp;set&nbsp;via<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Colormap.set_under()&nbsp;and&nbsp;Colormap.set_over()&nbsp;methods.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;replace&nbsp;clip_ends=True&nbsp;and&nbsp;V&nbsp;=&nbsp;[-100,&nbsp;2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2,&nbsp;100],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;use&nbsp;extend='both'&nbsp;and&nbsp;V&nbsp;=&nbsp;[2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2].<br>
&nbsp;&nbsp;&nbsp;&nbsp;****************<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;contour&nbsp;only:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;linewidths&nbsp;=&nbsp;None:&nbsp;or&nbsp;one&nbsp;of&nbsp;these:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;number&nbsp;-&nbsp;all&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;with&nbsp;this&nbsp;linewidth,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.g.&nbsp;linewidths&nbsp;=&nbsp;0.6<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;tuple&nbsp;of&nbsp;numbers,&nbsp;e.g.&nbsp;linewidths&nbsp;=&nbsp;(0.4,&nbsp;0.8,&nbsp;1.2)&nbsp;different<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;with&nbsp;different&nbsp;linewidths&nbsp;in&nbsp;the&nbsp;order<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specified<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;linewidths&nbsp;==&nbsp;None,&nbsp;the&nbsp;default&nbsp;width&nbsp;in&nbsp;lines.linewidth&nbsp;in<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;matplotlibrc&nbsp;is&nbsp;used<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;contourf&nbsp;only:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*****&nbsp;Obsolete:&nbsp;****<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;clip_ends&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;False,&nbsp;the&nbsp;limits&nbsp;for&nbsp;color&nbsp;scaling&nbsp;are&nbsp;set&nbsp;to&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;contour&nbsp;levels.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;True&nbsp;(default)&nbsp;clips&nbsp;the&nbsp;scaling&nbsp;limits.&nbsp;&nbsp;Example:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;the&nbsp;contour&nbsp;boundaries&nbsp;are&nbsp;V&nbsp;=&nbsp;[-100,&nbsp;2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2,&nbsp;100],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;then&nbsp;the&nbsp;scaling&nbsp;limits&nbsp;will&nbsp;be&nbsp;[-100,&nbsp;100]&nbsp;if&nbsp;clip_ends<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;False,&nbsp;and&nbsp;[-3,&nbsp;3]&nbsp;if&nbsp;clip_ends&nbsp;is&nbsp;True.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;linewidths&nbsp;=&nbsp;None&nbsp;or&nbsp;a&nbsp;number;&nbsp;default&nbsp;of&nbsp;0.05&nbsp;works&nbsp;for<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Postscript;&nbsp;a&nbsp;value&nbsp;of&nbsp;about&nbsp;0.5&nbsp;seems&nbsp;better&nbsp;for&nbsp;Agg.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;antialiased&nbsp;=&nbsp;True&nbsp;(default)&nbsp;or&nbsp;False;&nbsp;if&nbsp;False,&nbsp;there&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;no&nbsp;need&nbsp;to&nbsp;increase&nbsp;the&nbsp;linewidths&nbsp;for&nbsp;Agg,&nbsp;but&nbsp;True&nbsp;gives<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nicer&nbsp;color&nbsp;boundaries.&nbsp;&nbsp;If&nbsp;antialiased&nbsp;is&nbsp;True&nbsp;and&nbsp;linewidths<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;too&nbsp;small,&nbsp;then&nbsp;there&nbsp;may&nbsp;be&nbsp;light-colored&nbsp;lines&nbsp;at&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;boundaries&nbsp;caused&nbsp;by&nbsp;the&nbsp;antialiasing.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;nchunk&nbsp;=&nbsp;0&nbsp;(default)&nbsp;for&nbsp;no&nbsp;subdivision&nbsp;of&nbsp;the&nbsp;domain;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specify&nbsp;a&nbsp;positive&nbsp;integer&nbsp;to&nbsp;divide&nbsp;the&nbsp;domain&nbsp;into<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;subdomains&nbsp;of&nbsp;roughly&nbsp;nchunk&nbsp;by&nbsp;nchunk&nbsp;points.&nbsp;This&nbsp;may<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;never&nbsp;actually&nbsp;be&nbsp;advantageous,&nbsp;so&nbsp;this&nbsp;option&nbsp;may&nbsp;be<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removed.&nbsp;&nbsp;Chunking&nbsp;introduces&nbsp;artifacts&nbsp;at&nbsp;the&nbsp;chunk<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boundaries&nbsp;unless&nbsp;antialiased&nbsp;=&nbsp;False,&nbsp;or&nbsp;linewidths&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set&nbsp;to&nbsp;a&nbsp;large&nbsp;enough&nbsp;value&nbsp;for&nbsp;the&nbsp;particular&nbsp;renderer&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolution.</tt></dd></dl>

<dl><dt><a name="Subplot-contourf"><strong>contourf</strong></a>(self, *args, **kwargs)</dt><dd><tt>contour&nbsp;and&nbsp;contourf&nbsp;draw&nbsp;contour&nbsp;lines&nbsp;and&nbsp;filled&nbsp;contours,<br>
respectively.&nbsp;&nbsp;Except&nbsp;as&nbsp;noted,&nbsp;function&nbsp;signatures&nbsp;and&nbsp;return<br>
values&nbsp;are&nbsp;the&nbsp;same&nbsp;for&nbsp;both&nbsp;versions.<br>
&nbsp;<br>
contourf&nbsp;differs&nbsp;from&nbsp;the&nbsp;Matlab&nbsp;(TM)&nbsp;version&nbsp;in&nbsp;that&nbsp;it&nbsp;does&nbsp;not<br>
&nbsp;&nbsp;&nbsp;&nbsp;draw&nbsp;the&nbsp;polygon&nbsp;edges,&nbsp;because&nbsp;the&nbsp;contouring&nbsp;engine&nbsp;yields<br>
&nbsp;&nbsp;&nbsp;&nbsp;simply&nbsp;connected&nbsp;regions&nbsp;with&nbsp;branch&nbsp;cuts.&nbsp;&nbsp;To&nbsp;draw&nbsp;the&nbsp;edges,<br>
&nbsp;&nbsp;&nbsp;&nbsp;add&nbsp;line&nbsp;contours&nbsp;with&nbsp;calls&nbsp;to&nbsp;contour.<br>
&nbsp;<br>
&nbsp;<br>
Function&nbsp;signatures<br>
&nbsp;<br>
<a href="#Subplot-contour">contour</a>(Z)&nbsp;-&nbsp;make&nbsp;a&nbsp;contour&nbsp;plot&nbsp;of&nbsp;an&nbsp;array&nbsp;Z.&nbsp;The&nbsp;level<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values&nbsp;are&nbsp;chosen&nbsp;automatically.<br>
&nbsp;<br>
<a href="#Subplot-contour">contour</a>(X,Y,Z)&nbsp;-&nbsp;X,Y&nbsp;specify&nbsp;the&nbsp;(x,y)&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;surface<br>
&nbsp;<br>
<a href="#Subplot-contour">contour</a>(Z,N)&nbsp;and&nbsp;<a href="#Subplot-contour">contour</a>(X,Y,Z,N)&nbsp;-&nbsp;contour&nbsp;N&nbsp;automatically-chosen<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;levels.<br>
&nbsp;<br>
<a href="#Subplot-contour">contour</a>(Z,V)&nbsp;and&nbsp;<a href="#Subplot-contour">contour</a>(X,Y,Z,V)&nbsp;-&nbsp;draw&nbsp;len(V)&nbsp;contour&nbsp;lines,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;the&nbsp;values&nbsp;specified&nbsp;in&nbsp;sequence&nbsp;V<br>
&nbsp;<br>
<a href="#Subplot-contourf">contourf</a>(...,&nbsp;V)&nbsp;-&nbsp;fill&nbsp;the&nbsp;(len(V)-1)&nbsp;regions&nbsp;between&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values&nbsp;in&nbsp;V<br>
&nbsp;<br>
<a href="#Subplot-contour">contour</a>(Z,&nbsp;**kwargs)&nbsp;-&nbsp;Use&nbsp;keyword&nbsp;args&nbsp;to&nbsp;control&nbsp;colors,&nbsp;linewidth,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;origin,&nbsp;cmap&nbsp;...&nbsp;see&nbsp;below<br>
&nbsp;<br>
X,&nbsp;Y,&nbsp;and&nbsp;Z&nbsp;must&nbsp;be&nbsp;arrays&nbsp;with&nbsp;the&nbsp;same&nbsp;dimensions.<br>
Z&nbsp;may&nbsp;be&nbsp;a&nbsp;masked&nbsp;array,&nbsp;but&nbsp;filled&nbsp;contouring&nbsp;may&nbsp;not&nbsp;handle<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;internal&nbsp;masked&nbsp;regions&nbsp;correctly.<br>
&nbsp;<br>
C&nbsp;=&nbsp;<a href="#Subplot-contour">contour</a>(...)&nbsp;returns&nbsp;a&nbsp;ContourSet&nbsp;object.<br>
&nbsp;<br>
&nbsp;<br>
Optional&nbsp;keyword&nbsp;args&nbsp;are&nbsp;shown&nbsp;with&nbsp;their&nbsp;defaults&nbsp;below&nbsp;(you&nbsp;must<br>
use&nbsp;kwargs&nbsp;for&nbsp;these):<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;colors&nbsp;=&nbsp;None;&nbsp;or&nbsp;one&nbsp;of&nbsp;the&nbsp;following:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;tuple&nbsp;of&nbsp;matplotlib&nbsp;color&nbsp;args&nbsp;(string,&nbsp;float,&nbsp;rgb,&nbsp;etc),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;different&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;different&nbsp;colors&nbsp;in&nbsp;the&nbsp;order<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specified<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;one&nbsp;string&nbsp;color,&nbsp;e.g.&nbsp;colors&nbsp;=&nbsp;'r'&nbsp;or&nbsp;colors&nbsp;=&nbsp;'red',&nbsp;all&nbsp;levels<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;be&nbsp;plotted&nbsp;in&nbsp;this&nbsp;color<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;colors&nbsp;==&nbsp;None,&nbsp;the&nbsp;colormap&nbsp;specified&nbsp;by&nbsp;cmap&nbsp;will&nbsp;be&nbsp;used<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;alpha=1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;blending&nbsp;value<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;cmap&nbsp;=&nbsp;None:&nbsp;a&nbsp;cm&nbsp;Colormap&nbsp;instance&nbsp;from&nbsp;matplotlib.cm.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;cmap&nbsp;==&nbsp;None&nbsp;and&nbsp;colors&nbsp;==&nbsp;None,&nbsp;a&nbsp;default&nbsp;Colormap&nbsp;is&nbsp;used.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;norm&nbsp;=&nbsp;None:&nbsp;a&nbsp;matplotlib.colors.Normalize&nbsp;instance&nbsp;for<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scaling&nbsp;data&nbsp;values&nbsp;to&nbsp;colors.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;norm&nbsp;==&nbsp;None,&nbsp;and&nbsp;colors&nbsp;==&nbsp;None,&nbsp;the&nbsp;default<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linear&nbsp;scaling&nbsp;is&nbsp;used.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;origin&nbsp;=&nbsp;None:&nbsp;'upper'|'lower'|'image'|None.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;'image',&nbsp;the&nbsp;rc&nbsp;value&nbsp;for&nbsp;image.origin&nbsp;will&nbsp;be&nbsp;used.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;None&nbsp;(default),&nbsp;the&nbsp;first&nbsp;value&nbsp;of&nbsp;Z&nbsp;will&nbsp;correspond<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;the&nbsp;lower&nbsp;left&nbsp;corner,&nbsp;location&nbsp;(0,0).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This&nbsp;keyword&nbsp;is&nbsp;active&nbsp;only&nbsp;if&nbsp;contourf&nbsp;is&nbsp;called&nbsp;with<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;one&nbsp;or&nbsp;two&nbsp;arguments,&nbsp;that&nbsp;is,&nbsp;without&nbsp;explicitly<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specifying&nbsp;X&nbsp;and&nbsp;Y.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;extent&nbsp;=&nbsp;None:&nbsp;(x0,x1,y0,y1);&nbsp;also&nbsp;active&nbsp;only&nbsp;if&nbsp;X&nbsp;and&nbsp;Y<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;not&nbsp;specified.&nbsp;&nbsp;If&nbsp;origin&nbsp;is&nbsp;not&nbsp;None,&nbsp;then&nbsp;extent&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interpreted&nbsp;as&nbsp;in&nbsp;imshow:&nbsp;it&nbsp;gives&nbsp;the&nbsp;outer&nbsp;pixel&nbsp;boundaries.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;this&nbsp;case,&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[0,0]&nbsp;is&nbsp;the&nbsp;center&nbsp;of&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixel,&nbsp;not&nbsp;a&nbsp;corner.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;origin&nbsp;is&nbsp;None,&nbsp;then&nbsp;(x0,y0)&nbsp;is&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[0,0],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and&nbsp;(x1,y1)&nbsp;is&nbsp;the&nbsp;position&nbsp;of&nbsp;Z[-1,-1].<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;locator&nbsp;=&nbsp;None:&nbsp;an&nbsp;instance&nbsp;of&nbsp;a&nbsp;ticker.Locator&nbsp;subclass;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;is&nbsp;MaxNLocator.&nbsp;&nbsp;It&nbsp;is&nbsp;used&nbsp;to&nbsp;determine&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contour&nbsp;levels&nbsp;if&nbsp;they&nbsp;are&nbsp;not&nbsp;given&nbsp;explicitly&nbsp;via&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;V&nbsp;argument.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*****&nbsp;New:&nbsp;*****<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;extend&nbsp;=&nbsp;'neither',&nbsp;'both',&nbsp;'min',&nbsp;'max'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Unless&nbsp;this&nbsp;is&nbsp;'neither'&nbsp;(default),&nbsp;contour&nbsp;levels&nbsp;are<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;automatically&nbsp;added&nbsp;to&nbsp;one&nbsp;or&nbsp;both&nbsp;ends&nbsp;of&nbsp;the&nbsp;range&nbsp;so&nbsp;that<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;all&nbsp;data&nbsp;are&nbsp;included.&nbsp;&nbsp;These&nbsp;added&nbsp;ranges&nbsp;are&nbsp;then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapped&nbsp;to&nbsp;the&nbsp;special&nbsp;colormap&nbsp;values&nbsp;which&nbsp;default&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;ends&nbsp;of&nbsp;the&nbsp;colormap&nbsp;range,&nbsp;but&nbsp;can&nbsp;be&nbsp;set&nbsp;via<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Colormap.set_under()&nbsp;and&nbsp;Colormap.set_over()&nbsp;methods.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;replace&nbsp;clip_ends=True&nbsp;and&nbsp;V&nbsp;=&nbsp;[-100,&nbsp;2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2,&nbsp;100],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;use&nbsp;extend='both'&nbsp;and&nbsp;V&nbsp;=&nbsp;[2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2].<br>
&nbsp;&nbsp;&nbsp;&nbsp;****************<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;contour&nbsp;only:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;linewidths&nbsp;=&nbsp;None:&nbsp;or&nbsp;one&nbsp;of&nbsp;these:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;number&nbsp;-&nbsp;all&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;with&nbsp;this&nbsp;linewidth,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.g.&nbsp;linewidths&nbsp;=&nbsp;0.6<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;a&nbsp;tuple&nbsp;of&nbsp;numbers,&nbsp;e.g.&nbsp;linewidths&nbsp;=&nbsp;(0.4,&nbsp;0.8,&nbsp;1.2)&nbsp;different<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;levels&nbsp;will&nbsp;be&nbsp;plotted&nbsp;with&nbsp;different&nbsp;linewidths&nbsp;in&nbsp;the&nbsp;order<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specified<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;if&nbsp;linewidths&nbsp;==&nbsp;None,&nbsp;the&nbsp;default&nbsp;width&nbsp;in&nbsp;lines.linewidth&nbsp;in<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;matplotlibrc&nbsp;is&nbsp;used<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;contourf&nbsp;only:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*****&nbsp;Obsolete:&nbsp;****<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;clip_ends&nbsp;=&nbsp;True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;False,&nbsp;the&nbsp;limits&nbsp;for&nbsp;color&nbsp;scaling&nbsp;are&nbsp;set&nbsp;to&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minimum&nbsp;and&nbsp;maximum&nbsp;contour&nbsp;levels.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;True&nbsp;(default)&nbsp;clips&nbsp;the&nbsp;scaling&nbsp;limits.&nbsp;&nbsp;Example:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;the&nbsp;contour&nbsp;boundaries&nbsp;are&nbsp;V&nbsp;=&nbsp;[-100,&nbsp;2,&nbsp;1,&nbsp;0,&nbsp;1,&nbsp;2,&nbsp;100],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;then&nbsp;the&nbsp;scaling&nbsp;limits&nbsp;will&nbsp;be&nbsp;[-100,&nbsp;100]&nbsp;if&nbsp;clip_ends<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;False,&nbsp;and&nbsp;[-3,&nbsp;3]&nbsp;if&nbsp;clip_ends&nbsp;is&nbsp;True.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;linewidths&nbsp;=&nbsp;None&nbsp;or&nbsp;a&nbsp;number;&nbsp;default&nbsp;of&nbsp;0.05&nbsp;works&nbsp;for<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Postscript;&nbsp;a&nbsp;value&nbsp;of&nbsp;about&nbsp;0.5&nbsp;seems&nbsp;better&nbsp;for&nbsp;Agg.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;antialiased&nbsp;=&nbsp;True&nbsp;(default)&nbsp;or&nbsp;False;&nbsp;if&nbsp;False,&nbsp;there&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;no&nbsp;need&nbsp;to&nbsp;increase&nbsp;the&nbsp;linewidths&nbsp;for&nbsp;Agg,&nbsp;but&nbsp;True&nbsp;gives<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nicer&nbsp;color&nbsp;boundaries.&nbsp;&nbsp;If&nbsp;antialiased&nbsp;is&nbsp;True&nbsp;and&nbsp;linewidths<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;too&nbsp;small,&nbsp;then&nbsp;there&nbsp;may&nbsp;be&nbsp;light-colored&nbsp;lines&nbsp;at&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;boundaries&nbsp;caused&nbsp;by&nbsp;the&nbsp;antialiasing.<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;nchunk&nbsp;=&nbsp;0&nbsp;(default)&nbsp;for&nbsp;no&nbsp;subdivision&nbsp;of&nbsp;the&nbsp;domain;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;specify&nbsp;a&nbsp;positive&nbsp;integer&nbsp;to&nbsp;divide&nbsp;the&nbsp;domain&nbsp;into<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;subdomains&nbsp;of&nbsp;roughly&nbsp;nchunk&nbsp;by&nbsp;nchunk&nbsp;points.&nbsp;This&nbsp;may<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;never&nbsp;actually&nbsp;be&nbsp;advantageous,&nbsp;so&nbsp;this&nbsp;option&nbsp;may&nbsp;be<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removed.&nbsp;&nbsp;Chunking&nbsp;introduces&nbsp;artifacts&nbsp;at&nbsp;the&nbsp;chunk<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boundaries&nbsp;unless&nbsp;antialiased&nbsp;=&nbsp;False,&nbsp;or&nbsp;linewidths&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set&nbsp;to&nbsp;a&nbsp;large&nbsp;enough&nbsp;value&nbsp;for&nbsp;the&nbsp;particular&nbsp;renderer&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolution.</tt></dd></dl>

<dl><dt><a name="Subplot-csd"><strong>csd</strong></a>(self, x, y, NFFT<font color="#909090">=256</font>, Fs<font color="#909090">=2</font>, detrend<font color="#909090">=&lt;function detrend_none at 0x847d844&gt;</font>, window<font color="#909090">=&lt;function window_hanning at 0x847d72c&gt;</font>, noverlap<font color="#909090">=0</font>, **kwargs)</dt><dd><tt>CSD(x,&nbsp;y,&nbsp;NFFT=256,&nbsp;Fs=2,&nbsp;detrend=detrend_none,<br>
&nbsp;&nbsp;&nbsp;&nbsp;window=window_hanning,&nbsp;noverlap=0,&nbsp;**kwargs)<br>
The&nbsp;cross&nbsp;spectral&nbsp;density&nbsp;Pxy&nbsp;by&nbsp;Welches&nbsp;average&nbsp;periodogram&nbsp;method.<br>
The&nbsp;vectors&nbsp;x&nbsp;and&nbsp;y&nbsp;are&nbsp;divided&nbsp;into&nbsp;NFFT&nbsp;length&nbsp;segments.&nbsp;&nbsp;Each<br>
segment&nbsp;is&nbsp;detrended&nbsp;by&nbsp;function&nbsp;detrend&nbsp;and&nbsp;windowed&nbsp;by&nbsp;function<br>
window.&nbsp;&nbsp;The&nbsp;product&nbsp;of&nbsp;the&nbsp;direct&nbsp;FFTs&nbsp;of&nbsp;x&nbsp;and&nbsp;y&nbsp;are&nbsp;averaged&nbsp;over<br>
each&nbsp;segment&nbsp;to&nbsp;compute&nbsp;Pxy,&nbsp;with&nbsp;a&nbsp;scaling&nbsp;to&nbsp;correct&nbsp;for&nbsp;power&nbsp;loss<br>
due&nbsp;to&nbsp;windowing.<br>
See&nbsp;the&nbsp;PSD&nbsp;help&nbsp;for&nbsp;a&nbsp;description&nbsp;of&nbsp;the&nbsp;optional&nbsp;parameters.<br>
Returns&nbsp;the&nbsp;tuple&nbsp;Pxy,&nbsp;freqs.&nbsp;&nbsp;Pxy&nbsp;is&nbsp;the&nbsp;cross&nbsp;spectrum&nbsp;(complex<br>
valued),&nbsp;and&nbsp;10*log10(|Pxy|)&nbsp;is&nbsp;plotted<br>
Refs:<br>
&nbsp;&nbsp;Bendat&nbsp;&amp;&nbsp;Piersol&nbsp;--&nbsp;Random&nbsp;Data:&nbsp;Analysis&nbsp;and&nbsp;Measurement<br>
&nbsp;&nbsp;&nbsp;&nbsp;Procedures,&nbsp;John&nbsp;Wiley&nbsp;&amp;&nbsp;Sons&nbsp;(1986)<br>
kwargs&nbsp;control&nbsp;the&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-disconnect"><strong>disconnect</strong></a>(self, cid)</dt><dd><tt>disconnect&nbsp;from&nbsp;the&nbsp;<a href="#Axes">Axes</a>&nbsp;event.</tt></dd></dl>

<dl><dt><a name="Subplot-draw"><strong>draw</strong></a>(self, renderer<font color="#909090">=None</font>, inframe<font color="#909090">=False</font>)</dt><dd><tt>Draw&nbsp;everything&nbsp;(plot&nbsp;lines,&nbsp;axes,&nbsp;labels)</tt></dd></dl>

<dl><dt><a name="Subplot-draw_artist"><strong>draw_artist</strong></a>(self, a)</dt><dd><tt>This&nbsp;method&nbsp;can&nbsp;only&nbsp;be&nbsp;used&nbsp;after&nbsp;an&nbsp;initial&nbsp;draw&nbsp;which<br>
caches&nbsp;the&nbsp;renderer.&nbsp;&nbsp;It&nbsp;is&nbsp;used&nbsp;to&nbsp;efficiently&nbsp;update&nbsp;<a href="#Axes">Axes</a><br>
data&nbsp;(axis&nbsp;ticks,&nbsp;labels,&nbsp;etc&nbsp;are&nbsp;not&nbsp;updated)</tt></dd></dl>

<dl><dt><a name="Subplot-errorbar"><strong>errorbar</strong></a>(self, x, y, yerr<font color="#909090">=None</font>, xerr<font color="#909090">=None</font>, fmt<font color="#909090">='b-'</font>, ecolor<font color="#909090">=None</font>, capsize<font color="#909090">=3</font>, barsabove<font color="#909090">=False</font>, **kwargs)</dt><dd><tt>ERRORBAR(x,&nbsp;y,&nbsp;yerr=None,&nbsp;xerr=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fmt='b-',&nbsp;ecolor=None,&nbsp;capsize=3,&nbsp;barsabove=False)<br>
Plot&nbsp;x&nbsp;versus&nbsp;y&nbsp;with&nbsp;error&nbsp;deltas&nbsp;in&nbsp;yerr&nbsp;and&nbsp;xerr.<br>
Vertical&nbsp;errorbars&nbsp;are&nbsp;plotted&nbsp;if&nbsp;yerr&nbsp;is&nbsp;not&nbsp;None<br>
Horizontal&nbsp;errorbars&nbsp;are&nbsp;plotted&nbsp;if&nbsp;xerr&nbsp;is&nbsp;not&nbsp;None<br>
xerr&nbsp;and&nbsp;yerr&nbsp;may&nbsp;be&nbsp;any&nbsp;of:<br>
&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;rank-0,&nbsp;Nx1&nbsp;Numpy&nbsp;array&nbsp;&nbsp;-&nbsp;symmetric&nbsp;errorbars&nbsp;+/-&nbsp;value<br>
&nbsp;&nbsp;&nbsp;&nbsp;an&nbsp;N-element&nbsp;list&nbsp;or&nbsp;tuple&nbsp;-&nbsp;symmetric&nbsp;errorbars&nbsp;+/-&nbsp;value<br>
&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;rank-1,&nbsp;Nx2&nbsp;Numpy&nbsp;array&nbsp;&nbsp;-&nbsp;asymmetric&nbsp;errorbars&nbsp;-column1/+column2<br>
Alternatively,&nbsp;x,&nbsp;y,&nbsp;xerr,&nbsp;and&nbsp;yerr&nbsp;can&nbsp;all&nbsp;be&nbsp;scalars,&nbsp;which<br>
plots&nbsp;a&nbsp;single&nbsp;error&nbsp;bar&nbsp;at&nbsp;x,&nbsp;y.<br>
&nbsp;&nbsp;&nbsp;&nbsp;fmt&nbsp;is&nbsp;the&nbsp;plot&nbsp;format&nbsp;symbol&nbsp;for&nbsp;y.&nbsp;&nbsp;if&nbsp;fmt&nbsp;is&nbsp;None,&nbsp;just<br>
&nbsp;&nbsp;&nbsp;&nbsp;plot&nbsp;the&nbsp;errorbars&nbsp;with&nbsp;no&nbsp;line&nbsp;symbols.&nbsp;&nbsp;This&nbsp;can&nbsp;be&nbsp;useful<br>
&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;creating&nbsp;a&nbsp;bar&nbsp;plot&nbsp;with&nbsp;errorbars<br>
&nbsp;&nbsp;&nbsp;&nbsp;ecolor&nbsp;is&nbsp;a&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;which&nbsp;gives&nbsp;the&nbsp;color&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;errorbar&nbsp;lines;&nbsp;if&nbsp;None,&nbsp;use&nbsp;the&nbsp;marker&nbsp;color.<br>
&nbsp;&nbsp;&nbsp;&nbsp;capsize&nbsp;is&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;error&nbsp;bar&nbsp;caps&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;barsabove,&nbsp;if&nbsp;True,&nbsp;will&nbsp;plot&nbsp;the&nbsp;errorbars&nbsp;above&nbsp;the&nbsp;plot&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;default&nbsp;is&nbsp;below<br>
&nbsp;&nbsp;&nbsp;&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;on&nbsp;to&nbsp;the&nbsp;plot&nbsp;command&nbsp;for&nbsp;the&nbsp;markers.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;So&nbsp;you&nbsp;can&nbsp;add&nbsp;additional&nbsp;key=value&nbsp;pairs&nbsp;to&nbsp;control&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errorbar&nbsp;markers.&nbsp;&nbsp;For&nbsp;example,&nbsp;this&nbsp;code&nbsp;makes&nbsp;big&nbsp;red<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;squares&nbsp;with&nbsp;thick&nbsp;green&nbsp;edges<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&gt;&gt;&gt;&nbsp;x,y,yerr&nbsp;=&nbsp;rand(3,10)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&gt;&gt;&gt;&nbsp;<a href="#Subplot-errorbar">errorbar</a>(x,&nbsp;y,&nbsp;yerr,&nbsp;marker='s',<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mfc='red',&nbsp;mec='green',&nbsp;ms=20,&nbsp;mew=4)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mfc,&nbsp;mec,&nbsp;ms&nbsp;and&nbsp;mew&nbsp;are&nbsp;aliases&nbsp;for&nbsp;the&nbsp;longer&nbsp;property<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;names,&nbsp;markerfacecolor,&nbsp;markeredgecolor,&nbsp;markersize&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewith.<br>
valid&nbsp;kwargs&nbsp;for&nbsp;the&nbsp;marker&nbsp;properties&nbsp;are<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;length&nbsp;3&nbsp;tuple.&nbsp;&nbsp;The&nbsp;first&nbsp;element&nbsp;is&nbsp;the<br>
Line2D&nbsp;instance&nbsp;for&nbsp;the&nbsp;y&nbsp;symbol&nbsp;lines.&nbsp;&nbsp;The&nbsp;second&nbsp;element&nbsp;is<br>
a&nbsp;list&nbsp;of&nbsp;error&nbsp;bar&nbsp;cap&nbsp;lines,&nbsp;the&nbsp;third&nbsp;element&nbsp;is&nbsp;a&nbsp;list&nbsp;of<br>
line&nbsp;collections&nbsp;for&nbsp;the&nbsp;horizontal&nbsp;and&nbsp;vertical&nbsp;error&nbsp;ranges</tt></dd></dl>

<dl><dt><a name="Subplot-fill"><strong>fill</strong></a>(self, *args, **kwargs)</dt><dd><tt>FILL(*args,&nbsp;**kwargs)<br>
plot&nbsp;filled&nbsp;polygons.&nbsp;&nbsp;*args&nbsp;is&nbsp;a&nbsp;variable&nbsp;length&nbsp;argument,&nbsp;allowing<br>
for&nbsp;multiple&nbsp;x,y&nbsp;pairs&nbsp;with&nbsp;an&nbsp;optional&nbsp;color&nbsp;format&nbsp;string;&nbsp;see&nbsp;plot<br>
for&nbsp;details&nbsp;on&nbsp;the&nbsp;argument&nbsp;parsing.&nbsp;&nbsp;For&nbsp;example,&nbsp;all&nbsp;of&nbsp;the<br>
following&nbsp;are&nbsp;legal,&nbsp;assuming&nbsp;ax&nbsp;is&nbsp;an&nbsp;<a href="#Axes">Axes</a>&nbsp;instance:<br>
&nbsp;&nbsp;ax.<a href="#Subplot-fill">fill</a>(x,y)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;plot&nbsp;polygon&nbsp;with&nbsp;vertices&nbsp;at&nbsp;x,y<br>
&nbsp;&nbsp;ax.<a href="#Subplot-fill">fill</a>(x,y,&nbsp;'b'&nbsp;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;plot&nbsp;polygon&nbsp;with&nbsp;vertices&nbsp;at&nbsp;x,y&nbsp;in&nbsp;blue<br>
An&nbsp;arbitrary&nbsp;number&nbsp;of&nbsp;x,&nbsp;y,&nbsp;color&nbsp;groups&nbsp;can&nbsp;be&nbsp;specified,&nbsp;as&nbsp;in<br>
&nbsp;&nbsp;ax.<a href="#Subplot-fill">fill</a>(x1,&nbsp;y1,&nbsp;'g',&nbsp;x2,&nbsp;y2,&nbsp;'r')<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;patches&nbsp;that&nbsp;were&nbsp;added<br>
The&nbsp;same&nbsp;color&nbsp;strings&nbsp;that&nbsp;plot&nbsp;supports&nbsp;are&nbsp;supported&nbsp;by&nbsp;the&nbsp;fill<br>
format&nbsp;string.<br>
kwargs&nbsp;control&nbsp;the&nbsp;Polygon&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-format_coord"><strong>format_coord</strong></a>(self, x, y)</dt><dd><tt>return&nbsp;a&nbsp;format&nbsp;string&nbsp;formatting&nbsp;the&nbsp;x,&nbsp;y&nbsp;coord</tt></dd></dl>

<dl><dt><a name="Subplot-format_xdata"><strong>format_xdata</strong></a>(self, x)</dt><dd><tt>Return&nbsp;x&nbsp;string&nbsp;formatted.&nbsp;&nbsp;This&nbsp;function&nbsp;will&nbsp;use&nbsp;the&nbsp;attribute<br>
self.<strong>fmt_xdata</strong>&nbsp;if&nbsp;it&nbsp;is&nbsp;callable,&nbsp;else&nbsp;will&nbsp;fall&nbsp;back&nbsp;on&nbsp;the&nbsp;xaxis<br>
major&nbsp;formatter</tt></dd></dl>

<dl><dt><a name="Subplot-format_ydata"><strong>format_ydata</strong></a>(self, y)</dt><dd><tt>Return&nbsp;y&nbsp;string&nbsp;formatted.&nbsp;&nbsp;This&nbsp;function&nbsp;will&nbsp;use&nbsp;the&nbsp;attribute<br>
self.<strong>fmt_ydata</strong>&nbsp;if&nbsp;it&nbsp;is&nbsp;callable,&nbsp;else&nbsp;will&nbsp;fall&nbsp;back&nbsp;on&nbsp;the&nbsp;yaxis<br>
major&nbsp;formatter</tt></dd></dl>

<dl><dt><a name="Subplot-get_adjustable"><strong>get_adjustable</strong></a>(self)</dt></dl>

<dl><dt><a name="Subplot-get_anchor"><strong>get_anchor</strong></a>(self)</dt></dl>

<dl><dt><a name="Subplot-get_aspect"><strong>get_aspect</strong></a>(self)</dt></dl>

<dl><dt><a name="Subplot-get_autoscale_on"><strong>get_autoscale_on</strong></a>(self)</dt><dd><tt>Get&nbsp;whether&nbsp;autoscaling&nbsp;is&nbsp;applied&nbsp;on&nbsp;plot&nbsp;commands</tt></dd></dl>

<dl><dt><a name="Subplot-get_axis_bgcolor"><strong>get_axis_bgcolor</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;axis&nbsp;background&nbsp;color</tt></dd></dl>

<dl><dt><a name="Subplot-get_axisbelow"><strong>get_axisbelow</strong></a>(self)</dt><dd><tt>Get&nbsp;whether&nbsp;axist&nbsp;below&nbsp;is&nbsp;true&nbsp;or&nbsp;not</tt></dd></dl>

<dl><dt><a name="Subplot-get_child_artists"><strong>get_child_artists</strong></a>(self)</dt><dd><tt>Return&nbsp;a&nbsp;list&nbsp;of&nbsp;artists&nbsp;the&nbsp;axes&nbsp;contains.&nbsp;&nbsp;Deprecated</tt></dd></dl>

<dl><dt><a name="Subplot-get_children"><strong>get_children</strong></a>(self)</dt><dd><tt>return&nbsp;a&nbsp;list&nbsp;of&nbsp;child&nbsp;artists</tt></dd></dl>

<dl><dt><a name="Subplot-get_cursor_props"><strong>get_cursor_props</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;cursor&nbsp;props&nbsp;as&nbsp;a&nbsp;linewidth,&nbsp;color&nbsp;tuple&nbsp;where<br>
linewidth&nbsp;is&nbsp;a&nbsp;float&nbsp;and&nbsp;color&nbsp;is&nbsp;an&nbsp;RGBA&nbsp;tuple</tt></dd></dl>

<dl><dt><a name="Subplot-get_frame"><strong>get_frame</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;axes&nbsp;Rectangle&nbsp;frame</tt></dd></dl>

<dl><dt><a name="Subplot-get_frame_on"><strong>get_frame_on</strong></a>(self)</dt><dd><tt>Get&nbsp;whether&nbsp;the&nbsp;axes&nbsp;rectangle&nbsp;patch&nbsp;is&nbsp;drawn</tt></dd></dl>

<dl><dt><a name="Subplot-get_images"><strong>get_images</strong></a>(self)</dt><dd><tt>return&nbsp;a&nbsp;list&nbsp;of&nbsp;<a href="#Axes">Axes</a>&nbsp;images&nbsp;contained&nbsp;by&nbsp;the&nbsp;<a href="#Axes">Axes</a></tt></dd></dl>

<dl><dt><a name="Subplot-get_legend"><strong>get_legend</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;Legend&nbsp;instance,&nbsp;or&nbsp;None&nbsp;if&nbsp;no&nbsp;legend&nbsp;is&nbsp;defined</tt></dd></dl>

<dl><dt><a name="Subplot-get_lines"><strong>get_lines</strong></a>(self)</dt><dd><tt>Return&nbsp;a&nbsp;list&nbsp;of&nbsp;lines&nbsp;contained&nbsp;by&nbsp;the&nbsp;<a href="#Axes">Axes</a></tt></dd></dl>

<dl><dt><a name="Subplot-get_navigate"><strong>get_navigate</strong></a>(self)</dt><dd><tt>Get&nbsp;whether&nbsp;the&nbsp;axes&nbsp;responds&nbsp;to&nbsp;navigation&nbsp;commands</tt></dd></dl>

<dl><dt><a name="Subplot-get_navigate_mode"><strong>get_navigate_mode</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;navigation&nbsp;toolbar&nbsp;button&nbsp;status:&nbsp;'PAN',&nbsp;'ZOOM',&nbsp;or&nbsp;None</tt></dd></dl>

<dl><dt><a name="Subplot-get_position"><strong>get_position</strong></a>(self, original<font color="#909090">=False</font>)</dt><dd><tt>Return&nbsp;the&nbsp;axes&nbsp;rectangle&nbsp;left,&nbsp;bottom,&nbsp;width,&nbsp;height</tt></dd></dl>

<dl><dt><a name="Subplot-get_renderer_cache"><strong>get_renderer_cache</strong></a>(self)</dt></dl>

<dl><dt><a name="Subplot-get_window_extent"><strong>get_window_extent</strong></a>(self, *args, **kwargs)</dt><dd><tt>get&nbsp;the&nbsp;axes&nbsp;bounding&nbsp;box&nbsp;in&nbsp;display&nbsp;space;&nbsp;args&nbsp;and&nbsp;kwargs&nbsp;are&nbsp;empty</tt></dd></dl>

<dl><dt><a name="Subplot-get_xaxis"><strong>get_xaxis</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;XAxis&nbsp;instance</tt></dd></dl>

<dl><dt><a name="Subplot-get_xgridlines"><strong>get_xgridlines</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;x&nbsp;grid&nbsp;lines&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Line2D&nbsp;instances</tt></dd></dl>

<dl><dt><a name="Subplot-get_xlim"><strong>get_xlim</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;x&nbsp;axis&nbsp;range&nbsp;[xmin,&nbsp;xmax]</tt></dd></dl>

<dl><dt><a name="Subplot-get_xscale"><strong>get_xscale</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;xaxis&nbsp;scale&nbsp;string:&nbsp;log&nbsp;or&nbsp;linear</tt></dd></dl>

<dl><dt><a name="Subplot-get_xticklabels"><strong>get_xticklabels</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;xtick&nbsp;labels&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Text&nbsp;instances</tt></dd></dl>

<dl><dt><a name="Subplot-get_xticklines"><strong>get_xticklines</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;xtick&nbsp;lines&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Line2D&nbsp;instances</tt></dd></dl>

<dl><dt><a name="Subplot-get_xticks"><strong>get_xticks</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;x&nbsp;ticks&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;locations</tt></dd></dl>

<dl><dt><a name="Subplot-get_yaxis"><strong>get_yaxis</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;YAxis&nbsp;instance</tt></dd></dl>

<dl><dt><a name="Subplot-get_ygridlines"><strong>get_ygridlines</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;y&nbsp;grid&nbsp;lines&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Line2D&nbsp;instances</tt></dd></dl>

<dl><dt><a name="Subplot-get_ylim"><strong>get_ylim</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;y&nbsp;axis&nbsp;range&nbsp;[ymin,&nbsp;ymax]</tt></dd></dl>

<dl><dt><a name="Subplot-get_yscale"><strong>get_yscale</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;yaxis&nbsp;scale&nbsp;string:&nbsp;log&nbsp;or&nbsp;linear</tt></dd></dl>

<dl><dt><a name="Subplot-get_yticklabels"><strong>get_yticklabels</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;ytick&nbsp;labels&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Text&nbsp;instances</tt></dd></dl>

<dl><dt><a name="Subplot-get_yticklines"><strong>get_yticklines</strong></a>(self)</dt><dd><tt>Get&nbsp;the&nbsp;ytick&nbsp;lines&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;Line2D&nbsp;instances</tt></dd></dl>

<dl><dt><a name="Subplot-get_yticks"><strong>get_yticks</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;y&nbsp;ticks&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;locations</tt></dd></dl>

<dl><dt><a name="Subplot-grid"><strong>grid</strong></a>(self, b<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>GRID(self,&nbsp;b=None,&nbsp;**kwargs)<br>
Set&nbsp;the&nbsp;axes&nbsp;grids&nbsp;on&nbsp;or&nbsp;off;&nbsp;b&nbsp;is&nbsp;a&nbsp;boolean<br>
if&nbsp;b&nbsp;is&nbsp;None&nbsp;and&nbsp;len(kwargs)==0,&nbsp;toggle&nbsp;the&nbsp;grid&nbsp;state.&nbsp;&nbsp;if<br>
kwargs&nbsp;are&nbsp;supplied,&nbsp;it&nbsp;is&nbsp;assumed&nbsp;that&nbsp;you&nbsp;want&nbsp;a&nbsp;grid&nbsp;and&nbsp;b<br>
is&nbsp;thus&nbsp;set&nbsp;to&nbsp;True<br>
kawrgs&nbsp;are&nbsp;used&nbsp;to&nbsp;set&nbsp;the&nbsp;grid&nbsp;line&nbsp;properties,&nbsp;eg<br>
&nbsp;&nbsp;ax.<a href="#Subplot-grid">grid</a>(color='r',&nbsp;linestyle='-',&nbsp;linewidth=2)<br>
Valid&nbsp;Line2D&nbsp;kwargs&nbsp;are<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-has_data"><strong>has_data</strong></a>(self)</dt><dd><tt>Return&nbsp;true&nbsp;if&nbsp;any&nbsp;artists&nbsp;have&nbsp;been&nbsp;added&nbsp;to&nbsp;axes.<br>
&nbsp;<br>
This&nbsp;should&nbsp;not&nbsp;be&nbsp;used&nbsp;to&nbsp;determine&nbsp;whether&nbsp;the&nbsp;dataLim<br>
need&nbsp;to&nbsp;be&nbsp;updated,&nbsp;and&nbsp;may&nbsp;not&nbsp;actually&nbsp;be&nbsp;useful&nbsp;for<br>
anything.</tt></dd></dl>

<dl><dt><a name="Subplot-hist"><strong>hist</strong></a>(self, x, bins<font color="#909090">=10</font>, normed<font color="#909090">=0</font>, bottom<font color="#909090">=None</font>, align<font color="#909090">='edge'</font>, orientation<font color="#909090">='vertical'</font>, width<font color="#909090">=None</font>, log<font color="#909090">=False</font>, **kwargs)</dt><dd><tt>HIST(x,&nbsp;bins=10,&nbsp;normed=0,&nbsp;bottom=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;align='edge',&nbsp;orientation='vertical',&nbsp;width=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log=False,&nbsp;**kwargs)<br>
Compute&nbsp;the&nbsp;histogram&nbsp;of&nbsp;x.&nbsp;&nbsp;bins&nbsp;is&nbsp;either&nbsp;an&nbsp;integer&nbsp;number&nbsp;of<br>
bins&nbsp;or&nbsp;a&nbsp;sequence&nbsp;giving&nbsp;the&nbsp;bins.&nbsp;&nbsp;x&nbsp;are&nbsp;the&nbsp;data&nbsp;to&nbsp;be&nbsp;binned.<br>
The&nbsp;return&nbsp;values&nbsp;is&nbsp;(n,&nbsp;bins,&nbsp;patches)<br>
If&nbsp;normed&nbsp;is&nbsp;true,&nbsp;the&nbsp;first&nbsp;element&nbsp;of&nbsp;the&nbsp;return&nbsp;tuple&nbsp;will<br>
be&nbsp;the&nbsp;counts&nbsp;normalized&nbsp;to&nbsp;form&nbsp;a&nbsp;probability&nbsp;density,&nbsp;ie,<br>
n/(len(x)*dbin).&nbsp;&nbsp;In&nbsp;a&nbsp;probability&nbsp;density,&nbsp;the&nbsp;integral&nbsp;of<br>
the&nbsp;histogram&nbsp;should&nbsp;be&nbsp;one&nbsp;(we&nbsp;assume&nbsp;equally&nbsp;spaced&nbsp;bins);<br>
you&nbsp;can&nbsp;verify&nbsp;that&nbsp;with<br>
&nbsp;&nbsp;#&nbsp;trapezoidal&nbsp;integration&nbsp;of&nbsp;the&nbsp;probability&nbsp;density&nbsp;function<br>
&nbsp;&nbsp;from&nbsp;matplotlib.mlab&nbsp;import&nbsp;trapz<br>
&nbsp;&nbsp;pdf,&nbsp;bins,&nbsp;patches&nbsp;=&nbsp;ax.<a href="#Subplot-hist">hist</a>(...)<br>
&nbsp;&nbsp;print&nbsp;trapz(bins,&nbsp;pdf)<br>
align&nbsp;=&nbsp;'edge'&nbsp;|&nbsp;'center'.&nbsp;&nbsp;Interprets&nbsp;bins&nbsp;either&nbsp;as&nbsp;edge<br>
or&nbsp;center&nbsp;values<br>
orientation&nbsp;=&nbsp;'horizontal'&nbsp;|&nbsp;'vertical'.&nbsp;&nbsp;If&nbsp;horizontal,&nbsp;barh<br>
will&nbsp;be&nbsp;used&nbsp;and&nbsp;the&nbsp;"bottom"&nbsp;kwarg&nbsp;will&nbsp;be&nbsp;the&nbsp;left&nbsp;edges.<br>
width:&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;bars.&nbsp;&nbsp;If&nbsp;None,&nbsp;automatically&nbsp;compute<br>
the&nbsp;width.<br>
log:&nbsp;if&nbsp;True,&nbsp;the&nbsp;histogram&nbsp;axis&nbsp;will&nbsp;be&nbsp;set&nbsp;to&nbsp;a&nbsp;log&nbsp;scale<br>
kwargs&nbsp;are&nbsp;used&nbsp;to&nbsp;update&nbsp;the&nbsp;properties&nbsp;of&nbsp;the<br>
hist&nbsp;Rectangles:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor&nbsp;or&nbsp;ec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor&nbsp;or&nbsp;fc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hatch:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-hlines"><strong>hlines</strong></a>(self, y, xmin, xmax, colors<font color="#909090">='k'</font>, linestyle<font color="#909090">='solid'</font>, label<font color="#909090">=''</font>, **kwargs)</dt><dd><tt>HLINES(y,&nbsp;xmin,&nbsp;xmax,&nbsp;colors='k',&nbsp;linestyle='solid',&nbsp;**kwargs)<br>
plot&nbsp;horizontal&nbsp;lines&nbsp;at&nbsp;each&nbsp;y&nbsp;from&nbsp;xmin&nbsp;to&nbsp;xmax.&nbsp;&nbsp;xmin&nbsp;or&nbsp;xmax&nbsp;can<br>
be&nbsp;scalars&nbsp;or&nbsp;len(x)&nbsp;numpy&nbsp;arrays.&nbsp;&nbsp;If&nbsp;they&nbsp;are&nbsp;scalars,&nbsp;then&nbsp;the<br>
respective&nbsp;values&nbsp;are&nbsp;constant,&nbsp;else&nbsp;the&nbsp;widths&nbsp;of&nbsp;the&nbsp;lines&nbsp;are<br>
determined&nbsp;by&nbsp;xmin&nbsp;and&nbsp;xmax<br>
colors&nbsp;is&nbsp;a&nbsp;line&nbsp;collections&nbsp;color&nbsp;args,&nbsp;either&nbsp;a&nbsp;single&nbsp;color&nbsp;or&nbsp;a&nbsp;len(x)&nbsp;list&nbsp;of&nbsp;colors<br>
linestyle&nbsp;is&nbsp;one&nbsp;of&nbsp;solid|dashed|dashdot|dotted<br>
Returns&nbsp;the&nbsp;LineCollection&nbsp;that&nbsp;was&nbsp;added</tt></dd></dl>

<dl><dt><a name="Subplot-hold"><strong>hold</strong></a>(self, b<font color="#909090">=None</font>)</dt><dd><tt>HOLD(b=None)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;hold&nbsp;state.&nbsp;&nbsp;If&nbsp;hold&nbsp;is&nbsp;None&nbsp;(default),&nbsp;toggle&nbsp;the<br>
hold&nbsp;state.&nbsp;&nbsp;Else&nbsp;set&nbsp;the&nbsp;hold&nbsp;state&nbsp;to&nbsp;boolean&nbsp;value&nbsp;b.<br>
&nbsp;<br>
Eg<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-hold">hold</a>()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;toggle&nbsp;hold<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-hold">hold</a>(True)&nbsp;&nbsp;#&nbsp;hold&nbsp;is&nbsp;on<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-hold">hold</a>(False)&nbsp;#&nbsp;hold&nbsp;is&nbsp;off<br>
&nbsp;<br>
&nbsp;<br>
When&nbsp;hold&nbsp;is&nbsp;True,&nbsp;subsequent&nbsp;plot&nbsp;commands&nbsp;will&nbsp;be&nbsp;added&nbsp;to<br>
the&nbsp;current&nbsp;axes.&nbsp;&nbsp;When&nbsp;hold&nbsp;is&nbsp;False,&nbsp;the&nbsp;current&nbsp;axes&nbsp;and<br>
figure&nbsp;will&nbsp;be&nbsp;cleared&nbsp;on&nbsp;the&nbsp;next&nbsp;plot&nbsp;command</tt></dd></dl>

<dl><dt><a name="Subplot-imshow"><strong>imshow</strong></a>(self, X, cmap<font color="#909090">=None</font>, norm<font color="#909090">=None</font>, aspect<font color="#909090">=None</font>, interpolation<font color="#909090">=None</font>, alpha<font color="#909090">=1.0</font>, vmin<font color="#909090">=None</font>, vmax<font color="#909090">=None</font>, origin<font color="#909090">=None</font>, extent<font color="#909090">=None</font>, shape<font color="#909090">=None</font>, filternorm<font color="#909090">=1</font>, filterrad<font color="#909090">=4.0</font>, imlim<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>IMSHOW(X,&nbsp;cmap=None,&nbsp;norm=None,&nbsp;aspect=None,&nbsp;interpolation=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha=1.0,&nbsp;vmin=None,&nbsp;vmax=None,&nbsp;origin=None,&nbsp;extent=None)<br>
&nbsp;<br>
IMSHOW(X)&nbsp;-&nbsp;plot&nbsp;image&nbsp;X&nbsp;to&nbsp;current&nbsp;axes,&nbsp;resampling&nbsp;to&nbsp;scale&nbsp;to&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;(X&nbsp;may&nbsp;be&nbsp;numarray/Numeric&nbsp;array&nbsp;or&nbsp;PIL&nbsp;image)<br>
&nbsp;<br>
IMSHOW(X,&nbsp;**kwargs)&nbsp;-&nbsp;Use&nbsp;keyword&nbsp;args&nbsp;to&nbsp;control&nbsp;image&nbsp;scaling,<br>
colormapping&nbsp;etc.&nbsp;See&nbsp;below&nbsp;for&nbsp;details<br>
&nbsp;<br>
&nbsp;<br>
Display&nbsp;the&nbsp;image&nbsp;in&nbsp;X&nbsp;to&nbsp;current&nbsp;axes.&nbsp;&nbsp;X&nbsp;may&nbsp;be&nbsp;a&nbsp;float&nbsp;array,&nbsp;a<br>
UInt8&nbsp;array&nbsp;or&nbsp;a&nbsp;PIL&nbsp;image.&nbsp;If&nbsp;X&nbsp;is&nbsp;an&nbsp;array,&nbsp;X&nbsp;can&nbsp;have&nbsp;the&nbsp;following<br>
shapes:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;MxN&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;luminance&nbsp;(grayscale,&nbsp;float&nbsp;array&nbsp;only)<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;MxNx3&nbsp;&nbsp;:&nbsp;RGB&nbsp;(float&nbsp;or&nbsp;UInt8&nbsp;array)<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;MxNx4&nbsp;&nbsp;:&nbsp;RGBA&nbsp;(float&nbsp;or&nbsp;UInt8&nbsp;array)<br>
&nbsp;<br>
The&nbsp;value&nbsp;for&nbsp;each&nbsp;component&nbsp;of&nbsp;MxNx3&nbsp;and&nbsp;MxNx4&nbsp;float&nbsp;arrays&nbsp;should&nbsp;be<br>
in&nbsp;the&nbsp;range&nbsp;0.0&nbsp;to&nbsp;1.0;&nbsp;MxN&nbsp;float&nbsp;arrays&nbsp;may&nbsp;be&nbsp;normalised.<br>
&nbsp;<br>
A&nbsp;matplotlib.image.AxesImage&nbsp;instance&nbsp;is&nbsp;returned<br>
&nbsp;<br>
The&nbsp;following&nbsp;kwargs&nbsp;are&nbsp;allowed:<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;cmap&nbsp;is&nbsp;a&nbsp;cm&nbsp;colormap&nbsp;instance,&nbsp;eg&nbsp;cm.jet.&nbsp;&nbsp;If&nbsp;None,&nbsp;default&nbsp;to&nbsp;rc<br>
&nbsp;&nbsp;&nbsp;&nbsp;image.cmap&nbsp;value&nbsp;(Ignored&nbsp;when&nbsp;X&nbsp;has&nbsp;RGB(A)&nbsp;information)<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;aspect&nbsp;is&nbsp;one&nbsp;of:&nbsp;auto,&nbsp;equal,&nbsp;or&nbsp;a&nbsp;number.&nbsp;&nbsp;If&nbsp;None,&nbsp;default&nbsp;to&nbsp;rc<br>
&nbsp;&nbsp;&nbsp;&nbsp;image.aspect&nbsp;value<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;interpolation&nbsp;is&nbsp;one&nbsp;of:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'nearest',&nbsp;'bilinear',&nbsp;'bicubic',&nbsp;'spline16',&nbsp;'spline36',<br>
&nbsp;&nbsp;&nbsp;&nbsp;'hanning',&nbsp;'hamming',&nbsp;'hermite',&nbsp;'kaiser',&nbsp;'quadric',<br>
&nbsp;&nbsp;&nbsp;&nbsp;'catrom',&nbsp;'gaussian',&nbsp;'bessel',&nbsp;'mitchell',&nbsp;'sinc',<br>
&nbsp;&nbsp;&nbsp;&nbsp;'lanczos',&nbsp;'blackman'<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;interpolation&nbsp;is&nbsp;None,&nbsp;default&nbsp;to&nbsp;rc<br>
&nbsp;&nbsp;&nbsp;&nbsp;image.interpolation.&nbsp;&nbsp;See&nbsp;also&nbsp;th&nbsp;the&nbsp;filternorm&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;filterrad&nbsp;parameters<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;norm&nbsp;is&nbsp;a&nbsp;matplotlib.colors.Normalize&nbsp;instance;&nbsp;default&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;normalization().&nbsp;&nbsp;This&nbsp;scales&nbsp;luminance&nbsp;-&gt;&nbsp;0-1&nbsp;(only&nbsp;used&nbsp;for&nbsp;an<br>
&nbsp;&nbsp;&nbsp;&nbsp;MxN&nbsp;float&nbsp;array).<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;are&nbsp;used&nbsp;to&nbsp;scale&nbsp;a&nbsp;luminance&nbsp;image&nbsp;to&nbsp;0-1.&nbsp;&nbsp;If<br>
&nbsp;&nbsp;&nbsp;&nbsp;either&nbsp;is&nbsp;None,&nbsp;the&nbsp;min&nbsp;and&nbsp;max&nbsp;of&nbsp;the&nbsp;luminance&nbsp;values&nbsp;will&nbsp;be<br>
&nbsp;&nbsp;&nbsp;&nbsp;used.&nbsp;&nbsp;Note&nbsp;if&nbsp;you&nbsp;pass&nbsp;a&nbsp;norm&nbsp;instance,&nbsp;the&nbsp;settings&nbsp;for&nbsp;vmin&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;vmax&nbsp;will&nbsp;be&nbsp;ignored.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;alpha&nbsp;=&nbsp;1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;blending&nbsp;value<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;origin&nbsp;is&nbsp;'upper'&nbsp;or&nbsp;'lower',&nbsp;to&nbsp;place&nbsp;the&nbsp;[0,0]<br>
&nbsp;&nbsp;&nbsp;&nbsp;index&nbsp;of&nbsp;the&nbsp;array&nbsp;in&nbsp;the&nbsp;upper&nbsp;left&nbsp;or&nbsp;lower&nbsp;left&nbsp;corner&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;axes.&nbsp;&nbsp;If&nbsp;None,&nbsp;default&nbsp;to&nbsp;rc&nbsp;image.origin<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;extent&nbsp;is&nbsp;(left,&nbsp;right,&nbsp;bottom,&nbsp;top)&nbsp;data&nbsp;values&nbsp;of&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;axes.&nbsp;&nbsp;The&nbsp;default&nbsp;assigns&nbsp;zero-based&nbsp;row,&nbsp;column&nbsp;indices<br>
&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;the&nbsp;x,&nbsp;y&nbsp;centers&nbsp;of&nbsp;the&nbsp;pixels.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;shape&nbsp;is&nbsp;for&nbsp;raw&nbsp;buffer&nbsp;images<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;filternorm&nbsp;is&nbsp;a&nbsp;parameter&nbsp;for&nbsp;the&nbsp;antigrain&nbsp;image&nbsp;resize<br>
&nbsp;&nbsp;&nbsp;&nbsp;filter.&nbsp;&nbsp;From&nbsp;the&nbsp;antigrain&nbsp;documentation,&nbsp;if&nbsp;normalize=1,<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;filter&nbsp;normalizes&nbsp;integer&nbsp;values&nbsp;and&nbsp;corrects&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;rounding&nbsp;errors.&nbsp;It&nbsp;doesn't&nbsp;do&nbsp;anything&nbsp;with&nbsp;the&nbsp;source<br>
&nbsp;&nbsp;&nbsp;&nbsp;floating&nbsp;point&nbsp;values,&nbsp;it&nbsp;corrects&nbsp;only&nbsp;integers&nbsp;according<br>
&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;the&nbsp;rule&nbsp;of&nbsp;1.0&nbsp;which&nbsp;means&nbsp;that&nbsp;any&nbsp;sum&nbsp;of&nbsp;pixel<br>
&nbsp;&nbsp;&nbsp;&nbsp;weights&nbsp;must&nbsp;be&nbsp;equal&nbsp;to&nbsp;1.0.&nbsp;&nbsp;So,&nbsp;the&nbsp;filter&nbsp;function<br>
&nbsp;&nbsp;&nbsp;&nbsp;must&nbsp;produce&nbsp;a&nbsp;graph&nbsp;of&nbsp;the&nbsp;proper&nbsp;shape.<br>
&nbsp;<br>
&nbsp;*&nbsp;filterrad:&nbsp;the&nbsp;filter&nbsp;radius&nbsp;for&nbsp;filters&nbsp;that&nbsp;have&nbsp;a&nbsp;radius<br>
&nbsp;&nbsp;&nbsp;parameter,&nbsp;ie&nbsp;when&nbsp;interpolation&nbsp;is&nbsp;one&nbsp;of:&nbsp;'sinc',<br>
&nbsp;&nbsp;&nbsp;'lanczos'&nbsp;or&nbsp;'blackman'<br>
&nbsp;<br>
Additional&nbsp;kwargs&nbsp;are&nbsp;matplotlib.artist&nbsp;properties</tt></dd></dl>

<dl><dt><a name="Subplot-in_axes"><strong>in_axes</strong></a>(self, xwin, ywin)</dt><dd><tt>return&nbsp;True&nbsp;is&nbsp;the&nbsp;point&nbsp;xwin,&nbsp;ywin&nbsp;(display&nbsp;coords)&nbsp;are&nbsp;in&nbsp;the&nbsp;<a href="#Axes">Axes</a></tt></dd></dl>

<dl><dt><a name="Subplot-ishold"><strong>ishold</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;HOLD&nbsp;status&nbsp;of&nbsp;the&nbsp;axes</tt></dd></dl>

<dl><dt><a name="Subplot-legend"><strong>legend</strong></a>(self, *args, **kwargs)</dt><dd><tt>LEGEND(*args,&nbsp;**kwargs)<br>
&nbsp;<br>
Place&nbsp;a&nbsp;legend&nbsp;on&nbsp;the&nbsp;current&nbsp;axes&nbsp;at&nbsp;location&nbsp;loc.&nbsp;&nbsp;Labels&nbsp;are&nbsp;a<br>
sequence&nbsp;of&nbsp;strings&nbsp;and&nbsp;loc&nbsp;can&nbsp;be&nbsp;a&nbsp;string&nbsp;or&nbsp;an&nbsp;integer&nbsp;specifying<br>
the&nbsp;legend&nbsp;location<br>
&nbsp;<br>
USAGE:<br>
&nbsp;<br>
&nbsp;&nbsp;Make&nbsp;a&nbsp;legend&nbsp;with&nbsp;existing&nbsp;lines<br>
&nbsp;<br>
&nbsp;&nbsp;&gt;&gt;&gt;&nbsp;<a href="#Subplot-legend">legend</a>()<br>
&nbsp;<br>
&nbsp;&nbsp;legend&nbsp;by&nbsp;itself&nbsp;will&nbsp;try&nbsp;and&nbsp;build&nbsp;a&nbsp;legend&nbsp;using&nbsp;the&nbsp;label<br>
&nbsp;&nbsp;property&nbsp;of&nbsp;the&nbsp;lines/patches/collections.&nbsp;&nbsp;You&nbsp;can&nbsp;set&nbsp;the&nbsp;label&nbsp;of<br>
&nbsp;&nbsp;a&nbsp;line&nbsp;by&nbsp;doing&nbsp;<a href="#Subplot-plot">plot</a>(x,&nbsp;y,&nbsp;label='my&nbsp;data')&nbsp;or&nbsp;line.<a href="#Subplot-set_label">set_label</a>('my<br>
&nbsp;&nbsp;data').&nbsp;If&nbsp;label&nbsp;is&nbsp;set&nbsp;to&nbsp;'_nolegend_',&nbsp;the&nbsp;item&nbsp;will&nbsp;not&nbsp;be&nbsp;shown<br>
&nbsp;&nbsp;in&nbsp;legend.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;automatically&nbsp;generate&nbsp;the&nbsp;legend&nbsp;from&nbsp;labels<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-legend">legend</a>(&nbsp;('label1',&nbsp;'label2',&nbsp;'label3')&nbsp;)<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;Make&nbsp;a&nbsp;legend&nbsp;for&nbsp;a&nbsp;list&nbsp;of&nbsp;lines&nbsp;and&nbsp;labels<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-legend">legend</a>(&nbsp;(line1,&nbsp;line2,&nbsp;line3),&nbsp;('label1',&nbsp;'label2',&nbsp;'label3')&nbsp;)<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;Make&nbsp;a&nbsp;legend&nbsp;at&nbsp;a&nbsp;given&nbsp;location,&nbsp;using&nbsp;a&nbsp;location&nbsp;argument<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;<a href="#Subplot-legend">legend</a>(&nbsp;LABELS,&nbsp;LOC&nbsp;)&nbsp;&nbsp;or<br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;<a href="#Subplot-legend">legend</a>(&nbsp;LINES,&nbsp;LABELS,&nbsp;LOC&nbsp;)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-legend">legend</a>(&nbsp;('label1',&nbsp;'label2',&nbsp;'label3'),&nbsp;loc='upper&nbsp;left')<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-legend">legend</a>(&nbsp;(line1,&nbsp;line2,&nbsp;line3),&nbsp;&nbsp;('label1',&nbsp;'label2',&nbsp;'label3'),&nbsp;loc=2)<br>
&nbsp;<br>
The&nbsp;location&nbsp;codes&nbsp;are<br>
&nbsp;<br>
&nbsp;&nbsp;'best'&nbsp;:&nbsp;0,<br>
&nbsp;&nbsp;'upper&nbsp;right'&nbsp;&nbsp;:&nbsp;1,&nbsp;(default)<br>
&nbsp;&nbsp;'upper&nbsp;left'&nbsp;&nbsp;&nbsp;:&nbsp;2,<br>
&nbsp;&nbsp;'lower&nbsp;left'&nbsp;&nbsp;&nbsp;:&nbsp;3,<br>
&nbsp;&nbsp;'lower&nbsp;right'&nbsp;&nbsp;:&nbsp;4,<br>
&nbsp;&nbsp;'right'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;5,<br>
&nbsp;&nbsp;'center&nbsp;left'&nbsp;&nbsp;:&nbsp;6,<br>
&nbsp;&nbsp;'center&nbsp;right'&nbsp;:&nbsp;7,<br>
&nbsp;&nbsp;'lower&nbsp;center'&nbsp;:&nbsp;8,<br>
&nbsp;&nbsp;'upper&nbsp;center'&nbsp;:&nbsp;9,<br>
&nbsp;&nbsp;'center'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;10,<br>
&nbsp;<br>
If&nbsp;none&nbsp;of&nbsp;these&nbsp;are&nbsp;suitable,&nbsp;loc&nbsp;can&nbsp;be&nbsp;a&nbsp;2-tuple&nbsp;giving&nbsp;x,y<br>
in&nbsp;axes&nbsp;coords,&nbsp;ie,<br>
&nbsp;<br>
&nbsp;&nbsp;loc&nbsp;=&nbsp;0,&nbsp;1&nbsp;is&nbsp;left&nbsp;top<br>
&nbsp;&nbsp;loc&nbsp;=&nbsp;0.5,&nbsp;0.5&nbsp;is&nbsp;center,&nbsp;center<br>
&nbsp;<br>
and&nbsp;so&nbsp;on.&nbsp;&nbsp;The&nbsp;following&nbsp;kwargs&nbsp;are&nbsp;supported:<br>
&nbsp;<br>
isaxes=True&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;whether&nbsp;this&nbsp;is&nbsp;an&nbsp;axes&nbsp;legend<br>
numpoints&nbsp;=&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;number&nbsp;of&nbsp;points&nbsp;in&nbsp;the&nbsp;legend&nbsp;line<br>
prop&nbsp;=&nbsp;FontProperties(size='smaller')&nbsp;&nbsp;#&nbsp;the&nbsp;font&nbsp;property<br>
pad&nbsp;=&nbsp;0.2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;fractional&nbsp;whitespace&nbsp;inside&nbsp;the&nbsp;legend&nbsp;border<br>
markerscale&nbsp;=&nbsp;0.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;relative&nbsp;size&nbsp;of&nbsp;legend&nbsp;markers&nbsp;vs.&nbsp;original<br>
shadow&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;if&nbsp;True,&nbsp;draw&nbsp;a&nbsp;shadow&nbsp;behind&nbsp;legend<br>
labelsep&nbsp;=&nbsp;0.005&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;vertical&nbsp;space&nbsp;between&nbsp;the&nbsp;legend&nbsp;entries<br>
handlelen&nbsp;=&nbsp;0.05&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;legend&nbsp;lines<br>
handletextsep&nbsp;=&nbsp;0.02&nbsp;#&nbsp;the&nbsp;space&nbsp;between&nbsp;the&nbsp;legend&nbsp;line&nbsp;and&nbsp;legend&nbsp;text<br>
axespad&nbsp;=&nbsp;0.02&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;the&nbsp;border&nbsp;between&nbsp;the&nbsp;axes&nbsp;and&nbsp;legend&nbsp;edge</tt></dd></dl>

<dl><dt><a name="Subplot-loglog"><strong>loglog</strong></a>(self, *args, **kwargs)</dt><dd><tt>LOGLOG(*args,&nbsp;**kwargs)<br>
Make&nbsp;a&nbsp;loglog&nbsp;plot&nbsp;with&nbsp;log&nbsp;scaling&nbsp;on&nbsp;the&nbsp;a&nbsp;and&nbsp;y&nbsp;axis.&nbsp;&nbsp;The&nbsp;args<br>
to&nbsp;semilog&nbsp;x&nbsp;are&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;args&nbsp;to&nbsp;plot.&nbsp;&nbsp;See&nbsp;help&nbsp;plot&nbsp;for<br>
more&nbsp;info.<br>
Optional&nbsp;keyword&nbsp;args&nbsp;supported&nbsp;are&nbsp;any&nbsp;of&nbsp;the&nbsp;kwargs<br>
supported&nbsp;by&nbsp;plot&nbsp;or&nbsp;set_xscale&nbsp;or&nbsp;set_yscale.&nbsp;&nbsp;Notable,&nbsp;for<br>
log&nbsp;scaling:<br>
&nbsp;&nbsp;*&nbsp;basex:&nbsp;base&nbsp;of&nbsp;the&nbsp;x&nbsp;logarithm<br>
&nbsp;&nbsp;*&nbsp;subsx:&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;ticks;&nbsp;None&nbsp;defaults&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of&nbsp;decades&nbsp;in&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;plot;&nbsp;see&nbsp;set_xscale&nbsp;for&nbsp;details<br>
&nbsp;&nbsp;*&nbsp;basey:&nbsp;base&nbsp;of&nbsp;the&nbsp;y&nbsp;logarithm<br>
&nbsp;&nbsp;*&nbsp;subsy:&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;yticks;&nbsp;None&nbsp;defaults&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of&nbsp;decades&nbsp;in&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;plot;&nbsp;see&nbsp;set_yscale&nbsp;for&nbsp;details<br>
The&nbsp;remaining&nbsp;valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-matshow"><strong>matshow</strong></a>(self, Z, **kwargs)</dt><dd><tt>Plot&nbsp;a&nbsp;matrix&nbsp;as&nbsp;an&nbsp;image.<br>
&nbsp;<br>
The&nbsp;matrix&nbsp;will&nbsp;be&nbsp;shown&nbsp;the&nbsp;way&nbsp;it&nbsp;would&nbsp;be&nbsp;printed,<br>
with&nbsp;the&nbsp;first&nbsp;row&nbsp;at&nbsp;the&nbsp;top.&nbsp;&nbsp;Row&nbsp;and&nbsp;column&nbsp;numbering<br>
is&nbsp;zero-based.<br>
&nbsp;<br>
Argument:<br>
&nbsp;&nbsp;&nbsp;&nbsp;Z&nbsp;&nbsp;&nbsp;anything&nbsp;that&nbsp;can&nbsp;be&nbsp;interpreted&nbsp;as&nbsp;a&nbsp;2-D&nbsp;array<br>
&nbsp;<br>
kwargs:&nbsp;all&nbsp;are&nbsp;passed&nbsp;to&nbsp;imshow.&nbsp;&nbsp;matshow&nbsp;sets&nbsp;defaults<br>
for&nbsp;extent,&nbsp;origin,&nbsp;interpolation,&nbsp;and&nbsp;aspect;&nbsp;use&nbsp;care<br>
in&nbsp;overriding&nbsp;the&nbsp;extent&nbsp;and&nbsp;origin&nbsp;kwargs,&nbsp;because&nbsp;they<br>
interact.&nbsp;&nbsp;(Also,&nbsp;if&nbsp;you&nbsp;want&nbsp;to&nbsp;change&nbsp;them,&nbsp;you&nbsp;probably<br>
should&nbsp;be&nbsp;using&nbsp;imshow&nbsp;directly&nbsp;in&nbsp;your&nbsp;own&nbsp;version&nbsp;of<br>
matshow.)<br>
&nbsp;<br>
Returns:&nbsp;an&nbsp;AxesImage&nbsp;instance</tt></dd></dl>

<dl><dt><a name="Subplot-panx"><strong>panx</strong></a>(self, numsteps)</dt><dd><tt>Pan&nbsp;the&nbsp;x&nbsp;axis&nbsp;numsteps&nbsp;(plus&nbsp;pan&nbsp;right,&nbsp;minus&nbsp;pan&nbsp;left)</tt></dd></dl>

<dl><dt><a name="Subplot-pany"><strong>pany</strong></a>(self, numsteps)</dt><dd><tt>Pan&nbsp;the&nbsp;x&nbsp;axis&nbsp;numsteps&nbsp;(plus&nbsp;pan&nbsp;up,&nbsp;minus&nbsp;pan&nbsp;down)</tt></dd></dl>

<dl><dt><a name="Subplot-pcolor"><strong>pcolor</strong></a>(self, *args, **kwargs)</dt><dd><tt><a href="#Subplot-pcolor">pcolor</a>(*args,&nbsp;**kwargs):&nbsp;pseudocolor&nbsp;plot&nbsp;of&nbsp;a&nbsp;2-D&nbsp;array<br>
Function&nbsp;signatures<br>
&nbsp;&nbsp;<a href="#Subplot-pcolor">pcolor</a>(C,&nbsp;**kwargs)<br>
&nbsp;&nbsp;<a href="#Subplot-pcolor">pcolor</a>(X,&nbsp;Y,&nbsp;C,&nbsp;**kwargs)<br>
C&nbsp;is&nbsp;the&nbsp;array&nbsp;of&nbsp;color&nbsp;values<br>
X&nbsp;and&nbsp;Y,&nbsp;if&nbsp;given,&nbsp;specify&nbsp;the&nbsp;(x,y)&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;colored<br>
quadrilaterals;&nbsp;the&nbsp;quadrilateral&nbsp;for&nbsp;C[i,j]&nbsp;has&nbsp;corners&nbsp;at<br>
(X[i,j],Y[i,j]),&nbsp;(X[i,j+1],Y[i,j+1]),&nbsp;(X[i+1,j],Y[i+1,j]),<br>
(X[i+1,j+1],Y[i+1,j+1]).&nbsp;&nbsp;Ideally&nbsp;the&nbsp;dimensions&nbsp;of&nbsp;X&nbsp;and&nbsp;Y<br>
should&nbsp;be&nbsp;one&nbsp;greater&nbsp;than&nbsp;those&nbsp;of&nbsp;C;&nbsp;if&nbsp;the&nbsp;dimensions&nbsp;are&nbsp;the<br>
same,&nbsp;then&nbsp;the&nbsp;last&nbsp;row&nbsp;and&nbsp;column&nbsp;of&nbsp;C&nbsp;will&nbsp;be&nbsp;ignored.<br>
Note&nbsp;that&nbsp;the&nbsp;the&nbsp;column&nbsp;index&nbsp;corresponds&nbsp;to&nbsp;the&nbsp;x-coordinate,<br>
and&nbsp;the&nbsp;row&nbsp;index&nbsp;corresponds&nbsp;to&nbsp;y;&nbsp;for&nbsp;details,&nbsp;see<br>
the&nbsp;"Grid&nbsp;Orientation"&nbsp;section&nbsp;below.<br>
If&nbsp;either&nbsp;or&nbsp;both&nbsp;of&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;1-D&nbsp;arrays&nbsp;or&nbsp;column&nbsp;vectors,<br>
they&nbsp;will&nbsp;be&nbsp;expanded&nbsp;as&nbsp;needed&nbsp;into&nbsp;the&nbsp;appropriate&nbsp;2-D&nbsp;arrays,<br>
making&nbsp;a&nbsp;rectangular&nbsp;grid.<br>
X,Y&nbsp;and&nbsp;C&nbsp;may&nbsp;be&nbsp;masked&nbsp;arrays.&nbsp;&nbsp;If&nbsp;either&nbsp;C[i,j],&nbsp;or&nbsp;one<br>
of&nbsp;the&nbsp;vertices&nbsp;surrounding&nbsp;C[i,j]&nbsp;(X&nbsp;or&nbsp;Y&nbsp;at&nbsp;[i,j],[i+1,j],<br>
[i,j+1],[i=1,j+1])&nbsp;is&nbsp;masked,&nbsp;nothing&nbsp;is&nbsp;plotted.<br>
Optional&nbsp;keyword&nbsp;args&nbsp;are&nbsp;shown&nbsp;with&nbsp;their&nbsp;defaults&nbsp;below&nbsp;(you&nbsp;must<br>
use&nbsp;kwargs&nbsp;for&nbsp;these):<br>
&nbsp;&nbsp;*&nbsp;cmap&nbsp;=&nbsp;cm.jet&nbsp;:&nbsp;a&nbsp;cm&nbsp;Colormap&nbsp;instance&nbsp;from&nbsp;matplotlib.cm.<br>
&nbsp;&nbsp;&nbsp;&nbsp;defaults&nbsp;to&nbsp;cm.jet<br>
&nbsp;&nbsp;*&nbsp;norm&nbsp;=&nbsp;Normalize()&nbsp;:&nbsp;matplotlib.colors.Normalize&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;used&nbsp;to&nbsp;scale&nbsp;luminance&nbsp;data&nbsp;to&nbsp;0,1.<br>
&nbsp;&nbsp;*&nbsp;vmin=None&nbsp;and&nbsp;vmax=None&nbsp;:&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;are&nbsp;used&nbsp;in&nbsp;conjunction<br>
&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;norm&nbsp;to&nbsp;normalize&nbsp;luminance&nbsp;data.&nbsp;&nbsp;If&nbsp;either&nbsp;are&nbsp;None,&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;min&nbsp;and&nbsp;max&nbsp;of&nbsp;the&nbsp;color&nbsp;array&nbsp;C&nbsp;is&nbsp;used.&nbsp;&nbsp;If&nbsp;you&nbsp;pass&nbsp;a&nbsp;norm<br>
&nbsp;&nbsp;&nbsp;&nbsp;instance,&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;will&nbsp;be&nbsp;None<br>
&nbsp;&nbsp;*&nbsp;shading&nbsp;=&nbsp;'flat'&nbsp;:&nbsp;or&nbsp;'faceted'.&nbsp;&nbsp;If&nbsp;'faceted',&nbsp;a&nbsp;black&nbsp;grid&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;drawn&nbsp;around&nbsp;each&nbsp;rectangle;&nbsp;if&nbsp;'flat',&nbsp;edges&nbsp;are&nbsp;not&nbsp;drawn<br>
&nbsp;&nbsp;*&nbsp;alpha=1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;blending&nbsp;value<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;matplotlib.collections.PatchCollection<br>
object<br>
Grid&nbsp;Orientation<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;orientation&nbsp;follows&nbsp;the&nbsp;Matlab(TM)&nbsp;convention:&nbsp;an<br>
&nbsp;&nbsp;&nbsp;&nbsp;array&nbsp;C&nbsp;with&nbsp;shape&nbsp;(nrows,&nbsp;ncolumns)&nbsp;is&nbsp;plotted&nbsp;with<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;column&nbsp;number&nbsp;as&nbsp;X&nbsp;and&nbsp;the&nbsp;row&nbsp;number&nbsp;as&nbsp;Y,&nbsp;increasing<br>
&nbsp;&nbsp;&nbsp;&nbsp;up;&nbsp;hence&nbsp;it&nbsp;is&nbsp;plotted&nbsp;the&nbsp;way&nbsp;the&nbsp;array&nbsp;would&nbsp;be&nbsp;printed,<br>
&nbsp;&nbsp;&nbsp;&nbsp;except&nbsp;that&nbsp;the&nbsp;Y&nbsp;axis&nbsp;is&nbsp;reversed.&nbsp;&nbsp;That&nbsp;is,&nbsp;C&nbsp;is&nbsp;taken<br>
&nbsp;&nbsp;&nbsp;&nbsp;as&nbsp;C(y,x).<br>
&nbsp;&nbsp;&nbsp;&nbsp;Similarly&nbsp;for&nbsp;meshgrid:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;arange(5)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;=&nbsp;arange(3)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X,&nbsp;Y&nbsp;=&nbsp;meshgrid(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;equivalent&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X&nbsp;=&nbsp;array([[0,&nbsp;1,&nbsp;2,&nbsp;3,&nbsp;4],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,&nbsp;1,&nbsp;2,&nbsp;3,&nbsp;4],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[0,&nbsp;1,&nbsp;2,&nbsp;3,&nbsp;4]])<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Y&nbsp;=&nbsp;array([[0,&nbsp;0,&nbsp;0,&nbsp;0,&nbsp;0],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,&nbsp;1,&nbsp;1,&nbsp;1,&nbsp;1],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2,&nbsp;2,&nbsp;2,&nbsp;2,&nbsp;2]])<br>
&nbsp;&nbsp;&nbsp;&nbsp;so&nbsp;if&nbsp;you&nbsp;have<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C&nbsp;=&nbsp;rand(&nbsp;len(x),&nbsp;len(y))<br>
&nbsp;&nbsp;&nbsp;&nbsp;then&nbsp;you&nbsp;need<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-pcolor">pcolor</a>(X,&nbsp;Y,&nbsp;transpose(C))<br>
&nbsp;&nbsp;&nbsp;&nbsp;or<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-pcolor">pcolor</a>(transpose(C))<br>
Dimensions<br>
&nbsp;&nbsp;&nbsp;&nbsp;Matlab&nbsp;pcolor&nbsp;always&nbsp;discards<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;last&nbsp;row&nbsp;and&nbsp;column&nbsp;of&nbsp;C,&nbsp;but&nbsp;matplotlib&nbsp;displays<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;last&nbsp;row&nbsp;and&nbsp;column&nbsp;if&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;not&nbsp;specified,&nbsp;or<br>
&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;X&nbsp;and&nbsp;Y&nbsp;have&nbsp;one&nbsp;more&nbsp;row&nbsp;and&nbsp;column&nbsp;than&nbsp;C.<br>
kwargs&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;control&nbsp;the&nbsp;PolyCollection&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clim:&nbsp;a&nbsp;length&nbsp;2&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap:&nbsp;a&nbsp;colormap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colorbar:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-pcolor_classic"><strong>pcolor_classic</strong></a>(self, *args)</dt><dd><tt>pcolor_classic&nbsp;is&nbsp;no&nbsp;longer&nbsp;available;&nbsp;please&nbsp;use&nbsp;pcolor,<br>
which&nbsp;is&nbsp;a&nbsp;drop-in&nbsp;replacement.</tt></dd></dl>

<dl><dt><a name="Subplot-pcolormesh"><strong>pcolormesh</strong></a>(self, *args, **kwargs)</dt><dd><tt>PCOLORMESH(*args,&nbsp;**kwargs)<br>
Function&nbsp;signatures<br>
&nbsp;&nbsp;PCOLORMESH(C)&nbsp;-&nbsp;make&nbsp;a&nbsp;pseudocolor&nbsp;plot&nbsp;of&nbsp;matrix&nbsp;C<br>
&nbsp;&nbsp;PCOLORMESH(X,&nbsp;Y,&nbsp;C)&nbsp;-&nbsp;a&nbsp;pseudo&nbsp;color&nbsp;plot&nbsp;of&nbsp;C&nbsp;on&nbsp;the&nbsp;matrices&nbsp;X&nbsp;and&nbsp;Y<br>
&nbsp;&nbsp;PCOLORMESH(C,&nbsp;**kwargs)&nbsp;-&nbsp;Use&nbsp;keyword&nbsp;args&nbsp;to&nbsp;control&nbsp;colormapping&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scaling;&nbsp;see&nbsp;below<br>
C&nbsp;may&nbsp;be&nbsp;a&nbsp;masked&nbsp;array,&nbsp;but&nbsp;X&nbsp;and&nbsp;Y&nbsp;may&nbsp;not.&nbsp;&nbsp;Masked&nbsp;array&nbsp;support<br>
is&nbsp;implemented&nbsp;via&nbsp;cmap&nbsp;and&nbsp;norm;&nbsp;in&nbsp;contrast,&nbsp;pcolor&nbsp;simply&nbsp;does<br>
not&nbsp;draw&nbsp;quadrilaterals&nbsp;with&nbsp;masked&nbsp;colors&nbsp;or&nbsp;vertices.<br>
Optional&nbsp;keyword&nbsp;args&nbsp;are&nbsp;shown&nbsp;with&nbsp;their&nbsp;defaults&nbsp;below&nbsp;(you&nbsp;must<br>
use&nbsp;kwargs&nbsp;for&nbsp;these):<br>
&nbsp;&nbsp;*&nbsp;cmap&nbsp;=&nbsp;cm.jet&nbsp;:&nbsp;a&nbsp;cm&nbsp;Colormap&nbsp;instance&nbsp;from&nbsp;matplotlib.cm.<br>
&nbsp;&nbsp;&nbsp;&nbsp;defaults&nbsp;to&nbsp;cm.jet<br>
&nbsp;&nbsp;*&nbsp;norm&nbsp;=&nbsp;Normalize()&nbsp;:&nbsp;matplotlib.colors.Normalize&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;used&nbsp;to&nbsp;scale&nbsp;luminance&nbsp;data&nbsp;to&nbsp;0,1.&nbsp;&nbsp;Instantiate&nbsp;it<br>
&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;clip=False&nbsp;if&nbsp;C&nbsp;is&nbsp;a&nbsp;masked&nbsp;array.<br>
&nbsp;&nbsp;*&nbsp;vmin=None&nbsp;and&nbsp;vmax=None&nbsp;:&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;are&nbsp;used&nbsp;in&nbsp;conjunction<br>
&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;norm&nbsp;to&nbsp;normalize&nbsp;luminance&nbsp;data.&nbsp;&nbsp;If&nbsp;either&nbsp;are&nbsp;None,&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;min&nbsp;and&nbsp;max&nbsp;of&nbsp;the&nbsp;color&nbsp;array&nbsp;C&nbsp;is&nbsp;used.<br>
&nbsp;&nbsp;*&nbsp;shading&nbsp;=&nbsp;'flat'&nbsp;:&nbsp;or&nbsp;'faceted'.&nbsp;&nbsp;If&nbsp;'faceted',&nbsp;a&nbsp;black&nbsp;grid&nbsp;is<br>
&nbsp;&nbsp;&nbsp;&nbsp;drawn&nbsp;around&nbsp;each&nbsp;rectangle;&nbsp;if&nbsp;'flat',&nbsp;edge&nbsp;colors&nbsp;are&nbsp;same&nbsp;as<br>
&nbsp;&nbsp;&nbsp;&nbsp;face&nbsp;colors<br>
&nbsp;&nbsp;*&nbsp;alpha=1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;blending&nbsp;value<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;matplotlib.collections.PatchCollection<br>
object<br>
See&nbsp;pcolor&nbsp;for&nbsp;an&nbsp;explantion&nbsp;of&nbsp;the&nbsp;grid&nbsp;orientation&nbsp;and&nbsp;the<br>
expansion&nbsp;of&nbsp;1-D&nbsp;X&nbsp;and/or&nbsp;Y&nbsp;to&nbsp;2-D&nbsp;arrays.<br>
kwargs&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;control&nbsp;the&nbsp;QuadMesh&nbsp;polygon&nbsp;collection&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clim:&nbsp;a&nbsp;length&nbsp;2&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap:&nbsp;a&nbsp;colormap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colorbar:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-pick"><strong>pick</strong></a>(self, *args)</dt><dd><tt><a href="#Subplot-pick">pick</a>(mouseevent)<br>
&nbsp;<br>
each&nbsp;child&nbsp;artist&nbsp;will&nbsp;fire&nbsp;a&nbsp;pick&nbsp;event&nbsp;if&nbsp;mouseevent&nbsp;is&nbsp;over<br>
the&nbsp;artist&nbsp;and&nbsp;the&nbsp;artist&nbsp;has&nbsp;picker&nbsp;set</tt></dd></dl>

<dl><dt><a name="Subplot-pie"><strong>pie</strong></a>(self, x, explode<font color="#909090">=None</font>, labels<font color="#909090">=None</font>, colors<font color="#909090">=None</font>, autopct<font color="#909090">=None</font>, pctdistance<font color="#909090">=0.59999999999999998</font>, shadow<font color="#909090">=False</font>)</dt><dd><tt>PIE(x,&nbsp;explode=None,&nbsp;labels=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;colors=('b',&nbsp;'g',&nbsp;'r',&nbsp;'c',&nbsp;'m',&nbsp;'y',&nbsp;'k',&nbsp;'w'),<br>
&nbsp;&nbsp;&nbsp;&nbsp;autopct=None,&nbsp;pctdistance=0.6,&nbsp;shadow=False)<br>
&nbsp;<br>
Make&nbsp;a&nbsp;pie&nbsp;chart&nbsp;of&nbsp;array&nbsp;x.&nbsp;&nbsp;The&nbsp;fractional&nbsp;area&nbsp;of&nbsp;each&nbsp;wedge&nbsp;is<br>
given&nbsp;by&nbsp;x/sum(x).&nbsp;&nbsp;If&nbsp;sum(x)&lt;=1,&nbsp;then&nbsp;the&nbsp;values&nbsp;of&nbsp;x&nbsp;give&nbsp;the<br>
fractional&nbsp;area&nbsp;directly&nbsp;and&nbsp;the&nbsp;array&nbsp;will&nbsp;not&nbsp;be&nbsp;normalized.<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;explode,&nbsp;if&nbsp;not&nbsp;None,&nbsp;is&nbsp;a&nbsp;len(x)&nbsp;array&nbsp;which&nbsp;specifies&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;fraction&nbsp;of&nbsp;the&nbsp;radius&nbsp;to&nbsp;offset&nbsp;that&nbsp;wedge.<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;colors&nbsp;is&nbsp;a&nbsp;sequence&nbsp;of&nbsp;matplotlib&nbsp;color&nbsp;args&nbsp;that&nbsp;the&nbsp;pie&nbsp;chart<br>
&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;cycle.<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;labels,&nbsp;if&nbsp;not&nbsp;None,&nbsp;is&nbsp;a&nbsp;len(x)&nbsp;list&nbsp;of&nbsp;labels.<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;autopct,&nbsp;if&nbsp;not&nbsp;None,&nbsp;is&nbsp;a&nbsp;string&nbsp;or&nbsp;function&nbsp;used&nbsp;to&nbsp;label&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;wedges&nbsp;with&nbsp;their&nbsp;numeric&nbsp;value.&nbsp;&nbsp;The&nbsp;label&nbsp;will&nbsp;be&nbsp;placed&nbsp;inside<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;wedge.&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a&nbsp;format&nbsp;string,&nbsp;the&nbsp;label&nbsp;will&nbsp;be&nbsp;fmt%pct.<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;it&nbsp;is&nbsp;a&nbsp;function,&nbsp;it&nbsp;will&nbsp;be&nbsp;called<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;pctdistance&nbsp;is&nbsp;the&nbsp;ratio&nbsp;between&nbsp;the&nbsp;center&nbsp;of&nbsp;each&nbsp;pie&nbsp;slice<br>
&nbsp;&nbsp;&nbsp;&nbsp;and&nbsp;the&nbsp;start&nbsp;of&nbsp;the&nbsp;text&nbsp;generated&nbsp;by&nbsp;autopct.&nbsp;&nbsp;Ignored&nbsp;if&nbsp;autopct<br>
&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;None;&nbsp;default&nbsp;is&nbsp;0.6.<br>
&nbsp;<br>
&nbsp;&nbsp;-&nbsp;shadow,&nbsp;if&nbsp;True,&nbsp;will&nbsp;draw&nbsp;a&nbsp;shadow&nbsp;beneath&nbsp;the&nbsp;pie.<br>
&nbsp;<br>
The&nbsp;pie&nbsp;chart&nbsp;will&nbsp;probably&nbsp;look&nbsp;best&nbsp;if&nbsp;the&nbsp;figure&nbsp;and&nbsp;axes&nbsp;are<br>
square.&nbsp;&nbsp;Eg,<br>
&nbsp;<br>
&nbsp;&nbsp;figure(figsize=(8,8))<br>
&nbsp;&nbsp;ax&nbsp;=&nbsp;axes([0.1,&nbsp;0.1,&nbsp;0.8,&nbsp;0.8])<br>
&nbsp;<br>
Return&nbsp;value:<br>
&nbsp;<br>
&nbsp;&nbsp;If&nbsp;autopct&nbsp;is&nbsp;None,&nbsp;return&nbsp;a&nbsp;list&nbsp;of&nbsp;(patches,&nbsp;texts),&nbsp;where&nbsp;patches<br>
&nbsp;&nbsp;is&nbsp;a&nbsp;sequence&nbsp;of&nbsp;matplotlib.patches.Wedge&nbsp;instances&nbsp;and&nbsp;texts&nbsp;is&nbsp;a<br>
&nbsp;&nbsp;list&nbsp;of&nbsp;the&nbsp;label&nbsp;Text&nbsp;instnaces<br>
&nbsp;<br>
&nbsp;&nbsp;If&nbsp;autopct&nbsp;is&nbsp;not&nbsp;None,&nbsp;return&nbsp;(patches,&nbsp;texts,&nbsp;autotexts),&nbsp;where<br>
&nbsp;&nbsp;patches&nbsp;and&nbsp;texts&nbsp;are&nbsp;as&nbsp;above,&nbsp;and&nbsp;autotexts&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;text<br>
&nbsp;&nbsp;instances&nbsp;for&nbsp;the&nbsp;numeric&nbsp;labels</tt></dd></dl>

<dl><dt><a name="Subplot-plot"><strong>plot</strong></a>(self, *args, **kwargs)</dt><dd><tt>PLOT(*args,&nbsp;**kwargs)<br>
Plot&nbsp;lines&nbsp;and/or&nbsp;markers&nbsp;to&nbsp;the&nbsp;<a href="#Axes">Axes</a>.&nbsp;&nbsp;*args&nbsp;is&nbsp;a&nbsp;variable&nbsp;length<br>
argument,&nbsp;allowing&nbsp;for&nbsp;multiple&nbsp;x,y&nbsp;pairs&nbsp;with&nbsp;an&nbsp;optional&nbsp;format<br>
string.&nbsp;&nbsp;For&nbsp;example,&nbsp;each&nbsp;of&nbsp;the&nbsp;following&nbsp;is&nbsp;legal<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-plot">plot</a>(x,y)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;plot&nbsp;x&nbsp;and&nbsp;y&nbsp;using&nbsp;the&nbsp;default&nbsp;line&nbsp;style&nbsp;and&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-plot">plot</a>(x,y,&nbsp;'bo')&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;plot&nbsp;x&nbsp;and&nbsp;y&nbsp;using&nbsp;blue&nbsp;circle&nbsp;markers<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-plot">plot</a>(y)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;plot&nbsp;y&nbsp;using&nbsp;x&nbsp;as&nbsp;index&nbsp;array&nbsp;0..N-1<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-plot">plot</a>(y,&nbsp;'r+')&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;ditto,&nbsp;but&nbsp;with&nbsp;red&nbsp;plusses<br>
If&nbsp;x&nbsp;and/or&nbsp;y&nbsp;is&nbsp;2-Dimensional,&nbsp;then&nbsp;the&nbsp;corresponding&nbsp;columns<br>
will&nbsp;be&nbsp;plotted.<br>
An&nbsp;arbitrary&nbsp;number&nbsp;of&nbsp;x,&nbsp;y,&nbsp;fmt&nbsp;groups&nbsp;can&nbsp;be&nbsp;specified,&nbsp;as&nbsp;in<br>
a.<a href="#Subplot-plot">plot</a>(x1,&nbsp;y1,&nbsp;'g^',&nbsp;x2,&nbsp;y2,&nbsp;'g-')<br>
Return&nbsp;value&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;lines&nbsp;that&nbsp;were&nbsp;added.<br>
The&nbsp;following&nbsp;line&nbsp;styles&nbsp;are&nbsp;supported:<br>
&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;solid&nbsp;line<br>
&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;dashed&nbsp;line<br>
&nbsp;&nbsp;&nbsp;&nbsp;-.&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;dash-dot&nbsp;line<br>
&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;dotted&nbsp;line<br>
&nbsp;&nbsp;&nbsp;&nbsp;.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;pixels<br>
&nbsp;&nbsp;&nbsp;&nbsp;o&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;circle&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;^&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;triangle&nbsp;up&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;v&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;triangle&nbsp;down&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;triangle&nbsp;left&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;triangle&nbsp;right&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;s&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;square&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;plus&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;cross&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;D&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;diamond&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;thin&nbsp;diamond&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;tripod&nbsp;down&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;tripod&nbsp;up&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;tripod&nbsp;left&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;tripod&nbsp;right&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;hexagon&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;H&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;rotated&nbsp;hexagon&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;pentagon&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;vertical&nbsp;line&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;_&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;horizontal&nbsp;line&nbsp;symbols<br>
&nbsp;&nbsp;&nbsp;&nbsp;steps&nbsp;:&nbsp;use&nbsp;gnuplot&nbsp;style&nbsp;'steps'&nbsp;#&nbsp;kwarg&nbsp;only<br>
The&nbsp;following&nbsp;color&nbsp;abbreviations&nbsp;are&nbsp;supported<br>
&nbsp;&nbsp;&nbsp;&nbsp;b&nbsp;&nbsp;:&nbsp;blue<br>
&nbsp;&nbsp;&nbsp;&nbsp;g&nbsp;&nbsp;:&nbsp;green<br>
&nbsp;&nbsp;&nbsp;&nbsp;r&nbsp;&nbsp;:&nbsp;red<br>
&nbsp;&nbsp;&nbsp;&nbsp;c&nbsp;&nbsp;:&nbsp;cyan<br>
&nbsp;&nbsp;&nbsp;&nbsp;m&nbsp;&nbsp;:&nbsp;magenta<br>
&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;&nbsp;:&nbsp;yellow<br>
&nbsp;&nbsp;&nbsp;&nbsp;k&nbsp;&nbsp;:&nbsp;black<br>
&nbsp;&nbsp;&nbsp;&nbsp;w&nbsp;&nbsp;:&nbsp;white<br>
In&nbsp;addition,&nbsp;you&nbsp;can&nbsp;specify&nbsp;colors&nbsp;in&nbsp;many&nbsp;weird&nbsp;and<br>
wonderful&nbsp;ways,&nbsp;including&nbsp;full&nbsp;names&nbsp;'green',&nbsp;hex&nbsp;strings<br>
'#008000',&nbsp;RGB&nbsp;or&nbsp;RGBA&nbsp;tuples&nbsp;(0,1,0,1)&nbsp;or&nbsp;grayscale<br>
intensities&nbsp;as&nbsp;a&nbsp;string&nbsp;'0.8'.<br>
Line&nbsp;styles&nbsp;and&nbsp;colors&nbsp;are&nbsp;combined&nbsp;in&nbsp;a&nbsp;single&nbsp;format&nbsp;string,&nbsp;as&nbsp;in<br>
'bo'&nbsp;for&nbsp;blue&nbsp;circles.<br>
The&nbsp;**kwargs&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;set&nbsp;line&nbsp;properties&nbsp;(any&nbsp;property&nbsp;that&nbsp;has<br>
a&nbsp;set_*&nbsp;method).&nbsp;&nbsp;You&nbsp;can&nbsp;use&nbsp;this&nbsp;to&nbsp;set&nbsp;a&nbsp;line&nbsp;label&nbsp;(for&nbsp;auto<br>
legends),&nbsp;linewidth,&nbsp;anitialising,&nbsp;marker&nbsp;face&nbsp;color,&nbsp;etc.&nbsp;&nbsp;Here&nbsp;is&nbsp;an<br>
example:<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-plot">plot</a>([1,2,3],&nbsp;[1,2,3],&nbsp;'go-',&nbsp;label='line&nbsp;1',&nbsp;linewidth=2)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-plot">plot</a>([1,2,3],&nbsp;[1,4,9],&nbsp;'rs',&nbsp;&nbsp;label='line&nbsp;2')<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-axis">axis</a>([0,&nbsp;4,&nbsp;0,&nbsp;10])<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-legend">legend</a>()<br>
If&nbsp;you&nbsp;make&nbsp;multiple&nbsp;lines&nbsp;with&nbsp;one&nbsp;plot&nbsp;command,&nbsp;the&nbsp;kwargs&nbsp;apply<br>
to&nbsp;all&nbsp;those&nbsp;lines,&nbsp;eg<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-plot">plot</a>(x1,&nbsp;y1,&nbsp;x2,&nbsp;y2,&nbsp;antialised=False)<br>
Neither&nbsp;line&nbsp;will&nbsp;be&nbsp;antialiased.<br>
The&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
kwargs&nbsp;scalex&nbsp;and&nbsp;scaley,&nbsp;if&nbsp;defined,&nbsp;are&nbsp;passed&nbsp;on<br>
to&nbsp;autoscale_view&nbsp;to&nbsp;determine&nbsp;whether&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;axes&nbsp;are<br>
autoscaled;&nbsp;default&nbsp;True.&nbsp;&nbsp;See&nbsp;<a href="#Axes">Axes</a>.autoscale_view&nbsp;for&nbsp;more<br>
information</tt></dd></dl>

<dl><dt><a name="Subplot-plot_date"><strong>plot_date</strong></a>(self, x, y, fmt<font color="#909090">='bo'</font>, tz<font color="#909090">=None</font>, xdate<font color="#909090">=True</font>, ydate<font color="#909090">=False</font>, **kwargs)</dt><dd><tt>PLOT_DATE(x,&nbsp;y,&nbsp;fmt='bo',&nbsp;tz=None,&nbsp;xdate=True,&nbsp;ydate=False,&nbsp;**kwargs)<br>
Similar&nbsp;to&nbsp;the&nbsp;<a href="#Subplot-plot">plot</a>()&nbsp;command,&nbsp;except&nbsp;the&nbsp;x&nbsp;or&nbsp;y&nbsp;(or&nbsp;both)&nbsp;data<br>
is&nbsp;considered&nbsp;to&nbsp;be&nbsp;dates,&nbsp;and&nbsp;the&nbsp;axis&nbsp;is&nbsp;labeled&nbsp;accordingly.<br>
x&nbsp;or&nbsp;y&nbsp;(or&nbsp;both)&nbsp;can&nbsp;be&nbsp;a&nbsp;sequence&nbsp;of&nbsp;dates&nbsp;represented&nbsp;as<br>
float&nbsp;days&nbsp;since&nbsp;0001-01-01&nbsp;UTC.<br>
fmt&nbsp;is&nbsp;a&nbsp;plot&nbsp;format&nbsp;string.<br>
tz&nbsp;is&nbsp;the&nbsp;time&nbsp;zone&nbsp;to&nbsp;use&nbsp;in&nbsp;labelling&nbsp;dates.&nbsp;&nbsp;Defaults&nbsp;to&nbsp;rc&nbsp;value.<br>
If&nbsp;xdate&nbsp;is&nbsp;True,&nbsp;the&nbsp;x-axis&nbsp;will&nbsp;be&nbsp;labeled&nbsp;with&nbsp;dates.<br>
If&nbsp;ydate&nbsp;is&nbsp;True,&nbsp;the&nbsp;y-axis&nbsp;will&nbsp;be&nbsp;labeled&nbsp;with&nbsp;dates.<br>
Note&nbsp;if&nbsp;you&nbsp;are&nbsp;using&nbsp;custom&nbsp;date&nbsp;tickers&nbsp;and&nbsp;formatters,&nbsp;it<br>
may&nbsp;be&nbsp;necessary&nbsp;to&nbsp;set&nbsp;the&nbsp;formatters/locators&nbsp;after&nbsp;the&nbsp;call<br>
to&nbsp;plot_date&nbsp;since&nbsp;plot_date&nbsp;will&nbsp;set&nbsp;the&nbsp;default&nbsp;tick&nbsp;locator<br>
to&nbsp;AutoDateLocator&nbsp;(if&nbsp;the&nbsp;tick&nbsp;locator&nbsp;is&nbsp;not&nbsp;already&nbsp;set&nbsp;to<br>
a&nbsp;DateLocator&nbsp;instance)&nbsp;and&nbsp;the&nbsp;default&nbsp;tick&nbsp;formatter&nbsp;to<br>
AutoDateFormatter&nbsp;(if&nbsp;the&nbsp;tick&nbsp;formatter&nbsp;is&nbsp;not&nbsp;already&nbsp;set&nbsp;to<br>
a&nbsp;DateFormatter&nbsp;instance).<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
See&nbsp;matplotlib.dates&nbsp;for&nbsp;helper&nbsp;functions&nbsp;date2num,&nbsp;num2date<br>
and&nbsp;drange&nbsp;for&nbsp;help&nbsp;on&nbsp;creating&nbsp;the&nbsp;required&nbsp;floating&nbsp;point&nbsp;dates</tt></dd></dl>

<dl><dt><a name="Subplot-psd"><strong>psd</strong></a>(self, x, NFFT<font color="#909090">=256</font>, Fs<font color="#909090">=2</font>, detrend<font color="#909090">=&lt;function detrend_none at 0x847d844&gt;</font>, window<font color="#909090">=&lt;function window_hanning at 0x847d72c&gt;</font>, noverlap<font color="#909090">=0</font>, **kwargs)</dt><dd><tt>PSD(x,&nbsp;NFFT=256,&nbsp;Fs=2,&nbsp;detrend=detrend_none,<br>
&nbsp;&nbsp;&nbsp;&nbsp;window=window_hanning,&nbsp;noverlap=0,&nbsp;**kwargs)<br>
The&nbsp;power&nbsp;spectral&nbsp;density&nbsp;by&nbsp;Welches&nbsp;average&nbsp;periodogram&nbsp;method.&nbsp;&nbsp;The<br>
vector&nbsp;x&nbsp;is&nbsp;divided&nbsp;into&nbsp;NFFT&nbsp;length&nbsp;segments.&nbsp;&nbsp;Each&nbsp;segment&nbsp;is<br>
detrended&nbsp;by&nbsp;function&nbsp;detrend&nbsp;and&nbsp;windowed&nbsp;by&nbsp;function&nbsp;window.<br>
noperlap&nbsp;gives&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;overlap&nbsp;between&nbsp;segments.&nbsp;&nbsp;The<br>
absolute(fft(segment))**2&nbsp;of&nbsp;each&nbsp;segment&nbsp;are&nbsp;averaged&nbsp;to&nbsp;compute&nbsp;Pxx,<br>
with&nbsp;a&nbsp;scaling&nbsp;to&nbsp;correct&nbsp;for&nbsp;power&nbsp;loss&nbsp;due&nbsp;to&nbsp;windowing.&nbsp;&nbsp;Fs&nbsp;is&nbsp;the<br>
sampling&nbsp;frequency.<br>
&nbsp;&nbsp;&nbsp;&nbsp;NFFT&nbsp;is&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;fft&nbsp;segment;&nbsp;must&nbsp;be&nbsp;a&nbsp;power&nbsp;of&nbsp;2<br>
&nbsp;&nbsp;&nbsp;&nbsp;Fs&nbsp;is&nbsp;the&nbsp;sampling&nbsp;frequency.<br>
&nbsp;&nbsp;&nbsp;&nbsp;detrend&nbsp;-&nbsp;the&nbsp;function&nbsp;applied&nbsp;to&nbsp;each&nbsp;segment&nbsp;before&nbsp;fft-ing,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;designed&nbsp;to&nbsp;remove&nbsp;the&nbsp;mean&nbsp;or&nbsp;linear&nbsp;trend.&nbsp;&nbsp;Unlike&nbsp;in&nbsp;matlab,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;where&nbsp;the&nbsp;detrend&nbsp;parameter&nbsp;is&nbsp;a&nbsp;vector,&nbsp;in&nbsp;matplotlib&nbsp;is&nbsp;it&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function.&nbsp;&nbsp;The&nbsp;mlab&nbsp;module&nbsp;defines&nbsp;detrend_none,&nbsp;detrend_mean,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;detrend_linear,&nbsp;but&nbsp;you&nbsp;can&nbsp;use&nbsp;a&nbsp;custom&nbsp;function&nbsp;as&nbsp;well.<br>
&nbsp;&nbsp;&nbsp;&nbsp;window&nbsp;-&nbsp;the&nbsp;function&nbsp;used&nbsp;to&nbsp;window&nbsp;the&nbsp;segments.&nbsp;&nbsp;window&nbsp;is&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function,&nbsp;unlike&nbsp;in&nbsp;matlab(TM)&nbsp;where&nbsp;it&nbsp;is&nbsp;a&nbsp;vector.&nbsp;&nbsp;mlab&nbsp;defines<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window_none,&nbsp;window_hanning,&nbsp;but&nbsp;you&nbsp;can&nbsp;use&nbsp;a&nbsp;custom&nbsp;function<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;as&nbsp;well.<br>
&nbsp;&nbsp;&nbsp;&nbsp;noverlap&nbsp;gives&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;overlap&nbsp;between&nbsp;segments.<br>
Returns&nbsp;the&nbsp;tuple&nbsp;Pxx,&nbsp;freqs<br>
For&nbsp;plotting,&nbsp;the&nbsp;power&nbsp;is&nbsp;plotted&nbsp;as&nbsp;10*log10(pxx))&nbsp;for&nbsp;decibels,<br>
though&nbsp;pxx&nbsp;itself&nbsp;is&nbsp;returned<br>
Refs:<br>
&nbsp;&nbsp;Bendat&nbsp;&amp;&nbsp;Piersol&nbsp;--&nbsp;Random&nbsp;Data:&nbsp;Analysis&nbsp;and&nbsp;Measurement<br>
&nbsp;&nbsp;Procedures,&nbsp;John&nbsp;Wiley&nbsp;&amp;&nbsp;Sons&nbsp;(1986)<br>
kwargs&nbsp;control&nbsp;the&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-quiver"><strong>quiver</strong></a>(self, *args, **kw)</dt><dd><tt>Plot&nbsp;a&nbsp;2-D&nbsp;field&nbsp;of&nbsp;arrows.<br>
&nbsp;<br>
Function&nbsp;signatures:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-quiver">quiver</a>(U,&nbsp;V,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-quiver">quiver</a>(U,&nbsp;V,&nbsp;C,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-quiver">quiver</a>(X,&nbsp;Y,&nbsp;U,&nbsp;V,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-quiver">quiver</a>(X,&nbsp;Y,&nbsp;U,&nbsp;V,&nbsp;C,&nbsp;**kw)<br>
&nbsp;<br>
Arguments:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;X,&nbsp;Y&nbsp;give&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;arrow&nbsp;locations<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(default&nbsp;is&nbsp;tail&nbsp;of&nbsp;arrow;&nbsp;see&nbsp;'pivot'&nbsp;kwarg)<br>
&nbsp;&nbsp;&nbsp;&nbsp;U,&nbsp;V&nbsp;give&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;components&nbsp;of&nbsp;the&nbsp;arrow&nbsp;vectors<br>
&nbsp;&nbsp;&nbsp;&nbsp;C&nbsp;is&nbsp;an&nbsp;optional&nbsp;array&nbsp;used&nbsp;to&nbsp;map&nbsp;colors&nbsp;to&nbsp;the&nbsp;arrows<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;All&nbsp;arguments&nbsp;may&nbsp;be&nbsp;1-D&nbsp;or&nbsp;2-D&nbsp;arrays&nbsp;or&nbsp;sequences.<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;absent,&nbsp;they&nbsp;will&nbsp;be&nbsp;generated&nbsp;as&nbsp;a&nbsp;uniform&nbsp;grid.<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;U&nbsp;and&nbsp;V&nbsp;are&nbsp;2-D&nbsp;arrays&nbsp;but&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;1-D,&nbsp;and&nbsp;if<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;len(X)&nbsp;and&nbsp;len(Y)&nbsp;match&nbsp;the&nbsp;column&nbsp;and&nbsp;row&nbsp;dimensions<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;U,&nbsp;then&nbsp;X&nbsp;and&nbsp;Y&nbsp;will&nbsp;be&nbsp;expanded&nbsp;with&nbsp;meshgrid.<br>
&nbsp;<br>
Keyword&nbsp;arguments&nbsp;(default&nbsp;given&nbsp;first):<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;units&nbsp;=&nbsp;'width'&nbsp;|&nbsp;'height'&nbsp;|&nbsp;'dots'&nbsp;|&nbsp;'inches'&nbsp;|&nbsp;'x'&nbsp;|&nbsp;'y'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arrow&nbsp;units;&nbsp;the&nbsp;arrow&nbsp;dimensions&nbsp;*except&nbsp;for&nbsp;length*<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;in&nbsp;multiples&nbsp;of&nbsp;this&nbsp;unit.<br>
&nbsp;&nbsp;*&nbsp;scale&nbsp;=&nbsp;None&nbsp;|&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;units&nbsp;per&nbsp;arrow&nbsp;unit,&nbsp;e.g.&nbsp;m/s&nbsp;per&nbsp;plot&nbsp;width;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;smaller&nbsp;scale&nbsp;parameter&nbsp;makes&nbsp;the&nbsp;arrow&nbsp;longer.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;None,&nbsp;a&nbsp;simple&nbsp;autoscaling&nbsp;algorithm&nbsp;is&nbsp;used,&nbsp;based<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on&nbsp;the&nbsp;average&nbsp;vector&nbsp;length&nbsp;and&nbsp;the&nbsp;number&nbsp;of&nbsp;vectors.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Arrow&nbsp;dimensions&nbsp;and&nbsp;scales&nbsp;can&nbsp;be&nbsp;in&nbsp;any&nbsp;of&nbsp;several&nbsp;units:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'width'&nbsp;or&nbsp;'height':&nbsp;the&nbsp;width&nbsp;or&nbsp;height&nbsp;of&nbsp;the&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;'dots'&nbsp;or&nbsp;'inches':&nbsp;&nbsp;pixels&nbsp;or&nbsp;inches,&nbsp;based&nbsp;on&nbsp;the&nbsp;figure&nbsp;dpi<br>
&nbsp;&nbsp;&nbsp;&nbsp;'x'&nbsp;or&nbsp;'y':&nbsp;X&nbsp;or&nbsp;Y&nbsp;data&nbsp;units<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;all&nbsp;cases&nbsp;the&nbsp;arrow&nbsp;aspect&nbsp;ratio&nbsp;is&nbsp;1,&nbsp;so&nbsp;that&nbsp;if&nbsp;U==V&nbsp;the&nbsp;angle<br>
&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;arrow&nbsp;on&nbsp;the&nbsp;plot&nbsp;is&nbsp;45&nbsp;degrees&nbsp;CCW&nbsp;from&nbsp;the&nbsp;X-axis.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;arrows&nbsp;scale&nbsp;differently&nbsp;depending&nbsp;on&nbsp;the&nbsp;units,&nbsp;however.<br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;'x'&nbsp;or&nbsp;'y',&nbsp;the&nbsp;arrows&nbsp;get&nbsp;larger&nbsp;as&nbsp;one&nbsp;zooms&nbsp;in;&nbsp;for&nbsp;other<br>
&nbsp;&nbsp;&nbsp;&nbsp;units,&nbsp;the&nbsp;arrow&nbsp;size&nbsp;is&nbsp;independent&nbsp;of&nbsp;the&nbsp;zoom&nbsp;state.&nbsp;&nbsp;For<br>
&nbsp;&nbsp;&nbsp;&nbsp;'width&nbsp;or&nbsp;'height',&nbsp;the&nbsp;arrow&nbsp;size&nbsp;increases&nbsp;with&nbsp;the&nbsp;width&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;height&nbsp;of&nbsp;the&nbsp;axes,&nbsp;respectively,&nbsp;when&nbsp;the&nbsp;the&nbsp;window&nbsp;is&nbsp;resized;<br>
&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;'dots'&nbsp;or&nbsp;'inches',&nbsp;resizing&nbsp;does&nbsp;not&nbsp;change&nbsp;the&nbsp;arrows.<br>
&nbsp;<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;width&nbsp;=&nbsp;?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shaft&nbsp;width&nbsp;in&nbsp;arrow&nbsp;units;&nbsp;default&nbsp;depends&nbsp;on<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;choice&nbsp;of&nbsp;units,&nbsp;above,&nbsp;and&nbsp;number&nbsp;of&nbsp;vectors;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;typical&nbsp;starting&nbsp;value&nbsp;is&nbsp;about<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.005&nbsp;times&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;plot.<br>
&nbsp;&nbsp;*&nbsp;headwidth&nbsp;=&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;head&nbsp;width&nbsp;as&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width<br>
&nbsp;&nbsp;*&nbsp;headlength&nbsp;=&nbsp;5&nbsp;&nbsp;&nbsp;head&nbsp;length&nbsp;as&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width<br>
&nbsp;&nbsp;*&nbsp;headaxislength&nbsp;=&nbsp;4.5&nbsp;&nbsp;head&nbsp;length&nbsp;at&nbsp;shaft&nbsp;intersection<br>
&nbsp;&nbsp;*&nbsp;minshaft&nbsp;=&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length&nbsp;below&nbsp;which&nbsp;arrow&nbsp;scales,&nbsp;in&nbsp;units<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;head&nbsp;length.&nbsp;Do&nbsp;not&nbsp;set&nbsp;this&nbsp;to&nbsp;less<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;than&nbsp;1,&nbsp;or&nbsp;small&nbsp;arrows&nbsp;will&nbsp;look&nbsp;terrible!<br>
&nbsp;&nbsp;*&nbsp;minlength&nbsp;=&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;minimum&nbsp;length&nbsp;as&nbsp;a&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;an&nbsp;arrow&nbsp;length&nbsp;is&nbsp;less&nbsp;than&nbsp;this,&nbsp;plot&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dot&nbsp;(hexagon)&nbsp;of&nbsp;this&nbsp;diameter&nbsp;instead.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;defaults&nbsp;give&nbsp;a&nbsp;slightly&nbsp;swept-back&nbsp;arrow;&nbsp;to&nbsp;make&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;head&nbsp;a&nbsp;triangle,&nbsp;make&nbsp;headaxislength&nbsp;the&nbsp;same&nbsp;as&nbsp;headlength.<br>
&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;make&nbsp;the&nbsp;arrow&nbsp;more&nbsp;pointed,&nbsp;reduce&nbsp;headwidth&nbsp;or&nbsp;increase<br>
&nbsp;&nbsp;&nbsp;&nbsp;headlength&nbsp;and&nbsp;headaxislength.<br>
&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;make&nbsp;the&nbsp;head&nbsp;smaller&nbsp;relative&nbsp;to&nbsp;the&nbsp;shaft,&nbsp;scale&nbsp;down<br>
&nbsp;&nbsp;&nbsp;&nbsp;all&nbsp;the&nbsp;head*&nbsp;parameters.<br>
&nbsp;&nbsp;&nbsp;&nbsp;You&nbsp;will&nbsp;probably&nbsp;do&nbsp;best&nbsp;to&nbsp;leave&nbsp;minshaft&nbsp;alone.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;pivot&nbsp;=&nbsp;'tail'&nbsp;|&nbsp;'middle'&nbsp;|&nbsp;'tip'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;part&nbsp;of&nbsp;the&nbsp;arrow&nbsp;that&nbsp;is&nbsp;at&nbsp;the&nbsp;grid&nbsp;point;&nbsp;the&nbsp;arrow<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotates&nbsp;about&nbsp;this&nbsp;point,&nbsp;hence&nbsp;the&nbsp;name&nbsp;'pivot'.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;color&nbsp;=&nbsp;'k'&nbsp;|&nbsp;any&nbsp;matplotlib&nbsp;color&nbsp;spec&nbsp;or&nbsp;sequence&nbsp;of&nbsp;color&nbsp;specs.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This&nbsp;is&nbsp;a&nbsp;synonym&nbsp;for&nbsp;the&nbsp;PolyCollection&nbsp;facecolor&nbsp;kwarg.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;C&nbsp;has&nbsp;been&nbsp;set,&nbsp;'color'&nbsp;has&nbsp;no&nbsp;effect.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;*&nbsp;All&nbsp;PolyCollection&nbsp;kwargs&nbsp;are&nbsp;valid,&nbsp;in&nbsp;the&nbsp;sense&nbsp;that&nbsp;they<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;be&nbsp;passed&nbsp;on&nbsp;to&nbsp;the&nbsp;PolyCollection&nbsp;constructor.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;particular,&nbsp;one&nbsp;might&nbsp;want&nbsp;to&nbsp;use,&nbsp;for&nbsp;example:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidths&nbsp;=&nbsp;(1,),&nbsp;edgecolors&nbsp;=&nbsp;('g',)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;make&nbsp;the&nbsp;arrows&nbsp;have&nbsp;green&nbsp;outlines&nbsp;of&nbsp;unit&nbsp;width.</tt></dd></dl>

<dl><dt><a name="Subplot-quiver2"><strong>quiver2</strong></a>(self, *args, **kw)</dt><dd><tt>Plot&nbsp;a&nbsp;2-D&nbsp;field&nbsp;of&nbsp;arrows.<br>
&nbsp;<br>
Function&nbsp;signatures:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-quiver">quiver</a>(U,&nbsp;V,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-quiver">quiver</a>(U,&nbsp;V,&nbsp;C,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-quiver">quiver</a>(X,&nbsp;Y,&nbsp;U,&nbsp;V,&nbsp;**kw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-quiver">quiver</a>(X,&nbsp;Y,&nbsp;U,&nbsp;V,&nbsp;C,&nbsp;**kw)<br>
&nbsp;<br>
Arguments:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;X,&nbsp;Y&nbsp;give&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;arrow&nbsp;locations<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(default&nbsp;is&nbsp;tail&nbsp;of&nbsp;arrow;&nbsp;see&nbsp;'pivot'&nbsp;kwarg)<br>
&nbsp;&nbsp;&nbsp;&nbsp;U,&nbsp;V&nbsp;give&nbsp;the&nbsp;x&nbsp;and&nbsp;y&nbsp;components&nbsp;of&nbsp;the&nbsp;arrow&nbsp;vectors<br>
&nbsp;&nbsp;&nbsp;&nbsp;C&nbsp;is&nbsp;an&nbsp;optional&nbsp;array&nbsp;used&nbsp;to&nbsp;map&nbsp;colors&nbsp;to&nbsp;the&nbsp;arrows<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;All&nbsp;arguments&nbsp;may&nbsp;be&nbsp;1-D&nbsp;or&nbsp;2-D&nbsp;arrays&nbsp;or&nbsp;sequences.<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;absent,&nbsp;they&nbsp;will&nbsp;be&nbsp;generated&nbsp;as&nbsp;a&nbsp;uniform&nbsp;grid.<br>
&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;U&nbsp;and&nbsp;V&nbsp;are&nbsp;2-D&nbsp;arrays&nbsp;but&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;1-D,&nbsp;and&nbsp;if<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;len(X)&nbsp;and&nbsp;len(Y)&nbsp;match&nbsp;the&nbsp;column&nbsp;and&nbsp;row&nbsp;dimensions<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;U,&nbsp;then&nbsp;X&nbsp;and&nbsp;Y&nbsp;will&nbsp;be&nbsp;expanded&nbsp;with&nbsp;meshgrid.<br>
&nbsp;<br>
Keyword&nbsp;arguments&nbsp;(default&nbsp;given&nbsp;first):<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;units&nbsp;=&nbsp;'width'&nbsp;|&nbsp;'height'&nbsp;|&nbsp;'dots'&nbsp;|&nbsp;'inches'&nbsp;|&nbsp;'x'&nbsp;|&nbsp;'y'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arrow&nbsp;units;&nbsp;the&nbsp;arrow&nbsp;dimensions&nbsp;*except&nbsp;for&nbsp;length*<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;in&nbsp;multiples&nbsp;of&nbsp;this&nbsp;unit.<br>
&nbsp;&nbsp;*&nbsp;scale&nbsp;=&nbsp;None&nbsp;|&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;units&nbsp;per&nbsp;arrow&nbsp;unit,&nbsp;e.g.&nbsp;m/s&nbsp;per&nbsp;plot&nbsp;width;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;smaller&nbsp;scale&nbsp;parameter&nbsp;makes&nbsp;the&nbsp;arrow&nbsp;longer.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;None,&nbsp;a&nbsp;simple&nbsp;autoscaling&nbsp;algorithm&nbsp;is&nbsp;used,&nbsp;based<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on&nbsp;the&nbsp;average&nbsp;vector&nbsp;length&nbsp;and&nbsp;the&nbsp;number&nbsp;of&nbsp;vectors.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Arrow&nbsp;dimensions&nbsp;and&nbsp;scales&nbsp;can&nbsp;be&nbsp;in&nbsp;any&nbsp;of&nbsp;several&nbsp;units:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;'width'&nbsp;or&nbsp;'height':&nbsp;the&nbsp;width&nbsp;or&nbsp;height&nbsp;of&nbsp;the&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;'dots'&nbsp;or&nbsp;'inches':&nbsp;&nbsp;pixels&nbsp;or&nbsp;inches,&nbsp;based&nbsp;on&nbsp;the&nbsp;figure&nbsp;dpi<br>
&nbsp;&nbsp;&nbsp;&nbsp;'x'&nbsp;or&nbsp;'y':&nbsp;X&nbsp;or&nbsp;Y&nbsp;data&nbsp;units<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;all&nbsp;cases&nbsp;the&nbsp;arrow&nbsp;aspect&nbsp;ratio&nbsp;is&nbsp;1,&nbsp;so&nbsp;that&nbsp;if&nbsp;U==V&nbsp;the&nbsp;angle<br>
&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;arrow&nbsp;on&nbsp;the&nbsp;plot&nbsp;is&nbsp;45&nbsp;degrees&nbsp;CCW&nbsp;from&nbsp;the&nbsp;X-axis.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;arrows&nbsp;scale&nbsp;differently&nbsp;depending&nbsp;on&nbsp;the&nbsp;units,&nbsp;however.<br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;'x'&nbsp;or&nbsp;'y',&nbsp;the&nbsp;arrows&nbsp;get&nbsp;larger&nbsp;as&nbsp;one&nbsp;zooms&nbsp;in;&nbsp;for&nbsp;other<br>
&nbsp;&nbsp;&nbsp;&nbsp;units,&nbsp;the&nbsp;arrow&nbsp;size&nbsp;is&nbsp;independent&nbsp;of&nbsp;the&nbsp;zoom&nbsp;state.&nbsp;&nbsp;For<br>
&nbsp;&nbsp;&nbsp;&nbsp;'width&nbsp;or&nbsp;'height',&nbsp;the&nbsp;arrow&nbsp;size&nbsp;increases&nbsp;with&nbsp;the&nbsp;width&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;height&nbsp;of&nbsp;the&nbsp;axes,&nbsp;respectively,&nbsp;when&nbsp;the&nbsp;the&nbsp;window&nbsp;is&nbsp;resized;<br>
&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;'dots'&nbsp;or&nbsp;'inches',&nbsp;resizing&nbsp;does&nbsp;not&nbsp;change&nbsp;the&nbsp;arrows.<br>
&nbsp;<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;width&nbsp;=&nbsp;?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shaft&nbsp;width&nbsp;in&nbsp;arrow&nbsp;units;&nbsp;default&nbsp;depends&nbsp;on<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;choice&nbsp;of&nbsp;units,&nbsp;above,&nbsp;and&nbsp;number&nbsp;of&nbsp;vectors;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;typical&nbsp;starting&nbsp;value&nbsp;is&nbsp;about<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.005&nbsp;times&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;plot.<br>
&nbsp;&nbsp;*&nbsp;headwidth&nbsp;=&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;head&nbsp;width&nbsp;as&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width<br>
&nbsp;&nbsp;*&nbsp;headlength&nbsp;=&nbsp;5&nbsp;&nbsp;&nbsp;head&nbsp;length&nbsp;as&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width<br>
&nbsp;&nbsp;*&nbsp;headaxislength&nbsp;=&nbsp;4.5&nbsp;&nbsp;head&nbsp;length&nbsp;at&nbsp;shaft&nbsp;intersection<br>
&nbsp;&nbsp;*&nbsp;minshaft&nbsp;=&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length&nbsp;below&nbsp;which&nbsp;arrow&nbsp;scales,&nbsp;in&nbsp;units<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;head&nbsp;length.&nbsp;Do&nbsp;not&nbsp;set&nbsp;this&nbsp;to&nbsp;less<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;than&nbsp;1,&nbsp;or&nbsp;small&nbsp;arrows&nbsp;will&nbsp;look&nbsp;terrible!<br>
&nbsp;&nbsp;*&nbsp;minlength&nbsp;=&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;minimum&nbsp;length&nbsp;as&nbsp;a&nbsp;multiple&nbsp;of&nbsp;shaft&nbsp;width;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;an&nbsp;arrow&nbsp;length&nbsp;is&nbsp;less&nbsp;than&nbsp;this,&nbsp;plot&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dot&nbsp;(hexagon)&nbsp;of&nbsp;this&nbsp;diameter&nbsp;instead.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;defaults&nbsp;give&nbsp;a&nbsp;slightly&nbsp;swept-back&nbsp;arrow;&nbsp;to&nbsp;make&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;head&nbsp;a&nbsp;triangle,&nbsp;make&nbsp;headaxislength&nbsp;the&nbsp;same&nbsp;as&nbsp;headlength.<br>
&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;make&nbsp;the&nbsp;arrow&nbsp;more&nbsp;pointed,&nbsp;reduce&nbsp;headwidth&nbsp;or&nbsp;increase<br>
&nbsp;&nbsp;&nbsp;&nbsp;headlength&nbsp;and&nbsp;headaxislength.<br>
&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;make&nbsp;the&nbsp;head&nbsp;smaller&nbsp;relative&nbsp;to&nbsp;the&nbsp;shaft,&nbsp;scale&nbsp;down<br>
&nbsp;&nbsp;&nbsp;&nbsp;all&nbsp;the&nbsp;head*&nbsp;parameters.<br>
&nbsp;&nbsp;&nbsp;&nbsp;You&nbsp;will&nbsp;probably&nbsp;do&nbsp;best&nbsp;to&nbsp;leave&nbsp;minshaft&nbsp;alone.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;pivot&nbsp;=&nbsp;'tail'&nbsp;|&nbsp;'middle'&nbsp;|&nbsp;'tip'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;part&nbsp;of&nbsp;the&nbsp;arrow&nbsp;that&nbsp;is&nbsp;at&nbsp;the&nbsp;grid&nbsp;point;&nbsp;the&nbsp;arrow<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotates&nbsp;about&nbsp;this&nbsp;point,&nbsp;hence&nbsp;the&nbsp;name&nbsp;'pivot'.<br>
&nbsp;<br>
&nbsp;&nbsp;*&nbsp;color&nbsp;=&nbsp;'k'&nbsp;|&nbsp;any&nbsp;matplotlib&nbsp;color&nbsp;spec&nbsp;or&nbsp;sequence&nbsp;of&nbsp;color&nbsp;specs.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This&nbsp;is&nbsp;a&nbsp;synonym&nbsp;for&nbsp;the&nbsp;PolyCollection&nbsp;facecolor&nbsp;kwarg.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;C&nbsp;has&nbsp;been&nbsp;set,&nbsp;'color'&nbsp;has&nbsp;no&nbsp;effect.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;*&nbsp;All&nbsp;PolyCollection&nbsp;kwargs&nbsp;are&nbsp;valid,&nbsp;in&nbsp;the&nbsp;sense&nbsp;that&nbsp;they<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;be&nbsp;passed&nbsp;on&nbsp;to&nbsp;the&nbsp;PolyCollection&nbsp;constructor.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;particular,&nbsp;one&nbsp;might&nbsp;want&nbsp;to&nbsp;use,&nbsp;for&nbsp;example:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidths&nbsp;=&nbsp;(1,),&nbsp;edgecolors&nbsp;=&nbsp;('g',)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;make&nbsp;the&nbsp;arrows&nbsp;have&nbsp;green&nbsp;outlines&nbsp;of&nbsp;unit&nbsp;width.</tt></dd></dl>

<dl><dt><a name="Subplot-quiver_classic"><strong>quiver_classic</strong></a>(self, U, V, *args, **kwargs)</dt><dd><tt>QUIVER(&nbsp;X,&nbsp;Y,&nbsp;U,&nbsp;V&nbsp;)<br>
QUIVER(&nbsp;U,&nbsp;V&nbsp;)<br>
QUIVER(&nbsp;X,&nbsp;Y,&nbsp;U,&nbsp;V,&nbsp;S)<br>
QUIVER(&nbsp;U,&nbsp;V,&nbsp;S&nbsp;)<br>
QUIVER(&nbsp;...,&nbsp;color=None,&nbsp;width=1.0,&nbsp;cmap=None,&nbsp;norm=None&nbsp;)<br>
&nbsp;<br>
Make&nbsp;a&nbsp;vector&nbsp;plot&nbsp;(U,&nbsp;V)&nbsp;with&nbsp;arrows&nbsp;on&nbsp;a&nbsp;grid&nbsp;(X,&nbsp;Y)<br>
&nbsp;<br>
If&nbsp;X&nbsp;and&nbsp;Y&nbsp;are&nbsp;not&nbsp;specified,&nbsp;U&nbsp;and&nbsp;V&nbsp;must&nbsp;be&nbsp;2D&nbsp;arrays.&nbsp;&nbsp;Equally&nbsp;spaced<br>
X&nbsp;and&nbsp;Y&nbsp;grids&nbsp;are&nbsp;then&nbsp;generated&nbsp;using&nbsp;the&nbsp;meshgrid&nbsp;command.<br>
&nbsp;<br>
color&nbsp;can&nbsp;be&nbsp;a&nbsp;color&nbsp;value&nbsp;or&nbsp;an&nbsp;array&nbsp;of&nbsp;colors,&nbsp;so&nbsp;that&nbsp;the&nbsp;arrows&nbsp;can&nbsp;be<br>
colored&nbsp;according&nbsp;to&nbsp;another&nbsp;dataset.&nbsp;&nbsp;If&nbsp;cmap&nbsp;is&nbsp;specified&nbsp;and&nbsp;color&nbsp;is&nbsp;'length',<br>
the&nbsp;colormap&nbsp;is&nbsp;used&nbsp;to&nbsp;give&nbsp;a&nbsp;color&nbsp;according&nbsp;to&nbsp;the&nbsp;vector's&nbsp;length.<br>
&nbsp;<br>
If&nbsp;color&nbsp;is&nbsp;a&nbsp;scalar&nbsp;field,&nbsp;the&nbsp;colormap&nbsp;is&nbsp;used&nbsp;to&nbsp;map&nbsp;the&nbsp;scalar&nbsp;to&nbsp;a&nbsp;color<br>
If&nbsp;a&nbsp;colormap&nbsp;is&nbsp;specified&nbsp;and&nbsp;color&nbsp;is&nbsp;an&nbsp;array&nbsp;of&nbsp;color&nbsp;triplets,&nbsp;then&nbsp;the<br>
colormap&nbsp;is&nbsp;ignored<br>
&nbsp;<br>
width&nbsp;is&nbsp;a&nbsp;scalar&nbsp;that&nbsp;controls&nbsp;the&nbsp;width&nbsp;of&nbsp;the&nbsp;arrows<br>
&nbsp;<br>
if&nbsp;S&nbsp;is&nbsp;specified&nbsp;it&nbsp;is&nbsp;used&nbsp;to&nbsp;scale&nbsp;the&nbsp;vectors.&nbsp;Use&nbsp;S=0&nbsp;to&nbsp;disable&nbsp;automatic<br>
scaling.<br>
If&nbsp;S!=0,&nbsp;vectors&nbsp;are&nbsp;scaled&nbsp;to&nbsp;fit&nbsp;within&nbsp;the&nbsp;grid&nbsp;and&nbsp;then&nbsp;are&nbsp;multiplied&nbsp;by&nbsp;S.</tt></dd></dl>

<dl><dt><a name="Subplot-quiverkey"><strong>quiverkey</strong></a>(self, *args, **kw)</dt><dd><tt>Add&nbsp;a&nbsp;key&nbsp;to&nbsp;a&nbsp;quiver&nbsp;plot.<br>
&nbsp;<br>
Function&nbsp;signature:<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-quiverkey">quiverkey</a>(Q,&nbsp;X,&nbsp;Y,&nbsp;U,&nbsp;label,&nbsp;**kw)<br>
&nbsp;<br>
Arguments:<br>
&nbsp;&nbsp;&nbsp;&nbsp;Q&nbsp;is&nbsp;the&nbsp;Quiver&nbsp;instance&nbsp;returned&nbsp;by&nbsp;a&nbsp;call&nbsp;to&nbsp;quiver.<br>
&nbsp;&nbsp;&nbsp;&nbsp;X,&nbsp;Y&nbsp;give&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;key;&nbsp;additional&nbsp;explanation&nbsp;follows.<br>
&nbsp;&nbsp;&nbsp;&nbsp;U&nbsp;is&nbsp;the&nbsp;length&nbsp;of&nbsp;the&nbsp;key<br>
&nbsp;&nbsp;&nbsp;&nbsp;label&nbsp;is&nbsp;a&nbsp;string&nbsp;with&nbsp;the&nbsp;length&nbsp;and&nbsp;units&nbsp;of&nbsp;the&nbsp;key<br>
&nbsp;<br>
Keyword&nbsp;arguments&nbsp;(default&nbsp;given&nbsp;first):<br>
&nbsp;&nbsp;*&nbsp;coordinates&nbsp;=&nbsp;'axes'&nbsp;|&nbsp;'figure'&nbsp;|&nbsp;'data'&nbsp;|&nbsp;'inches'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Coordinate&nbsp;system&nbsp;and&nbsp;units&nbsp;for&nbsp;X,&nbsp;Y:&nbsp;'axes'&nbsp;and&nbsp;'figure'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;normalized&nbsp;coordinate&nbsp;systems&nbsp;with&nbsp;0,0&nbsp;in&nbsp;the&nbsp;lower<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left&nbsp;and&nbsp;1,1&nbsp;in&nbsp;the&nbsp;upper&nbsp;right;&nbsp;'data'&nbsp;are&nbsp;the&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;coordinates&nbsp;(used&nbsp;for&nbsp;the&nbsp;locations&nbsp;of&nbsp;the&nbsp;vectors<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in&nbsp;the&nbsp;quiver&nbsp;plot&nbsp;itself);&nbsp;'inches'&nbsp;is&nbsp;position&nbsp;in&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure&nbsp;in&nbsp;inches,&nbsp;with&nbsp;0,0&nbsp;at&nbsp;the&nbsp;lower&nbsp;left&nbsp;corner.<br>
&nbsp;&nbsp;*&nbsp;color&nbsp;overrides&nbsp;face&nbsp;and&nbsp;edge&nbsp;colors&nbsp;from&nbsp;Q.<br>
&nbsp;&nbsp;*&nbsp;labelpos&nbsp;=&nbsp;'N'&nbsp;|&nbsp;'S'&nbsp;|&nbsp;'E'&nbsp;|&nbsp;'W'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Position&nbsp;the&nbsp;label&nbsp;above,&nbsp;below,&nbsp;to&nbsp;the&nbsp;right,&nbsp;to&nbsp;the&nbsp;left<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;arrow,&nbsp;respectively.<br>
&nbsp;&nbsp;*&nbsp;labelsep&nbsp;=&nbsp;0.1&nbsp;inches&nbsp;distance&nbsp;between&nbsp;the&nbsp;arrow&nbsp;and&nbsp;the&nbsp;label<br>
&nbsp;&nbsp;*&nbsp;labelcolor&nbsp;(defaults&nbsp;to&nbsp;default&nbsp;Text&nbsp;color)<br>
&nbsp;&nbsp;*&nbsp;fontproperties&nbsp;is&nbsp;a&nbsp;dictionary&nbsp;with&nbsp;keyword&nbsp;arguments&nbsp;accepted<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;by&nbsp;the&nbsp;FontProperties&nbsp;initializer:&nbsp;family,&nbsp;style,&nbsp;variant,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size,&nbsp;weight<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Any&nbsp;additional&nbsp;keyword&nbsp;arguments&nbsp;are&nbsp;used&nbsp;to&nbsp;override&nbsp;vector<br>
&nbsp;&nbsp;&nbsp;&nbsp;properties&nbsp;taken&nbsp;from&nbsp;Q.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;positioning&nbsp;of&nbsp;the&nbsp;key&nbsp;depends&nbsp;on&nbsp;X,&nbsp;Y,&nbsp;coordinates,&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;labelpos.&nbsp;&nbsp;If&nbsp;labelpos&nbsp;is&nbsp;'N'&nbsp;or&nbsp;'S',&nbsp;X,Y&nbsp;give&nbsp;the&nbsp;position<br>
&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;middle&nbsp;of&nbsp;the&nbsp;key&nbsp;arrow.&nbsp;&nbsp;If&nbsp;labelpos&nbsp;is&nbsp;'E',&nbsp;X,Y<br>
&nbsp;&nbsp;&nbsp;&nbsp;positions&nbsp;the&nbsp;head,&nbsp;and&nbsp;if&nbsp;labelpos&nbsp;is&nbsp;'W',&nbsp;X,Y&nbsp;positions&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;tail;&nbsp;in&nbsp;either&nbsp;of&nbsp;these&nbsp;two&nbsp;cases,&nbsp;X,Y&nbsp;is&nbsp;somewhere&nbsp;in&nbsp;the&nbsp;middle<br>
&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;arrow+label&nbsp;key&nbsp;object.</tt></dd></dl>

<dl><dt><a name="Subplot-redraw_in_frame"><strong>redraw_in_frame</strong></a>(self)</dt><dd><tt>This&nbsp;method&nbsp;can&nbsp;only&nbsp;be&nbsp;used&nbsp;after&nbsp;an&nbsp;initial&nbsp;draw&nbsp;which<br>
caches&nbsp;the&nbsp;renderer.&nbsp;&nbsp;It&nbsp;is&nbsp;used&nbsp;to&nbsp;efficiently&nbsp;update&nbsp;<a href="#Axes">Axes</a><br>
data&nbsp;(axis&nbsp;ticks,&nbsp;labels,&nbsp;etc&nbsp;are&nbsp;not&nbsp;updated)</tt></dd></dl>

<dl><dt><a name="Subplot-relim"><strong>relim</strong></a>(self)</dt><dd><tt>recompute&nbsp;the&nbsp;datalimits&nbsp;based&nbsp;on&nbsp;current&nbsp;artists</tt></dd></dl>

<dl><dt><a name="Subplot-scatter"><strong>scatter</strong></a>(self, x, y, s<font color="#909090">=20</font>, c<font color="#909090">='b'</font>, marker<font color="#909090">='o'</font>, cmap<font color="#909090">=None</font>, norm<font color="#909090">=None</font>, vmin<font color="#909090">=None</font>, vmax<font color="#909090">=None</font>, alpha<font color="#909090">=1.0</font>, linewidths<font color="#909090">=None</font>, faceted<font color="#909090">=True</font>, verts<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>SCATTER(x,&nbsp;y,&nbsp;s=20,&nbsp;c='b',&nbsp;marker='o',&nbsp;cmap=None,&nbsp;norm=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;vmin=None,&nbsp;vmax=None,&nbsp;alpha=1.0,&nbsp;linewidths=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;faceted=True,&nbsp;**kwargs)<br>
Supported&nbsp;function&nbsp;signatures:<br>
&nbsp;&nbsp;&nbsp;&nbsp;SCATTER(x,&nbsp;y,&nbsp;**kwargs)<br>
&nbsp;&nbsp;&nbsp;&nbsp;SCATTER(x,&nbsp;y,&nbsp;s,&nbsp;**kwargs)<br>
&nbsp;&nbsp;&nbsp;&nbsp;SCATTER(x,&nbsp;y,&nbsp;s,&nbsp;c,&nbsp;**kwargs)<br>
Make&nbsp;a&nbsp;scatter&nbsp;plot&nbsp;of&nbsp;x&nbsp;versus&nbsp;y,&nbsp;where&nbsp;x,&nbsp;y&nbsp;are&nbsp;1-D&nbsp;sequences<br>
of&nbsp;the&nbsp;same&nbsp;length,&nbsp;N.<br>
Arguments&nbsp;s&nbsp;and&nbsp;c&nbsp;can&nbsp;also&nbsp;be&nbsp;given&nbsp;as&nbsp;kwargs;&nbsp;this&nbsp;is&nbsp;encouraged<br>
for&nbsp;readability.<br>
&nbsp;&nbsp;&nbsp;&nbsp;s&nbsp;is&nbsp;a&nbsp;size&nbsp;in&nbsp;points^2.&nbsp;&nbsp;It&nbsp;is&nbsp;a&nbsp;scalar<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;or&nbsp;an&nbsp;array&nbsp;of&nbsp;the&nbsp;same&nbsp;length&nbsp;as&nbsp;x&nbsp;and&nbsp;y.<br>
&nbsp;&nbsp;&nbsp;&nbsp;c&nbsp;is&nbsp;a&nbsp;color&nbsp;and&nbsp;can&nbsp;be&nbsp;a&nbsp;single&nbsp;color&nbsp;format&nbsp;string,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;or&nbsp;a&nbsp;sequence&nbsp;of&nbsp;color&nbsp;specifications&nbsp;of&nbsp;length&nbsp;N,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;or&nbsp;a&nbsp;sequence&nbsp;of&nbsp;N&nbsp;numbers&nbsp;to&nbsp;be&nbsp;mapped&nbsp;to&nbsp;colors<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;the&nbsp;cmap&nbsp;and&nbsp;norm&nbsp;specified&nbsp;via&nbsp;kwargs&nbsp;(see&nbsp;below).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Note&nbsp;that&nbsp;c&nbsp;should&nbsp;not&nbsp;be&nbsp;a&nbsp;single&nbsp;numeric&nbsp;RGB&nbsp;or&nbsp;RGBA<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sequence&nbsp;because&nbsp;that&nbsp;is&nbsp;indistinguishable&nbsp;from&nbsp;an&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;values&nbsp;to&nbsp;be&nbsp;colormapped.&nbsp;c&nbsp;can&nbsp;be&nbsp;a&nbsp;2-D&nbsp;array&nbsp;in&nbsp;which<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;rows&nbsp;are&nbsp;RGB&nbsp;or&nbsp;RGBA,&nbsp;however.<br>
The&nbsp;marker&nbsp;can&nbsp;be&nbsp;one&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;'s'&nbsp;:&nbsp;square<br>
&nbsp;&nbsp;&nbsp;&nbsp;'o'&nbsp;:&nbsp;circle<br>
&nbsp;&nbsp;&nbsp;&nbsp;'^'&nbsp;:&nbsp;triangle&nbsp;up<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&gt;'&nbsp;:&nbsp;triangle&nbsp;right<br>
&nbsp;&nbsp;&nbsp;&nbsp;'v'&nbsp;:&nbsp;triangle&nbsp;down<br>
&nbsp;&nbsp;&nbsp;&nbsp;'&lt;'&nbsp;:&nbsp;triangle&nbsp;left<br>
&nbsp;&nbsp;&nbsp;&nbsp;'d'&nbsp;:&nbsp;diamond<br>
&nbsp;&nbsp;&nbsp;&nbsp;'p'&nbsp;:&nbsp;pentagram<br>
&nbsp;&nbsp;&nbsp;&nbsp;'h'&nbsp;:&nbsp;hexagon<br>
&nbsp;&nbsp;&nbsp;&nbsp;'8'&nbsp;:&nbsp;octagon<br>
If&nbsp;marker&nbsp;is&nbsp;None&nbsp;and&nbsp;verts&nbsp;is&nbsp;not&nbsp;None,&nbsp;verts&nbsp;is&nbsp;a&nbsp;sequence<br>
of&nbsp;(x,y)&nbsp;vertices&nbsp;for&nbsp;a&nbsp;custom&nbsp;scatter&nbsp;symbol.<br>
s&nbsp;is&nbsp;a&nbsp;size&nbsp;argument&nbsp;in&nbsp;points&nbsp;squared.<br>
Any&nbsp;or&nbsp;all&nbsp;of&nbsp;x,&nbsp;y,&nbsp;s,&nbsp;and&nbsp;c&nbsp;may&nbsp;be&nbsp;masked&nbsp;arrays,&nbsp;in&nbsp;which<br>
case&nbsp;all&nbsp;masks&nbsp;will&nbsp;be&nbsp;combined&nbsp;and&nbsp;only&nbsp;unmasked&nbsp;points<br>
will&nbsp;be&nbsp;plotted.<br>
Other&nbsp;keyword&nbsp;args;&nbsp;the&nbsp;color&nbsp;mapping&nbsp;and&nbsp;normalization&nbsp;arguments&nbsp;will<br>
on&nbsp;be&nbsp;used&nbsp;if&nbsp;c&nbsp;is&nbsp;an&nbsp;array&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;*&nbsp;cmap&nbsp;=&nbsp;cm.jet&nbsp;:&nbsp;a&nbsp;colors.Colormap&nbsp;instance&nbsp;from&nbsp;matplotlib.cm.<br>
&nbsp;&nbsp;&nbsp;&nbsp;defaults&nbsp;to&nbsp;rc&nbsp;image.cmap<br>
&nbsp;&nbsp;*&nbsp;norm&nbsp;=&nbsp;Normalize()&nbsp;:&nbsp;matplotlib.colors.Normalize&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;used&nbsp;to&nbsp;scale&nbsp;luminance&nbsp;data&nbsp;to&nbsp;0,1.<br>
&nbsp;&nbsp;*&nbsp;vmin=None&nbsp;and&nbsp;vmax=None&nbsp;:&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;are&nbsp;used&nbsp;in&nbsp;conjunction<br>
&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;norm&nbsp;to&nbsp;normalize&nbsp;luminance&nbsp;data.&nbsp;&nbsp;If&nbsp;either&nbsp;are&nbsp;None,&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;min&nbsp;and&nbsp;max&nbsp;of&nbsp;the&nbsp;color&nbsp;array&nbsp;C&nbsp;is&nbsp;used.&nbsp;&nbsp;Note&nbsp;if&nbsp;you&nbsp;pass&nbsp;a&nbsp;norm<br>
&nbsp;&nbsp;&nbsp;&nbsp;instance,&nbsp;your&nbsp;settings&nbsp;for&nbsp;vmin&nbsp;and&nbsp;vmax&nbsp;will&nbsp;be&nbsp;ignored<br>
&nbsp;&nbsp;*&nbsp;alpha&nbsp;=1.0&nbsp;:&nbsp;the&nbsp;alpha&nbsp;value&nbsp;for&nbsp;the&nbsp;patches<br>
&nbsp;&nbsp;*&nbsp;linewidths,&nbsp;if&nbsp;None,&nbsp;defaults&nbsp;to&nbsp;(lines.linewidth,).&nbsp;&nbsp;Note<br>
&nbsp;&nbsp;&nbsp;&nbsp;that&nbsp;this&nbsp;is&nbsp;a&nbsp;tuple,&nbsp;and&nbsp;if&nbsp;you&nbsp;set&nbsp;the&nbsp;linewidths<br>
&nbsp;&nbsp;&nbsp;&nbsp;argument&nbsp;you&nbsp;must&nbsp;set&nbsp;it&nbsp;as&nbsp;a&nbsp;sequence&nbsp;of&nbsp;floats,&nbsp;as<br>
&nbsp;&nbsp;&nbsp;&nbsp;required&nbsp;by&nbsp;RegularPolyCollection&nbsp;--&nbsp;see<br>
&nbsp;&nbsp;&nbsp;&nbsp;matplotlib.collections.RegularPolyCollection&nbsp;for&nbsp;details<br>
&nbsp;*&nbsp;faceted:&nbsp;if&nbsp;True,&nbsp;will&nbsp;use&nbsp;the&nbsp;default&nbsp;edgecolor&nbsp;for&nbsp;the<br>
&nbsp;&nbsp;&nbsp;markers.&nbsp;&nbsp;If&nbsp;False,&nbsp;will&nbsp;set&nbsp;the&nbsp;edgecolors&nbsp;to&nbsp;be&nbsp;the&nbsp;same<br>
&nbsp;&nbsp;&nbsp;as&nbsp;the&nbsp;facecolors<br>
&nbsp;&nbsp;&nbsp;Optional&nbsp;kwargs&nbsp;control&nbsp;the&nbsp;PatchCollection&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clim:&nbsp;a&nbsp;length&nbsp;2&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap:&nbsp;a&nbsp;colormap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colorbar:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edgecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;facecolor:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-scatter_classic"><strong>scatter_classic</strong></a>(self, x, y, s<font color="#909090">=None</font>, c<font color="#909090">='b'</font>)</dt><dd><tt>scatter_classic&nbsp;is&nbsp;no&nbsp;longer&nbsp;available;&nbsp;please&nbsp;use&nbsp;scatter.<br>
To&nbsp;help&nbsp;in&nbsp;porting,&nbsp;for&nbsp;comparison&nbsp;to&nbsp;the&nbsp;scatter&nbsp;docstring,<br>
here&nbsp;is&nbsp;the&nbsp;scatter_classic&nbsp;docstring:<br>
&nbsp;<br>
SCATTER_CLASSIC(x,&nbsp;y,&nbsp;s=None,&nbsp;c='b')<br>
&nbsp;<br>
Make&nbsp;a&nbsp;scatter&nbsp;plot&nbsp;of&nbsp;x&nbsp;versus&nbsp;y.&nbsp;&nbsp;s&nbsp;is&nbsp;a&nbsp;size&nbsp;(in&nbsp;data&nbsp;coords)&nbsp;and<br>
can&nbsp;be&nbsp;either&nbsp;a&nbsp;scalar&nbsp;or&nbsp;an&nbsp;array&nbsp;of&nbsp;the&nbsp;same&nbsp;length&nbsp;as&nbsp;x&nbsp;or&nbsp;y.&nbsp;&nbsp;c&nbsp;is<br>
a&nbsp;color&nbsp;and&nbsp;can&nbsp;be&nbsp;a&nbsp;single&nbsp;color&nbsp;format&nbsp;string&nbsp;or&nbsp;an&nbsp;length(x)&nbsp;array<br>
of&nbsp;intensities&nbsp;which&nbsp;will&nbsp;be&nbsp;mapped&nbsp;by&nbsp;the&nbsp;colormap&nbsp;jet.<br>
&nbsp;<br>
If&nbsp;size&nbsp;is&nbsp;None&nbsp;a&nbsp;default&nbsp;size&nbsp;will&nbsp;be&nbsp;used</tt></dd></dl>

<dl><dt><a name="Subplot-semilogx"><strong>semilogx</strong></a>(self, *args, **kwargs)</dt><dd><tt>SEMILOGX(*args,&nbsp;**kwargs)<br>
Make&nbsp;a&nbsp;semilog&nbsp;plot&nbsp;with&nbsp;log&nbsp;scaling&nbsp;on&nbsp;the&nbsp;x&nbsp;axis.&nbsp;&nbsp;The&nbsp;args&nbsp;to<br>
semilog&nbsp;x&nbsp;are&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;args&nbsp;to&nbsp;plot.&nbsp;&nbsp;See&nbsp;help&nbsp;plot&nbsp;for&nbsp;more<br>
info.<br>
Optional&nbsp;keyword&nbsp;args&nbsp;supported&nbsp;are&nbsp;any&nbsp;of&nbsp;the&nbsp;kwargs&nbsp;supported&nbsp;by<br>
plot&nbsp;or&nbsp;set_xscale.&nbsp;&nbsp;Notable,&nbsp;for&nbsp;log&nbsp;scaling:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;basex:&nbsp;base&nbsp;of&nbsp;the&nbsp;logarithm<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;subsx:&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;ticks;&nbsp;None&nbsp;defaults&nbsp;to<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of&nbsp;decades&nbsp;in&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plot;&nbsp;see&nbsp;set_xscale&nbsp;for&nbsp;details<br>
The&nbsp;remaining&nbsp;valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-semilogy"><strong>semilogy</strong></a>(self, *args, **kwargs)</dt><dd><tt>SEMILOGY(*args,&nbsp;**kwargs):<br>
Make&nbsp;a&nbsp;semilog&nbsp;plot&nbsp;with&nbsp;log&nbsp;scaling&nbsp;on&nbsp;the&nbsp;y&nbsp;axis.&nbsp;&nbsp;The&nbsp;args&nbsp;to<br>
semilogy&nbsp;are&nbsp;the&nbsp;same&nbsp;as&nbsp;the&nbsp;args&nbsp;to&nbsp;plot.&nbsp;&nbsp;See&nbsp;help&nbsp;plot&nbsp;for&nbsp;more<br>
info.<br>
Optional&nbsp;keyword&nbsp;args&nbsp;supported&nbsp;are&nbsp;any&nbsp;of&nbsp;the&nbsp;kwargs&nbsp;supported&nbsp;by<br>
plot&nbsp;or&nbsp;set_yscale.&nbsp;&nbsp;Notable,&nbsp;for&nbsp;log&nbsp;scaling:<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;basey:&nbsp;base&nbsp;of&nbsp;the&nbsp;logarithm<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;subsy:&nbsp;a&nbsp;sequence&nbsp;of&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;ticks;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;None&nbsp;defaults&nbsp;to&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;decades&nbsp;in&nbsp;the&nbsp;plot;&nbsp;see&nbsp;set_yscale&nbsp;for&nbsp;details<br>
The&nbsp;remaining&nbsp;valid&nbsp;kwargs&nbsp;are&nbsp;Line2D&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;antialiased&nbsp;or&nbsp;aa:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;or&nbsp;c:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dash_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dashes:&nbsp;sequence&nbsp;of&nbsp;on/off&nbsp;ink&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;(array&nbsp;xdata,&nbsp;array&nbsp;ydata)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle&nbsp;or&nbsp;ls:&nbsp;[&nbsp;'-'&nbsp;|&nbsp;'--'&nbsp;|&nbsp;'-.'&nbsp;|&nbsp;':'&nbsp;|&nbsp;'steps'&nbsp;|&nbsp;'None'&nbsp;|&nbsp;'&nbsp;'&nbsp;|&nbsp;''&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth&nbsp;or&nbsp;lw:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marker:&nbsp;[&nbsp;'+'&nbsp;|&nbsp;','&nbsp;|&nbsp;'.'&nbsp;|&nbsp;'1'&nbsp;|&nbsp;'2'&nbsp;|&nbsp;'3'&nbsp;|&nbsp;'4'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgecolor&nbsp;or&nbsp;mec:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markeredgewidth&nbsp;or&nbsp;mew:&nbsp;float&nbsp;value&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markerfacecolor&nbsp;or&nbsp;mfc:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;markersize&nbsp;or&nbsp;ms:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_capstyle:&nbsp;['butt'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;&nbsp;'projecting']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solid_joinstyle:&nbsp;['miter'&nbsp;|&nbsp;'round'&nbsp;|&nbsp;'bevel']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ydata:&nbsp;array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-set_adjustable"><strong>set_adjustable</strong></a>(self, adjustable)</dt><dd><tt>ACCEPTS:&nbsp;['box'&nbsp;|&nbsp;'datalim']</tt></dd></dl>

<dl><dt><a name="Subplot-set_anchor"><strong>set_anchor</strong></a>(self, anchor)</dt><dd><tt>ACCEPTS:&nbsp;['C',&nbsp;'SW',&nbsp;'S',&nbsp;'SE',&nbsp;'E',&nbsp;'NE',&nbsp;'N',&nbsp;'NW',&nbsp;'W']</tt></dd></dl>

<dl><dt><a name="Subplot-set_aspect"><strong>set_aspect</strong></a>(self, aspect, adjustable<font color="#909090">=None</font>, anchor<font color="#909090">=None</font>)</dt><dd><tt>aspect:<br>
&nbsp;&nbsp;&nbsp;'auto'&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;automatic;&nbsp;fill&nbsp;position&nbsp;rectangle&nbsp;with&nbsp;data<br>
&nbsp;&nbsp;&nbsp;'normal'&nbsp;-&nbsp;&nbsp;same&nbsp;as&nbsp;'auto';&nbsp;deprecated<br>
&nbsp;&nbsp;&nbsp;'equal'&nbsp;&nbsp;-&nbsp;&nbsp;same&nbsp;scaling&nbsp;from&nbsp;data&nbsp;to&nbsp;plot&nbsp;units&nbsp;for&nbsp;x&nbsp;and&nbsp;y<br>
&nbsp;&nbsp;&nbsp;&nbsp;num&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;a&nbsp;circle&nbsp;will&nbsp;be&nbsp;stretched&nbsp;such&nbsp;that&nbsp;the&nbsp;height<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;num&nbsp;times&nbsp;the&nbsp;width.&nbsp;aspect=1&nbsp;is&nbsp;the&nbsp;same&nbsp;as<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;aspect='equal'.<br>
&nbsp;<br>
adjustable:<br>
&nbsp;&nbsp;&nbsp;&nbsp;'box'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;change&nbsp;physical&nbsp;size&nbsp;of&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;'datalim'&nbsp;&nbsp;-&nbsp;change&nbsp;xlim&nbsp;or&nbsp;ylim<br>
&nbsp;<br>
anchor:<br>
&nbsp;&nbsp;&nbsp;&nbsp;'C'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;centered<br>
&nbsp;&nbsp;&nbsp;&nbsp;'SW'&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;lower&nbsp;left&nbsp;corner<br>
&nbsp;&nbsp;&nbsp;&nbsp;'S'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;middle&nbsp;of&nbsp;bottom&nbsp;edge<br>
&nbsp;&nbsp;&nbsp;&nbsp;'SE'&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;lower&nbsp;right&nbsp;corner<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;etc.<br>
&nbsp;<br>
ACCEPTS:&nbsp;['auto'&nbsp;|&nbsp;'equal'&nbsp;|&nbsp;aspect_ratio]</tt></dd></dl>

<dl><dt><a name="Subplot-set_autoscale_on"><strong>set_autoscale_on</strong></a>(self, b)</dt><dd><tt>Set&nbsp;whether&nbsp;autoscaling&nbsp;is&nbsp;applied&nbsp;on&nbsp;plot&nbsp;commands<br>
&nbsp;<br>
ACCEPTS:&nbsp;True|False</tt></dd></dl>

<dl><dt><a name="Subplot-set_axis_bgcolor"><strong>set_axis_bgcolor</strong></a>(self, color)</dt><dd><tt>set&nbsp;the&nbsp;axes&nbsp;background&nbsp;color<br>
&nbsp;<br>
ACCEPTS:&nbsp;any&nbsp;matplotlib&nbsp;color&nbsp;-&nbsp;see&nbsp;help(colors)</tt></dd></dl>

<dl><dt><a name="Subplot-set_axis_off"><strong>set_axis_off</strong></a>(self)</dt><dd><tt>turn&nbsp;off&nbsp;the&nbsp;axis<br>
&nbsp;<br>
ACCEPTS:&nbsp;void</tt></dd></dl>

<dl><dt><a name="Subplot-set_axis_on"><strong>set_axis_on</strong></a>(self)</dt><dd><tt>turn&nbsp;on&nbsp;the&nbsp;axis<br>
&nbsp;<br>
ACCEPTS:&nbsp;void</tt></dd></dl>

<dl><dt><a name="Subplot-set_axisbelow"><strong>set_axisbelow</strong></a>(self, b)</dt><dd><tt>Set&nbsp;whether&nbsp;the&nbsp;axis&nbsp;ticks&nbsp;and&nbsp;gridlines&nbsp;are&nbsp;above&nbsp;or&nbsp;below&nbsp;most&nbsp;artists<br>
&nbsp;<br>
ACCEPTS:&nbsp;True|False</tt></dd></dl>

<dl><dt><a name="Subplot-set_cursor_props"><strong>set_cursor_props</strong></a>(self, *args)</dt><dd><tt>Set&nbsp;the&nbsp;cursor&nbsp;property&nbsp;as<br>
ax.<a href="#Subplot-set_cursor_props">set_cursor_props</a>(linewidth,&nbsp;color)&nbsp;&nbsp;OR<br>
ax.<a href="#Subplot-set_cursor_props">set_cursor_props</a>((linewidth,&nbsp;color))<br>
&nbsp;<br>
ACCEPTS:&nbsp;a&nbsp;(float,&nbsp;color)&nbsp;tuple</tt></dd></dl>

<dl><dt><a name="Subplot-set_figure"><strong>set_figure</strong></a>(self, fig)</dt><dd><tt>Set&nbsp;the&nbsp;<a href="#Axes">Axes</a>&nbsp;figure<br>
&nbsp;<br>
ACCEPTS:&nbsp;a&nbsp;Figure&nbsp;instance</tt></dd></dl>

<dl><dt><a name="Subplot-set_frame_on"><strong>set_frame_on</strong></a>(self, b)</dt><dd><tt>Set&nbsp;whether&nbsp;the&nbsp;axes&nbsp;rectangle&nbsp;patch&nbsp;is&nbsp;drawn<br>
&nbsp;<br>
ACCEPTS:&nbsp;True|False</tt></dd></dl>

<dl><dt><a name="Subplot-set_navigate"><strong>set_navigate</strong></a>(self, b)</dt><dd><tt>Set&nbsp;whether&nbsp;the&nbsp;axes&nbsp;responds&nbsp;to&nbsp;navigation&nbsp;toolbar&nbsp;commands<br>
&nbsp;<br>
ACCEPTS:&nbsp;True|False</tt></dd></dl>

<dl><dt><a name="Subplot-set_navigate_mode"><strong>set_navigate_mode</strong></a>(self, b)</dt><dd><tt>Set&nbsp;the&nbsp;navigation&nbsp;toolbar&nbsp;button&nbsp;status;<br>
this&nbsp;is&nbsp;not&nbsp;a&nbsp;user-API&nbsp;function.</tt></dd></dl>

<dl><dt><a name="Subplot-set_position"><strong>set_position</strong></a>(self, pos, which<font color="#909090">='both'</font>)</dt><dd><tt>Set&nbsp;the&nbsp;axes&nbsp;position&nbsp;with&nbsp;pos&nbsp;=&nbsp;[left,&nbsp;bottom,&nbsp;width,&nbsp;height]<br>
in&nbsp;relative&nbsp;0,1&nbsp;coords<br>
&nbsp;<br>
There&nbsp;are&nbsp;two&nbsp;position&nbsp;variables:&nbsp;one&nbsp;which&nbsp;is&nbsp;ultimately<br>
used,&nbsp;but&nbsp;which&nbsp;may&nbsp;be&nbsp;modified&nbsp;by&nbsp;apply_aspect,&nbsp;and&nbsp;a&nbsp;second<br>
which&nbsp;is&nbsp;the&nbsp;starting&nbsp;point&nbsp;for&nbsp;apply_aspect.<br>
&nbsp;<br>
which&nbsp;=&nbsp;'active'&nbsp;to&nbsp;change&nbsp;the&nbsp;first;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'original'&nbsp;to&nbsp;change&nbsp;the&nbsp;second;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'both'&nbsp;to&nbsp;change&nbsp;both<br>
&nbsp;<br>
ACCEPTS:&nbsp;len(4)&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="Subplot-set_title"><strong>set_title</strong></a>(self, label, fontdict<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>SET_TITLE(label,&nbsp;fontdict=None,&nbsp;**kwargs):<br>
Set&nbsp;the&nbsp;title&nbsp;for&nbsp;the&nbsp;axes.&nbsp;&nbsp;See&nbsp;the&nbsp;text&nbsp;docstring&nbsp;for&nbsp;information<br>
of&nbsp;how&nbsp;override&nbsp;and&nbsp;the&nbsp;optional&nbsp;args&nbsp;work<br>
kwargs&nbsp;are&nbsp;Text&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
ACCEPTS:&nbsp;str</tt></dd></dl>

<dl><dt><a name="Subplot-set_xlabel"><strong>set_xlabel</strong></a>(self, xlabel, fontdict<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>SET_XLABEL(xlabel,&nbsp;fontdict=None,&nbsp;**kwargs)<br>
Set&nbsp;the&nbsp;label&nbsp;for&nbsp;the&nbsp;xaxis.&nbsp;&nbsp;See&nbsp;the&nbsp;text&nbsp;docstring&nbsp;for&nbsp;information<br>
of&nbsp;how&nbsp;override&nbsp;and&nbsp;the&nbsp;optional&nbsp;args&nbsp;work.<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Text&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
ACCEPTS:&nbsp;str</tt></dd></dl>

<dl><dt><a name="Subplot-set_xlim"><strong>set_xlim</strong></a>(self, xmin<font color="#909090">=None</font>, xmax<font color="#909090">=None</font>, emit<font color="#909090">=False</font>, **kwargs)</dt><dd><tt><a href="#Subplot-set_xlim">set_xlim</a>(self,&nbsp;*args,&nbsp;**kwargs):<br>
&nbsp;<br>
Set&nbsp;the&nbsp;limits&nbsp;for&nbsp;the&nbsp;xaxis;&nbsp;v&nbsp;=&nbsp;[xmin,&nbsp;xmax]<br>
&nbsp;<br>
<a href="#Subplot-set_xlim">set_xlim</a>((valmin,&nbsp;valmax))<br>
<a href="#Subplot-set_xlim">set_xlim</a>(valmin,&nbsp;valmax)<br>
<a href="#Subplot-set_xlim">set_xlim</a>(xmin=1)&nbsp;#&nbsp;xmax&nbsp;unchanged<br>
<a href="#Subplot-set_xlim">set_xlim</a>(xmax=1)&nbsp;#&nbsp;xmin&nbsp;unchanged<br>
&nbsp;<br>
Valid&nbsp;kwargs:<br>
&nbsp;<br>
xmin&nbsp;:&nbsp;the&nbsp;min&nbsp;of&nbsp;the&nbsp;xlim<br>
xmax&nbsp;:&nbsp;the&nbsp;max&nbsp;of&nbsp;the&nbsp;xlim<br>
emit&nbsp;:&nbsp;notify&nbsp;observers&nbsp;of&nbsp;lim&nbsp;change<br>
&nbsp;<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;current&nbsp;xlimits&nbsp;as&nbsp;a&nbsp;length&nbsp;2&nbsp;tuple<br>
&nbsp;<br>
ACCEPTS:&nbsp;len(2)&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="Subplot-set_xscale"><strong>set_xscale</strong></a>(self, value, basex<font color="#909090">=10</font>, subsx<font color="#909090">=None</font>)</dt><dd><tt>SET_XSCALE(value,&nbsp;basex=10,&nbsp;subsx=None)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;xscaling:&nbsp;'log'&nbsp;or&nbsp;'linear'<br>
&nbsp;<br>
If&nbsp;value&nbsp;is&nbsp;'log',&nbsp;the&nbsp;additional&nbsp;kwargs&nbsp;have&nbsp;the&nbsp;following&nbsp;meaning<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;basex:&nbsp;base&nbsp;of&nbsp;the&nbsp;logarithm<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;subsx:&nbsp;a&nbsp;sequence&nbsp;of&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;ticks;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;None&nbsp;defaults&nbsp;to&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;decades&nbsp;in&nbsp;the&nbsp;plot.&nbsp;&nbsp;Eg&nbsp;for&nbsp;base&nbsp;10,&nbsp;subsx=(1,2,5)&nbsp;will<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;put&nbsp;minor&nbsp;ticks&nbsp;on&nbsp;1,2,5,11,12,15,21,&nbsp;....To&nbsp;turn&nbsp;off<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minor&nbsp;ticking,&nbsp;set&nbsp;subsx=[]<br>
&nbsp;<br>
ACCEPTS:&nbsp;['log'&nbsp;|&nbsp;'linear'&nbsp;]</tt></dd></dl>

<dl><dt><a name="Subplot-set_xticklabels"><strong>set_xticklabels</strong></a>(self, labels, fontdict<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>SET_XTICKLABELS(labels,&nbsp;fontdict=None,&nbsp;**kwargs)<br>
Set&nbsp;the&nbsp;xtick&nbsp;labels&nbsp;with&nbsp;list&nbsp;of&nbsp;strings&nbsp;labels&nbsp;Return&nbsp;a&nbsp;list&nbsp;of&nbsp;axis<br>
text&nbsp;instances.<br>
kwargs&nbsp;set&nbsp;the&nbsp;Text&nbsp;properties.&nbsp;&nbsp;Valid&nbsp;properties&nbsp;are<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
ACCEPTS:&nbsp;sequence&nbsp;of&nbsp;strings</tt></dd></dl>

<dl><dt><a name="Subplot-set_xticks"><strong>set_xticks</strong></a>(self, ticks)</dt><dd><tt>Set&nbsp;the&nbsp;x&nbsp;ticks&nbsp;with&nbsp;list&nbsp;of&nbsp;ticks<br>
&nbsp;<br>
ACCEPTS:&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="Subplot-set_ylabel"><strong>set_ylabel</strong></a>(self, ylabel, fontdict<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>SET_YLABEL(ylabel,&nbsp;fontdict=None,&nbsp;**kwargs)<br>
Set&nbsp;the&nbsp;label&nbsp;for&nbsp;the&nbsp;yaxis<br>
See&nbsp;the&nbsp;text&nbsp;doctstring&nbsp;for&nbsp;information&nbsp;of&nbsp;how&nbsp;override&nbsp;and<br>
the&nbsp;optional&nbsp;args&nbsp;work<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Text&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
ACCEPTS:&nbsp;str</tt></dd></dl>

<dl><dt><a name="Subplot-set_ylim"><strong>set_ylim</strong></a>(self, ymin<font color="#909090">=None</font>, ymax<font color="#909090">=None</font>, emit<font color="#909090">=False</font>, **kwargs)</dt><dd><tt><a href="#Subplot-set_ylim">set_ylim</a>(self,&nbsp;*args,&nbsp;**kwargs):<br>
&nbsp;<br>
Set&nbsp;the&nbsp;limits&nbsp;for&nbsp;the&nbsp;yaxis;&nbsp;v&nbsp;=&nbsp;[ymin,&nbsp;ymax]<br>
&nbsp;<br>
<a href="#Subplot-set_ylim">set_ylim</a>((valmin,&nbsp;valmax))<br>
<a href="#Subplot-set_ylim">set_ylim</a>(valmin,&nbsp;valmax)<br>
<a href="#Subplot-set_ylim">set_ylim</a>(ymin=1)&nbsp;#&nbsp;ymax&nbsp;unchanged<br>
<a href="#Subplot-set_ylim">set_ylim</a>(ymax=1)&nbsp;#&nbsp;ymin&nbsp;unchanged<br>
&nbsp;<br>
Valid&nbsp;kwargs:<br>
&nbsp;<br>
ymin&nbsp;:&nbsp;the&nbsp;min&nbsp;of&nbsp;the&nbsp;ylim<br>
ymax&nbsp;:&nbsp;the&nbsp;max&nbsp;of&nbsp;the&nbsp;ylim<br>
emit&nbsp;:&nbsp;notify&nbsp;observers&nbsp;of&nbsp;lim&nbsp;change<br>
&nbsp;<br>
Returns&nbsp;the&nbsp;current&nbsp;ylimits&nbsp;as&nbsp;a&nbsp;length&nbsp;2&nbsp;tuple<br>
&nbsp;<br>
ACCEPTS:&nbsp;len(2)&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="Subplot-set_yscale"><strong>set_yscale</strong></a>(self, value, basey<font color="#909090">=10</font>, subsy<font color="#909090">=None</font>)</dt><dd><tt>SET_YSCALE(value,&nbsp;basey=10,&nbsp;subsy=None)<br>
&nbsp;<br>
Set&nbsp;the&nbsp;yscaling:&nbsp;'log'&nbsp;or&nbsp;'linear'<br>
&nbsp;<br>
If&nbsp;value&nbsp;is&nbsp;'log',&nbsp;the&nbsp;additional&nbsp;kwargs&nbsp;have&nbsp;the&nbsp;following&nbsp;meaning<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;basey:&nbsp;base&nbsp;of&nbsp;the&nbsp;logarithm<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;subsy:&nbsp;a&nbsp;sequence&nbsp;of&nbsp;the&nbsp;location&nbsp;of&nbsp;the&nbsp;minor&nbsp;ticks;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;None&nbsp;defaults&nbsp;to&nbsp;autosubs,&nbsp;which&nbsp;depend&nbsp;on&nbsp;the&nbsp;number&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;decades&nbsp;in&nbsp;the&nbsp;plot.&nbsp;&nbsp;Eg&nbsp;for&nbsp;base&nbsp;10,&nbsp;subsy=(1,2,5)&nbsp;will<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;put&nbsp;minor&nbsp;ticks&nbsp;on&nbsp;1,2,5,11,12,15,&nbsp;21,&nbsp;....To&nbsp;turn&nbsp;off<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minor&nbsp;ticking,&nbsp;set&nbsp;subsy=[]<br>
&nbsp;<br>
ACCEPTS:&nbsp;['log'&nbsp;|&nbsp;'linear']</tt></dd></dl>

<dl><dt><a name="Subplot-set_yticklabels"><strong>set_yticklabels</strong></a>(self, labels, fontdict<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>SET_YTICKLABELS(labels,&nbsp;fontdict=None,&nbsp;**kwargs)<br>
Set&nbsp;the&nbsp;ytick&nbsp;labels&nbsp;with&nbsp;list&nbsp;of&nbsp;strings&nbsp;labels.&nbsp;&nbsp;Return&nbsp;a&nbsp;list&nbsp;of<br>
Text&nbsp;instances.<br>
kwargs&nbsp;set&nbsp;Text&nbsp;properties&nbsp;for&nbsp;the&nbsp;labels.&nbsp;&nbsp;Valid&nbsp;properties&nbsp;are<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number<br>
ACCEPTS:&nbsp;sequence&nbsp;of&nbsp;strings</tt></dd></dl>

<dl><dt><a name="Subplot-set_yticks"><strong>set_yticks</strong></a>(self, ticks)</dt><dd><tt>Set&nbsp;the&nbsp;y&nbsp;ticks&nbsp;with&nbsp;list&nbsp;of&nbsp;ticks<br>
&nbsp;<br>
ACCEPTS:&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="Subplot-specgram"><strong>specgram</strong></a>(self, x, NFFT<font color="#909090">=256</font>, Fs<font color="#909090">=2</font>, detrend<font color="#909090">=&lt;function detrend_none at 0x847d844&gt;</font>, window<font color="#909090">=&lt;function window_hanning at 0x847d72c&gt;</font>, noverlap<font color="#909090">=128</font>, cmap<font color="#909090">=None</font>, xextent<font color="#909090">=None</font>)</dt><dd><tt>SPECGRAM(x,&nbsp;NFFT=256,&nbsp;Fs=2,&nbsp;detrend=detrend_none,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window=window_hanning,&nbsp;noverlap=128,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap=None,&nbsp;xextent=None)<br>
&nbsp;<br>
Compute&nbsp;a&nbsp;spectrogram&nbsp;of&nbsp;data&nbsp;in&nbsp;x.&nbsp;&nbsp;Data&nbsp;are&nbsp;split&nbsp;into&nbsp;NFFT&nbsp;length<br>
segements&nbsp;and&nbsp;the&nbsp;PSD&nbsp;of&nbsp;each&nbsp;section&nbsp;is&nbsp;computed.&nbsp;&nbsp;The&nbsp;windowing<br>
function&nbsp;window&nbsp;is&nbsp;applied&nbsp;to&nbsp;each&nbsp;segment,&nbsp;and&nbsp;the&nbsp;amount&nbsp;of&nbsp;overlap<br>
of&nbsp;each&nbsp;segment&nbsp;is&nbsp;specified&nbsp;with&nbsp;noverlap.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;cmap&nbsp;is&nbsp;a&nbsp;colormap;&nbsp;if&nbsp;None&nbsp;use&nbsp;default&nbsp;determined&nbsp;by&nbsp;rc<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;xextent&nbsp;is&nbsp;the&nbsp;image&nbsp;extent&nbsp;in&nbsp;the&nbsp;xaxes&nbsp;xextent=xmin,&nbsp;xmax&nbsp;-<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default&nbsp;0,&nbsp;max(bins),&nbsp;0,&nbsp;max(freqs)&nbsp;where&nbsp;bins&nbsp;is&nbsp;the&nbsp;return<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value&nbsp;from&nbsp;matplotlib.matplotlib.mlab.specgram<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;See&nbsp;help(psd)&nbsp;for&nbsp;information&nbsp;on&nbsp;the&nbsp;other&nbsp;keyword&nbsp;arguments.<br>
&nbsp;<br>
Return&nbsp;value&nbsp;is&nbsp;(Pxx,&nbsp;freqs,&nbsp;bins,&nbsp;im),&nbsp;where<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;bins&nbsp;are&nbsp;the&nbsp;time&nbsp;points&nbsp;the&nbsp;spectrogram&nbsp;is&nbsp;calculated&nbsp;over<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;freqs&nbsp;is&nbsp;an&nbsp;array&nbsp;of&nbsp;frequencies<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;Pxx&nbsp;is&nbsp;a&nbsp;len(times)&nbsp;x&nbsp;len(freqs)&nbsp;array&nbsp;of&nbsp;power<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;im&nbsp;is&nbsp;a&nbsp;matplotlib.image.AxesImage.<br>
&nbsp;<br>
Note:&nbsp;If&nbsp;x&nbsp;is&nbsp;real&nbsp;(i.e.&nbsp;non-complex)&nbsp;only&nbsp;the&nbsp;positive&nbsp;spectrum&nbsp;is<br>
shown.&nbsp;&nbsp;If&nbsp;x&nbsp;is&nbsp;complex&nbsp;both&nbsp;positive&nbsp;and&nbsp;negative&nbsp;parts&nbsp;of&nbsp;the<br>
spectrum&nbsp;are&nbsp;shown.</tt></dd></dl>

<dl><dt><a name="Subplot-spy"><strong>spy</strong></a>(self, Z, precision<font color="#909090">=None</font>, marker<font color="#909090">=None</font>, markersize<font color="#909090">=None</font>, aspect<font color="#909090">='equal'</font>, **kwargs)</dt><dd><tt><a href="#Subplot-spy">spy</a>(Z)&nbsp;plots&nbsp;the&nbsp;sparsity&nbsp;pattern&nbsp;of&nbsp;the&nbsp;2-D&nbsp;array&nbsp;Z<br>
&nbsp;<br>
If&nbsp;precision&nbsp;is&nbsp;None,&nbsp;any&nbsp;non-zero&nbsp;value&nbsp;will&nbsp;be&nbsp;plotted;<br>
else,&nbsp;values&nbsp;of&nbsp;absolute(Z)&gt;precision&nbsp;will&nbsp;be&nbsp;plotted.<br>
&nbsp;<br>
The&nbsp;array&nbsp;will&nbsp;be&nbsp;plotted&nbsp;as&nbsp;it&nbsp;would&nbsp;be&nbsp;printed,&nbsp;with<br>
the&nbsp;first&nbsp;index&nbsp;(row)&nbsp;increasing&nbsp;down&nbsp;and&nbsp;the&nbsp;second<br>
index&nbsp;(column)&nbsp;increasing&nbsp;to&nbsp;the&nbsp;right.<br>
&nbsp;<br>
By&nbsp;default&nbsp;aspect&nbsp;is&nbsp;'equal'&nbsp;so&nbsp;that&nbsp;each&nbsp;array&nbsp;element<br>
occupies&nbsp;a&nbsp;square&nbsp;space;&nbsp;set&nbsp;the&nbsp;aspect&nbsp;kwarg&nbsp;to&nbsp;'auto'<br>
to&nbsp;allow&nbsp;the&nbsp;plot&nbsp;to&nbsp;fill&nbsp;the&nbsp;plot&nbsp;box,&nbsp;or&nbsp;to&nbsp;any&nbsp;scalar<br>
number&nbsp;to&nbsp;specify&nbsp;the&nbsp;aspect&nbsp;ratio&nbsp;of&nbsp;an&nbsp;array&nbsp;element<br>
directly.<br>
&nbsp;<br>
Two&nbsp;plotting&nbsp;styles&nbsp;are&nbsp;available:&nbsp;image&nbsp;or&nbsp;marker.&nbsp;Both<br>
are&nbsp;available&nbsp;for&nbsp;full&nbsp;arrays,&nbsp;but&nbsp;only&nbsp;the&nbsp;marker&nbsp;style<br>
works&nbsp;for&nbsp;scipy.sparse.spmatrix&nbsp;instances.<br>
&nbsp;<br>
If&nbsp;marker&nbsp;and&nbsp;markersize&nbsp;are&nbsp;None,&nbsp;an&nbsp;image&nbsp;will&nbsp;be<br>
returned&nbsp;and&nbsp;any&nbsp;remaining&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;to&nbsp;imshow;<br>
else,&nbsp;a&nbsp;Line2D&nbsp;object&nbsp;will&nbsp;be&nbsp;returned&nbsp;with&nbsp;the&nbsp;value<br>
of&nbsp;marker&nbsp;determining&nbsp;the&nbsp;marker&nbsp;type,&nbsp;and&nbsp;any&nbsp;remaining<br>
kwargs&nbsp;passed&nbsp;to&nbsp;the&nbsp;axes&nbsp;plot&nbsp;method.<br>
&nbsp;<br>
If&nbsp;marker&nbsp;and&nbsp;markersize&nbsp;are&nbsp;None,&nbsp;useful&nbsp;kwargs&nbsp;include:<br>
&nbsp;&nbsp;&nbsp;&nbsp;cmap<br>
&nbsp;&nbsp;&nbsp;&nbsp;alpha<br>
See&nbsp;documentation&nbsp;for&nbsp;<a href="#Subplot-imshow">imshow</a>()&nbsp;for&nbsp;details.<br>
For&nbsp;controlling&nbsp;colors,&nbsp;e.g.&nbsp;cyan&nbsp;background&nbsp;and&nbsp;red&nbsp;marks,&nbsp;use:<br>
&nbsp;&nbsp;&nbsp;&nbsp;cmap&nbsp;=&nbsp;matplotlib.colors.ListedColormap(['c','r'])<br>
&nbsp;<br>
If&nbsp;marker&nbsp;or&nbsp;markersize&nbsp;is&nbsp;not&nbsp;None,&nbsp;useful&nbsp;kwargs&nbsp;include:<br>
&nbsp;&nbsp;&nbsp;&nbsp;marker<br>
&nbsp;&nbsp;&nbsp;&nbsp;markersize<br>
&nbsp;&nbsp;&nbsp;&nbsp;color<br>
See&nbsp;documentation&nbsp;for&nbsp;<a href="#Subplot-plot">plot</a>()&nbsp;for&nbsp;details.<br>
&nbsp;<br>
Useful&nbsp;values&nbsp;for&nbsp;marker&nbsp;include:<br>
&nbsp;&nbsp;&nbsp;&nbsp;'s'&nbsp;&nbsp;square&nbsp;(default)<br>
&nbsp;&nbsp;&nbsp;&nbsp;'o'&nbsp;&nbsp;circle<br>
&nbsp;&nbsp;&nbsp;&nbsp;'.'&nbsp;&nbsp;point<br>
&nbsp;&nbsp;&nbsp;&nbsp;','&nbsp;&nbsp;pixel</tt></dd></dl>

<dl><dt><a name="Subplot-stem"><strong>stem</strong></a>(self, x, y, linefmt<font color="#909090">='b-'</font>, markerfmt<font color="#909090">='bo'</font>, basefmt<font color="#909090">='r-'</font>)</dt><dd><tt>STEM(x,&nbsp;y,&nbsp;linefmt='b-',&nbsp;markerfmt='bo',&nbsp;basefmt='r-')<br>
&nbsp;<br>
A&nbsp;stem&nbsp;plot&nbsp;plots&nbsp;vertical&nbsp;lines&nbsp;(using&nbsp;linefmt)&nbsp;at&nbsp;each&nbsp;x&nbsp;location<br>
from&nbsp;the&nbsp;baseline&nbsp;to&nbsp;y,&nbsp;and&nbsp;places&nbsp;a&nbsp;marker&nbsp;there&nbsp;using&nbsp;markerfmt.&nbsp;&nbsp;A<br>
horizontal&nbsp;line&nbsp;at&nbsp;0&nbsp;is&nbsp;is&nbsp;plotted&nbsp;using&nbsp;basefmt<br>
&nbsp;<br>
Return&nbsp;value&nbsp;is&nbsp;(markerline,&nbsp;stemlines,&nbsp;baseline)&nbsp;.<br>
&nbsp;<br>
See<br>
<a href="http://www.mathworks.com/access/helpdesk/help/techdoc/ref/stem.html">http://www.mathworks.com/access/helpdesk/help/techdoc/ref/stem.html</a><br>
for&nbsp;details&nbsp;and&nbsp;examples/stem_plot.py&nbsp;for&nbsp;a&nbsp;demo.</tt></dd></dl>

<dl><dt><a name="Subplot-table"><strong>table</strong></a>(self, **kwargs)</dt><dd><tt>TABLE(cellText=None,&nbsp;cellColours=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cellLoc='right',&nbsp;colWidths=None,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rowLabels=None,&nbsp;rowColours=None,&nbsp;rowLoc='left',<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colLabels=None,&nbsp;colColours=None,&nbsp;colLoc='center',<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loc='bottom',&nbsp;bbox=None):<br>
Add&nbsp;a&nbsp;table&nbsp;to&nbsp;the&nbsp;current&nbsp;axes.&nbsp;&nbsp;Returns&nbsp;a&nbsp;table&nbsp;instance.&nbsp;&nbsp;For<br>
finer&nbsp;grained&nbsp;control&nbsp;over&nbsp;tables,&nbsp;use&nbsp;the&nbsp;Table&nbsp;class&nbsp;and&nbsp;add&nbsp;it<br>
to&nbsp;the&nbsp;axes&nbsp;with&nbsp;add_table.<br>
Thanks&nbsp;to&nbsp;John&nbsp;Gill&nbsp;for&nbsp;providing&nbsp;the&nbsp;class&nbsp;and&nbsp;table.<br>
kwargs&nbsp;control&nbsp;the&nbsp;Table&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontsize:&nbsp;a&nbsp;float&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-text"><strong>text</strong></a>(self, x, y, s, fontdict<font color="#909090">=None</font>, withdash<font color="#909090">=False</font>, **kwargs)</dt><dd><tt>TEXT(x,&nbsp;y,&nbsp;s,&nbsp;fontdict=None,&nbsp;**kwargs)<br>
Add&nbsp;text&nbsp;in&nbsp;string&nbsp;s&nbsp;to&nbsp;axis&nbsp;at&nbsp;location&nbsp;x,y&nbsp;(data&nbsp;coords)<br>
&nbsp;&nbsp;fontdict&nbsp;is&nbsp;a&nbsp;dictionary&nbsp;to&nbsp;override&nbsp;the&nbsp;default&nbsp;text&nbsp;properties.<br>
&nbsp;&nbsp;If&nbsp;fontdict&nbsp;is&nbsp;None,&nbsp;the&nbsp;defaults&nbsp;are&nbsp;determined&nbsp;by&nbsp;your&nbsp;rc<br>
&nbsp;&nbsp;parameters.<br>
&nbsp;&nbsp;withdash=True&nbsp;will&nbsp;create&nbsp;a&nbsp;TextWithDash&nbsp;instance&nbsp;instead<br>
&nbsp;&nbsp;of&nbsp;a&nbsp;Text&nbsp;instance.<br>
Individual&nbsp;keyword&nbsp;arguments&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;override&nbsp;any&nbsp;given<br>
parameter<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-text">text</a>(x,&nbsp;y,&nbsp;s,&nbsp;fontsize=12)<br>
The&nbsp;default&nbsp;transform&nbsp;specifies&nbsp;that&nbsp;text&nbsp;is&nbsp;in&nbsp;data&nbsp;coords,<br>
alternatively,&nbsp;you&nbsp;can&nbsp;specify&nbsp;text&nbsp;in&nbsp;axis&nbsp;coords&nbsp;(0,0&nbsp;lower&nbsp;left&nbsp;and<br>
1,1&nbsp;upper&nbsp;right).&nbsp;&nbsp;The&nbsp;example&nbsp;below&nbsp;places&nbsp;text&nbsp;in&nbsp;the&nbsp;center&nbsp;of&nbsp;the<br>
axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Subplot-text">text</a>(0.5,&nbsp;0.5,'matplotlib',<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment='center',<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment='center',<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform&nbsp;=&nbsp;ax.transAxes,<br>
&nbsp;&nbsp;&nbsp;&nbsp;)<br>
You&nbsp;can&nbsp;put&nbsp;a&nbsp;rectangular&nbsp;box&nbsp;around&nbsp;the&nbsp;text&nbsp;instance&nbsp;(eg&nbsp;to<br>
set&nbsp;a&nbsp;background&nbsp;color)&nbsp;by&nbsp;using&nbsp;the&nbsp;keyword&nbsp;bbox.&nbsp;&nbsp;bbox&nbsp;is&nbsp;a<br>
dictionary&nbsp;of&nbsp;matplotlib.patches.Rectangle&nbsp;properties&nbsp;(see&nbsp;help<br>
for&nbsp;Rectangle&nbsp;for&nbsp;a&nbsp;list&nbsp;of&nbsp;these).&nbsp;&nbsp;For&nbsp;example<br>
&nbsp;<a href="#Subplot-text">text</a>(x,&nbsp;y,&nbsp;s,&nbsp;bbox=dict(facecolor='red',&nbsp;alpha=0.5))<br>
Valid&nbsp;kwargs&nbsp;are&nbsp;Text&nbsp;properties<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundcolor:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bbox:&nbsp;rectangle&nbsp;prop&nbsp;dict&nbsp;plus&nbsp;key&nbsp;'pad'&nbsp;which&nbsp;is&nbsp;a&nbsp;pad&nbsp;in&nbsp;points<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;any&nbsp;matplotlib&nbsp;color<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;family:&nbsp;[&nbsp;'serif'&nbsp;|&nbsp;'sans-serif'&nbsp;|&nbsp;'cursive'&nbsp;|&nbsp;'fantasy'&nbsp;|&nbsp;'monospace'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontproperties:&nbsp;a&nbsp;matplotlib.font_manager.FontProperties&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalalignment&nbsp;or&nbsp;ha:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'left'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multialignment:&nbsp;['left'&nbsp;|&nbsp;'right'&nbsp;|&nbsp;'center'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;or&nbsp;fontname:&nbsp;string&nbsp;eg,&nbsp;['Sans'&nbsp;|&nbsp;'Courier'&nbsp;|&nbsp;'Helvetica'&nbsp;...]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;(x,y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rotation:&nbsp;[&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;'vertical'&nbsp;|&nbsp;'horizontal'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size&nbsp;or&nbsp;fontsize:&nbsp;[&nbsp;size&nbsp;in&nbsp;points&nbsp;|&nbsp;relative&nbsp;size&nbsp;eg&nbsp;'smaller',&nbsp;'x-large'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;or&nbsp;fontstyle:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'italic'&nbsp;|&nbsp;'oblique']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;string&nbsp;or&nbsp;anything&nbsp;printable&nbsp;with&nbsp;'%s'&nbsp;conversion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;variant:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'small-caps'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verticalalignment&nbsp;or&nbsp;va:&nbsp;[&nbsp;'center'&nbsp;|&nbsp;'top'&nbsp;|&nbsp;'bottom'&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight&nbsp;or&nbsp;fontweight:&nbsp;[&nbsp;'normal'&nbsp;|&nbsp;'bold'&nbsp;|&nbsp;'heavy'&nbsp;|&nbsp;'light'&nbsp;|&nbsp;'ultrabold'&nbsp;|&nbsp;'ultralight']<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y:&nbsp;float<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-ticklabel_format"><strong>ticklabel_format</strong></a>(self, **kwargs)</dt><dd><tt>Convenience&nbsp;method&nbsp;for&nbsp;manipulating&nbsp;the&nbsp;ScalarFormatter<br>
used&nbsp;by&nbsp;default&nbsp;for&nbsp;linear&nbsp;axes.<br>
&nbsp;<br>
kwargs:<br>
&nbsp;&nbsp;&nbsp;&nbsp;style&nbsp;=&nbsp;'sci'&nbsp;(or&nbsp;'scientific')&nbsp;or&nbsp;'plain';<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plain&nbsp;turns&nbsp;off&nbsp;scientific&nbsp;notation<br>
&nbsp;&nbsp;&nbsp;&nbsp;axis&nbsp;=&nbsp;'x',&nbsp;'y',&nbsp;or&nbsp;'both'<br>
&nbsp;<br>
Only&nbsp;the&nbsp;major&nbsp;ticks&nbsp;are&nbsp;affected.<br>
If&nbsp;the&nbsp;method&nbsp;is&nbsp;called&nbsp;when&nbsp;the&nbsp;ScalarFormatter&nbsp;is&nbsp;not<br>
the&nbsp;one&nbsp;being&nbsp;used,&nbsp;an&nbsp;AttributeError&nbsp;will&nbsp;be&nbsp;raised&nbsp;with<br>
no&nbsp;additional&nbsp;error&nbsp;message.<br>
&nbsp;<br>
Additional&nbsp;capabilities&nbsp;and/or&nbsp;friendlier&nbsp;error&nbsp;checking&nbsp;may&nbsp;be&nbsp;added.</tt></dd></dl>

<dl><dt><a name="Subplot-toggle_log_lineary"><strong>toggle_log_lineary</strong></a>(self)</dt><dd><tt>toggle&nbsp;between&nbsp;log&nbsp;and&nbsp;linear&nbsp;on&nbsp;the&nbsp;y&nbsp;axis</tt></dd></dl>

<dl><dt><a name="Subplot-update_datalim"><strong>update_datalim</strong></a>(self, xys)</dt><dd><tt>Update&nbsp;the&nbsp;data&nbsp;lim&nbsp;bbox&nbsp;with&nbsp;seq&nbsp;of&nbsp;xy&nbsp;tups&nbsp;or&nbsp;equiv.&nbsp;2-D&nbsp;array</tt></dd></dl>

<dl><dt><a name="Subplot-update_datalim_numerix"><strong>update_datalim_numerix</strong></a>(self, x, y)</dt><dd><tt>Update&nbsp;the&nbsp;data&nbsp;lim&nbsp;bbox&nbsp;with&nbsp;seq&nbsp;of&nbsp;xy&nbsp;tups</tt></dd></dl>

<dl><dt><a name="Subplot-vlines"><strong>vlines</strong></a>(self, x, ymin, ymax, colors<font color="#909090">='k'</font>, linestyle<font color="#909090">='solid'</font>, label<font color="#909090">=''</font>, **kwargs)</dt><dd><tt>VLINES(x,&nbsp;ymin,&nbsp;ymax,&nbsp;color='k')<br>
Plot&nbsp;vertical&nbsp;lines&nbsp;at&nbsp;each&nbsp;x&nbsp;from&nbsp;ymin&nbsp;to&nbsp;ymax.&nbsp;&nbsp;ymin&nbsp;or&nbsp;ymax&nbsp;can&nbsp;be<br>
scalars&nbsp;or&nbsp;len(x)&nbsp;numpy&nbsp;arrays.&nbsp;&nbsp;If&nbsp;they&nbsp;are&nbsp;scalars,&nbsp;then&nbsp;the<br>
respective&nbsp;values&nbsp;are&nbsp;constant,&nbsp;else&nbsp;the&nbsp;heights&nbsp;of&nbsp;the&nbsp;lines&nbsp;are<br>
determined&nbsp;by&nbsp;ymin&nbsp;and&nbsp;ymax<br>
colors&nbsp;is&nbsp;a&nbsp;line&nbsp;collections&nbsp;color&nbsp;args,&nbsp;either&nbsp;a&nbsp;single&nbsp;color<br>
or&nbsp;a&nbsp;len(x)&nbsp;list&nbsp;of&nbsp;colors<br>
linestyle&nbsp;is&nbsp;one&nbsp;of&nbsp;solid|dashed|dashdot|dotted<br>
Returns&nbsp;the&nbsp;LineCollection&nbsp;that&nbsp;was&nbsp;added<br>
kwargs&nbsp;are&nbsp;LineCollection&nbsp;properties:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alpha:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animated:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axes:&nbsp;an&nbsp;axes&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clim:&nbsp;a&nbsp;length&nbsp;2&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_box:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_on:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clip_path:&nbsp;an&nbsp;agg.path_storage&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmap:&nbsp;a&nbsp;colormap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;matplotlib&nbsp;color&nbsp;arg&nbsp;or&nbsp;sequence&nbsp;of&nbsp;rgba&nbsp;tuples<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colorbar:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;figure:&nbsp;a&nbsp;matplotlib.figure.Figure&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label:&nbsp;any&nbsp;string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linestyle:&nbsp;['solid'&nbsp;|&nbsp;'dashed',&nbsp;'dashdot',&nbsp;'dotted'&nbsp;|&nbsp;&nbsp;(offset,&nbsp;on-off-dash-seq)&nbsp;]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linewidth:&nbsp;float&nbsp;or&nbsp;sequence&nbsp;of&nbsp;floats<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lod:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;norm:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker:&nbsp;[None|float|boolean|callable]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;segments:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verts:&nbsp;unknown<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;visible:&nbsp;[True&nbsp;|&nbsp;False]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zorder:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-xaxis_date"><strong>xaxis_date</strong></a>(self, tz<font color="#909090">=None</font>)</dt><dd><tt>Sets&nbsp;up&nbsp;x-axis&nbsp;ticks&nbsp;and&nbsp;labels&nbsp;that&nbsp;treat&nbsp;the&nbsp;x&nbsp;data&nbsp;as&nbsp;dates.<br>
&nbsp;<br>
tz&nbsp;is&nbsp;the&nbsp;time&nbsp;zone&nbsp;to&nbsp;use&nbsp;in&nbsp;labeling&nbsp;dates.&nbsp;&nbsp;Defaults&nbsp;to&nbsp;rc&nbsp;value.</tt></dd></dl>

<dl><dt><a name="Subplot-xcorr"><strong>xcorr</strong></a>(self, x, y, normed<font color="#909090">=False</font>, detrend<font color="#909090">=&lt;function detrend_none at 0x847d844&gt;</font>, usevlines<font color="#909090">=False</font>, maxlags<font color="#909090">=None</font>, **kwargs)</dt><dd><tt>XCORR(x,&nbsp;y,&nbsp;normed=False,&nbsp;detrend=detrend_none,&nbsp;usevlines=False,&nbsp;**kwargs):<br>
Plot&nbsp;the&nbsp;cross&nbsp;correlation&nbsp;between&nbsp;x&nbsp;and&nbsp;y.&nbsp;&nbsp;If&nbsp;normed=True,<br>
normalize&nbsp;the&nbsp;data&nbsp;but&nbsp;the&nbsp;cross&nbsp;correlation&nbsp;at&nbsp;0-th&nbsp;lag.&nbsp;&nbsp;x<br>
and&nbsp;y&nbsp;are&nbsp;detrended&nbsp;by&nbsp;the&nbsp;detrend&nbsp;callable&nbsp;(default&nbsp;no<br>
normalization.&nbsp;&nbsp;x&nbsp;and&nbsp;y&nbsp;must&nbsp;be&nbsp;equal&nbsp;length<br>
data&nbsp;are&nbsp;plotted&nbsp;as&nbsp;<a href="#Subplot-plot">plot</a>(lags,&nbsp;c,&nbsp;**kwargs)<br>
return&nbsp;value&nbsp;is&nbsp;lags,&nbsp;c,&nbsp;line&nbsp;where&nbsp;lags&nbsp;are&nbsp;a&nbsp;length<br>
2*maxlags+1&nbsp;lag&nbsp;vector,&nbsp;c&nbsp;is&nbsp;the&nbsp;2*maxlags+1&nbsp;auto&nbsp;correlation<br>
vector,&nbsp;and&nbsp;line&nbsp;is&nbsp;a&nbsp;Line2D&nbsp;instance&nbsp;returned&nbsp;by&nbsp;plot.&nbsp;&nbsp;The<br>
default&nbsp;linestyle&nbsp;is&nbsp;None&nbsp;and&nbsp;the&nbsp;default&nbsp;marker&nbsp;is&nbsp;'o',<br>
though&nbsp;these&nbsp;can&nbsp;be&nbsp;overridden&nbsp;with&nbsp;keyword&nbsp;args.&nbsp;&nbsp;The&nbsp;cross<br>
correlation&nbsp;is&nbsp;performed&nbsp;with&nbsp;numerix&nbsp;cross_correlate&nbsp;with<br>
mode=2.<br>
If&nbsp;usevlines&nbsp;is&nbsp;True,&nbsp;<a href="#Axes">Axes</a>.vlines&nbsp;rather&nbsp;than&nbsp;<a href="#Axes">Axes</a>.plot&nbsp;is&nbsp;used<br>
to&nbsp;draw&nbsp;vertical&nbsp;lines&nbsp;from&nbsp;the&nbsp;origin&nbsp;to&nbsp;the&nbsp;acorr.<br>
Otherwise&nbsp;the&nbsp;plotstyle&nbsp;is&nbsp;determined&nbsp;by&nbsp;the&nbsp;kwargs,&nbsp;which&nbsp;are<br>
Line2D&nbsp;properties.&nbsp;&nbsp;If&nbsp;usevlines,&nbsp;the&nbsp;return&nbsp;value&nbsp;is&nbsp;lags,&nbsp;c,<br>
linecol,&nbsp;b&nbsp;where&nbsp;linecol&nbsp;is&nbsp;the&nbsp;LineCollection&nbsp;and&nbsp;b&nbsp;is&nbsp;the&nbsp;x-axis<br>
if&nbsp;usevlines=True,&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;onto&nbsp;<a href="#Axes">Axes</a>.vlines<br>
if&nbsp;usevlines=False,&nbsp;kwargs&nbsp;are&nbsp;passed&nbsp;onto&nbsp;<a href="#Axes">Axes</a>.plot<br>
maxlags&nbsp;is&nbsp;a&nbsp;positive&nbsp;integer&nbsp;detailing&nbsp;the&nbsp;number&nbsp;of&nbsp;lags&nbsp;to&nbsp;show.<br>
The&nbsp;default&nbsp;value&nbsp;of&nbsp;None&nbsp;will&nbsp;return&nbsp;all&nbsp;(2*len(x)-1)&nbsp;lags.<br>
See&nbsp;the&nbsp;respective&nbsp;function&nbsp;for&nbsp;documentation&nbsp;on&nbsp;valid&nbsp;kwargs</tt></dd></dl>

<dl><dt><a name="Subplot-yaxis_date"><strong>yaxis_date</strong></a>(self, tz<font color="#909090">=None</font>)</dt><dd><tt>Sets&nbsp;up&nbsp;y-axis&nbsp;ticks&nbsp;and&nbsp;labels&nbsp;that&nbsp;treat&nbsp;the&nbsp;y&nbsp;data&nbsp;as&nbsp;dates.<br>
&nbsp;<br>
tz&nbsp;is&nbsp;the&nbsp;time&nbsp;zone&nbsp;to&nbsp;use&nbsp;in&nbsp;labeling&nbsp;dates.&nbsp;&nbsp;Defaults&nbsp;to&nbsp;rc&nbsp;value.</tt></dd></dl>

<dl><dt><a name="Subplot-zoomx"><strong>zoomx</strong></a>(self, numsteps)</dt><dd><tt>Zoom&nbsp;in&nbsp;on&nbsp;the&nbsp;x&nbsp;xaxis&nbsp;numsteps&nbsp;(plus&nbsp;for&nbsp;zoom&nbsp;in,&nbsp;minus&nbsp;for&nbsp;zoom&nbsp;out)</tt></dd></dl>

<dl><dt><a name="Subplot-zoomy"><strong>zoomy</strong></a>(self, numsteps)</dt><dd><tt>Zoom&nbsp;in&nbsp;on&nbsp;the&nbsp;x&nbsp;xaxis&nbsp;numsteps&nbsp;(plus&nbsp;for&nbsp;zoom&nbsp;in,&nbsp;minus&nbsp;for&nbsp;zoom&nbsp;out)</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.axes.html#Axes">Axes</a>:<br>
<dl><dt><strong>scaled</strong> = {0: 'linear', 1: 'log'}</dl>

<hr>
Methods inherited from <a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a>:<br>
<dl><dt><a name="Subplot-add_callback"><strong>add_callback</strong></a>(self, func)</dt></dl>

<dl><dt><a name="Subplot-convert_xunits"><strong>convert_xunits</strong></a>(self, x)</dt><dd><tt>for&nbsp;artists&nbsp;in&nbsp;an&nbsp;axes,&nbsp;if&nbsp;the&nbsp;xaxis&nbsp;as&nbsp;units&nbsp;support,<br>
convert&nbsp;x&nbsp;using&nbsp;xaxis&nbsp;unit&nbsp;type</tt></dd></dl>

<dl><dt><a name="Subplot-convert_yunits"><strong>convert_yunits</strong></a>(self, y)</dt><dd><tt>for&nbsp;artists&nbsp;in&nbsp;an&nbsp;axes,&nbsp;if&nbsp;the&nbsp;yaxis&nbsp;as&nbsp;units&nbsp;support,<br>
convert&nbsp;y&nbsp;using&nbsp;yaxis&nbsp;unit&nbsp;type</tt></dd></dl>

<dl><dt><a name="Subplot-get_alpha"><strong>get_alpha</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on&nbsp;all<br>
backends</tt></dd></dl>

<dl><dt><a name="Subplot-get_animated"><strong>get_animated</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;artist's&nbsp;animated&nbsp;state</tt></dd></dl>

<dl><dt><a name="Subplot-get_axes"><strong>get_axes</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;axes&nbsp;instance&nbsp;the&nbsp;artist&nbsp;resides&nbsp;in,&nbsp;or&nbsp;None</tt></dd></dl>

<dl><dt><a name="Subplot-get_clip_box"><strong>get_clip_box</strong></a>(self)</dt><dd><tt>Return&nbsp;artist&nbsp;clipbox</tt></dd></dl>

<dl><dt><a name="Subplot-get_clip_on"><strong>get_clip_on</strong></a>(self)</dt><dd><tt>Return&nbsp;whether&nbsp;artist&nbsp;uses&nbsp;clipping</tt></dd></dl>

<dl><dt><a name="Subplot-get_clip_path"><strong>get_clip_path</strong></a>(self)</dt><dd><tt>Return&nbsp;artist&nbsp;clip&nbsp;path</tt></dd></dl>

<dl><dt><a name="Subplot-get_figure"><strong>get_figure</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;figure&nbsp;instance</tt></dd></dl>

<dl><dt><a name="Subplot-get_label"><strong>get_label</strong></a>(self)</dt></dl>

<dl><dt><a name="Subplot-get_picker"><strong>get_picker</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;Pickeration&nbsp;instance&nbsp;used&nbsp;by&nbsp;this&nbsp;artist</tt></dd></dl>

<dl><dt><a name="Subplot-get_transform"><strong>get_transform</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;Transformation&nbsp;instance&nbsp;used&nbsp;by&nbsp;this&nbsp;artist</tt></dd></dl>

<dl><dt><a name="Subplot-get_visible"><strong>get_visible</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;artist's&nbsp;visiblity</tt></dd></dl>

<dl><dt><a name="Subplot-get_zorder"><strong>get_zorder</strong></a>(self)</dt></dl>

<dl><dt><a name="Subplot-have_units"><strong>have_units</strong></a>(self)</dt><dd><tt>return&nbsp;True&nbsp;if&nbsp;units&nbsp;are&nbsp;set&nbsp;on&nbsp;the&nbsp;x&nbsp;or&nbsp;y&nbsp;axes</tt></dd></dl>

<dl><dt><a name="Subplot-is_figure_set"><strong>is_figure_set</strong></a>(self)</dt></dl>

<dl><dt><a name="Subplot-is_transform_set"><strong>is_transform_set</strong></a>(self)</dt><dd><tt><a href="matplotlib.artist.html#Artist">Artist</a>&nbsp;has&nbsp;transform&nbsp;explicity&nbsp;let</tt></dd></dl>

<dl><dt><a name="Subplot-pchanged"><strong>pchanged</strong></a>(self)</dt><dd><tt>fire&nbsp;event&nbsp;when&nbsp;property&nbsp;changed</tt></dd></dl>

<dl><dt><a name="Subplot-pickable"><strong>pickable</strong></a>(self)</dt><dd><tt>return&nbsp;True&nbsp;if&nbsp;self&nbsp;is&nbsp;pickable</tt></dd></dl>

<dl><dt><a name="Subplot-remove_callback"><strong>remove_callback</strong></a>(self, oid)</dt></dl>

<dl><dt><a name="Subplot-set"><strong>set</strong></a>(self, **kwargs)</dt><dd><tt>A&nbsp;tkstyle&nbsp;set&nbsp;command,&nbsp;pass&nbsp;kwargs&nbsp;to&nbsp;set&nbsp;properties</tt></dd></dl>

<dl><dt><a name="Subplot-set_alpha"><strong>set_alpha</strong></a>(self, alpha)</dt><dd><tt>Set&nbsp;the&nbsp;alpha&nbsp;value&nbsp;used&nbsp;for&nbsp;blending&nbsp;-&nbsp;not&nbsp;supported&nbsp;on<br>
all&nbsp;backends<br>
&nbsp;<br>
ACCEPTS:&nbsp;float</tt></dd></dl>

<dl><dt><a name="Subplot-set_animated"><strong>set_animated</strong></a>(self, b)</dt><dd><tt>set&nbsp;the&nbsp;artist's&nbsp;animation&nbsp;state<br>
&nbsp;<br>
ACCEPTS:&nbsp;[True&nbsp;|&nbsp;False]</tt></dd></dl>

<dl><dt><a name="Subplot-set_axes"><strong>set_axes</strong></a>(self, axes)</dt><dd><tt>set&nbsp;the&nbsp;axes&nbsp;instance&nbsp;the&nbsp;artist&nbsp;resides&nbsp;in,&nbsp;if&nbsp;any<br>
&nbsp;<br>
ACCEPTS:&nbsp;an&nbsp;axes&nbsp;instance</tt></dd></dl>

<dl><dt><a name="Subplot-set_clip_box"><strong>set_clip_box</strong></a>(self, clipbox)</dt><dd><tt>Set&nbsp;the&nbsp;artist's&nbsp;clip&nbsp;Bbox<br>
&nbsp;<br>
ACCEPTS:&nbsp;a&nbsp;matplotlib.transform.Bbox&nbsp;instance</tt></dd></dl>

<dl><dt><a name="Subplot-set_clip_on"><strong>set_clip_on</strong></a>(self, b)</dt><dd><tt>Set&nbsp;&nbsp;whether&nbsp;artist&nbsp;uses&nbsp;clipping<br>
&nbsp;<br>
ACCEPTS:&nbsp;[True&nbsp;|&nbsp;False]</tt></dd></dl>

<dl><dt><a name="Subplot-set_clip_path"><strong>set_clip_path</strong></a>(self, path)</dt><dd><tt>Set&nbsp;the&nbsp;artist's&nbsp;clip&nbsp;path<br>
&nbsp;<br>
ACCEPTS:&nbsp;an&nbsp;agg.path_storage&nbsp;instance</tt></dd></dl>

<dl><dt><a name="Subplot-set_label"><strong>set_label</strong></a>(self, s)</dt><dd><tt>Set&nbsp;the&nbsp;line&nbsp;label&nbsp;to&nbsp;s&nbsp;for&nbsp;auto&nbsp;legend<br>
&nbsp;<br>
ACCEPTS:&nbsp;any&nbsp;string</tt></dd></dl>

<dl><dt><a name="Subplot-set_lod"><strong>set_lod</strong></a>(self, on)</dt><dd><tt>Set&nbsp;Level&nbsp;of&nbsp;Detail&nbsp;on&nbsp;or&nbsp;off.&nbsp;&nbsp;If&nbsp;on,&nbsp;the&nbsp;artists&nbsp;may&nbsp;examine<br>
things&nbsp;like&nbsp;the&nbsp;pixel&nbsp;width&nbsp;of&nbsp;the&nbsp;axes&nbsp;and&nbsp;draw&nbsp;a&nbsp;subset&nbsp;of<br>
their&nbsp;contents&nbsp;accordingly<br>
&nbsp;<br>
ACCEPTS:&nbsp;[True&nbsp;|&nbsp;False]</tt></dd></dl>

<dl><dt><a name="Subplot-set_picker"><strong>set_picker</strong></a>(self, picker)</dt><dd><tt>set&nbsp;the&nbsp;epsilon&nbsp;for&nbsp;picking&nbsp;used&nbsp;by&nbsp;this&nbsp;artist<br>
&nbsp;<br>
picker&nbsp;can&nbsp;be&nbsp;one&nbsp;of&nbsp;the&nbsp;following:<br>
&nbsp;<br>
&nbsp;&nbsp;None&nbsp;-&nbsp;&nbsp;picking&nbsp;is&nbsp;disabled&nbsp;for&nbsp;this&nbsp;artist&nbsp;(default)<br>
&nbsp;<br>
&nbsp;&nbsp;boolean&nbsp;-&nbsp;if&nbsp;True&nbsp;then&nbsp;picking&nbsp;will&nbsp;be&nbsp;enabled&nbsp;and&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;artist&nbsp;will&nbsp;fire&nbsp;a&nbsp;pick&nbsp;event&nbsp;if&nbsp;the&nbsp;mouse&nbsp;event&nbsp;is&nbsp;over<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;artist<br>
&nbsp;<br>
&nbsp;&nbsp;float&nbsp;-&nbsp;if&nbsp;picker&nbsp;is&nbsp;a&nbsp;number&nbsp;it&nbsp;is&nbsp;interpreted&nbsp;as&nbsp;an<br>
&nbsp;&nbsp;&nbsp;&nbsp;epsilon&nbsp;tolerance&nbsp;in&nbsp;points&nbsp;and&nbsp;the&nbsp;the&nbsp;artist&nbsp;will&nbsp;fire<br>
&nbsp;&nbsp;&nbsp;&nbsp;off&nbsp;an&nbsp;event&nbsp;if&nbsp;it's&nbsp;data&nbsp;is&nbsp;within&nbsp;epsilon&nbsp;of&nbsp;the&nbsp;mouse<br>
&nbsp;&nbsp;&nbsp;&nbsp;event.&nbsp;&nbsp;For&nbsp;some&nbsp;artists&nbsp;like&nbsp;lines&nbsp;and&nbsp;patch&nbsp;collections,<br>
&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;artist&nbsp;may&nbsp;provide&nbsp;additional&nbsp;data&nbsp;to&nbsp;the&nbsp;pick&nbsp;event<br>
&nbsp;&nbsp;&nbsp;&nbsp;that&nbsp;is&nbsp;generated,&nbsp;eg&nbsp;the&nbsp;indices&nbsp;of&nbsp;the&nbsp;data&nbsp;within<br>
&nbsp;&nbsp;&nbsp;&nbsp;epsilon&nbsp;of&nbsp;the&nbsp;pick&nbsp;event<br>
&nbsp;<br>
&nbsp;&nbsp;function&nbsp;-&nbsp;if&nbsp;picker&nbsp;is&nbsp;callable,&nbsp;it&nbsp;is&nbsp;a&nbsp;user&nbsp;supplied<br>
&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;which&nbsp;determines&nbsp;whether&nbsp;the&nbsp;artist&nbsp;is&nbsp;hit&nbsp;by&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;mouse&nbsp;event.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hit,&nbsp;props&nbsp;=&nbsp;picker(artist,&nbsp;mouseevent)<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;determine&nbsp;the&nbsp;hit&nbsp;test.&nbsp;&nbsp;if&nbsp;the&nbsp;mouse&nbsp;event&nbsp;is&nbsp;over&nbsp;the<br>
&nbsp;&nbsp;&nbsp;&nbsp;artist,&nbsp;return&nbsp;hit=True&nbsp;and&nbsp;props&nbsp;is&nbsp;a&nbsp;dictionary&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;properties&nbsp;you&nbsp;want&nbsp;added&nbsp;to&nbsp;the&nbsp;PickEvent&nbsp;attributes<br>
&nbsp;<br>
ACCEPTS:&nbsp;[None|float|boolean|callable]</tt></dd></dl>

<dl><dt><a name="Subplot-set_transform"><strong>set_transform</strong></a>(self, t)</dt><dd><tt>set&nbsp;the&nbsp;Transformation&nbsp;instance&nbsp;used&nbsp;by&nbsp;this&nbsp;artist<br>
&nbsp;<br>
ACCEPTS:&nbsp;a&nbsp;matplotlib.transform&nbsp;transformation&nbsp;instance</tt></dd></dl>

<dl><dt><a name="Subplot-set_visible"><strong>set_visible</strong></a>(self, b)</dt><dd><tt>set&nbsp;the&nbsp;artist's&nbsp;visiblity<br>
&nbsp;<br>
ACCEPTS:&nbsp;[True&nbsp;|&nbsp;False]</tt></dd></dl>

<dl><dt><a name="Subplot-set_zorder"><strong>set_zorder</strong></a>(self, level)</dt><dd><tt>Set&nbsp;the&nbsp;zorder&nbsp;for&nbsp;the&nbsp;artist<br>
&nbsp;<br>
ACCEPTS:&nbsp;any&nbsp;number</tt></dd></dl>

<dl><dt><a name="Subplot-update"><strong>update</strong></a>(self, props)</dt></dl>

<dl><dt><a name="Subplot-update_from"><strong>update_from</strong></a>(self, other)</dt><dd><tt>copy&nbsp;properties&nbsp;from&nbsp;other&nbsp;to&nbsp;self</tt></dd></dl>

<hr>
Data and other attributes inherited from <a href="matplotlib.artist.html#Artist">matplotlib.artist.Artist</a>:<br>
<dl><dt><strong>aname</strong> = 'Artist'</dl>

<dl><dt><strong>zorder</strong> = 0</dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="SubplotBase">class <strong>SubplotBase</strong></a></font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Emulate&nbsp;matlab's(TM)&nbsp;subplot&nbsp;command,&nbsp;creating&nbsp;axes&nbsp;with<br>
&nbsp;<br>
&nbsp;&nbsp;<a href="#Subplot">Subplot</a>(numRows,&nbsp;numCols,&nbsp;plotNum)<br>
&nbsp;<br>
where&nbsp;plotNum=1&nbsp;is&nbsp;the&nbsp;first&nbsp;plot&nbsp;number&nbsp;and&nbsp;increasing&nbsp;plotNums<br>
fill&nbsp;rows&nbsp;first.&nbsp;&nbsp;max(plotNum)==numRows*numCols<br>
&nbsp;<br>
You&nbsp;can&nbsp;leave&nbsp;out&nbsp;the&nbsp;commas&nbsp;if&nbsp;numRows&lt;=numCols&lt;=plotNum&lt;10,&nbsp;as<br>
in<br>
&nbsp;<br>
&nbsp;&nbsp;<a href="#Subplot">Subplot</a>(211)&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;2&nbsp;rows,&nbsp;1&nbsp;column,&nbsp;first&nbsp;(upper)&nbsp;plot<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="SubplotBase-__init__"><strong>__init__</strong></a>(self, fig, *args)</dt><dd><tt>fig&nbsp;is&nbsp;a&nbsp;figure&nbsp;instance<br>
&nbsp;<br>
args&nbsp;is&nbsp;a&nbsp;varargs&nbsp;to&nbsp;specify&nbsp;the&nbsp;subplot</tt></dd></dl>

<dl><dt><a name="SubplotBase-change_geometry"><strong>change_geometry</strong></a>(self, numrows, numcols, num)</dt><dd><tt>change&nbsp;subplot&nbsp;geometry,&nbsp;eg&nbsp;from&nbsp;1,1,1&nbsp;to&nbsp;2,2,3</tt></dd></dl>

<dl><dt><a name="SubplotBase-get_geometry"><strong>get_geometry</strong></a>(self)</dt><dd><tt>get&nbsp;the&nbsp;subplot&nbsp;geometry,&nbsp;eg&nbsp;2,2,3</tt></dd></dl>

<dl><dt><a name="SubplotBase-is_first_col"><strong>is_first_col</strong></a>(self)</dt></dl>

<dl><dt><a name="SubplotBase-is_first_row"><strong>is_first_row</strong></a>(self)</dt></dl>

<dl><dt><a name="SubplotBase-is_last_col"><strong>is_last_col</strong></a>(self)</dt></dl>

<dl><dt><a name="SubplotBase-is_last_row"><strong>is_last_row</strong></a>(self)</dt></dl>

<dl><dt><a name="SubplotBase-label_outer"><strong>label_outer</strong></a>(self)</dt><dd><tt>set&nbsp;the&nbsp;visible&nbsp;property&nbsp;on&nbsp;ticklabels&nbsp;so&nbsp;xticklabels&nbsp;are<br>
visible&nbsp;only&nbsp;if&nbsp;the&nbsp;subplot&nbsp;is&nbsp;in&nbsp;the&nbsp;last&nbsp;row&nbsp;and&nbsp;yticklabels<br>
are&nbsp;visible&nbsp;only&nbsp;if&nbsp;the&nbsp;subplot&nbsp;is&nbsp;in&nbsp;the&nbsp;first&nbsp;column</tt></dd></dl>

<dl><dt><a name="SubplotBase-update_params"><strong>update_params</strong></a>(self)</dt><dd><tt>update&nbsp;the&nbsp;subplot&nbsp;position&nbsp;from&nbsp;fig.subplotpars</tt></dd></dl>

</td></tr></table></td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#eeaa77">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Functions</strong></big></font></td></tr>
    
<tr><td bgcolor="#eeaa77"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl><dt><a name="-Affine"><strong>Affine</strong></a>(...)</dt><dd><tt><a href="#-Affine">Affine</a>(a,b,c,d,tx,ty)</tt></dd></dl>
 <dl><dt><a name="-Bbox"><strong>Bbox</strong></a>(...)</dt><dd><tt><a href="#-Bbox">Bbox</a>(ll,&nbsp;ur)</tt></dd></dl>
 <dl><dt><a name="-Func"><strong>Func</strong></a>(...)</dt><dd><tt><a href="#-Func">Func</a>(typecode)</tt></dd></dl>
 <dl><dt><a name="-FuncXY"><strong>FuncXY</strong></a>(...)</dt><dd><tt><a href="#-FuncXY">FuncXY</a>(funcx,&nbsp;funcy)</tt></dd></dl>
 <dl><dt><a name="-Interval"><strong>Interval</strong></a>(...)</dt><dd><tt><a href="#-Interval">Interval</a>(val1,&nbsp;val2)</tt></dd></dl>
 <dl><dt><a name="-NonseparableTransformation"><strong>NonseparableTransformation</strong></a>(...)</dt><dd><tt><a href="#-NonseparableTransformation">NonseparableTransformation</a>(box1,&nbsp;box2,&nbsp;funcxy))</tt></dd></dl>
 <dl><dt><a name="-Point"><strong>Point</strong></a>(...)</dt><dd><tt><a href="#-Point">Point</a>(x,&nbsp;y)</tt></dd></dl>
 <dl><dt><a name="-Value"><strong>Value</strong></a>(...)</dt><dd><tt><a href="#-Value">Value</a>(x)</tt></dd></dl>
 <dl><dt><a name="-concatenate"><strong>concatenate</strong></a>(...)</dt><dd><tt><a href="#-concatenate">concatenate</a>((a1,&nbsp;a2,&nbsp;...),&nbsp;axis=0)<br>
&nbsp;<br>
Join&nbsp;arrays&nbsp;together.<br>
&nbsp;<br>
The&nbsp;tuple&nbsp;of&nbsp;sequences&nbsp;(a1,&nbsp;a2,&nbsp;...)&nbsp;are&nbsp;joined&nbsp;along&nbsp;the&nbsp;given&nbsp;axis<br>
(default&nbsp;is&nbsp;the&nbsp;first&nbsp;one)&nbsp;into&nbsp;a&nbsp;single&nbsp;numpy&nbsp;array.<br>
&nbsp;<br>
Example:<br>
&nbsp;<br>
&gt;&gt;&gt;&nbsp;<a href="#-concatenate">concatenate</a>(&nbsp;([0,1,2],&nbsp;[5,6,7])&nbsp;)<br>
array([0,&nbsp;1,&nbsp;2,&nbsp;5,&nbsp;6,&nbsp;7])</tt></dd></dl>
 <dl><dt><a name="-delete_masked_points"><strong>delete_masked_points</strong></a>(*args)</dt><dd><tt>Find&nbsp;all&nbsp;masked&nbsp;points&nbsp;in&nbsp;a&nbsp;set&nbsp;of&nbsp;arguments,&nbsp;and&nbsp;return<br>
the&nbsp;arguments&nbsp;with&nbsp;only&nbsp;the&nbsp;unmasked&nbsp;points&nbsp;remaining.<br>
&nbsp;<br>
The&nbsp;overall&nbsp;mask&nbsp;is&nbsp;calculated&nbsp;from&nbsp;any&nbsp;masks&nbsp;that&nbsp;are&nbsp;present.<br>
If&nbsp;a&nbsp;mask&nbsp;is&nbsp;found,&nbsp;any&nbsp;argument&nbsp;that&nbsp;does&nbsp;not&nbsp;have&nbsp;the&nbsp;same<br>
dimensions&nbsp;is&nbsp;left&nbsp;unchanged;&nbsp;therefore&nbsp;the&nbsp;argument&nbsp;list&nbsp;may<br>
include&nbsp;arguments&nbsp;that&nbsp;can&nbsp;take&nbsp;string&nbsp;or&nbsp;array&nbsp;values,&nbsp;for<br>
example.<br>
&nbsp;<br>
Array&nbsp;arguments&nbsp;must&nbsp;have&nbsp;the&nbsp;same&nbsp;length;&nbsp;masked&nbsp;arguments&nbsp;must<br>
be&nbsp;one-dimensional.<br>
&nbsp;<br>
Written&nbsp;as&nbsp;a&nbsp;helper&nbsp;for&nbsp;scatter,&nbsp;but&nbsp;may&nbsp;be&nbsp;more&nbsp;generally<br>
useful.</tt></dd></dl>
 <dl><dt><a name="-dot"><strong>dot</strong></a>(...)</dt><dd><tt><a href="#-dot">dot</a>(a,b)<br>
Returns&nbsp;the&nbsp;dot&nbsp;product&nbsp;of&nbsp;a&nbsp;and&nbsp;b&nbsp;for&nbsp;arrays&nbsp;of&nbsp;floating&nbsp;point&nbsp;types.<br>
Like&nbsp;the&nbsp;generic&nbsp;numpy&nbsp;equivalent&nbsp;the&nbsp;product&nbsp;sum&nbsp;is&nbsp;over<br>
the&nbsp;last&nbsp;dimension&nbsp;of&nbsp;a&nbsp;and&nbsp;the&nbsp;second-to-last&nbsp;dimension&nbsp;of&nbsp;b.<br>
NB:&nbsp;The&nbsp;first&nbsp;argument&nbsp;is&nbsp;not&nbsp;conjugated.</tt></dd></dl>
 <dl><dt><a name="-makeValue"><strong>makeValue</strong></a>(v)</dt></dl>
</td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#55aa55">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Data</strong></big></font></td></tr>
    
<tr><td bgcolor="#55aa55"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><strong>Float</strong> = 'd'<br>
<strong>Float32</strong> = 'f'<br>
<strong>Float64</strong> = 'd'<br>
<strong>IDENTITY</strong> = 0<br>
<strong>Int</strong> = 'l'<br>
<strong>Int16</strong> = 'h'<br>
<strong>Int32</strong> = 'i'<br>
<strong>LOG10</strong> = 1<br>
<strong>POLAR</strong> = 0<br>
<strong>absolute</strong> = &lt;ufunc 'absolute'&gt;<br>
<strong>ceil</strong> = &lt;ufunc 'ceil'&gt;<br>
<strong>colorConverter</strong> = &lt;matplotlib.colors.ColorConverter instance at 0x85264ec&gt;<br>
<strong>divide</strong> = &lt;ufunc 'divide'&gt;<br>
<strong>division</strong> = _Feature((2, 2, 0, 'alpha', 2), (3, 0, 0, 'alpha', 0), 8192)<br>
<strong>generators</strong> = _Feature((2, 2, 0, 'alpha', 1), (2, 3, 0, 'final', 0), 0)<br>
<strong>lineMarkers</strong> = {0: '_draw_tickleft', 1: '_draw_tickright', 2: '_draw_tickup', 3: '_draw_tickdown', '': '_draw_nothing', ' ': '_draw_nothing', '+': '_draw_plus', ',': '_draw_pixel', '.': '_draw_point', '1': '_draw_tri_down', ...}<br>
<strong>lineStyles</strong> = {'': '_draw_nothing', ' ': '_draw_nothing', '-': '_draw_solid', '--': '_draw_dashed', '-.': '_draw_dash_dot', ':': '_draw_dotted', 'None': '_draw_nothing', 'steps': '_draw_steps'}<br>
<strong>log</strong> = &lt;ufunc 'log'&gt;<br>
<strong>log10</strong> = &lt;ufunc 'log10'&gt;<br>
<strong>maximum</strong> = &lt;ufunc 'maximum'&gt;<br>
<strong>minimum</strong> = &lt;ufunc 'minimum'&gt;<br>
<strong>newaxis</strong> = None<br>
<strong>rcParams</strong> = {'axes.axisbelow': False, 'axes.edgecolor': 'k', 'axes.facecolor': 'w', 'axes.formatter.limits': (-7, 7), 'axes.grid': False, 'axes.hold': True, 'axes.labelcolor': 'k', 'axes.labelsize': 12, 'axes.linewidth': 1.0, 'axes.titlesize': 14, ...}<br>
<strong>sqrt</strong> = &lt;ufunc 'sqrt'&gt;<br>
<strong>which</strong> = ('numpy', 'rc')</td></tr></table>
@footer@