@header@
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
<tr bgcolor="#7799ee">
<td valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong><a href="matplotlib.html"><font color="#ffffff">matplotlib</font></a>.colorbar</strong></big></big></font></td
><td align=right valign=bottom
><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/home/jdhunter/dev/lib/python2.5/site-packages/matplotlib/colorbar.py">/home/jdhunter/dev/lib/python2.5/site-packages/matplotlib/colorbar.py</a></font></td></tr></table>
    <p><tt><a href="#Colorbar">Colorbar</a>&nbsp;toolkit&nbsp;with&nbsp;two&nbsp;classes&nbsp;and&nbsp;a&nbsp;function:<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ColorbarBase">ColorbarBase</a>&nbsp;is&nbsp;the&nbsp;base&nbsp;class&nbsp;with&nbsp;full&nbsp;colorbar&nbsp;drawing&nbsp;functionality.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;It&nbsp;can&nbsp;be&nbsp;used&nbsp;as-is&nbsp;to&nbsp;make&nbsp;a&nbsp;colorbar&nbsp;for&nbsp;a&nbsp;given&nbsp;colormap;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;mappable&nbsp;object&nbsp;(e.g.,&nbsp;image)&nbsp;is&nbsp;not&nbsp;needed.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#Colorbar">Colorbar</a>&nbsp;is&nbsp;the&nbsp;derived&nbsp;class&nbsp;for&nbsp;use&nbsp;with&nbsp;images&nbsp;or&nbsp;contour&nbsp;plots.<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;make_axes&nbsp;is&nbsp;a&nbsp;function&nbsp;for&nbsp;resizing&nbsp;an&nbsp;axes&nbsp;and&nbsp;adding&nbsp;a&nbsp;second&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;suitable&nbsp;for&nbsp;a&nbsp;colorbar<br>
&nbsp;<br>
The&nbsp;Figure.colorbar()&nbsp;method&nbsp;uses&nbsp;make_axes&nbsp;and&nbsp;<a href="#Colorbar">Colorbar</a>;&nbsp;the&nbsp;pylab.colorbar()<br>
function&nbsp;is&nbsp;a&nbsp;thin&nbsp;wrapper&nbsp;over&nbsp;Figure.colorbar().</tt></p>
<p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#aa55cc">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
    
<tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="matplotlib.cbook.html">matplotlib.cbook</a><br>
<a href="matplotlib.cm.html">matplotlib.cm</a><br>
<a href="matplotlib.collections.html">matplotlib.collections</a><br>
</td><td width="25%" valign=top><a href="matplotlib.colors.html">matplotlib.colors</a><br>
<a href="matplotlib.contour.html">matplotlib.contour</a><br>
<a href="matplotlib.lines.html">matplotlib.lines</a><br>
</td><td width="25%" valign=top><a href="matplotlib.html">matplotlib</a><br>
<a href="numpy.html">numpy</a><br>
<a href="matplotlib.patches.html">matplotlib.patches</a><br>
</td><td width="25%" valign=top><a href="matplotlib.ticker.html">matplotlib.ticker</a><br>
<a href="matplotlib.transforms.html">matplotlib.transforms</a><br>
</td></tr></table></td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ee77aa">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
    
<tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl>
<dt><font face="helvetica, arial"><a href="matplotlib.cm.html#ScalarMappable">matplotlib.cm.ScalarMappable</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.colorbar.html#ColorbarBase">ColorbarBase</a>
</font></dt><dd>
<dl>
<dt><font face="helvetica, arial"><a href="matplotlib.colorbar.html#Colorbar">Colorbar</a>
</font></dt></dl>
</dd>
</dl>
</dd>
</dl>
 <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="Colorbar">class <strong>Colorbar</strong></a>(<a href="matplotlib.colorbar.html#ColorbarBase">ColorbarBase</a>)</font></td></tr>
    
<tr><td bgcolor="#ffc8d8"><tt>&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl><dt>Method resolution order:</dt>
<dd><a href="matplotlib.colorbar.html#Colorbar">Colorbar</a></dd>
<dd><a href="matplotlib.colorbar.html#ColorbarBase">ColorbarBase</a></dd>
<dd><a href="matplotlib.cm.html#ScalarMappable">matplotlib.cm.ScalarMappable</a></dd>
</dl>
<hr>
Methods defined here:<br>
<dl><dt><a name="Colorbar-__init__"><strong>__init__</strong></a>(self, ax, mappable, **kw)</dt></dl>

<dl><dt><a name="Colorbar-add_lines"><strong>add_lines</strong></a>(self, CS)</dt><dd><tt>Add&nbsp;the&nbsp;lines&nbsp;from&nbsp;a&nbsp;non-filled&nbsp;ContourSet&nbsp;to&nbsp;the&nbsp;colorbar.</tt></dd></dl>

<dl><dt><a name="Colorbar-notify"><strong>notify</strong></a>(self, mappable)</dt><dd><tt>Manually&nbsp;change&nbsp;any&nbsp;contour&nbsp;line&nbsp;colors.&nbsp;&nbsp;This&nbsp;is&nbsp;called<br>
when&nbsp;the&nbsp;image&nbsp;or&nbsp;contour&nbsp;plot&nbsp;to&nbsp;which&nbsp;this&nbsp;colorbar&nbsp;belongs<br>
is&nbsp;changed.</tt></dd></dl>

<hr>
Methods inherited from <a href="matplotlib.colorbar.html#ColorbarBase">ColorbarBase</a>:<br>
<dl><dt><a name="Colorbar-draw_all"><strong>draw_all</strong></a>(self)</dt><dd><tt>Calculate&nbsp;any&nbsp;free&nbsp;parameters&nbsp;based&nbsp;on&nbsp;the&nbsp;current&nbsp;cmap&nbsp;and&nbsp;norm,<br>
and&nbsp;do&nbsp;all&nbsp;the&nbsp;drawing.</tt></dd></dl>

<dl><dt><a name="Colorbar-set_alpha"><strong>set_alpha</strong></a>(self, alpha)</dt></dl>

<dl><dt><a name="Colorbar-set_label"><strong>set_label</strong></a>(self, label, **kw)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.cm.html#ScalarMappable">matplotlib.cm.ScalarMappable</a>:<br>
<dl><dt><a name="Colorbar-add_checker"><strong>add_checker</strong></a>(self, checker)</dt><dd><tt>Add&nbsp;an&nbsp;entry&nbsp;to&nbsp;a&nbsp;dictionary&nbsp;of&nbsp;boolean&nbsp;flags<br>
that&nbsp;are&nbsp;set&nbsp;to&nbsp;True&nbsp;when&nbsp;the&nbsp;mappable&nbsp;is&nbsp;changed.</tt></dd></dl>

<dl><dt><a name="Colorbar-add_observer"><strong>add_observer</strong></a>(self, mappable)</dt><dd><tt>whenever&nbsp;the&nbsp;norm,&nbsp;clim&nbsp;or&nbsp;cmap&nbsp;is&nbsp;set,&nbsp;call&nbsp;the&nbsp;notify<br>
instance&nbsp;of&nbsp;the&nbsp;mappable&nbsp;observer&nbsp;with&nbsp;self.<br>
&nbsp;<br>
This&nbsp;is&nbsp;designed&nbsp;to&nbsp;allow&nbsp;one&nbsp;image&nbsp;to&nbsp;follow&nbsp;changes&nbsp;in&nbsp;the<br>
cmap&nbsp;of&nbsp;another&nbsp;image</tt></dd></dl>

<dl><dt><a name="Colorbar-autoscale"><strong>autoscale</strong></a>(self)</dt><dd><tt>Autoscale&nbsp;the&nbsp;scalar&nbsp;limits&nbsp;on&nbsp;the&nbsp;norm&nbsp;instance&nbsp;using&nbsp;the<br>
current&nbsp;array</tt></dd></dl>

<dl><dt><a name="Colorbar-autoscale_None"><strong>autoscale_None</strong></a>(self)</dt><dd><tt>Autoscale&nbsp;the&nbsp;scalar&nbsp;limits&nbsp;on&nbsp;the&nbsp;norm&nbsp;instance&nbsp;using&nbsp;the<br>
current&nbsp;array,&nbsp;changing&nbsp;only&nbsp;limits&nbsp;that&nbsp;are&nbsp;None</tt></dd></dl>

<dl><dt><a name="Colorbar-changed"><strong>changed</strong></a>(self)</dt><dd><tt>Call&nbsp;this&nbsp;whenever&nbsp;the&nbsp;mappable&nbsp;is&nbsp;changed&nbsp;so&nbsp;observers&nbsp;can<br>
update&nbsp;state</tt></dd></dl>

<dl><dt><a name="Colorbar-check_update"><strong>check_update</strong></a>(self, checker)</dt><dd><tt>If&nbsp;mappable&nbsp;has&nbsp;changed&nbsp;since&nbsp;the&nbsp;last&nbsp;check,<br>
return&nbsp;True;&nbsp;else&nbsp;return&nbsp;False</tt></dd></dl>

<dl><dt><a name="Colorbar-get_array"><strong>get_array</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;array</tt></dd></dl>

<dl><dt><a name="Colorbar-get_clim"><strong>get_clim</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;min,&nbsp;max&nbsp;of&nbsp;the&nbsp;color&nbsp;limits&nbsp;for&nbsp;image&nbsp;scaling</tt></dd></dl>

<dl><dt><a name="Colorbar-set_array"><strong>set_array</strong></a>(self, A)</dt><dd><tt>Set&nbsp;the&nbsp;image&nbsp;array&nbsp;from&nbsp;numpy&nbsp;array&nbsp;A</tt></dd></dl>

<dl><dt><a name="Colorbar-set_clim"><strong>set_clim</strong></a>(self, vmin<font color="#909090">=None</font>, vmax<font color="#909090">=None</font>)</dt><dd><tt>set&nbsp;the&nbsp;norm&nbsp;limits&nbsp;for&nbsp;image&nbsp;scaling;&nbsp;if&nbsp;vmin&nbsp;is&nbsp;a&nbsp;length2<br>
sequence,&nbsp;interpret&nbsp;it&nbsp;as&nbsp;(vmin,&nbsp;vmax)&nbsp;which&nbsp;is&nbsp;used&nbsp;to<br>
support&nbsp;setp<br>
&nbsp;<br>
ACCEPTS:&nbsp;a&nbsp;length&nbsp;2&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="Colorbar-set_cmap"><strong>set_cmap</strong></a>(self, cmap)</dt><dd><tt>set&nbsp;the&nbsp;colormap&nbsp;for&nbsp;luminance&nbsp;data<br>
&nbsp;<br>
ACCEPTS:&nbsp;a&nbsp;colormap</tt></dd></dl>

<dl><dt><a name="Colorbar-set_colorbar"><strong>set_colorbar</strong></a>(self, im, ax)</dt><dd><tt>set&nbsp;the&nbsp;colorbar&nbsp;image&nbsp;and&nbsp;axes&nbsp;associated&nbsp;with&nbsp;mappable</tt></dd></dl>

<dl><dt><a name="Colorbar-set_norm"><strong>set_norm</strong></a>(self, norm)</dt><dd><tt>set&nbsp;the&nbsp;normalization&nbsp;instance</tt></dd></dl>

<dl><dt><a name="Colorbar-to_rgba"><strong>to_rgba</strong></a>(self, x, alpha<font color="#909090">=1.0</font>, bytes<font color="#909090">=False</font>)</dt><dd><tt>Return&nbsp;a&nbsp;normalized&nbsp;rgba&nbsp;array&nbsp;corresponding&nbsp;to&nbsp;x.<br>
If&nbsp;x&nbsp;is&nbsp;already&nbsp;an&nbsp;rgb&nbsp;array,&nbsp;insert&nbsp;alpha;&nbsp;if&nbsp;it&nbsp;is<br>
already&nbsp;rgba,&nbsp;return&nbsp;it&nbsp;unchanged.<br>
If&nbsp;bytes&nbsp;is&nbsp;True,&nbsp;return&nbsp;rgba&nbsp;as&nbsp;4&nbsp;uint8s&nbsp;instead&nbsp;of&nbsp;4&nbsp;floats.</tt></dd></dl>

</td></tr></table> <p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#ffc8d8">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#000000" face="helvetica, arial"><a name="ColorbarBase">class <strong>ColorbarBase</strong></a>(<a href="matplotlib.cm.html#ScalarMappable">matplotlib.cm.ScalarMappable</a>)</font></td></tr>
    
<tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
<td colspan=2><tt>Draw&nbsp;a&nbsp;colorbar&nbsp;in&nbsp;an&nbsp;existing&nbsp;axes.<br>
&nbsp;<br>
This&nbsp;is&nbsp;a&nbsp;base&nbsp;class&nbsp;for&nbsp;the&nbsp;<a href="#Colorbar">Colorbar</a>&nbsp;class,&nbsp;which&nbsp;is<br>
the&nbsp;basis&nbsp;for&nbsp;the&nbsp;colorbar&nbsp;method&nbsp;and&nbsp;pylab&nbsp;function.<br>
&nbsp;<br>
It&nbsp;is&nbsp;also&nbsp;useful&nbsp;by&nbsp;itself&nbsp;for&nbsp;showing&nbsp;a&nbsp;colormap.&nbsp;&nbsp;If<br>
the&nbsp;cmap&nbsp;kwarg&nbsp;is&nbsp;given&nbsp;but&nbsp;boundaries&nbsp;and&nbsp;values&nbsp;are&nbsp;left<br>
as&nbsp;None,&nbsp;then&nbsp;the&nbsp;colormap&nbsp;will&nbsp;be&nbsp;displayed&nbsp;on&nbsp;a&nbsp;0-1&nbsp;scale.<br>
To&nbsp;show&nbsp;the&nbsp;under-&nbsp;and&nbsp;over-value&nbsp;colors,&nbsp;specify&nbsp;the&nbsp;norm<br>
as&nbsp;colors.Normalize(clip=False).<br>
To&nbsp;show&nbsp;the&nbsp;colors&nbsp;versus&nbsp;index&nbsp;instead&nbsp;of&nbsp;on&nbsp;the&nbsp;0-1&nbsp;scale,<br>
use&nbsp;norm=colors.NoNorm.<br>&nbsp;</tt></td></tr>
<tr><td>&nbsp;</td>
<td width="100%">Methods defined here:<br>
<dl><dt><a name="ColorbarBase-__init__"><strong>__init__</strong></a>(self, ax, cmap<font color="#909090">=None</font>, norm<font color="#909090">=None</font>, alpha<font color="#909090">=1.0</font>, values<font color="#909090">=None</font>, boundaries<font color="#909090">=None</font>, orientation<font color="#909090">='vertical'</font>, extend<font color="#909090">='neither'</font>, spacing<font color="#909090">='uniform'</font>, ticks<font color="#909090">=None</font>, format<font color="#909090">=None</font>, drawedges<font color="#909090">=False</font>, filled<font color="#909090">=True</font>)</dt></dl>

<dl><dt><a name="ColorbarBase-add_lines"><strong>add_lines</strong></a>(self, levels, colors, linewidths)</dt><dd><tt>Draw&nbsp;lines&nbsp;on&nbsp;the&nbsp;colorbar.</tt></dd></dl>

<dl><dt><a name="ColorbarBase-draw_all"><strong>draw_all</strong></a>(self)</dt><dd><tt>Calculate&nbsp;any&nbsp;free&nbsp;parameters&nbsp;based&nbsp;on&nbsp;the&nbsp;current&nbsp;cmap&nbsp;and&nbsp;norm,<br>
and&nbsp;do&nbsp;all&nbsp;the&nbsp;drawing.</tt></dd></dl>

<dl><dt><a name="ColorbarBase-set_alpha"><strong>set_alpha</strong></a>(self, alpha)</dt></dl>

<dl><dt><a name="ColorbarBase-set_label"><strong>set_label</strong></a>(self, label, **kw)</dt></dl>

<hr>
Methods inherited from <a href="matplotlib.cm.html#ScalarMappable">matplotlib.cm.ScalarMappable</a>:<br>
<dl><dt><a name="ColorbarBase-add_checker"><strong>add_checker</strong></a>(self, checker)</dt><dd><tt>Add&nbsp;an&nbsp;entry&nbsp;to&nbsp;a&nbsp;dictionary&nbsp;of&nbsp;boolean&nbsp;flags<br>
that&nbsp;are&nbsp;set&nbsp;to&nbsp;True&nbsp;when&nbsp;the&nbsp;mappable&nbsp;is&nbsp;changed.</tt></dd></dl>

<dl><dt><a name="ColorbarBase-add_observer"><strong>add_observer</strong></a>(self, mappable)</dt><dd><tt>whenever&nbsp;the&nbsp;norm,&nbsp;clim&nbsp;or&nbsp;cmap&nbsp;is&nbsp;set,&nbsp;call&nbsp;the&nbsp;notify<br>
instance&nbsp;of&nbsp;the&nbsp;mappable&nbsp;observer&nbsp;with&nbsp;self.<br>
&nbsp;<br>
This&nbsp;is&nbsp;designed&nbsp;to&nbsp;allow&nbsp;one&nbsp;image&nbsp;to&nbsp;follow&nbsp;changes&nbsp;in&nbsp;the<br>
cmap&nbsp;of&nbsp;another&nbsp;image</tt></dd></dl>

<dl><dt><a name="ColorbarBase-autoscale"><strong>autoscale</strong></a>(self)</dt><dd><tt>Autoscale&nbsp;the&nbsp;scalar&nbsp;limits&nbsp;on&nbsp;the&nbsp;norm&nbsp;instance&nbsp;using&nbsp;the<br>
current&nbsp;array</tt></dd></dl>

<dl><dt><a name="ColorbarBase-autoscale_None"><strong>autoscale_None</strong></a>(self)</dt><dd><tt>Autoscale&nbsp;the&nbsp;scalar&nbsp;limits&nbsp;on&nbsp;the&nbsp;norm&nbsp;instance&nbsp;using&nbsp;the<br>
current&nbsp;array,&nbsp;changing&nbsp;only&nbsp;limits&nbsp;that&nbsp;are&nbsp;None</tt></dd></dl>

<dl><dt><a name="ColorbarBase-changed"><strong>changed</strong></a>(self)</dt><dd><tt>Call&nbsp;this&nbsp;whenever&nbsp;the&nbsp;mappable&nbsp;is&nbsp;changed&nbsp;so&nbsp;observers&nbsp;can<br>
update&nbsp;state</tt></dd></dl>

<dl><dt><a name="ColorbarBase-check_update"><strong>check_update</strong></a>(self, checker)</dt><dd><tt>If&nbsp;mappable&nbsp;has&nbsp;changed&nbsp;since&nbsp;the&nbsp;last&nbsp;check,<br>
return&nbsp;True;&nbsp;else&nbsp;return&nbsp;False</tt></dd></dl>

<dl><dt><a name="ColorbarBase-get_array"><strong>get_array</strong></a>(self)</dt><dd><tt>Return&nbsp;the&nbsp;array</tt></dd></dl>

<dl><dt><a name="ColorbarBase-get_clim"><strong>get_clim</strong></a>(self)</dt><dd><tt>return&nbsp;the&nbsp;min,&nbsp;max&nbsp;of&nbsp;the&nbsp;color&nbsp;limits&nbsp;for&nbsp;image&nbsp;scaling</tt></dd></dl>

<dl><dt><a name="ColorbarBase-notify"><strong>notify</strong></a>(self, mappable)</dt><dd><tt>If&nbsp;this&nbsp;is&nbsp;called&nbsp;then&nbsp;we&nbsp;are&nbsp;pegged&nbsp;to&nbsp;another&nbsp;mappable.<br>
Update&nbsp;our&nbsp;cmap,&nbsp;norm,&nbsp;alpha&nbsp;from&nbsp;the&nbsp;other&nbsp;mappable.</tt></dd></dl>

<dl><dt><a name="ColorbarBase-set_array"><strong>set_array</strong></a>(self, A)</dt><dd><tt>Set&nbsp;the&nbsp;image&nbsp;array&nbsp;from&nbsp;numpy&nbsp;array&nbsp;A</tt></dd></dl>

<dl><dt><a name="ColorbarBase-set_clim"><strong>set_clim</strong></a>(self, vmin<font color="#909090">=None</font>, vmax<font color="#909090">=None</font>)</dt><dd><tt>set&nbsp;the&nbsp;norm&nbsp;limits&nbsp;for&nbsp;image&nbsp;scaling;&nbsp;if&nbsp;vmin&nbsp;is&nbsp;a&nbsp;length2<br>
sequence,&nbsp;interpret&nbsp;it&nbsp;as&nbsp;(vmin,&nbsp;vmax)&nbsp;which&nbsp;is&nbsp;used&nbsp;to<br>
support&nbsp;setp<br>
&nbsp;<br>
ACCEPTS:&nbsp;a&nbsp;length&nbsp;2&nbsp;sequence&nbsp;of&nbsp;floats</tt></dd></dl>

<dl><dt><a name="ColorbarBase-set_cmap"><strong>set_cmap</strong></a>(self, cmap)</dt><dd><tt>set&nbsp;the&nbsp;colormap&nbsp;for&nbsp;luminance&nbsp;data<br>
&nbsp;<br>
ACCEPTS:&nbsp;a&nbsp;colormap</tt></dd></dl>

<dl><dt><a name="ColorbarBase-set_colorbar"><strong>set_colorbar</strong></a>(self, im, ax)</dt><dd><tt>set&nbsp;the&nbsp;colorbar&nbsp;image&nbsp;and&nbsp;axes&nbsp;associated&nbsp;with&nbsp;mappable</tt></dd></dl>

<dl><dt><a name="ColorbarBase-set_norm"><strong>set_norm</strong></a>(self, norm)</dt><dd><tt>set&nbsp;the&nbsp;normalization&nbsp;instance</tt></dd></dl>

<dl><dt><a name="ColorbarBase-to_rgba"><strong>to_rgba</strong></a>(self, x, alpha<font color="#909090">=1.0</font>, bytes<font color="#909090">=False</font>)</dt><dd><tt>Return&nbsp;a&nbsp;normalized&nbsp;rgba&nbsp;array&nbsp;corresponding&nbsp;to&nbsp;x.<br>
If&nbsp;x&nbsp;is&nbsp;already&nbsp;an&nbsp;rgb&nbsp;array,&nbsp;insert&nbsp;alpha;&nbsp;if&nbsp;it&nbsp;is<br>
already&nbsp;rgba,&nbsp;return&nbsp;it&nbsp;unchanged.<br>
If&nbsp;bytes&nbsp;is&nbsp;True,&nbsp;return&nbsp;rgba&nbsp;as&nbsp;4&nbsp;uint8s&nbsp;instead&nbsp;of&nbsp;4&nbsp;floats.</tt></dd></dl>

</td></tr></table></td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#eeaa77">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Functions</strong></big></font></td></tr>
    
<tr><td bgcolor="#eeaa77"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><dl><dt><a name="-make_axes"><strong>make_axes</strong></a>(parent, **kw)</dt><dd><tt>Resize&nbsp;and&nbsp;reposition&nbsp;a&nbsp;parent&nbsp;axes,&nbsp;and&nbsp;return&nbsp;a&nbsp;child<br>
axes&nbsp;suitable&nbsp;for&nbsp;a&nbsp;colorbar.<br>
&nbsp;<br>
cax,&nbsp;kw&nbsp;=&nbsp;<a href="#-make_axes">make_axes</a>(parent,&nbsp;**kw)<br>
&nbsp;<br>
Keyword&nbsp;arguments&nbsp;may&nbsp;include&nbsp;the&nbsp;following&nbsp;(with&nbsp;defaults):<br>
&nbsp;&nbsp;&nbsp;&nbsp;orientation&nbsp;=&nbsp;'vertical'&nbsp;&nbsp;or&nbsp;'horizontal'<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;fraction&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;0.15;&nbsp;fraction&nbsp;of&nbsp;original&nbsp;axes&nbsp;to&nbsp;use&nbsp;for&nbsp;colorbar<br>
&nbsp;&nbsp;&nbsp;&nbsp;pad&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;0.05&nbsp;if&nbsp;vertical,&nbsp;0.15&nbsp;if&nbsp;horizontal;&nbsp;fraction<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;original&nbsp;axes&nbsp;between&nbsp;colorbar&nbsp;and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new&nbsp;image&nbsp;axes<br>
&nbsp;&nbsp;&nbsp;&nbsp;shrink&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;1.0;&nbsp;fraction&nbsp;by&nbsp;which&nbsp;to&nbsp;shrink&nbsp;the&nbsp;colorbar<br>
&nbsp;&nbsp;&nbsp;&nbsp;aspect&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;20;&nbsp;ratio&nbsp;of&nbsp;long&nbsp;to&nbsp;short&nbsp;dimensions<br>
&nbsp;<br>
&nbsp;<br>
&nbsp;<br>
All&nbsp;but&nbsp;the&nbsp;first&nbsp;of&nbsp;these&nbsp;are&nbsp;stripped&nbsp;from&nbsp;the&nbsp;input&nbsp;kw&nbsp;set.<br>
&nbsp;<br>
Returns&nbsp;(cax,&nbsp;kw),&nbsp;the&nbsp;child&nbsp;axes&nbsp;and&nbsp;the&nbsp;reduced&nbsp;kw&nbsp;dictionary.</tt></dd></dl>
</td></tr></table><p>
<table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
<tr bgcolor="#55aa55">
<td colspan=3 valign=bottom>&nbsp;<br>
<font color="#ffffff" face="helvetica, arial"><big><strong>Data</strong></big></font></td></tr>
    
<tr><td bgcolor="#55aa55"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
<td width="100%"><strong>colorbar_doc</strong> = '<font color="#c040c0">\n</font>Add a colorbar to a plot.<font color="#c040c0">\n\n</font>Function signatures ...e, do not use any of the<font color="#c040c0">\n</font>axes properties kwargs.<font color="#c040c0">\n</font>'<br>
<strong>colormap_kw_doc</strong> = "<font color="#c040c0">\n</font>        extend='neither', 'both', 'min', 'max'<font color="#c040c0">\n</font>...g<font color="#c040c0">\n</font>                value in values will be used.<font color="#c040c0">\n\n</font>"<br>
<strong>make_axes_kw_doc</strong> = '<font color="#c040c0">\n</font>        fraction    = 0.15; fraction of origina...ct      = 20; ratio of long to short dimensions<font color="#c040c0">\n\n</font>'</td></tr></table>
@footer@